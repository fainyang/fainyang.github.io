<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>feiyang&#39;s blog</title>
  
  <subtitle>费洋的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://feiyang233.club/"/>
  <updated>2019-10-21T03:42:48.235Z</updated>
  <id>http://feiyang233.club/</id>
  
  <author>
    <name>feiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>那些年在新加坡吃过的店</title>
    <link href="http://feiyang233.club/post/SG-food/"/>
    <id>http://feiyang233.club/post/SG-food/</id>
    <published>2019-10-20T08:45:49.000Z</published>
    <updated>2019-10-21T03:42:48.235Z</updated>
    
    <content type="html"><![CDATA[<p>民以食为天<br>作为一个在新加坡搬砖的四川吃货，唯有美食不可辜负。坡县虽小，但各式各样的菜系都可以吃到。由于在四川长大，比较喜欢川菜火锅串串香锅烤鱼等。偶尔也跟着朋友们尝试一下其他的菜系。<br><a id="more"></a></p><h1 id="川菜"><a href="#川菜" class="headerlink" title="川菜"></a>川菜</h1><h2 id="NTU-Canteen-11-川菜"><a href="#NTU-Canteen-11-川菜" class="headerlink" title="NTU Canteen 11 川菜"></a>NTU Canteen 11 川菜</h2><ul><li><a href="https://www.google.com/maps/place/NTU+Hall+of+Residence+11/@1.3550279,103.6842518,17z/data=!3m1!4b1!4m5!3m4!1s0x31da0fa624c5025d:0xff3b2e9bae59d6c4!8m2!3d1.3550279!4d103.6864405" target="_blank" rel="noopener">地址</a>：20 Nanyang Ave, Singapore 639809</li><li>点评：目前吃过的新加坡性价比最高的川菜，味道好，价格最便宜，随便点还没有踩雷过。唯一的缺点就是地理位置太偏远了。</li><li>上图:  <img src="/img/food/ntu1.jpg" alt="ntu1">  <img src="/img/food/ntu2.jpg" alt="ntu2">  <img src="/img/food/ntu3.jpg" alt="ntu3"> <h2 id="牛车水食阁-川味园"><a href="#牛车水食阁-川味园" class="headerlink" title="牛车水食阁 川味园"></a>牛车水食阁 川味园</h2></li><li><a href="https://www.google.com/maps/place/%E5%B7%9D%E5%91%B3%E5%9B%AD/@1.2847801,103.8424824,15z/data=!4m5!3m4!1s0x0:0x1775b362155b0f51!8m2!3d1.2847801!4d103.8424824" target="_blank" rel="noopener">地址</a>：32 New Market Rd, Singapore 050032</li><li>点评：德阳大叔开的店，味道非常的四川，价格实惠，分量也很足。只是在食阁里比较吵杂，还有点热。<del>沸腾鱼</del>我觉得很一般，不是很入味。据说旁边那家日日红麻辣香锅很不错，还没去吃过。</li><li>上图:  <img src="/img/food/cwy.jpg" alt="cwy"><h2 id="厦门街-成都"><a href="#厦门街-成都" class="headerlink" title="厦门街 成都"></a>厦门街 成都</h2></li><li><a href="https://www.google.com/maps/place/%E6%88%90%E9%83%BDChengdu+%C2%B7+%E6%96%B0%E5%8A%A0%E5%9D%A1%E6%9C%80%E8%B5%B0%E5%BF%83%E5%B7%9D%E8%8F%9C/@1.2803505,103.8445213,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19515828ce5b:0xd28a3b9a3b6ee1db!8m2!3d1.2803451!4d103.84671" target="_blank" rel="noopener">地址</a>：74 Amoy St, Singapore 069893</li><li>点评：新加坡的四川同学安利的，<code>水煮鱼，牛蛙</code>强推，干锅肥肠也不错(但我觉得老成都的干锅肥肠更好吃)。<del>辣子鸡</del>不要点，辣鸡。</li><li>上图:  <img src="/img/food/cd1.jpg" alt="cd1">  <img src="/img/food/cd2.jpg" alt="cd2">  <img src="/img/food/cd3.jpg" alt="cd3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720135949.png" alt></li></ul><h2 id="牛车水-老成都"><a href="#牛车水-老成都" class="headerlink" title="牛车水 老成都"></a>牛车水 老成都</h2><ul><li><a href="https://www.google.com/maps/place/Old+Chengdu+Sichuan+Cuisine+Restaurant+%E8%80%81%E6%88%90%E9%83%BD%E5%B7%9D%E8%8F%9C%E9%A6%86/@1.2838636,103.841519,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19735c9a4b71:0xb1aca33c8f02c76e!8m2!3d1.2838582!4d103.8437077" target="_blank" rel="noopener">地址</a>：80 Pagoda St, Singapore 059239</li><li>点评：曾经我以为这家是热门景点宰客的店，虽然价格是贵，但人家的味道对得起老成都这个名字。目前吃过干锅肥肠，豆花牛肉，炒时蔬，nice！</li><li>无图：吃的时候没有拍照，O(∩_∩)O哈哈~</li></ul><h2 id="金文泰食阁-四川厨子"><a href="#金文泰食阁-四川厨子" class="headerlink" title="金文泰食阁 四川厨子"></a>金文泰食阁 四川厨子</h2><ul><li><a href="https://www.google.com/maps/place/Kopitiam+@+Clementi+Ave+3/@1.3139883,103.7652978,21z/data=!4m5!3m4!1s0x31da1a8e771fa3fd:0x57a3d8c0d2918f32!8m2!3d1.3138849!4d103.7652542" target="_blank" rel="noopener">地址</a>：450 Clementi Ave 3, #01-271, Singapore 120450</li><li>点评：窗口那个姐姐是四川邛崃的，目前只吃过她家的烧鸡公一次，味道不错。川菜水煮鱼不错，孜然排骨太干了，不行。</li><li>上图:  <img src="/img/food/clementi1.jpg" alt="clementi1">  <img src="/img/food/clementi2.jpg" alt="clementi2">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144937.jpg" alt></li></ul><h2 id="NUS-PGP食堂-川菜"><a href="#NUS-PGP食堂-川菜" class="headerlink" title="NUS PGP食堂 川菜"></a>NUS PGP食堂 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.290806,103.7804248,19.17z/data=!4m12!1m6!3m5!1s0x31da1a53630ee451:0x69e2d2ba3d0d6ce1!2sbluPort+-+NUS+Prince+George&#39;s+Park!8m2!3d1.290875!4d103.78079!3m4!1s0x31da1a536b93fffb:0xea3041dd973bf902!8m2!3d1.2909419!4d103.7822132" target="_blank" rel="noopener">地址</a>：23 Prince George’s Park, Singapore 118422</li><li>点评：四川厨师，在蜀香吃过一次干煸肥肠，有点干煸过头。2019-03-27 吃了一次水煮肉片，味道很棒。有空调那家卖面条的姐姐是四川大邑的(好像又换人了)，没有空调卖面条的那个锅锅是四川泸州的。没有空调最里面那家我也吃过川菜，味道还行吧。</li><li>上图:  <img src="/img/food/pgp.jpg" alt="pgp"> <img src="/img/food/pgp1.jpg" alt="pgp1">  <img src="/img/food/pgp2.jpg" alt="pgp2">  <img src="/img/food/pgp3.jpg" alt="pgp3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144957.jpg" alt></li></ul><h2 id="NUS-Utown-川菜"><a href="#NUS-Utown-川菜" class="headerlink" title="NUS Utown 川菜"></a>NUS Utown 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.3046434,103.772702,21z/data=!4m8!1m2!2m1!1snus+utown!3m4!1s0x31da1af5cc70dc97:0x7b392d9d676befeb!8m2!3d1.3047189!4d103.7727249" target="_blank" rel="noopener">地址</a>：2 College Ave West, Level 2 Stephen Riady Centre, Singapore 138607</li><li>点评：东北厨师，配菜是德阳小姐姐。分量是真的足，但味道就很一般了，学校食堂比较便宜。小炒肉、夫妻肺片还不错吧，<del>水煮鱼 鱼香茄子 宫保鸡丁</del>打扰了。</li><li>上图:  <img src="/img/food/nus.jpg" alt="nus">  <img src="/img/food/nus1.jpg" alt="nus1">   </li></ul><h2 id="蜀香添一点"><a href="#蜀香添一点" class="headerlink" title="蜀香添一点"></a>蜀香添一点</h2><ul><li><a href="https://www.google.com/maps/place/%E8%9C%80%E9%A6%99/@1.3022539,103.7639279,21z/data=!4m5!3m4!1s0x31da1af1dc3529bb:0xe41c8a6372b436d4!8m2!3d1.3022576!4d103.764117" target="_blank" rel="noopener">地址</a>：721 Clementi West Street 2, Singapore 120721</li><li>点评：以前读书的时候住在附近，经常和学长去这家吃饭。价格还行，有的菜味道还可以。口水鸡，夫妻肺片凉菜不错。小炒肉，鱼香肉丝也行。<del>大盘鸡 辣子鸡 水煮肉片</del> 再见！</li><li>上图:  <img src="/img/food/shuxiang.jpg" alt="shuxiang">  <img src="/img/food/shuxiang1.jpg" alt="shuxiang1">   </li></ul><h2 id="天府川菜"><a href="#天府川菜" class="headerlink" title="天府川菜"></a>天府川菜</h2><ul><li><a href="https://www.google.com/maps/place/Tianfu+Szechuan+Cuisine+%E5%A4%A9%E5%BA%9C%E5%B7%9D%E8%8F%9C/@1.314338,103.7628628,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1a8e40c040fb:0x9f8f60278dda8354!8m2!3d1.314338!4d103.7650515" target="_blank" rel="noopener">地址</a>：3151 Commonwealth Ave W, #01-17/18, Singapore 129581</li><li>点评：去吃过一次，我觉得酸菜鱼很一般，那个<del>炒莲白</del>更是不行啊。感觉辣椒没有几个，味道非常辣，像是放了辣椒素的感觉。</li><li>上图:  <img src="/img/food/tianfu1.jpg" alt="tianfu1">  <img src="/img/food/tianfu2.jpg" alt="tianfu2"> </li></ul><h2 id="四川豆花饭庄"><a href="#四川豆花饭庄" class="headerlink" title="四川豆花饭庄"></a>四川豆花饭庄</h2><ul><li><a href="https://www.google.com/maps/place/Si+Chuan+Dou+Hua+Restaurant/@1.2996314,103.8600612,18.37z/data=!4m5!3m4!1s0x31da19b19801b335:0x5acf3141ce4c893a!8m2!3d1.2999542!4d103.860291" target="_blank" rel="noopener">地址</a>：7500 Beach Rd, Singapore 199591</li><li>点评：某次志愿者活动结束后去吃过一次。饭店的环境不错，豆花可以但分量超级小，其余的菜就很一般啦，我一点印象都没得咯。</li><li>上图:  <img src="/img/food/douhua.jpg" alt="douhua"> </li></ul><h2 id="老四川"><a href="#老四川" class="headerlink" title="老四川"></a>老四川</h2><ul><li><a href="https://www.youtube.com/watch?v=7Wui4qfJdXo" target="_blank" rel="noopener">看网红博主的测评视频</a></li></ul><h2 id="思味冒菜"><a href="#思味冒菜" class="headerlink" title="思味冒菜"></a>思味冒菜</h2><ul><li><a href="https://www.google.com/maps/place/Si+Wei+Mao+Cai/@1.2835709,103.8452381,20.84z/data=!4m5!3m4!1s0x31da190cb17025ed:0xc245fc39a322492d!8m2!3d1.2836133!4d103.8452759" target="_blank" rel="noopener">地址</a>: 33 Mosque St, Singapore 059511</li><li>点评： 我真的佛了，就成都gai上随便吃个冒菜，都比他家的好吃。真的太淡了，除了油，不辣不香，吃了想打人。泡椒牛蛙反而还不错的。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114732.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114734.jpg" alt></li></ul><h2 id="A-ONE"><a href="#A-ONE" class="headerlink" title="A ONE"></a>A ONE</h2><ul><li><a href="https://www.google.com/maps/place/A-ONE+Claypot+House/@1.3506575,103.8698616,17z/data=!3m2!4b1!5s0x31da17a6c9cbff89:0xd57ea669903a76d8!4m5!3m4!1s0x31da17a6c6a5ad07:0xd1f33bcbb66ddf5f!8m2!3d1.3506521!4d103.8720503" target="_blank" rel="noopener">地址</a>：23 Serangoon Central, #B1-73/74, Singapore 556083 serangoon 地铁站旁</li><li>点评：其实是一家本地的店，居然也有麻辣系列。但分量较小，味道还行。水煮鱼的鱼肉不行，肉质差。水煮肉片的淀粉少了，不够嫩。人均 30 新吧</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162540.jpeg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155332.jpg" alt><h1 id="火锅"><a href="#火锅" class="headerlink" title="火锅"></a>火锅</h1><h2 id="小龙坎"><a href="#小龙坎" class="headerlink" title="小龙坎"></a>小龙坎</h2></li><li>地址：牛车水或者武吉士</li><li>点评： 每年愚人节的那个周末，全球的小龙坎全场半价，抓住机会。平时人均 60 新，味道不错。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162948.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162952.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162955.jpg" alt><h2 id="大龙燚"><a href="#大龙燚" class="headerlink" title="大龙燚"></a>大龙燚</h2></li><li>地址：乌节路，somerset 楼上 181 Orchard Rd, #08-08, Singapore 238896</li><li>点评：也是又贵又好吃的那种火锅。贫穷限制了我吃火锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163645.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163648.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163652.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163655.jpg" alt><h2 id="同心如意火锅"><a href="#同心如意火锅" class="headerlink" title="同心如意火锅"></a>同心如意火锅</h2></li><li><a href="https://www.google.com/maps/place/%E5%90%8C%E5%BF%83%E5%A6%82%E6%84%8F%E4%BC%A0%E7%BB%9F%E9%93%9C%E7%81%AB%E9%94%85/@1.2869932,103.8465049,17z/data=!4m8!1m2!2m1!1z5ZCM5b-D5aaC5oSP54Gr6ZSF!3m4!1s0x31da190a4cc3d849:0x5c55c99089e27a1e!8m2!3d1.2869783!4d103.8486978" target="_blank" rel="noopener">地址</a>：克拉码头 6 Lor Telok, Singapore 049019</li><li>点评：强烈安利了，真的好吃又不贵，环境还优雅，免费的西瓜深受吃瓜群众的喜爱。人均 30-40 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164043.jpeg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155506.jpeg" alt></li></ul><h2 id="海底捞"><a href="#海底捞" class="headerlink" title="海底捞"></a>海底捞</h2><ul><li><a href="https://www.haidilao.com/sg/fwzx/mdss/index.html" target="_blank" rel="noopener">地址</a>: 全岛分店太多了，我去的是 vivo city 那家</li><li>点评：服务好，价格贵。食材新鲜，就是有时候排队很长。人均 60+，一不小心吃上到了人均 80 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190926171753.jpeg" alt><h2 id="重庆小木凳火锅"><a href="#重庆小木凳火锅" class="headerlink" title="重庆小木凳火锅"></a>重庆小木凳火锅</h2></li><li><a href="https://www.google.com/maps/place/XIAO+MU+DENG+HOT+POT+%E9%87%8D%E6%85%B6%E5%B0%8F%E6%9C%A8%E5%87%B3%E6%87%B7%E8%88%8A%E7%81%AB%E9%8D%8B/@1.2822806,103.8399297,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1992938246bb:0x7d60e3de7635057b!8m2!3d1.2822752!4d103.8421184" target="_blank" rel="noopener">地址</a>： 牛车水 279 New Bridge Rd, Singapore 088752</li><li>点评： 小组聚餐吃过一次，人均 30-35 新，味道还是非常的不错，环境也还是可以的。</li><li>上图： 居然无图，忘了拍照。。。。<h2 id="食间火锅"><a href="#食间火锅" class="headerlink" title="食间火锅"></a>食间火锅</h2></li><li>地址：jurong east 和 Suntec City</li><li>点评：老板小武哥哥是 MIT 毕业的重庆大佬，食材新鲜，味道不错。Suntec City 还有自助火锅，人均在 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164825.jpeg" alt>  <h2 id="优品火锅"><a href="#优品火锅" class="headerlink" title="优品火锅"></a>优品火锅</h2></li><li><a href="https://www.google.com/maps/place/Upin+Hot+Pot+West+Coast+Plaza/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x315bc1bb345ca3af!8m2!3d1.303843!4d103.7662919" target="_blank" rel="noopener">地址</a>： 全岛有几家，我吃的是 west coast plaza 那一家 154 West Coast Rd, #01-02, Singapore 127371</li><li>点评： 出乎意料的火锅，以为是一家不知名的小店，结果味道很不错。人均 40+ 新</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709165414.jpeg" alt><h2 id="食立方火锅"><a href="#食立方火锅" class="headerlink" title="食立方火锅"></a>食立方火锅</h2></li><li><a href="https://www.google.com/maps/place/Shi+Li+Fang/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x3cfc2dfce4934166!8m2!3d1.3036439!4d103.7658919" target="_blank" rel="noopener">地址</a>：全岛连锁,我吃的是 west coast plaza 那一家 154 West Coast Road 127371, 02-24 West Coast Rd, Singapore 127447</li><li>点评：吃火锅送公仔娃娃是这家店最大的特色。味道不辣，适合口味淡的朋友们。人均 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170029.jpg" alt><h2 id="潮汕牛肉火锅"><a href="#潮汕牛肉火锅" class="headerlink" title="潮汕牛肉火锅"></a>潮汕牛肉火锅</h2></li><li><a href="https://www.google.com/maps/place/Chaoniu+Hot+Pot/@1.3070113,103.9059824,19.48z/data=!4m5!3m4!1s0x31da199265a5105d:0x53660da2d7d633fe!8m2!3d1.3071205!4d103.9065289" target="_blank" rel="noopener">地址</a>: 195 E Coast Rd, Singapore 428900</li><li>点评：地理位置有点偏，但味道还不错，一共吃了三次。他家的牛肉粉真是一绝，但我们在吃第三次的时候，有的牛肉居然是冷冻拿出来的，反应给老板。老板态度良好，道歉还打了8折。希望他们越办越好吧。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114717.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114723.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113642.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114726.jpg" alt><h2 id="满族火锅"><a href="#满族火锅" class="headerlink" title="满族火锅"></a>满族火锅</h2></li><li><a href="https://www.google.com/maps/place/Man+Zhu+Steamboat+Restaurant/@1.3209719,103.7588833,13z/data=!4m8!1m2!2m1!1z5ruh5peP54Gr6ZSF!3m4!1s0x0:0xebd740cbf2973c8e!8m2!3d1.3440604!4d103.7312257" target="_blank" rel="noopener">地址</a>: 350 Jurong East Ave 1, #01-1231 Singapore Singapore Region, Singapore 600350</li><li>点评：裕华园地铁出来，食阁附近的一家小店。那一排的店家都是这个风格，可能是地理位置偏远，价格非常便宜，味道还行。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113012.jpeg" alt><h2 id="锦门大院火锅"><a href="#锦门大院火锅" class="headerlink" title="锦门大院火锅"></a>锦门大院火锅</h2></li><li><a href="https://www.google.com/maps/place/Jin+Men+Da+Yuan+Steamboat+%E9%94%A6%E9%97%A8%E5%A4%A7%E9%99%A2%E7%81%AB%E9%94%85/@1.2836704,103.8425432,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1953fe55c0f7:0xeb7df7b0ac8abcb0!8m2!3d1.283665!4d103.8447319" target="_blank" rel="noopener">地址</a>: 22 Mosque St, Singapore 059502</li><li>点评：一家新开的自助火锅店，装修还行。但这个铁锅，不敢恭维。味道还不错，也算便宜，地理位置也方便，安利一下。 新加坡眼的<a href="https://mp.weixin.qq.com/s/JSjfQUBtyXhW9Bgg_9n3tw" target="_blank" rel="noopener">软文</a>, 我觉得夸张了，哈哈</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190718171733.jpeg" alt></li></ul><h1 id="串串"><a href="#串串" class="headerlink" title="串串"></a>串串</h1><h2 id="嘿串串"><a href="#嘿串串" class="headerlink" title="嘿串串"></a>嘿串串</h2><ul><li><a href="https://www.google.com/maps/place/%E5%98%BF%E4%B8%B2%E4%B8%B2+Hi!+Chuan+Chuan+Steamboat/@1.2815342,103.8428024,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190d2d763cf9:0xbc3e02b9133f566e!8m2!3d1.2815288!4d103.8449911" target="_blank" rel="noopener">地址</a>： 291 South Bridge Rd, Singapore 058836</li><li>点评： 可以做游戏打折，比如立定跳远。还有自助串串，我觉得一般般。感觉好像味道下降了？</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170649.jpg" alt><h2 id="重庆李记串串"><a href="#重庆李记串串" class="headerlink" title="重庆李记串串"></a>重庆李记串串</h2></li><li><a href="https://www.google.com/maps/place/Li+Ji+Chuan+Chuan+Xiang/@1.2814591,103.8442259,19.55z/data=!4m5!3m4!1s0x31da190d33000029:0xd2d2d3005dc64da!8m2!3d1.2813333!4d103.8449943" target="_blank" rel="noopener">地址</a>： 295 South Bridge Rd, Singapore 058838 South Bridge Rd, Singapore 058838，巧了就在嘿串串旁边</li><li>点评： 一年前吃过一次，味道还不错，感觉性价比 比嘿串串高，但店面环境没有嘿串串好。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170652.jpg" alt></li></ul><h1 id="香锅"><a href="#香锅" class="headerlink" title="香锅"></a>香锅</h1><h2 id="Timbre大海麻辣香锅"><a href="#Timbre大海麻辣香锅" class="headerlink" title="Timbre大海麻辣香锅"></a>Timbre大海麻辣香锅</h2><ul><li><a href="https://www.google.com/maps/place/Timbre%2B/@1.2974743,103.7872491,21z/data=!4m12!1m6!3m5!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!2sMellben+Signature!8m2!3d1.2770306!4d103.842881!3m4!1s0x31da1a4fdcdcb793:0x212cfcf8b61862cd!8m2!3d1.2974124!4d103.7875038" target="_blank" rel="noopener">地址</a>：73A Ayer Rajah Crescent, JTC Launchpad, Singapore 139957 one north 地铁站出来 Timbre+  食阁里</li><li>点评：非常温和的一家香锅，记得喊老板多放油。毛肚不错哦，还可以送外卖的。人均 8-15 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171446.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190814174051.jpeg" alt><h2 id="OneNorth口福麻辣香锅"><a href="#OneNorth口福麻辣香锅" class="headerlink" title="OneNorth口福麻辣香锅"></a>OneNorth口福麻辣香锅</h2></li><li><a href="https://www.google.com/maps/place/Koufu+Food+Court/@1.2989013,103.787071,19z/data=!3m1!4b1!4m5!3m4!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!8m2!3d1.2989!4d103.7876182" target="_blank" rel="noopener">地址</a>：1 Fusionopolis Way, Singapore 138577 One North 口福</li><li>点评：他们家放的芝麻可是真的比较多，真香！</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171833.jpeg" alt><h2 id="Galaxis二楼麻辣香锅"><a href="#Galaxis二楼麻辣香锅" class="headerlink" title="Galaxis二楼麻辣香锅"></a>Galaxis二楼麻辣香锅</h2></li><li><a href="https://www.google.com/maps/place/Foodmaster/@1.2995888,103.7880186,21z/data=!3m1!5s0x31da1a454101b3dd:0xe60bb1bc39017b65!4m12!1m6!3m5!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!2sKoufu+Food+Court!8m2!3d1.2989!4d103.7876182!3m4!1s0x0:0xfc2120aaf6811cb1!8m2!3d1.2994549!4d103.7882856" target="_blank" rel="noopener">地址</a>： 1 Fusionopolis Pl, Singapore 138522 Galaxis 二楼食阁 </li><li>点评： 有一个绵阳的哥哥在这里，是我看到过的第一家荤素菜不分开计算重量的麻辣香锅。所以也就是最便宜的麻辣香锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171452.jpg" alt><h2 id="宽宽干锅"><a href="#宽宽干锅" class="headerlink" title="宽宽干锅"></a>宽宽干锅</h2></li><li><a href="https://www.google.com/maps/place/%E5%AE%BD%E5%AE%BD%E5%B9%B2%E9%94%85/@1.2837616,103.842831,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19388e8da14f:0x3cfa02d42abb448d!8m2!3d1.2837562!4d103.8450197" target="_blank" rel="noopener">地址</a>：38 Mosque St, Singapore 059516</li><li>点评：是伟翔锅锅请我这个小弟吃的，味道不错，和国内的干锅比较相似。鸭掌还不够糯，比起成都的销魂掌还是有点差距的。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144004.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144008.jpg" alt></li></ul><h1 id="美蛙烤鱼"><a href="#美蛙烤鱼" class="headerlink" title="美蛙烤鱼"></a>美蛙烤鱼</h1><h2 id="探鱼"><a href="#探鱼" class="headerlink" title="探鱼"></a>探鱼</h2><ul><li><a href="https://www.google.com/maps/place/TAN+YU/@1.3008112,103.8361644,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1991290f596b:0x74129219b25d6b6c!8m2!3d1.3008112!4d103.8383531" target="_blank" rel="noopener">地址</a>：313 Orchard Rd, Singapore 238895</li><li>点评：新加坡吃过最好吃的烤鱼，肉质不是油炸的那种烤鱼。推荐鲜青椒烤鱼，重庆豆花烤鱼。人均 30-40 新</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161227.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161215.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161231.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161234.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161218.jpg" alt><h2 id="蛙功夫"><a href="#蛙功夫" class="headerlink" title="蛙功夫"></a>蛙功夫</h2></li><li><a href="https://www.google.com/maps/place/Wah+Kungfu+%E8%9B%99%E5%8A%9F%E5%A4%AB/@1.2983175,103.8535244,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19d2da538a59:0x5bea180644018458!8m2!3d1.2983121!4d103.8557131" target="_blank" rel="noopener">地址</a>: 牛车水店 470 North Bridge Rd, Singapore 188735</li><li>点评：微信提前预定打九折。新加坡第一蛙了，怪椒味和姜辣味真的好辣啊，四川人都遭不住了。 人均 30-40 新，最新发现蛙功夫在 <a href="https://eatigo.com/sg/singapore/en?vrt=n&amp;utm_expid=.b1OLVdG4Q824z64aUUlGBQ.2&amp;utm_referrer=" target="_blank" rel="noopener">eatigo</a> 上有打折，最低有半价哦。注册时可填写我的邀请码【 <strong>eati1avcj</strong> 】</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155308.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155347.jpeg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161949.jpg" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161954.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162001.jpg" alt><h2 id="齐来丰酸菜鱼"><a href="#齐来丰酸菜鱼" class="headerlink" title="齐来丰酸菜鱼"></a>齐来丰酸菜鱼</h2></li><li><a href="https://www.google.com/maps/place/ChinaTown+Point/@1.2853438,103.8448685,21z/data=!3m1!5s0x31da190b4c7c2e15:0x7a6a12c763ec149d!4m13!1m7!3m6!1s0x31da190b360d5a13:0x1300f7ac70f7f252!2sSingapore+059413!3b1!8m2!3d1.285202!4d103.8449399!3m4!1s0x31da19b37498c26f:0x47a7fd4ac1de6523!8m2!3d1.2854062!4d103.8450509" target="_blank" rel="noopener">地址</a>: 133 New Bridge Road B1-14/15 Chinatown Point S059413</li><li>点评： <a href="https://mp.weixin.qq.com/s/OGA9k6zP0D1hPTjcIzBsCA" target="_blank" rel="noopener">新加坡眼推荐</a> 味道还不错，价格还可以接受，可以试一试。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114402.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114405.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114408.jpg" alt><h2 id="尝相思-重庆烤鱼"><a href="#尝相思-重庆烤鱼" class="headerlink" title="尝相思 重庆烤鱼"></a>尝相思 重庆烤鱼</h2></li><li><a href="https://www.google.com/maps/place/Singapore+419779/data=!4m2!3m1!1s0x31da1805c6b3a221:0x2fac1d0a92c28b6f?sa=X&amp;ved=2ahUKEwi44fzsm5bkAhVBfH0KHSk_CGsQ8gEwE3oECAoQBA" target="_blank" rel="noopener">地址</a>: Singapore 419779</li><li>点评：地理位置有点偏僻，在 eunos 地铁站出来步行 12 分钟左右。老板是本地人，老板娘是重庆人。他们家的烤鱼是油炸的，算是在新加坡油炸的烤鱼中非常不错的了。而且价格比较的实惠。推荐麻辣味道</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175630.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175636.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175639.jpg" alt><h2 id="午阳烤鱼-NUS-YIH"><a href="#午阳烤鱼-NUS-YIH" class="headerlink" title="午阳烤鱼 NUS YIH"></a>午阳烤鱼 NUS YIH</h2></li><li><a href="https://www.google.com/search?tbm=lcl&amp;ei=3wGeXY2vOov39QOfsajIBQ&amp;q=nus+yih+food&amp;oq=nus+yih+&amp;gs_l=psy-ab.1.1.0l10.7866.7866.0.8973.1.1.0.0.0.0.69.69.1.1.0....0...1c.1.64.psy-ab..0.1.68....0.trHv8wA6ueM#rlfi=hd:;si:13376272886801035322,l,CgxudXMgeWloIGZvb2QiA4gBAVoQCgAiDG51cyB5aWggZm9vZA;mv:[[1.3055455,103.7867909],[1.2901151,103.77164789999999]]" target="_blank" rel="noopener">地址</a>: 31 Lower Kent Ridge Rd, Singapore 119078</li><li>点评： NUS YIH 学校食堂的烤鱼，一份才 12 新币。油炸的鱼，再配以佐料，油汤煮一下即可。味道还不错，油放的超级多（四川人表示很赞），辣度适中，这个价格性价比很高。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191009234939.jpeg" alt><h1 id="螃蟹"><a href="#螃蟹" class="headerlink" title="螃蟹"></a>螃蟹</h1><h2 id="Long-Seafood"><a href="#Long-Seafood" class="headerlink" title="Long Seafood"></a>Long Seafood</h2></li><li><a href="https://www.google.com/maps/place/Long+Seafood/@1.3670972,103.8321013,15.81z/data=!4m5!3m4!1s0x31da16d966bf9c5d:0xb8a5924677080786!8m2!3d1.3682784!4d103.8371577" target="_blank" rel="noopener">地址</a>： Ang Mo Kio Avenue 3, #01-1222,Block 232, Singapore 560232 龙海鲜螃蟹王宏茂桥店</li><li>点评： 在一个食阁的一楼，店面很大。米粉螃蟹不错，人均 70 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172701.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172705.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172709.jpg" alt><h2 id="Mellben-Signature"><a href="#Mellben-Signature" class="headerlink" title="Mellben Signature"></a>Mellben Signature</h2></li><li><a href="https://www.google.com/maps/place/Mellben+Signature/@1.2771411,103.839687,16.48z/data=!4m5!3m4!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!8m2!3d1.2770306!4d103.842881" target="_blank" rel="noopener">地址</a>：7 Tanjong Pagar Plaza, #01-105, Singapore 081007</li><li>点评： 人均 60 新币，感觉螃蟹小一点点，没有宏茂桥那家好吃，米粉螃蟹的话。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173222.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173227.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173230.jpg" alt><h1 id="烤肉烤串"><a href="#烤肉烤串" class="headerlink" title="烤肉烤串"></a>烤肉烤串</h1><h2 id="Supulae"><a href="#Supulae" class="headerlink" title="Supulae"></a>Supulae</h2></li><li>李加绒同学倾情推荐，还没有来得及去吃。<h2 id="Super-Star-K"><a href="#Super-Star-K" class="headerlink" title="Super Star K"></a>Super Star K</h2></li><li><a href="https://www.google.com/maps/place/Super+Star+K/@1.2779864,103.8416363,17z/data=!3m1!4b1!4m5!3m4!1s0x31da196d3b353d13:0xa2254940717b1324!8m2!3d1.277981!4d103.843825" target="_blank" rel="noopener">地址</a>: 75 Tg Pagar Rd, Singapore 088496</li><li>点评：吃过3次了，那一条街大部分店面都是晚上营业，他家是少有的中午也开门。味道不错，分量也很足。服务员还会帮忙烤肉，态度也很好的。人均 40 新左右，推荐。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120216.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120210.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120206.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120222.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122223.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122227.jpg" alt><h2 id="GO-K-BBQ"><a href="#GO-K-BBQ" class="headerlink" title="GO! K - BBQ"></a>GO! K - BBQ</h2></li><li><a href="https://www.google.com/maps/place/GO!+K+-+BBQ+%28%EA%B3%A0%EC%BC%80%EC%9D%B4+%EB%B9%84%EB%B9%84%ED%81%90%29/@1.2805141,103.8444605,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190d6ec97b63:0x8df5f639962a0c51!8m2!3d1.2805087!4d103.8466492" target="_blank" rel="noopener">地址</a>: 76 Amoy St, Singapore 069895 就在川菜《成都》店旁边，都在厦门街</li><li>点评：晚上才开，人很多，最好提前预定。他家的肉是腌制过后的肉，味道更加的美味。但感觉服务员少了，有点忙不过来。肉的分量稍微小点，价格也就偏贵。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120227.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120232.jpg" alt><h2 id="烧肉王子"><a href="#烧肉王子" class="headerlink" title="烧肉王子"></a>烧肉王子</h2></li><li><a href="https://www.google.com/maps/place/YAKINIKU+OHJI/@1.3115275,103.7647342,19.12z/data=!4m8!1m2!2m1!1z54On6IKJ546L5a2Q!3m4!1s0x0:0xfe0d932f72c53d41!8m2!3d1.3119171!4d103.7651466" target="_blank" rel="noopener">地址</a>: 321 Clementi Ave 3, #01-01, Singapore 129905</li><li>点评： 日式的自助烤肉，分为三个等级：只有鸡肉，有猪肉牛肉，顶级和牛。我们当时吃的是中间那个档次，人均 32 新币。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120241.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120235.jpg" alt><h2 id="大胡子烧烤"><a href="#大胡子烧烤" class="headerlink" title="大胡子烧烤"></a>大胡子烧烤</h2></li><li><a href="https://www.google.com/maps/place/%E5%A4%A7%E8%83%A1%E5%AD%90%E7%83%A7%E7%83%A4+Moustache+BBQ/@1.3156963,103.8827708,19z/data=!3m1!4b1!4m5!3m4!1s0x31da183b17be1ecf:0x72a7719ac6298795!8m2!3d1.315695!4d103.883318" target="_blank" rel="noopener">地址</a>: 70 Lor 25A Geylang, Singapore 388255</li><li>点评： 就在 Aljunied 地铁站出来，烤串是非常不错。干锅肥肠还需要煎的更焦一点。 店里有点炒闹，吃饭时感觉回到了国内小城市的街边小店。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112206.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112210.jpg" alt><h2 id="香港小厨"><a href="#香港小厨" class="headerlink" title="香港小厨"></a>香港小厨</h2></li><li><a href="https://www.google.com/maps/place/Hong+Kong+Kitchen/@1.2930018,103.7688243,20.15z/data=!4m5!3m4!1s0x31da1afc3d91620f:0x1005559cd93f32a6!8m2!3d1.2930409!4d103.7687545" target="_blank" rel="noopener">地址</a>: 24 Clementi Rd, Singapore 129753</li><li>点评：就在 NUS 后街，烤串还是不错的，烤羊排不行，少的太真实了。烤韭菜，一定要让老板少放点盐啊！</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112215.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112218.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112220.jpg" alt><h2 id="王大爷烧烤"><a href="#王大爷烧烤" class="headerlink" title="王大爷烧烤"></a>王大爷烧烤</h2></li><li><a href="https://www.google.com/maps/place/Grandpa&#39;s+BBQ/@1.2838619,103.8441928,19.72z/data=!4m5!3m4!1s0x31da19735213b637:0x3ab7d78c61a477e5!8m2!3d1.2838905!4d103.8445477" target="_blank" rel="noopener">地址</a>: 16 Mosque St, Singapore 059496</li><li>点评：在牛车水摩士街，有点小贵。店面环境还不错，味道一般般，那个柴火鸡一定不要点，比起成都的差太多了，吃了想打人。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113639.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113636.jpg" alt><h2 id="HANSSIK"><a href="#HANSSIK" class="headerlink" title="HANSSIK"></a>HANSSIK</h2></li><li>地址: 3155 Commonwealth Ave W, #05-17/18, Singapore 129588</li><li>点评： 金文泰商场 5 楼，一家自助烤肉，味道还行吧，人均 33 新。吃到最后有点闷了。。。。</li><li>上图：   <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113732.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113735.jpg" alt></li></ul><h1 id="鸡饭"><a href="#鸡饭" class="headerlink" title="鸡饭"></a>鸡饭</h1><h2 id="了凡香港油鸡饭"><a href="#了凡香港油鸡饭" class="headerlink" title="了凡香港油鸡饭"></a>了凡香港油鸡饭</h2><ul><li><a href="https://www.google.com/maps/place/%E9%A6%99%E6%B8%AF%E6%B2%B9%E9%B6%8F%E9%A3%AF%E9%BA%BA/@1.2830062,103.8420419,18z/data=!4m12!1m6!3m5!1s0x31da197318313879:0x32fdfa545f34d128!2z6aaZ5riv5rK56bih6aWt6Z2iMi9G!8m2!3d1.2826067!4d103.8432113!3m4!1s0x0:0x9ac9da435638ad56!8m2!3d1.2831614!4d103.8429974" target="_blank" rel="noopener">地址</a>：78 Smith St, Singapore 058972</li><li>点评： 米其林一星的鸡饭，我觉得可以。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170032.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144001.jpg" alt><h2 id="天天海南鸡饭"><a href="#天天海南鸡饭" class="headerlink" title="天天海南鸡饭"></a>天天海南鸡饭</h2>待吃<h2 id="荣亮阁"><a href="#荣亮阁" class="headerlink" title="荣亮阁"></a>荣亮阁</h2></li><li><a href="https://www.google.com/maps/place/Rong+Liang+Restaurant+%E6%A6%AE%E4%BA%AE%E9%96%A3/@1.3037029,103.7631718,19.84z/data=!4m5!3m4!1s0x31da1aedff402c6b:0xd6e2974e3a8ca8f2!8m2!3d1.303813!4d103.7636313" target="_blank" rel="noopener">地址</a>: #01-192, 725 Clementi West Street 2, Block 725, Singapore 120725</li><li>点评：家附近的一家鸡饭店，本地人经常去吃，物美价廉。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150141.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150146.jpg" alt></li></ul><h1 id="面食"><a href="#面食" class="headerlink" title="面食"></a>面食</h1><h2 id="大华猪肉裸条面"><a href="#大华猪肉裸条面" class="headerlink" title="大华猪肉裸条面"></a>大华猪肉裸条面</h2><ul><li><a href="https://www.google.com/maps/place/Hill+Street+Tai+Hwa+Pork+Noodle/@1.305169,103.8603009,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19b42ad981b9:0x99e64da5de0603b8!8m2!3d1.305169!4d103.8624896" target="_blank" rel="noopener">地址</a>: 466 Crawford Ln, #01-12, Singapore 190466</li><li>点评: 就在 ICA 移民局背后的组屋群，一楼的食阁窗口，号称米其林一星。味道还不错，料很足的。但是价格也比一般的店铺贵一点，还是值得一吃。</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140435.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140442.jpg" alt><h2 id="舌尖尖兰州拉面"><a href="#舌尖尖兰州拉面" class="headerlink" title="舌尖尖兰州拉面"></a>舌尖尖兰州拉面</h2></li><li><a href="https://mp.weixin.qq.com/s/SFz9PiGVADIdEChbJeNCmg" target="_blank" rel="noopener">地址</a>：有几家分店 302 Tiong Bahru Road, Tiong Bahru Plaza,#02-107</li><li>点评：在新加坡非常火的一家兰州拉面，味道还是不错的。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg" alt></li></ul><h2 id="jurong-east-食阁"><a href="#jurong-east-食阁" class="headerlink" title="jurong east 食阁"></a>jurong east 食阁</h2><ul><li><a href="https://www.google.com/maps/place/Kopitiam+@+Jurong+East/@1.3327955,103.7425054,20z/data=!4m5!3m4!1s0x31da100f3cf9d46f:0xa65718371b2dd883!8m2!3d1.3327955!4d103.7425051" target="_blank" rel="noopener">地址</a>：10 Jurong East Street 12, Singapore 609690</li><li>点评：在 jurong east 地铁出来，下一层电梯。 1 楼的食阁里，有一家西安的面食，四合一，油泼面都非常不错，价格也实惠，唯一就是没有空调有点热。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142838.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142833.jpg" alt></li></ul><h1 id="其他美食"><a href="#其他美食" class="headerlink" title="其他美食"></a>其他美食</h1><h2 id="莆田"><a href="#莆田" class="headerlink" title="莆田"></a>莆田</h2><ul><li><a href="https://www.putien.com/outlet/vivocity/" target="_blank" rel="noopener">地址</a>: 1 HarbourFront Walk #02-131/132</li><li>点评： 一家非常不错的福建菜。空调有点冷，九转粉肠非常的好吃，虾苗拌紫菜也好吃，蛏子也很大只的。百秒黄花鱼也是很嫩。扁肉汤的馄饨好吃，汤一般般。蔬菜豆腐汤不错，很好喝推荐。脆皮蒜香鸡不行，不推荐。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233354.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233358.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233401.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233405.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233408.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190904114704.jpeg" alt></li></ul><h2 id="汕头海鲜"><a href="#汕头海鲜" class="headerlink" title="汕头海鲜"></a>汕头海鲜</h2><ul><li><a href="https://swatow.com.sg/home.php" target="_blank" rel="noopener">地址</a>: Blk 181 Lorong 4 Toa Payoh #02-602 有两家店</li><li>点评：我们当时是去吃的自助下午茶，会有阿姨推车过，然后选择需要的茶点。环境还不错，菜品也丰富。可以早点去 2:30 到店里。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142958.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143005.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143009.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143012.jpg" alt><h2 id="Sushi-Tei"><a href="#Sushi-Tei" class="headerlink" title="Sushi Tei"></a>Sushi Tei</h2></li><li><a href="https://www.sushitei.com/outlets/outlets.aspx" target="_blank" rel="noopener">地址</a>: 新加坡全岛有 13 家分店，我是在家附近 Raffles Holland V 吃的</li><li>点评：猪肉饭非常的不错，鳗鱼寿司也可以。金针菇牛肉卷感觉一般，刺身拼盘也可以。<a href="https://www.sushitei.com/menu/menu.aspx" target="_blank" rel="noopener">官网菜单</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144810.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144813.jpg" alt><h2 id="蟹老宋"><a href="#蟹老宋" class="headerlink" title="蟹老宋"></a>蟹老宋</h2></li><li><a href="https://www.google.com.sg/maps/place/Crab+Song+Seafood+Restaurant/@1.2820955,103.8423314,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19732a617c17:0x7a7c31f97d06d8d0!8m2!3d1.2820901!4d103.8445201" target="_blank" rel="noopener">地址</a>: 16 Smith St, Singapore 058930</li><li>点评：本来去是想吃大闸蟹的，结果只剩大个头的蟹蟹，48 新币一只，打扰了。然后就吃了他家的其他一些菜，小龙虾和烤鸭都还不错的，酸辣鸡杂也不错。</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112534.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112539.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112543.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112547.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112551.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112554.jpg" alt></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;民以食为天&lt;br&gt;作为一个在新加坡搬砖的四川吃货，唯有美食不可辜负。坡县虽小，但各式各样的菜系都可以吃到。由于在四川长大，比较喜欢川菜火锅串串香锅烤鱼等。偶尔也跟着朋友们尝试一下其他的菜系。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="美食" scheme="http://feiyang233.club/tags/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 指南</title>
    <link href="http://feiyang233.club/post/prometheus/"/>
    <id>http://feiyang233.club/post/prometheus/</id>
    <published>2019-10-03T07:08:40.000Z</published>
    <updated>2019-10-04T10:55:26.551Z</updated>
    
    <content type="html"><![CDATA[<p>Prometheus 作为业务级监控告警工具，再配合上可视化工具 Grafana，运维人员能方便的监控所需的指标。本文记录了小白入门学习的过程<br><a id="more"></a>  </p><h1 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h1><ol><li><a href="https://ryanyang.gitbook.io/prometheus/" target="_blank" rel="noopener">Prometheus 中文文档</a> </li><li><a href="https://prometheus.io/docs/introduction/overview/" target="_blank" rel="noopener">官方文档地址</a></li></ol><h1 id="入门体验区"><a href="#入门体验区" class="headerlink" title="入门体验区"></a>入门体验区</h1><h2 id="快速安装"><a href="#快速安装" class="headerlink" title="快速安装"></a>快速安装</h2><p>快速安装应用首选 docker 方式，不需要配置复杂的环境。当我们已经非常熟悉如何使用 prometheus 的时候，再返回来使用普通安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只监听在本地</span></span><br><span class="line">docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将配置文件挂载到容器中，方便修改</span></span><br><span class="line">docker run -p 9090:9090 -v /tmp/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用额外的数据卷挂载配置文件：</span></span><br><span class="line">docker run -p 9090:9090 -v /prometheus-data prom/prometheus --config.file=/prometheus-data/prometheus.yml</span><br></pre></td></tr></table></figure><p>安装完成后，即可访问 <a href="http://localhost:9090" target="_blank" rel="noopener">http://localhost:9090</a> 可以在 Graph 查询监控项，在 Status 查看监控了哪些机器，配置文件等。</p><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>[配置介绍官方文档]<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/" target="_blank" rel="noopener">https://prometheus.io/docs/prometheus/latest/configuration/configuration/</a>)<br>我是在 Mac 电脑上 docker 安装 prometheus。由于我没有把配置文件挂载出来，只能进入容器去修改。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -u root -it 51ae3954e880 sh</span><br><span class="line"></span><br><span class="line">vi /etc/prometheus/prometheus.yml</span><br></pre></td></tr></table></figure></p><p>配置文件如下所示<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line"><span class="attr">  scrape_interval:</span>     <span class="number">15</span><span class="string">s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line"><span class="attr">  evaluation_interval:</span> <span class="number">15</span><span class="string">s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line"><span class="attr">  alertmanagers:</span></span><br><span class="line"><span class="attr">  - static_configs:</span></span><br><span class="line"><span class="attr">    - targets:</span></span><br><span class="line">      <span class="comment"># - alertmanager:9093</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - "first_rules.yml"</span></span><br><span class="line">  <span class="comment"># - "second_rules.yml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it's Prometheus itself.</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to '/metrics'</span></span><br><span class="line">    <span class="comment"># scheme defaults to 'http'.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">    - targets:</span> <span class="string">['localhost:9090']</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'feiy'</span></span><br><span class="line"><span class="attr">    scrape_interval:</span> <span class="number">5</span><span class="string">s</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['host.docker.internal:8000']</span></span><br><span class="line"><span class="attr">        labels:</span></span><br><span class="line"><span class="attr">          group:</span> <span class="string">'production'</span></span><br></pre></td></tr></table></figure></p><p>完整的配置例子，请点击<a href="https://github.com/prometheus/prometheus/blob/master/config/testdata/conf.good.yml" target="_blank" rel="noopener">这里</a></p><h2 id="检查结果"><a href="#检查结果" class="headerlink" title="检查结果"></a>检查结果</h2><p>打开 <a href="http://localhost:9090/targets" target="_blank" rel="noopener">http://localhost:9090/targets</a> 我们可以看到如下的结果  </p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191003155435.png" alt></p><p>图中两个 target，第一个 feiy 是我自己写的一个 django 小程序，暴露出来了我关心的指标，用了<a href="https://github.com/prometheus/client_python" target="_blank" rel="noopener">Prometheus Python Client</a>。第二个则是 Prometheus 服务器自带的监控数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># feiy 暴露出来的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HELP python_gc_objects_collected_total Objects collected during gc</span></span><br><span class="line"><span class="comment"># TYPE python_gc_objects_collected_total counter</span></span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">"0"</span>&#125; 17999.0</span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">"1"</span>&#125; 2384.0</span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">"2"</span>&#125; 833.0</span><br><span class="line"><span class="comment"># HELP python_gc_objects_uncollectable_total Uncollectable object found during GC</span></span><br><span class="line"><span class="comment"># TYPE python_gc_objects_uncollectable_total counter</span></span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">"0"</span>&#125; 0.0</span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">"1"</span>&#125; 0.0</span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">"2"</span>&#125; 0.0</span><br><span class="line"><span class="comment"># HELP python_gc_collections_total Number of times this generation was collected</span></span><br><span class="line"><span class="comment"># TYPE python_gc_collections_total counter</span></span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">"0"</span>&#125; 255.0</span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">"1"</span>&#125; 23.0</span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">"2"</span>&#125; 2.0</span><br><span class="line"><span class="comment"># HELP python_info Python platform information</span></span><br><span class="line"><span class="comment"># TYPE python_info gauge</span></span><br><span class="line">python_info&#123;implementation=<span class="string">"CPython"</span>,major=<span class="string">"3"</span>,minor=<span class="string">"7"</span>,patchlevel=<span class="string">"1"</span>,version=<span class="string">"3.7.1"</span>&#125; 1.0</span><br><span class="line"><span class="comment"># HELP request_processing_seconds Time spent processing request</span></span><br><span class="line"><span class="comment"># TYPE request_processing_seconds summary</span></span><br><span class="line">request_processing_seconds_count&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 3.0</span><br><span class="line">request_processing_seconds_sum&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 0.0</span><br><span class="line"><span class="comment"># TYPE request_processing_seconds_created gauge</span></span><br><span class="line">request_processing_seconds_created&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 1.570089497964517e+09</span><br><span class="line"><span class="comment"># HELP request_byte_sum_total Total request byte sum</span></span><br><span class="line"><span class="comment"># TYPE request_byte_sum_total counter</span></span><br><span class="line">request_byte_sum_total&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 0.0</span><br><span class="line"><span class="comment"># TYPE request_byte_sum_created gauge</span></span><br><span class="line">request_byte_sum_created&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 1.570089497964633e+09</span><br><span class="line"><span class="comment"># HELP response_byte_sum_total Total response byte sum</span></span><br><span class="line"><span class="comment"># TYPE response_byte_sum_total counter</span></span><br><span class="line">response_byte_sum_total&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 5533.0</span><br><span class="line"><span class="comment"># TYPE response_byte_sum_created gauge</span></span><br><span class="line">response_byte_sum_created&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 1.5700894979645782e+09</span><br></pre></td></tr></table></figure><p>我们可以在 Graph 查询结果，比如查询 python_info{implementation=”CPython”,major=”3”,minor=”7”,patchlevel=”1”,version=”3.7.1”} 1.0<br>得到了如下的结果</p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191003160311.png" alt></p><h1 id="进阶区"><a href="#进阶区" class="headerlink" title="进阶区"></a>进阶区</h1><h2 id="暴露数据-node-exporter"><a href="#暴露数据-node-exporter" class="headerlink" title="暴露数据 node exporter"></a>暴露数据 node exporter</h2><ol><li><a href="https://prometheus.io/docs/guides/node-exporter/" target="_blank" rel="noopener">监控 Linux 机器</a></li><li><a href="https://prometheus.io/docs/guides/cadvisor/" target="_blank" rel="noopener">监控容器</a></li></ol><h2 id="metric"><a href="#metric" class="headerlink" title="metric"></a>metric</h2><ol><li><a href="https://prometheus.io/docs/concepts/metric_types/" target="_blank" rel="noopener">官方文档</a></li><li><a href="https://mp.weixin.qq.com/s/1EuTeQKeCX7-B2Ihj85dCA" target="_blank" rel="noopener">详细解读 Prometheus 的指标类型</a></li><li><a href="https://mp.weixin.qq.com/s/WJM-DTUrdl8KFpLD5kabZg" target="_blank" rel="noopener">一文搞懂 Prometheus 的直方图</a></li></ol><h2 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h2><ol><li><a href="https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/" target="_blank" rel="noopener">官方文档</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果有错的话，则那一条规则不会更新。</span></span><br><span class="line">go get github.com/prometheus/prometheus/cmd/promtool</span><br><span class="line">promtool check rules /path/to/example.rules.yml</span><br></pre></td></tr></table></figure></li></ol><h1 id="采坑区"><a href="#采坑区" class="headerlink" title="采坑区"></a>采坑区</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Prometheus 作为业务级监控告警工具，再配合上可视化工具 Grafana，运维人员能方便的监控所需的指标。本文记录了小白入门学习的过程&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="prometheus" scheme="http://feiyang233.club/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Mac 小技巧</title>
    <link href="http://feiyang233.club/post/mac/"/>
    <id>http://feiyang233.club/post/mac/</id>
    <published>2019-09-11T02:51:35.000Z</published>
    <updated>2019-09-11T07:27:34.059Z</updated>
    
    <content type="html"><![CDATA[<p>苹果电脑小技巧。<br><a id="more"></a></p><h1 id="命令行技巧"><a href="#命令行技巧" class="headerlink" title="命令行技巧"></a>命令行技巧</h1><ul><li>移动到行首 <strong>ctrl+A</strong></li><li>移动当行尾 <strong>ctrl+E</strong></li><li>往左移一个单词 <strong>esc+B</strong></li><li>往右移一个单词 <strong>esc+F</strong></li><li>删除光标前一个单词 <strong>ctrl+W</strong></li><li>删除光标前所有 <strong>ctrl+U</strong></li></ul><h1 id="上传rz-下载sz"><a href="#上传rz-下载sz" class="headerlink" title="上传rz 下载sz"></a>上传rz 下载sz</h1><ul><li>首先下载 <a href="https://www.iterm2.com/" target="_blank" rel="noopener">iTerm2</a> 因为自带的 terminal 不行啊</li><li>安装 lrzsz <strong>brew install lrzsz</strong></li><li>下载两个脚本 send-zmodem.sh  recv-zmodem.sh<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin </span><br><span class="line">sudo wget https://gist.githubusercontent.com/sy-records/1b3010b566af42f57fa6fa38138dd22a/raw/2bfe590665d3b0e6c8223623922474361058920c/iterm2-send-zmodem.sh </span><br><span class="line">sudo wget https://gist.githubusercontent.com/sy-records/40f4ba22e3fbdeedf58463b067798962/raw/b32d2f7ac3fa54acca81be3664797cebb724690f/iterm2-recv-zmodem.sh</span><br><span class="line">sudo chmod 755 /usr/<span class="built_in">local</span>/bin/iterm2-*</span><br></pre></td></tr></table></figure></li></ul><p>如果链接失败，可以复制以下文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vim /usr/local/bin/iterm2-send-zmodem.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/sz <span class="string">"<span class="variable">$FILE</span>"</span> -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Received $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#vim /usr/local/bin/iterm2-recv-zmodem.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">"<span class="variable">$FILE</span>"</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/rz -E -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Sent \-\&gt; $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><ul><li>iTerm2 的配置<br>点击 iTerm2 的设置界面 Perference -&gt; Profiles -&gt; Default -&gt; Advanced -&gt; Triggers 的 Edit 按钮<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190911151439.png" alt><br>点击+号，添加如下的参数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Regular expression: \*\*B0100</span><br><span class="line">            Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-send-zmodem.sh</span><br><span class="line">           Instant: checked</span><br><span class="line"></span><br><span class="line">Regular expression: \*\*B00000000000000</span><br><span class="line">            Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-recv-zmodem.sh</span><br><span class="line">           Instant: checked</span><br></pre></td></tr></table></figure></li></ul><p>添加完成如下图所示<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190911151446.png" alt><br>简单的用法，当 ssh 登录后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 下载一个文件： </span><br><span class="line">sz filename </span><br><span class="line"># 下载多个文件： </span><br><span class="line">sz filename1 filename2</span><br><span class="line"># 下载dir目录下的所有文件，不包含dir下的文件夹： </span><br><span class="line">sz dir/*</span><br><span class="line"></span><br><span class="line"># 直接键入rz命令即可</span><br><span class="line">rz</span><br><span class="line"># 在弹出的文件窗口，选择需要上传的文件</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;苹果电脑小技巧。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="mac" scheme="http://feiyang233.club/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Google Script 学习</title>
    <link href="http://feiyang233.club/post/google-script/"/>
    <id>http://feiyang233.club/post/google-script/</id>
    <published>2019-08-15T07:04:49.000Z</published>
    <updated>2019-08-15T09:22:25.274Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录用<a href="https://developers.google.com/apps-script/guides/sheets" target="_blank" rel="noopener">Google Script</a> 处理数据，发送每日邮件的过程。<br><a id="more"></a></p><h1 id="创建-Sheet-和-Script"><a href="#创建-Sheet-和-Script" class="headerlink" title="创建 Sheet 和 Script"></a>创建 Sheet 和 Script</h1><p>首先用自己的谷歌账号创建一个新的 Google Sheet, 然后点击菜单栏的 Tools &gt; Script editor 就可以创建脚本。其语法和 JavaScript 相似的。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sends emails with data from the current spreadsheet.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 首先添加一个发送按钮名称为 Action，绑定到函数 SendEmail</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onOpen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  SpreadsheetApp.getUi()</span><br><span class="line">      .createMenu(<span class="string">'Action'</span>)</span><br><span class="line">      .addItem(<span class="string">'Send Daily Report'</span>, <span class="string">'SendEmail'</span>)</span><br><span class="line">      .addToUi();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="学会-debug"><a href="#学会-debug" class="headerlink" title="学会 debug"></a>学会 debug</h1><p>可以调用函数 Logger.log(); 打印结果到后台，然后在 View &gt; Logs 查看结果。举一个简单的例子：<br>markdown 语法注意，使用时发现，表格的语句上一行必须为空行，不然表格不生效。比如你的表是这个样子的  </p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A1</td><td style="text-align:center">B1</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">A2</td><td style="text-align:center">B2</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">A3</td><td style="text-align:center">B3</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">A4</td><td style="text-align:center">B4</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logProductInfo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = SpreadsheetApp.getActiveSheet();</span><br><span class="line">  <span class="keyword">var</span> data = sheet.getDataRange().getValues();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">    Logger.log(<span class="string">'Product name: '</span> + data[i][<span class="number">0</span>]);</span><br><span class="line">    Logger.log(<span class="string">'Product number: '</span> + data[i][<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在 script editor 界面点击 Run &gt; Run function &gt; logProductInfo, 运行结束后，可以点击 View &gt; Logs 查看结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[19-08-15 01:16:37:475 PDT] Product name: A1</span><br><span class="line">[19-08-15 01:16:37:475 PDT] Product number: B1</span><br><span class="line">[19-08-15 01:16:37:476 PDT] Product name: A2</span><br><span class="line">[19-08-15 01:16:37:476 PDT] Product number: B2</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product name: A3</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product number: B3</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product name: A4</span><br><span class="line">[19-08-15 01:16:37:478 PDT] Product number: B4</span><br></pre></td></tr></table></figure></p><h1 id="Code-gs"><a href="#Code-gs" class="headerlink" title="Code.gs"></a>Code.gs</h1><p>直接放上代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sends emails with data from the current spreadsheet.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onOpen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  SpreadsheetApp.getUi()</span><br><span class="line">      .createMenu(<span class="string">'Action'</span>)</span><br><span class="line">      .addItem(<span class="string">'Send Daily Report'</span>, <span class="string">'SendEmail'</span>)</span><br><span class="line">      .addToUi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> scriptProperties = PropertiesService.getScriptProperties();</span><br><span class="line">  <span class="keyword">var</span> nickname = scriptProperties.getProperty(<span class="string">'Project'</span>);</span><br><span class="line">  Logger.log(nickname)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SendEmail</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> client = PropertiesService.getScriptProperties().getProperty(<span class="string">'Project'</span>);</span><br><span class="line">  <span class="comment">// Property 可以在 File &gt; Project Properties &gt; Script properties 里面设置</span></span><br><span class="line">  <span class="keyword">var</span> monitor_vn = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(<span class="string">"VN"</span>).getDataRange().getValues();</span><br><span class="line">  <span class="comment">// 获取表单名称为 VN 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> monitor_th = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(<span class="string">"TH"</span>).getDataRange().getValues();</span><br><span class="line">  <span class="comment">// 获取表单名称为 TH 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> sendlist = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(<span class="string">"email"</span>).getDataRange().getValues();</span><br><span class="line">  <span class="comment">// 获取表单名称为 email 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> sendto = []</span><br><span class="line">  <span class="keyword">var</span> sendcc = []</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将发送和 cc 分开存储</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;sendlist.length;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (sendlist[i][<span class="number">0</span>]!=<span class="string">''</span>) sendto.push(sendlist[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> (sendlist[i][<span class="number">1</span>]!=<span class="string">''</span>) sendcc.push(sendlist[i][<span class="number">1</span>])</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  sendto = sendto.join(<span class="string">','</span>)</span><br><span class="line">  sendcc = sendcc.join(<span class="string">','</span>)</span><br><span class="line">  </span><br><span class="line"> <span class="comment">// Email Template 连接绑定文件 index.html</span></span><br><span class="line">  <span class="keyword">var</span> template = HtmlService.createTemplateFromFile(<span class="string">'index'</span>);</span><br><span class="line">  <span class="comment">// 传参到 template</span></span><br><span class="line">  template.monitor_vn = monitor_vn;</span><br><span class="line">  template.monitor_th = monitor_th;</span><br><span class="line">  template.client = client;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 自定义一个数组，将数字月份映射为英文</span></span><br><span class="line">  <span class="keyword">const</span> monthNames = [<span class="string">"January"</span>, <span class="string">"February"</span>, <span class="string">"March"</span>, <span class="string">"April"</span>, <span class="string">"May"</span>, <span class="string">"June"</span>,</span><br><span class="line">  <span class="string">"July"</span>, <span class="string">"August"</span>, <span class="string">"September"</span>, <span class="string">"October"</span>, <span class="string">"November"</span>, <span class="string">"December"</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="comment">// 获取当前的日期</span></span><br><span class="line">  <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 发送邮件</span></span><br><span class="line">  MailApp.sendEmail(&#123;</span><br><span class="line">    to: sendto,</span><br><span class="line">    cc: sendcc,</span><br><span class="line">    subject: client+<span class="string">' Monitoring Daily Report ('</span>+d.getDate()+<span class="string">'-'</span>+monthNames[d.getMonth()]+<span class="string">'-'</span>+d.getYear()+<span class="string">')'</span>,</span><br><span class="line">    htmlBody: template.evaluate().getContent()&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h1><p>这个是邮件的主体模板，可以看一下<a href="https://developers.google.com/apps-script/guides/html/templates" target="_blank" rel="noopener">官网介绍</a><br>条件语句嵌套&lt;? … ?&gt;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_top"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &lt;? if (true) &#123; ?&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>This will always be served!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>This will never be served.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;? &#125; ?&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>赋值语句&lt;?= … ?&gt; 是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base target=&quot;_top&quot;&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;?= &apos;My favorite Google products:&apos; ?&gt;</span><br><span class="line">    &lt;? var data = [&apos;Gmail&apos;, &apos;Docs&apos;, &apos;Android&apos;];</span><br><span class="line">      for (var i = 0; i &lt; data.length; i++) &#123; ?&gt;</span><br><span class="line">        &lt;b&gt;&lt;?= data[i] ?&gt;&lt;/b&gt;</span><br><span class="line">    &lt;? &#125; ?&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_top"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hi,<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Below is daily ops report for &lt;?=client?&gt;:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">"font-size: 15px;"</span>&gt;</span>Monitoring_VN:<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"border-collapse: collapse; margin-left:20px;border: 1px solid black"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? for (var j=1;j&lt;7;j++) &#123; ?&gt;  <span class="comment">&lt;!-- 因为只读取1-6列的数据 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: grey; color: white; width:15%"</span>&gt;</span>&lt;?= monitor_vn[0][j] ?&gt;<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--monitor_vn.length 是行数--&gt;</span></span><br><span class="line">     &lt;? for(var i=1;i&lt;monitor_vn.length;i++) &#123; ?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       &lt;? for(var j=1;j&lt;7;j++) &#123; ?&gt;</span><br><span class="line">         &lt;? if ( j&gt;2 &amp;&amp; j&lt; 6  ) &#123; ?&gt;</span><br><span class="line">          &lt;? if (monitor_vn[i][j] &gt; 0.7) &#123;?&gt; <span class="comment">&lt;!-- 值大于0.7 底色红色--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black; background-color: red;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;   <span class="comment">&lt;!--toFixed(2) 保留两位小数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">            &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">        &lt;? if ( j==6 &amp;&amp; monitor_vn[i][j] &gt; 100) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: red;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">     </span><br><span class="line">         &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">"font-size: 15px;"</span>&gt;</span>Monitoring_TH:<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"border-collapse: collapse; margin-left:20px;border: 1px solid black"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? for (var j=1;j&lt;7;j++)&#123; ?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: grey; color: white; width:15%"</span>&gt;</span>&lt;?= monitor_th[0][j] ?&gt;<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     &lt;? for(var i=1;i&lt;monitor_th.length;i++)&#123;?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       &lt;? for(var j=1;j&lt;7;j++)&#123;?&gt;</span><br><span class="line">         &lt;? if ( j&gt;2 &amp;&amp; j&lt; 6  ) &#123; ?&gt;</span><br><span class="line">           &lt;? if (monitor_th[i][j] &gt; 0.7) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black; background-color: red;"</span>&gt;</span>&lt;?= (monitor_th[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_th[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">         &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">           &lt;? if ( j==6 &amp;&amp; monitor_th[i][j] &gt; 100) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: red;"</span>&gt;</span>&lt;?= (monitor_th[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_th[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">         &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录用&lt;a href=&quot;https://developers.google.com/apps-script/guides/sheets&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google Script&lt;/a&gt; 处理数据，发送每日邮件的过程。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="google" scheme="http://feiyang233.club/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>docker 学习笔记</title>
    <link href="http://feiyang233.club/post/docker/"/>
    <id>http://feiyang233.club/post/docker/</id>
    <published>2019-07-31T16:00:00.000Z</published>
    <updated>2019-10-08T06:57:54.521Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录了一些基础的 docker 知识。<br><a id="more"></a> </p><h1 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h1><p>分享一篇<a href="https://mp.weixin.qq.com/s/BCzL57RmJja2gfZ67a2Z9Q" target="_blank" rel="noopener">CentOS 7 下 yum 方式安装 Docker 环境</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></p><p>一个“容器”，实际上是一个由 Linux Namespace、Linux Cgroups 和 rootfs 三种技术构建出来的进程的隔离环境。<br>这三种技术介绍？<br>Namespace 的作用是“隔离”，它让应用进程只能看到该 Namespace 内的“世界”；而 Cgroups 的作用是“限制”</p><p>rootfs 只是一个操作系统所包含的文件、配置和目录，并不包括操作系统内核。在 Linux 操作系统中，这两部分是分开存放的，操作系统只有在开机启动时才会加载指定版本的内核镜像。正是由于 rootfs 的存在，容器才有了一个被反复宣传至今的重要特性：一致性。</p><p>docker commit，实际上就是在容器运行起来后，把最上层的“可读写层”，加上原先容器镜像的只读层，打包组成了一个新的镜像。当然，下面这些只读层在宿主机上是共享的，不会占用额外的空间。</p><h1 id="docker-volume"><a href="#docker-volume" class="headerlink" title="docker volume"></a>docker volume</h1><p>镜像的各个层，保存在 /var/lib/docker/aufs/diff 目录下，在容器进程启动后，它们会被联合挂载在 /var/lib/docker/aufs/mnt/ 目录中，这样容器所需的 rootfs 就准备好了。<br>volume /test 挂载出来之后，文件会出现在了宿主机上对应的临时目录里，但是如果你在宿主机上查看该容器的可读写层，虽然可以看到这个 /test 目录，但其内容是空的。<br>而由于使用了联合文件系统，你在容器里对镜像 rootfs 所做的任何修改，都会被操作系统先复制到这个可读写层，然后再修改。这就是所谓的：Copy-on-Write。<br>有些时候，会由于配置文件的出错导致容器运行失败，这个时候不能进入容器修改文件，只能去 /var/lib/docker/overlay2/ID/diff 下面，找到对应的配置文件进行修改。</p><h1 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 docker 服务 </span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前系统 Docker 信息 </span></span><br><span class="line">docker info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取 docker 镜像 </span></span><br><span class="line">docker pull image_name</span><br><span class="line"><span class="comment"># 从 Docker hub 上下载某个镜像 </span></span><br><span class="line">docker pull centos:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看宿主机上的镜像，Docker 镜像保存在 / var/lib/docker 目录下:</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line">REPOSITORY                      TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mysql                           5.7                 1b30b36ae96a        8 days ago          372MB</span><br><span class="line">zabbix/zabbix-web-nginx-mysql   centos-4.0-latest   8be5f91b2fa1        3 weeks ago         415MB</span><br><span class="line">zabbix/zabbix-server-mysql      centos-4.0-latest   8e5becf45c4e        3 weeks ago         326MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像 </span></span><br><span class="line">docker rmi image_name/image_id</span><br><span class="line">docker rmi zabbix/zabbix-web-nginx-mysql:centos-4.0-latest 或者 docker rmi 8be5f91b2fa1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前有哪些容器正在运行 </span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 查看所有容器 </span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">CONTAINER ID        IMAGE                                             COMMAND                  CREATED             STATUS                       PORTS                           NAMES</span><br><span class="line">b30307ad65be        zabbix/zabbix-web-nginx-mysql:centos-4.0-latest   <span class="string">"docker-entrypoint.sh"</span>   7 days ago          Exited (255) 8 minutes ago   443/tcp, 0.0.0.0:8080-&gt;80/tcp   zabbix-web-nginx-mysql</span><br><span class="line">0ad822cd52b7        zabbix/zabbix-server-mysql:centos-4.0-latest      <span class="string">"docker-entrypoint.sh"</span>   7 days ago          Exited (255) 8 minutes ago   0.0.0.0:10051-&gt;10051/tcp        zabbix-server-mysql</span><br><span class="line">d01c89a112f7        mysql:5.7                                         <span class="string">"docker-entrypoint.s…"</span>   7 days ago          Exited (255) 8 minutes ago   3306/tcp, 33060/tcp             mysql-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动、停止、重启容器命令：</span></span><br><span class="line">docker start container_name/container_id</span><br><span class="line">docker stop container_name/container_id</span><br><span class="line">docker restart container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动一个容器后，如果想进入到这个容器，可以使用 attach</span></span><br><span class="line">docker attach container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除容器 </span></span><br><span class="line">docker rm container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器日志 </span></span><br><span class="line">docker logs -f container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器 IP 地址 </span></span><br><span class="line">docker inspect container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器 </span></span><br><span class="line">docker <span class="built_in">exec</span> -it container_name/container_id bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 Docker 容器与宿主机相互传输文件 </span></span><br><span class="line">[root@localhost tmp]<span class="comment"># docker cp --help</span></span><br><span class="line"></span><br><span class="line">Usage:docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class="line">docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br><span class="line"></span><br><span class="line">Copy files/folders between a container and the <span class="built_in">local</span> filesystem</span><br><span class="line"></span><br><span class="line">docker cp zabbix_config.sql mysql-server:/tmp</span><br><span class="line">docker cp mysql-server:/tmp/zabbix_config.sql /tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量删除所有已经退出的容器 </span></span><br><span class="line">docker rm -v $(docker ps -aq -f status=exited)</span><br><span class="line"><span class="comment"># 批量删除所有仅创建并未成功运行的容器 </span></span><br><span class="line">docker rm -v $(docker ps -aq -f status=created)</span><br></pre></td></tr></table></figure><h1 id="docker-logs"><a href="#docker-logs" class="headerlink" title="docker logs"></a>docker logs</h1><p><a href="https://blog.csdn.net/yjk13703623757/article/details/80283729" target="_blank" rel="noopener">删除 logs</a> 设置 logs <a href="https://docs.docker.com/engine/reference/commandline/dockerd/" target="_blank" rel="noopener">Daemon configuration file</a></p><h1 id="docker-iptables"><a href="#docker-iptables" class="headerlink" title="docker iptables"></a>docker iptables</h1><p>docker 默认会修改 iptables，但有时候会造成 iptables ip 限制失效的问题。如果对 iptables 比较了解的同学，可以 <a href="https://docs.docker.com/network/iptables/" target="_blank" rel="noopener">Prevent Docker from manipulating iptables</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"iptables"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"log-driver"</span>:<span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;<span class="string">"max-size"</span>:<span class="string">"500m"</span>, <span class="string">"max-file"</span>:<span class="string">"3"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">max-size=500m，意味着一个容器日志大小上限是500M，</span><br><span class="line">max-file=3，意味着一个容器有三个日志，分别是id+.json、id+1.json、id+2.json。</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>还有一种办法就是添加 <a href="https://docs.docker.com/network/iptables/" target="_blank" rel="noopener">DOCKER-USER</a>  If you need to add rules which load before Docker’s rules, add them to the DOCKER-USER chain. These rules are loaded before any rules Docker creates automatically.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line">:DOCKER-USER - [0:0]</span><br><span class="line">-A FORWARD -j DOCKER-USER</span><br><span class="line">-A DOCKER-USER -s x.x.x.x -p tcp --dport 80 -j RETURN</span><br><span class="line">-A DOCKER-USER -p tcp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -p udp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -j RETURN</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure></p><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><p>首先，安利一下 <a href="https://mp.weixin.qq.com/s/wNCfYERWU3GOBHI2juTpmg" target="_blank" rel="noopener">Dockerfile 优化指南</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.7</span><br><span class="line"></span><br><span class="line">RUN apt-get update \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line">WORKDIR /usr/src/app</span><br><span class="line">COPY requirements.txt ./</span><br><span class="line">RUN pip install -r requirements.txt</span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line">EXPOSE 8000</span><br><span class="line">CMD [&quot;python&quot;, &quot;manage.py&quot;, &quot;runserver&quot;, &quot;0.0.0.0:8000&quot;]</span><br></pre></td></tr></table></figure><h1 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h1><p>docker 镜像有许多的版本，不同版本间差异需要注意。举个例子，我遇到因为版本不同，ip route get 结尾多了一个 uid 0<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#执行这个命令，在不同 tag 版本的 Python 镜像里，结果会不一样。</span></span><br><span class="line">ip -4 route get 8.8.8.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果多了一个 uid 会导致提取 IP 时出错。</span></span><br><span class="line">8.8.8.8 via 192.168.0.1 dev eth0 src 192.168.0.105 uid 0 </span><br><span class="line"></span><br><span class="line">8.8.8.8 via 192.168.0.1 dev eth0 src 192.168.0.105 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 两者之间的差异是因为 iproute2 版本不一样</span></span><br><span class="line"></span><br><span class="line">root@feiy:/etc/apt<span class="comment"># apt-cache policy iproute2</span></span><br><span class="line">iproute2:</span><br><span class="line">  Installed: 4.9.0-1+deb9u1</span><br><span class="line">  Candidate: 4.9.0-1+deb9u1</span><br><span class="line">  Version table:</span><br><span class="line"> *** 4.9.0-1+deb9u1 500</span><br><span class="line">        500 http://deb.debian.org/debian stretch/main amd64 Packages</span><br><span class="line">        100 /var/lib/dpkg/status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@feiy:/etc/apt<span class="comment"># apt-cache policy iproute2</span></span><br><span class="line">iproute2:</span><br><span class="line">  Installed: 4.20.0-2</span><br><span class="line">  Candidate: 4.20.0-2</span><br><span class="line">  Version table:</span><br><span class="line"> *** 4.20.0-2 500</span><br><span class="line">        500 http://deb.debian.org/debian buster/main amd64 Packages</span><br><span class="line">        100 /var/lib/dpkg/status</span><br></pre></td></tr></table></figure></p><h1 id="network"><a href="#network" class="headerlink" title="network"></a>network</h1><p>docker 是基于 iptables 进行流量的转发，添加了一个虚拟的网卡 docker0 。 如果想从容器内部访问宿主机的 IP，比如从 172.17.0.3 访问宿主机的内网地址 192.168.1.10 ， 我们从 tcpdump 在网卡 docker0  抓包可以看到流量。 但是在内网网卡抓包没有结果。猜测原因是：当数据包从网卡 docker0 转发后，直接在内核进入 INPUT 链。所以，如果想访问宿主机的 IP， 需要在 INPUT 添加相关规则，允许访问。  iptables -A INPUT -i docker0 -j ACCEPT</p><h1 id="mac-上使用-docker"><a href="#mac-上使用-docker" class="headerlink" title="mac 上使用 docker"></a>mac 上使用 docker</h1><ol><li>volume 的位置和 linux 不同，解决办法如下</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Library/Containers/com.docker.docker/Data/vms/0/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接进入 tty</span></span><br><span class="line">screen tty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 tty 可以就可以找到 docker container volume</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker/volumes/</span><br></pre></td></tr></table></figure><ol start="2"><li>如果想从容器内部访问 mac，也和 Linux 不同。详情可以看官网<a href="https://docs.docker.com/docker-for-mac/networking/" target="_blank" rel="noopener">docker mac network</a> 在容器内部可以使用 host.docker.internal 就可以访问到 Mac 宿主机啦。 而在 Linux 机器上, 容器可以直接使用宿主机的 IP 来访问宿主机</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录了一些基础的 docker 知识。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="kubernetes" scheme="http://feiyang233.club/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>singtel 路由器踩坑经历</title>
    <link href="http://feiyang233.club/post/singtel/"/>
    <id>http://feiyang233.club/post/singtel/</id>
    <published>2019-07-27T02:00:55.000Z</published>
    <updated>2019-07-27T06:24:31.315Z</updated>
    
    <content type="html"><![CDATA[<p>2019-07-26 搬新家后贫困山区终于通网了。然而当我打算修改路由器的名称(SSID)和密码的时候，却发现被坑了。<br><a id="more"></a></p><h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>singtel 光纤宽带，有一个光模转换器，还有一个 WiFi 路由器。如下图所示：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100707.jpg" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100704.jpg" alt>  </p><h1 id="踩坑过程"><a href="#踩坑过程" class="headerlink" title="踩坑过程"></a>踩坑过程</h1><p>当家里有网后，我想修改一下 WiFi 名称和密码，谷歌一下，<a href="https://www.singtel.com/personal/support/broadband/routers-ont/arcadyan-ac-plus-guide/change-wireless-settings" target="_blank" rel="noopener">答案如下</a>。<br>Step 1<br>Visit <a href="http://192.168.1.254" target="_blank" rel="noopener">http://192.168.1.254</a> to view your router configuration page.  </p><p>Step 2<br>Scroll down to Device Info and Internet Connection to find the information.   </p><p>Step 3<br>By default, you will see the 2.4GHz and 5GHz wireless settings, Band Steering and WPS feature..  </p><p>Step 4<br>To apply any changes made to your Wireless settings, click on the Apply button or cancel to disregard the changes.  </p><p>我按照以上说明操作一下，结果碰到的却是如下的画面：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727101742.png" alt><br>当时就懵逼了，账号和密码都不知道。结果看到右上角有一个型号 hg8244h, 谷歌一下 hg8244h default password. 结果如下<br>The default network address is 192.168.1.254 and so within a browser connect to <a href="http://192.168.1.254" target="_blank" rel="noopener">http://192.168.1.254</a>. The root user login’s default password is admin and should be changed.</p><p>登录进去之后，画面如下:<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100710.png" alt><br>我仔仔细细找了一圈，都没有发现修改 SSID 的地方。当我点开 Lan devices, 列表里发现了一个 Singtel-ACPlus, 我才意识到我登录到光模装换器的控制台了。在这里我看到了 Singtel-ACPlus 的 mac 地址。我在自己的苹果电脑命令行查询一下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp -a</span><br></pre></td></tr></table></figure></p><p>得到的网关 192.168.1.254 mac 地址与 Singtel-ACPlus 的 mac 地址不符合</p><p>我的电脑连接的是 WiFi 路由器，结果网关却是光模路由器。其中必有蹊跷！</p><h1 id="解决的办法"><a href="#解决的办法" class="headerlink" title="解决的办法"></a>解决的办法</h1><p>先将光模路由器和 WiFi 路由器之间的网线断开，（一定要）再重启WiFi 路由器。等待一段时间连上 WiFi, 再次访问 <a href="http://192.168.1.254" target="_blank" rel="noopener">http://192.168.1.254</a>. 这次终于大功告成！<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100713.png" alt><br>猜测根本原因是：两个路由器之间是桥接模（也许有错）。 WiFi 路由器连上光模路由器了，都没有自己的 IP。 真是卑微，就像我这种菜菜子，不配拥有姓名。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019-07-26 搬新家后贫困山区终于通网了。然而当我打算修改路由器的名称(SSID)和密码的时候，却发现被坑了。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="network" scheme="http://feiyang233.club/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>运维中踩过的坑</title>
    <link href="http://feiyang233.club/post/ops-bug/"/>
    <id>http://feiyang233.club/post/ops-bug/</id>
    <published>2019-07-05T02:58:36.000Z</published>
    <updated>2019-11-10T02:53:13.210Z</updated>
    
    <content type="html"><![CDATA[<p>仅以本文记录那些年弟弟背过的锅！<br><a id="more"></a>  </p><h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><ol><li>大部分时候，iptables 只存了 filter 表。 对于 nat 表，我们一旦 restart iptables， nat 表的规则就会被刷新。建议用 reload</li><li>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT 这一条 iptables 的规则也非常重要。Packets in a RELATED or ESTABLISHED state are those ones which belong to an already opened connection; you’ll generally want to accept them, otherwise connections will get established correctly but nothing will be able to flow after the initial handshake. 如果没有这一条，会遇到 DNS 解析失败， curl 失败。 凡是 iptables 没有允许的 IP, 都不能正常的工作。 例如 DNS 查询发包后，三次握手建立。回包收到了，却会被 iptables 阻挡，上层应用无法拿到解析的结果，导致 hang 住。</li><li>tcpdump 抓包分析时， 进入的包都可以抓到，不会受到 iptables, 发出的包会受到 iptables 影响，可能被 iptables 阻挡导致抓包失败。</li><li>如果是命令行添加的规则，例如 iptables -t nat -A OUTPUT -s 172.17.0.3 -p tcp –dport 10050 -j ACCEPT  在使用 reload 后，其规则一样会被刷掉。但 docker 的规则不会被 reload 刷掉，会被 restart 刷掉。这一点有疑问，期待大神给弟弟解惑。</li><li>docker iptables filter 表 input 链规则失效，原因是：从 NAT 表 prerouting 链匹配到 DOCKER 链，直接与容器沟通，跳过了 input 链。感谢智凯哥哥的解决办法如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line">:DOCKER-USER - [0:0]</span><br><span class="line">-A FORWARD -j DOCKER-USER</span><br><span class="line">-A DOCKER-USER -s x.x.x.x -p tcp --dport 80 -j RETURN</span><br><span class="line">-A DOCKER-USER -p tcp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -p udp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -j RETURN</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure></li></ol><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><ol><li>tab 键与空格不能混用</li><li>函数不要嵌套，例如 result=A(B(C())) 这样不利于 debug，检查每个函数的返回值</li><li>在 multiprocessing 多进程中 apply_async()  报错不容易定位，最好使用 try catch 把报错写成 log</li></ol><h1 id="jenkins"><a href="#jenkins" class="headerlink" title="jenkins"></a>jenkins</h1><ol><li>在部署的时候，ansible 一直在 gathering facts 卡住了，直到 timeout。 <a href="https://serverfault.com/questions/630253/ansible-stuck-on-gathering-facts" target="_blank" rel="noopener">网友解答</a> 我遇到的是 <a href="https://docs.ansible.com/ansible/2.4/intro_configuration.html#control-path" target="_blank" rel="noopener">control_path</a> 文件太多了，导致了 jenkins deploy node 卡住，任务无法进行。 需要删除该部署节点下面的 control_path_dir 的文件，清空。</li></ol><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><ol><li>docker container IP default  is 172.17.0.0/16  检查 iptables 是否阻挡</li><li>docker -v 挂载出来的时候，要注意文件夹权限问题。</li><li>docker logs 日志文件很大的时候，记得删除。<a href="https://blog.csdn.net/yjk13703623757/article/details/80283729" target="_blank" rel="noopener">Docker容器日志查看与清理</a> 也可以在 /etc/docker/daemon 里<a href="https://feiyang233.club/post/docker/#docker-iptables">设置 log 的大小</a>。</li></ol><h1 id="NetworkManager"><a href="#NetworkManager" class="headerlink" title="NetworkManager"></a>NetworkManager</h1><ol><li>报错 bus-manager: could not create org.freedesktop.DBus proxy 直接 stop NetworkManager 就行了。</li></ol><h1 id="文件权限问题"><a href="#文件权限问题" class="headerlink" title="文件权限问题"></a>文件权限问题</h1><ol><li>/tmp permission 又搞我 drwxrwxrwt.</li><li>对于目录文件来说，可读表示能够读取目录内的文件列表；可写表示能够在目录内新增、删除、重命名文件；可执行表示能够进入该目录。</li></ol><h1 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h1><ol><li>/etc/resolv.conf 有两个默认的值至关重要，一个是超时的 timeout，一个是重试的 attempts，默认情况下，前者是 5s 后者是 2 次。对于日常的应用来说，包括 web server、mail client、db 以及各种 app server 等等，任何使用 glibc resolver 都需要经过 resolv.conf 文件。对于 libresolv 来说，只认 resolv.conf 的前三个 nameserver，所以写的再多也没什么意义。正常情况下，resolver 会从上至下进行解析，每个 nameserver 等待 timeout 的时间，如果一直到第三个都没结果，resolver 会重复上面的步骤 (attempts – 1) 次。</li></ol><h1 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h1><ol><li>user 模块，密码必须要加密。需要用到 <a href="https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module" target="_blank" rel="noopener">Ansible ad-hoc command</a></li></ol><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><ol><li>Markdown链接括号的问题: %28 代替(, %29代替) 主要是后者会歧义链接部分的结束. 这是使用url符号码去代替ascii的符号. 能够解决这个问题</li></ol><h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h1><ol><li>文件名第一个字符为空格，设置 static 时，多了一个空格 %20 ，导致资源路径出出错。</li><li>Mac Django 连接 MySQL, <a href="https://docs.djangoproject.com/en/2.2/ref/databases/#mysql-notes" target="_blank" rel="noopener">官网</a>上提供了两种方法。第一种 mysqlclient 在 Mac 上有遇到错误。 <a href="https://pypi.org/project/mysqlclient/" target="_blank" rel="noopener">mysqlclient 官网</a>也有说明, <a href="https://ruddra.com/posts/install-mysqlclient-macos/" target="_blank" rel="noopener">Google一下</a>后发现是因为我的 Mac 没有安装 clang，安装完 xcode-select –install 再 pip install mysqlclient 就可以了。<br>第二种，安装<a href="https://dev.mysql.com/downloads/connector/python/" target="_blank" rel="noopener">Connector</a> 在 setting.py 里添加<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'user_data'</span>,</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'mysql.connector.django'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'mysql_user'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'password'</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">          <span class="string">'autocommit'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><ol><li>内存泄漏指由于疏忽或错误造成程序未能释放已经不再使用的内存。内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，导致在释放该段内存之前就失去了对该段内存的控制，从而造成了内存的浪费。 有一个服务跑在容器里面，当连接的时候总是 time out， 查看日志 是 stream is closed，还有一个错误是 No such file or directory: u’/var/run/tmp/summary_398320.db’  当我们进入 /var/run/tmp 发现有太多的文件，每一个进程都会有一个 pid 命名的文件。说明 worker 进程不断被 kill 然后又被 master 拉起，当我们到宿主机上看 docker stats ， 发现该容器的内存已经满了，导致了 worker 进程不断被杀。需要增大容器的 memory 初始值。补充（gunicorn 会启动一组 worker进程，所有worker进程公用一组listener，在每个worker中为每个listener建立一个wsgi server。每当有HTTP链接到来时，wsgi server创建一个协程来处理该链接，协程处理该链接的时候，先初始化WSGI环境，然后调用用户提供的app对象去处理HTTP请求。）</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅以本文记录那些年弟弟背过的锅！&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="elk" scheme="http://feiyang233.club/tags/elk/"/>
    
      <category term="jenkins" scheme="http://feiyang233.club/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>zabbix 从入门到放弃</title>
    <link href="http://feiyang233.club/post/zabbix/"/>
    <id>http://feiyang233.club/post/zabbix/</id>
    <published>2019-06-06T03:00:56.000Z</published>
    <updated>2019-09-05T09:44:40.255Z</updated>
    
    <content type="html"><![CDATA[<p>docker 安装 zabbix, 添加主机，设置报警，性能调优。<br><a id="more"></a></p><h1 id="监控模式"><a href="#监控模式" class="headerlink" title="监控模式"></a>监控模式</h1><p>zabbix 有两种监控模式，主动和被动。在客户端与服务端之间还可以加一个 proxy，入下图所示<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190823152533.png" alt></p><p><strong>需要注意 iptables问题</strong>: 跨地区监控的时候， proxy 必须监听在所有网卡上。内网是为了和客户端通信，外网是为了和服务端通信。我曾试过 proxy 只监听在内网，因为是主动模式，层层上报信息，在 zabbix server 还是能发现 proxy 的存活。但是当我打算添加一台 host 时，却一直报错。原因就是 proxy 和 服务端是外网通信的，proxy 发包查询 host 的信息（监控项等），因为只监听内网，服务端的回包 proxy 无法获取，导致通信失败。</p><h1 id="LAMP-架构安装"><a href="#LAMP-架构安装" class="headerlink" title="LAMP 架构安装"></a>LAMP 架构安装</h1><p>基于官方的 LAMP 架构，按照最简单的原生方式来部署，不做任何多余优化。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"># 安装必要依赖包 </span><br><span class="line">yum install -y httpd mariadb-server mariadb php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mhash</span><br><span class="line"></span><br><span class="line"># 修改 apache 配置 </span><br><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName 192.168.1.10:8080</span><br><span class="line">Listen 192.168.1.10:8080</span><br><span class="line">DirectoryIndex index.html index.php</span><br><span class="line"></span><br><span class="line"># 修改 php 时区 </span><br><span class="line">vim /etc/php.ini</span><br><span class="line">date.timezone = Asia/Singapore</span><br><span class="line"></span><br><span class="line"># 启动 httpd 服务 </span><br><span class="line">systemctl start httpd.service</span><br><span class="line"></span><br><span class="line"># 修改数据库存储的位置 /data</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">bind-address = 127.0.0.1</span><br><span class="line">max_connections = 1000</span><br><span class="line"></span><br><span class="line"># 最大连接数很关键，如果 zabbix-server StartPollers= 设置过大</span><br><span class="line"># 则很容易出现，connection to database &apos;zabbix&apos; failed: [1040] Too many connections</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"># 启动 mariadb 服务 </span><br><span class="line">systemctl start mariadb.service</span><br><span class="line"></span><br><span class="line"># 初始化 mysql 数据库，并配置 root 用户密码 </span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line"># 万一新版本忘记随机密码可以通过日志获取 </span><br><span class="line">grep &apos;temporary password&apos; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"># 创建一个测试页，测试 LAMP 是否搭建成功 </span><br><span class="line">cat &gt; /var/www/html/index.php &lt;&lt; EOF</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 创建 zabbix 数据库 </span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &apos;zabbix&apos;;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"># 部署 zabbix</span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/4.2/rhel/7/x86_64/zabbix-release-4.2-2.el7.noarch.rpm</span><br><span class="line">yum clean all</span><br><span class="line">yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br><span class="line"># 输入密码 zabbix</span><br><span class="line"></span><br><span class="line"># 配置数据库用户及密码 </span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">DBSocket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"># 修改时区 </span><br><span class="line">vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value date.timezone Asia/Singapore</span><br><span class="line"></span><br><span class="line"># 启动 zabbix 并设置自启动服务 </span><br><span class="line">systemctl restart zabbix-server zabbix-agent httpd</span><br><span class="line">systemctl enable zabbix-server zabbix-agent httpd mariadb</span><br></pre></td></tr></table></figure></p><p>一切就绪，打开浏览器，输入 <a href="http://ServerName:port/zabbix" target="_blank" rel="noopener">http://ServerName:port/zabbix</a></p><h1 id="zabbix-server-conf-参数调优"><a href="#zabbix-server-conf-参数调优" class="headerlink" title="zabbix_server.conf 参数调优"></a>zabbix_server.conf 参数调优</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CacheSize=8G               # Host 过多时，需要增大 CacheSize</span><br><span class="line">TrendCacheSize=2G          # __zbx_mem_realloc(): out of memory (requested 108424 bytes) </span><br><span class="line">Timeout=30                 # __zbx_mem_realloc(): please increase CacheSize configuration parameter</span><br><span class="line">StartPollers=500           # Poller 会导致连接数增大。需要调大数据库的最大连接数</span><br><span class="line">StartPollersUnreachable=100</span><br><span class="line">HousekeepingFrequency=0</span><br></pre></td></tr></table></figure><h1 id="docker-搭建"><a href="#docker-搭建" class="headerlink" title="docker 搭建"></a>docker 搭建</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install docker-ce</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做数据映射后的方案 </span></span><br><span class="line">mkdir -p /data/docker/mysql/zabbix/data</span><br><span class="line">mkdir -p /data/docker/zabbix/alertscripts</span><br><span class="line">mkdir -p /data/docker/zabbix/externalscripts</span><br></pre></td></tr></table></figure><p>然后是安装 zabbix 前端，后端，数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库。</span></span><br><span class="line">docker run --name mysql-server -t \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-v /data/zabbix_data:/var/lib/mysql  \</span><br><span class="line">-d mysql:5.7  \</span><br><span class="line">--character-set-server=utf8 --collation-server=utf8_bin</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端 参数已经调优</span></span><br><span class="line">docker run --name zabbix-server-mysql  \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">"mysql-server"</span>  \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span>  \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span>  \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"feiyang@2019+"</span>  \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"feiyang@2019+"</span>  \</span><br><span class="line">-e ZBX_TIMEOUT=30   \</span><br><span class="line">-e ZBX_CACHESIZE=8G  \</span><br><span class="line">-e ZBX_TRENDCACHESIZE=2G  \</span><br><span class="line">-e ZBX_STARTPOLLERS=500   \</span><br><span class="line">-e ZBX_STARTPOLLERSUNREACHABLE=100  \</span><br><span class="line">-e ZBX_HOUSEKEEPINGFREQUENCY=0  \</span><br><span class="line">-v /data/zabbix/alertscripts:/usr/lib/zabbix/alertscripts  \</span><br><span class="line">-v /data/zabbix/externalscripts:/usr/lib/zabbix/externalscripts  \</span><br><span class="line">-v /data/zabbix/conf:/etc/zabbix  \</span><br><span class="line">--link mysql-server:mysql  \</span><br><span class="line">-p 10051:10051  \</span><br><span class="line">-d zabbix/zabbix-server-mysql:centos-4.2-latest</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前端</span></span><br><span class="line">docker run --name zabbix-web-nginx-mysql \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">"mysql-server"</span> \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-e PHP_TZ=<span class="string">"Asia/Singapore"</span> \</span><br><span class="line">--link mysql-server:mysql \</span><br><span class="line">--link zabbix-server-mysql:zabbix-server \</span><br><span class="line">-p 8080:80 \</span><br><span class="line">-d zabbix/zabbix-web-nginx-mysql:centos-4.2-latest</span><br></pre></td></tr></table></figure><p>安装完成后，在浏览器打开 <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a>  默认的账户是 <code>Admin</code>  密码是 <code>zabbix</code></p><h1 id="ansible-批量添加主机"><a href="#ansible-批量添加主机" class="headerlink" title="ansible 批量添加主机"></a>ansible 批量添加主机</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">add</span> <span class="string">zabbix</span> <span class="string">hosts</span></span><br><span class="line"><span class="attr">    local_action:</span></span><br><span class="line"><span class="attr">      module:</span> <span class="string">zabbix_host</span></span><br><span class="line"><span class="attr">      server_url:</span> <span class="string">"<span class="template-variable">&#123;&#123; var_server_url &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      login_user:</span> <span class="string">"<span class="template-variable">&#123;&#123; var_login_user &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      login_password:</span> <span class="string">"<span class="template-variable">&#123;&#123; var_login_password &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      host_name:</span> <span class="string">"<span class="template-variable">&#123;&#123; inventory_hostname &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      visible_name:</span> <span class="string">"<span class="template-variable">&#123;&#123; inventory_hostname &#125;&#125;</span>-<span class="template-variable">&#123;&#123;function&#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      host_groups:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"<span class="template-variable">&#123;&#123; var_host_group &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      link_templates:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">Template</span> <span class="string">Sea</span> <span class="string">Ops</span> <span class="string">OS</span> <span class="string">Linux</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">Template</span> <span class="string">Sea</span> <span class="string">Ops</span> <span class="string">Disk</span> <span class="string">IO</span> <span class="string">Linux</span></span><br><span class="line">      <span class="comment">#status: disabled</span></span><br><span class="line"><span class="attr">      status:</span> <span class="string">enabled</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">present</span></span><br><span class="line"><span class="attr">      interfaces:</span></span><br><span class="line"><span class="attr">      - type:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">        main:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">        useip:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">        ip:</span> <span class="string">"<span class="template-variable">&#123;&#123;  var_lanip | default(inventory_hostname) &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">        dns:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">        port:</span> <span class="number">10050</span></span><br></pre></td></tr></table></figure><h1 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h1><p>设置触发警告的 Action 时，当 Step 设置为从 1 到 0 时，会一直发送告警信息，直到事件状态变成 OK，当 Step 设置为从 1 到 1 时，则只会发送一次告警，后面不会继续发送告警信息。</p><h1 id="Zabbix-监控"><a href="#Zabbix-监控" class="headerlink" title="Zabbix 监控"></a>Zabbix 监控</h1><h2 id="监控网页状态"><a href="#监控网页状态" class="headerlink" title="监控网页状态"></a>监控网页状态</h2><p>zabbix 自带的 Web monitoring 就可以进行简单的网页监控。目前官方的 zabbix 版本是 4.2 此时日期 2019-07-09<br>首先是找到一台机器 Go to Configuration → Hosts, pick a host and click on Web in the row of that host. Then click on Create web scenario. 详情请看<a href="https://www.zabbix.com/documentation/4.2/manual/web_monitoring/example" target="_blank" rel="noopener">官方文档</a>，然后是添加报警，<a href="https://www.zabbix.com/documentation/4.2/manual/web_monitoring/items" target="_blank" rel="noopener">网页监控的官方文档</a>也是介绍的非常详细。<br>具体的监控图表信息，可以在 zabbix 主页的 Monitoring -&gt; Web 可以看到网页监控的详细信息。</p><h2 id="监控-DNS"><a href="#监控-DNS" class="headerlink" title="监控 DNS"></a>监控 DNS</h2><p><a href="https://www.zabbix.com/documentation/4.2/manual/config/items/itemtypes/zabbix_agent?s[]=net&amp;s[]=dns&amp;s[]=record" target="_blank" rel="noopener">官方文档 4.2 版本</a><br>zabbix默认支持检查解析成功与否和具体的解析结果。对应内置的KEY<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net.dns[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">net.dns.record[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">ip 指DNS服务器地址。</span><br><span class="line">zone 指要解析的域名</span><br><span class="line">type 指解析的记录类型</span><br><span class="line">timeout 指超时时间 默认1 秒</span><br><span class="line">count 指解析失败重试的次数 默认 2次</span><br><span class="line"></span><br><span class="line">trigger &#123;host:net.dns[dns_server,domain,A,1,2].count(#3)&#125;=0</span><br></pre></td></tr></table></figure></p><h1 id="数据库表优化"><a href="#数据库表优化" class="headerlink" title="数据库表优化"></a>数据库表优化</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_create`</span>(SCHEMANAME <span class="built_in">varchar</span>(<span class="number">64</span>), TABLENAME <span class="built_in">varchar</span>(<span class="number">64</span>), PARTITIONNAME <span class="built_in">varchar</span>(<span class="number">64</span>), CLOCK <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           PARTITIONNAME = The name of the partition to create</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Verify that the partition does not already exist</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="built_in">INT</span>;</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> partition_description &gt;= CLOCK;</span><br><span class="line"></span><br><span class="line">        IF RETROWS = 0 THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Print a message indicating that a partition was created.</span></span><br><span class="line"><span class="comment">                   2. Create the SQL to create the partition.</span></span><br><span class="line"><span class="comment">                   3. Execute the SQL from #2.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>( <span class="string">"partition_create("</span>, SCHEMANAME, <span class="string">","</span>, TABLENAME, <span class="string">","</span>, PARTITIONNAME, <span class="string">","</span>, CLOCK, <span class="string">")"</span> ) <span class="keyword">AS</span> msg;</span><br><span class="line">                <span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="keyword">CONCAT</span>( <span class="string">'ALTER TABLE '</span>, SCHEMANAME, <span class="string">'.'</span>, TABLENAME, <span class="string">' ADD PARTITION (PARTITION '</span>, PARTITIONNAME, <span class="string">' VALUES LESS THAN ('</span>, CLOCK, <span class="string">'));'</span> );</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @<span class="keyword">sql</span>;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_drop`</span>(SCHEMANAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), DELETE_BELOW_PARTITION_DATE <span class="built_in">BIGINT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           DELETE_BELOW_PARTITION_DATE = Delete any partitions with names that are dates older than this one (yyyy-mm-dd)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> done <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> drop_part_name <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Get a list of all the partitions that are older than the date</span></span><br><span class="line"><span class="comment">           in DELETE_BELOW_PARTITION_DATE.  All partitions are prefixed with</span></span><br><span class="line"><span class="comment">           a "p", so use SUBSTRING TO get rid of that character.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> myCursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">                <span class="keyword">SELECT</span> partition_name</span><br><span class="line">                <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">                <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> <span class="keyword">CAST</span>(<span class="keyword">SUBSTRING</span>(partition_name <span class="keyword">FROM</span> <span class="number">2</span>) <span class="keyword">AS</span> <span class="keyword">UNSIGNED</span>) &lt; DELETE_BELOW_PARTITION_DATE;</span><br><span class="line">        <span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="keyword">FOUND</span> <span class="keyword">SET</span> done = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Create the basics for when we need to drop the partition.  Also, create</span></span><br><span class="line"><span class="comment">           @drop_partitions to hold a comma-delimited list of all partitions that</span></span><br><span class="line"><span class="comment">           should be deleted.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">SET</span> @alter_header = <span class="keyword">CONCAT</span>(<span class="string">"ALTER TABLE "</span>, SCHEMANAME, <span class="string">"."</span>, TABLENAME, <span class="string">" DROP PARTITION "</span>);</span><br><span class="line">        <span class="keyword">SET</span> @drop_partitions = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Start looping through all the partitions that are too old.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        OPEN myCursor;</span><br><span class="line">        read_loop: LOOP</span><br><span class="line">                FETCH myCursor INTO drop_part_name;</span><br><span class="line">                IF done THEN</span><br><span class="line">                        LEAVE read_loop;</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">                <span class="keyword">SET</span> @drop_partitions = <span class="keyword">IF</span>(@drop_partitions = <span class="string">""</span>, drop_part_name, <span class="keyword">CONCAT</span>(@drop_partitions, <span class="string">","</span>, drop_part_name));</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">        IF @drop_partitions != "" THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Build the SQL to drop all the necessary partitions.</span></span><br><span class="line"><span class="comment">                   2. Run the SQL to drop the partitions.</span></span><br><span class="line"><span class="comment">                   3. Print out the table partitions that were deleted.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SET</span> @full_sql = <span class="keyword">CONCAT</span>(@alter_header, @drop_partitions, <span class="string">";"</span>);</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @full_sql;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(SCHEMANAME, <span class="string">"."</span>, TABLENAME) <span class="keyword">AS</span> <span class="string">`table`</span>, @drop_partitions <span class="keyword">AS</span> <span class="string">`partitions_deleted`</span>;</span><br><span class="line">        ELSE</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   No partitions are being deleted, so print out "N/A" (Not applicable) to indicate</span></span><br><span class="line"><span class="comment">                   that no changes were made.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(SCHEMANAME, <span class="string">"."</span>, TABLENAME) <span class="keyword">AS</span> <span class="string">`table`</span>, <span class="string">"N/A"</span> <span class="keyword">AS</span> <span class="string">`partitions_deleted`</span>;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_maintenance`</span>(SCHEMA_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>), TABLE_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>), KEEP_DATA_DAYS <span class="built_in">INT</span>, HOURLY_INTERVAL <span class="built_in">INT</span>, CREATE_NEXT_INTERVALS <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> OLDER_THAN_PARTITION_DATE <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> OLD_PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> LESS_THAN_TIMESTAMP <span class="built_in">INT</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> CUR_TIME <span class="built_in">INT</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">CALL</span> partition_verify(SCHEMA_NAME, TABLE_NAME, HOURLY_INTERVAL);</span><br><span class="line">        <span class="keyword">SET</span> CUR_TIME = <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(), <span class="string">'%Y-%m-%d 00:00:00'</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> @__interval = <span class="number">1</span>;</span><br><span class="line">        create_loop: LOOP</span><br><span class="line">                IF @__interval &gt; CREATE_NEXT_INTERVALS THEN</span><br><span class="line">                        LEAVE create_loop;</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SET</span> LESS_THAN_TIMESTAMP = CUR_TIME + (HOURLY_INTERVAL * @__interval * <span class="number">3600</span>);</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME = FROM_UNIXTIME(CUR_TIME + HOURLY_INTERVAL * (@__interval - <span class="number">1</span>) * <span class="number">3600</span>, <span class="string">'p%Y%m%d%H00'</span>);</span><br><span class="line">                IF(PARTITION_NAME != OLD_PARTITION_NAME) THEN</span><br><span class="line">                        <span class="keyword">CALL</span> partition_create(SCHEMA_NAME, TABLE_NAME, PARTITION_NAME, LESS_THAN_TIMESTAMP);</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">                <span class="keyword">SET</span> @__interval=@__interval+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">SET</span> OLD_PARTITION_NAME = PARTITION_NAME;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> OLDER_THAN_PARTITION_DATE=<span class="keyword">DATE_FORMAT</span>(<span class="keyword">DATE_SUB</span>(<span class="keyword">NOW</span>(), <span class="built_in">INTERVAL</span> KEEP_DATA_DAYS <span class="keyword">DAY</span>), <span class="string">'%Y%m%d0000'</span>);</span><br><span class="line">        <span class="keyword">CALL</span> partition_drop(SCHEMA_NAME, TABLE_NAME, OLDER_THAN_PARTITION_DATE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_verify`</span>(SCHEMANAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), HOURLYINTERVAL <span class="built_in">INT</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="built_in">INT</span>(<span class="number">11</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> FUTURE_TIMESTAMP <span class="built_in">TIMESTAMP</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Check if any partitions exist for the given SCHEMANAME.TABLENAME.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> partition_name <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * If partitions do not exist, go ahead and partition the table</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        IF RETROWS = 1 THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * Take the current date at 00:00:00 and add HOURLYINTERVAL to it.  This is the timestamp below which we will store values.</span></span><br><span class="line"><span class="comment">                 * We begin partitioning based on the beginning of a day.  This is because we don't want to generate a random partition</span></span><br><span class="line"><span class="comment">                 * that won't necessarily fall in line with the desired partition naming (ie: if the hour interval is 24 hours, we could</span></span><br><span class="line"><span class="comment">                 * end up creating a partition now named "p201403270600" when all other partitions will be like "p201403280000").</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">SET</span> FUTURE_TIMESTAMP = <span class="keyword">TIMESTAMPADD</span>(<span class="keyword">HOUR</span>, HOURLYINTERVAL, <span class="keyword">CONCAT</span>(<span class="keyword">CURDATE</span>(), <span class="string">" "</span>, <span class="string">'00:00:00'</span>));</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME = <span class="keyword">DATE_FORMAT</span>(<span class="keyword">CURDATE</span>(), <span class="string">'p%Y%m%d%H00'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Create the partitioning query</span></span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL = <span class="keyword">CONCAT</span>(<span class="string">"ALTER TABLE "</span>, SCHEMANAME, <span class="string">"."</span>, TABLENAME, <span class="string">" PARTITION BY RANGE(`clock`)"</span>);</span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL = <span class="keyword">CONCAT</span>(@__PARTITION_SQL, <span class="string">"(PARTITION "</span>, PARTITION_NAME, <span class="string">" VALUES LESS THAN ("</span>, <span class="keyword">UNIX_TIMESTAMP</span>(FUTURE_TIMESTAMP), <span class="string">"));"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Run the partitioning query</span></span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @__PARTITION_SQL;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span><span class="string">`partition_maintenance_all`</span>(SCHEMA_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_log'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_str'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_text'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_uint'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'trends'</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'trends_uint'</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><p>Trends 120,(‘history’, 30, 24, 14), 最多保存 30 天的数据，每隔 24 小时生成一个分区，每次生成 14 个分区   </p><p>首先进入容器内部，将上面这个  partition.sql 导入数据库 mysql<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql  -uzabbix  -pfeiyang@2019+  zabbix  &lt; partition.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 mysql 容器内部 vim /opt/mysql.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!bin/bash</span></span><br><span class="line">mysql  -uzabbix -pfeiyang@2019+ zabbix -e<span class="string">"CALL partition_maintenance_all('zabbix')"</span> </span><br><span class="line"></span><br><span class="line">chmod 755 /opt/mysql.sh</span><br></pre></td></tr></table></figure></p><p>退出容器，在宿主机上，建立定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/crontab</span></span><br><span class="line"></span><br><span class="line">23 03  * * * root /bin/docker <span class="built_in">exec</span> [mysql 容器 ID] bash -c  <span class="string">"cd /opt &amp;&amp; bash mysql.sh"</span> </span><br><span class="line"></span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure><h1 id="Zabbix-api"><a href="#Zabbix-api" class="headerlink" title="Zabbix api"></a>Zabbix api</h1><p><a href="https://www.zabbix.com/documentation/current/manual/api" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># auth_zabbix</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span>  <span class="comment">#docker 方式</span></span><br><span class="line"><span class="comment"># 非 docker 方式为 "http://IP:port/zabbix/api_jsonrpc.php"</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"user.login"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"user"</span>: <span class="string">"xxx"</span>,</span><br><span class="line">        <span class="string">"password"</span>: <span class="string">"xxx"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span>,  </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(ret)</span></span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> zabbix_ret.has_key(<span class="string">'result'</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'login error'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> zabbix_ret.get(<span class="string">'result'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get hostid</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span></span><br><span class="line"></span><br><span class="line">server_list=[<span class="string">"1.1.1.1"</span>,<span class="string">"233.233.233.233"</span>]</span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"host.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">    <span class="string">"filter"</span>: &#123;</span><br><span class="line">            <span class="string">"host"</span>: server_list</span><br><span class="line">        &#125;,</span><br><span class="line">    <span class="string">"sortfield"</span>: <span class="string">"host"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"由上文中的 auth_zabbix.py 得出"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> zabbix_ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> zabbix_ret.has_key(<span class="string">'result'</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'login error'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> zabbix_ret.get(<span class="string">'result'</span>)</span><br><span class="line">    </span><br><span class="line">hostid_list=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> zabbix_ret.get(<span class="string">'result'</span>):</span><br><span class="line">hostid_list.append(str(i[<span class="string">'hostid'</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> hostid_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get hist_data</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = datetime.date.today()</span><br><span class="line">today_unix = int(time.mktime(today.timetuple()))</span><br><span class="line">tomorrow = today+datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">tomorrow_unix = int(time.mktime(tomorrow.timetuple()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> today_unix</span><br><span class="line"><span class="keyword">print</span> tomorrow_unix</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"history.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"output"</span>: <span class="string">"extend"</span>,</span><br><span class="line">        <span class="string">"history"</span>: <span class="number">3</span>, <span class="comment"># 0,1,2,3,4 History object types</span></span><br><span class="line">        <span class="string">"itemids"</span>: <span class="string">"31023"</span>,</span><br><span class="line">        <span class="string">"sortfield"</span>: <span class="string">"clock"</span>,</span><br><span class="line">        <span class="string">"sortorder"</span>: <span class="string">"DESC"</span>,</span><br><span class="line">        <span class="string">"time_from"</span>: <span class="string">"today_unix"</span>,</span><br><span class="line">        <span class="string">"time_till"</span>: <span class="string">"tomorrow_unix"</span></span><br><span class="line">       </span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"由上文中的 auth_zabbix.py 得出"</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> zabbix_ret.get(<span class="string">'result'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get trend_data</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = datetime.date.today()</span><br><span class="line">today_unix = int(time.mktime(today.timetuple()))</span><br><span class="line">tomorrow = today+datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">tomorrow_unix = int(time.mktime(tomorrow.timetuple()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"trend.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"output"</span>: [  <span class="comment"># 定义 output 格式</span></span><br><span class="line">            <span class="string">"itemid"</span>,</span><br><span class="line">            <span class="string">"clock"</span>, <span class="comment"># 当前时间</span></span><br><span class="line">            <span class="string">"num"</span>,   <span class="comment"># trend 一小时采集次数</span></span><br><span class="line">            <span class="string">"value_min"</span>,</span><br><span class="line">            <span class="string">"value_avg"</span>,</span><br><span class="line">            <span class="string">"value_max"</span></span><br><span class="line">        ],</span><br><span class="line">        </span><br><span class="line">        <span class="string">"itemids"</span>: [</span><br><span class="line">            <span class="string">"28959"</span>,</span><br><span class="line">            <span class="string">"28972"</span></span><br><span class="line">            </span><br><span class="line">        ],</span><br><span class="line">        </span><br><span class="line">        <span class="string">"time_from"</span>: today_unix,</span><br><span class="line">        <span class="string">"time_till"</span>: tomorrow_unix</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"由上文中的 auth_zabbix.py 得出"</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (zabbix_ret.get(<span class="string">'result'</span>))</span><br></pre></td></tr></table></figure><h1 id="zabbix-get"><a href="#zabbix-get" class="headerlink" title="zabbix_get"></a>zabbix_get</h1><p>从 server 端检测到 client 端的网络是否通畅，可能是 iptables 或者 server host 白名单造成的问题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 10.10.1.1 -k system.uname</span><br></pre></td></tr></table></figure></p><h1 id="zabbix-proxy"><a href="#zabbix-proxy" class="headerlink" title="zabbix proxy"></a>zabbix proxy</h1><p>如果 server cluster 规模不大，则我们可以采用被动模式（对 client 而言是被动的，被 zabbix server来拉取数据）。如果集群规模大，那么 zabbix server 的压力就很大了，如果要去抓取的客户端数量过于庞大。 还有一种建议用 proxy 模式的情况是跨地区监控，集中到一台中心 zabbix， 方便管理。<br>本次演示，我们用了三台机器，client: 10.66.236.98 , proxy: 10.66.236.99 , zabbix_server: 10.66.236.100 （可用上文的 docker 方式安装），非 docker 方式可用参考 <a href="https://wsgzao.github.io/post/zabbix/" target="_blank" rel="noopener">奥哥博客</a></p><ol><li>首先是安装 zabbix proxy 在 10.66.236.99 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zabbix proxy 的依赖就只有数据库了，用于存储配置信息 </span></span><br><span class="line">yum install -y mariadb-server mariadb</span><br><span class="line"><span class="comment"># 启动 mariadb 服务 </span></span><br><span class="line">systemctl start mariadb.service</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb.service</span><br><span class="line"><span class="comment"># 初始化 mysql 数据库，并配置 root 用户密码 </span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"><span class="comment"># 初始化，然后输入密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 zabbix_proxy 数据库 </span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix_proxy character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix_proxy.* to zabbix@localhost identified by <span class="string">'zabbix'</span>;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署 zabbix_proxy 4.2 版本的</span></span><br><span class="line">rpm -Uvh  https://repo.zabbix.com/zabbix/4.2/rhel/7/x86_64/zabbix-release-4.2-2.el7.noarch.rpm</span><br><span class="line">yum install -y zabbix-proxy-mysql</span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql*/schema.sql.gz | mysql -uzabbix -p zabbix_proxy</span><br><span class="line"><span class="comment">#输入密码: zabbix</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库用户及密码 </span></span><br><span class="line">vim /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">Server=10.66.236.100   <span class="comment">#填写 zabbix server 的IP</span></span><br><span class="line">Hostname=zabbix_proxy</span><br><span class="line">DBName=zabbix_proxy</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网页上配置 Zabbix Server Proxy</span></span><br><span class="line">Administration -&gt; Proxies -&gt; Create proxy</span><br><span class="line">Proxy name: zabbix_proxy</span><br><span class="line">Proxy mode: Active</span><br><span class="line">Proxy address: 10.66.236.99</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 zabbix_proxy</span></span><br><span class="line">systemctl restart zabbix-proxy</span><br></pre></td></tr></table></figure></li></ol><p>如果是 Active 模式，这里不需要填写 IP， Passive 被动模式才一定要填写 IP<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822173033.png" alt></p><ol start="2"><li><p>修改 client 端的配置 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 zabbix_agent 配置指向 zabbix_proxy</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">ServerActive=10.66.236.99  <span class="comment">#proxy 的 IP</span></span><br><span class="line">Hostname=10.66.236.98  <span class="comment">#本机的 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 zabbix_agent</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure></li><li><p>在网页上添加 host</p></li></ol><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822173036.png" alt><br>一定要选择 proxy，IP 就填写 0.0.0.0  还有一个非常重要的就是 template 所有的 item 需要采用 Zabbix agent (active)</p><h1 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h1><ol><li>在测试 proxy 时，host name 不匹配造成的，我最开始随便填了一个 hostname ， 然后发现和 agent config 不一致，又在zabbix 网页上更新为 10.66.236.98 ，感觉数据库并没有更新，所以导致 host name 匹配不了，一直报错 no active checks on server no active checks on server [10.66.236.99:10051]: host [10.66.236.98] not found<br>解决的办法是：重新删除了 host , 再添加上 ，一次性填对了 host name 10.66.236.98 就可以了</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker 安装 zabbix, 添加主机，设置报警，性能调优。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="zabbix" scheme="http://feiyang233.club/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络相关</title>
    <link href="http://feiyang233.club/post/network/"/>
    <id>http://feiyang233.club/post/network/</id>
    <published>2019-05-30T03:21:34.000Z</published>
    <updated>2019-09-27T08:32:54.603Z</updated>
    
    <content type="html"><![CDATA[<p>记录网络相关知识与 Linux 网络相关的命令。<br><a id="more"></a></p><h1 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h1><ol><li><a href="http://www.cnblogs.com/peida/archive/2013/03/05/2943698.html" target="_blank" rel="noopener">route</a> 某些 IP 段故障</li><li><a href="https://blog.einverne.info/post/2017/11/mtr-usage.html" target="_blank" rel="noopener">mtr</a> 连通性测试</li><li><a href="http://cn.linux.vbird.org/linux_server/0140networkcommand_1.php" target="_blank" rel="noopener">Linux 常用网络指令</a></li><li><a href="https://wsgzao.github.io/post/iptables/" target="_blank" rel="noopener">iptables 奥哥篇</a></li><li><a href="http://cn.linux.vbird.org/linux_server/0250simple_firewall_5.php" target="_blank" rel="noopener">iptables-NAT</a></li><li><a href="http://man.linuxde.net/iperf" target="_blank" rel="noopener">iperf</a> <a href="https://docs.azure.cn/zh-cn/articles/azure-operations-guide/virtual-network/aog-virtual-network-iperf-bandwidth-test" target="_blank" rel="noopener">测试网速</a>的工具</li><li>删除网卡 ip link delete  [网卡名称]</li><li>检查未被正确关闭的文件 <a href="https://www.cnblogs.com/276815076/p/3503923.html" target="_blank" rel="noopener">lsof</a></li><li>磁盘监控命令<a href="https://www.cnblogs.com/peida/archive/2012/12/28/2837345.html" target="_blank" rel="noopener">iostat</a></li><li>高 disk IO 检查: <strong>iotop -oP</strong>  看哪个进程占用大量的 disk IO</li></ol><h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">iptables -t  nat  -nL   # 查看 nat 表</span><br><span class="line">iptables -t 表名 -N 自定义链名 # 创建一个链</span><br><span class="line">iptables -t 表名 -L  default filter</span><br><span class="line">iptables -t 表名 -L 链名</span><br><span class="line">iptables -t 表名 -nL --line</span><br><span class="line">iptables -t 表名 -D 链名 要删除的序号</span><br><span class="line">iptables -t 表名 -P 链名 动作    修改默认规则 DROP</span><br><span class="line">-A INPUT -m iprange --src-range x.x.x.x-x.x.x.x  -p tcp --dport 11211 -j ACCEPT #多 IP</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT  #多端口</span><br><span class="line">类型匹配 -p tcp udp udplite icmp icmpv6 esp ah sctp mh</span><br><span class="line">转发功能 cat /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><h1 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h1><h2 id="Public-IP"><a href="#Public-IP" class="headerlink" title="Public IP"></a>Public IP</h2><ul><li>Class A: 0.x.x.x ~ 127.x.x.x</li><li>Class B: 128.x.x.x ~ 191.x.x.x</li><li>Class C: 192.x.x.x ~ 223.x.x.x</li><li>Class D: 224.x.x.x ~ 239.x.x.x  #multicast</li><li>Class E: 240.x.x.x ~ 255.x.x.x  #保留</li></ul><h2 id="Private-IP"><a href="#Private-IP" class="headerlink" title="Private IP"></a>Private IP</h2><ul><li>Class A: 10.0.0.0 ~ 10.255.255.255</li><li>Class B: 172.16.0.0 ~ 172.31.255.255</li><li><p>Class C: 192.168.0.0 ~ 192.168.255.255 </p></li><li><p>169.254.x.x  临时 IP DHCP is full. 就用这个 IP </p><h2 id="Loopback-IP"><a href="#Loopback-IP" class="headerlink" title="Loopback IP"></a>Loopback IP</h2></li><li>Class A: 127.0.0.1/8</li></ul><h1 id="设置-NAT-server"><a href="#设置-NAT-server" class="headerlink" title="设置 NAT server"></a>设置 NAT server</h1><p>开启转发功能<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward=1 <span class="comment"># 添加此行，开启转发功能</span></span><br><span class="line"></span><br><span class="line">sysctl -p    <span class="comment"># 执行生效</span></span><br></pre></td></tr></table></figure></p><p>还需要在 iptable 里设置转发规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line">*nat</span><br><span class="line">:PREROUTING ACCEPT [0:0]</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">:POSTROUTING ACCEPT [0:0]</span><br><span class="line">-A POSTROUTING -o em2 -j MASQUERADE</span><br><span class="line">COMMIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># em2 是公网网卡，当其他内网机器设置 NAT 机器的内网 IP 为网关时。 </span></span><br><span class="line"><span class="comment"># 内网机器发包给 NAT 机器， NAT 机器根据路由规则，将会由 em2 公网网卡转发出去。</span></span><br><span class="line"><span class="comment"># 转发时，会将包的源 IP 替换为自己公网的 IP</span></span><br></pre></td></tr></table></figure></p><h1 id="网络扫描"><a href="#网络扫描" class="headerlink" title="网络扫描"></a>网络扫描</h1><p>安装 <a href="https://nmap.org/download.html" target="_blank" rel="noopener">nmap 官网</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">rpm -vhU https://nmap.org/dist/nmap-7.80-1.x86_64.rpm</span><br><span class="line"><span class="comment"># yum install nmap 版本比较老</span></span><br><span class="line"><span class="comment">#主机发现 ICMP ARP 两种方式</span></span><br><span class="line">nmap -v -n -sn -PE 192.168.21.0/24</span><br><span class="line"><span class="comment"># -v 指定详细输出</span></span><br><span class="line"><span class="comment"># -n 不进行 DNS 解析</span></span><br><span class="line"><span class="comment"># -sn 使用 ping 扫描，禁用端口扫描</span></span><br><span class="line"><span class="comment"># -PE 指定使用 ICMP Echo Request 发现主机</span></span><br><span class="line"><span class="comment"># 192.168.21.0/24 为目标网段</span></span><br><span class="line"><span class="comment"># -PR 指定使用 ARP Request 发现主机</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP Connect 端口扫描</span></span><br><span class="line">nmap  -v -n -sT --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"></span><br><span class="line"><span class="comment"># -sT 使用 TCP Connect </span></span><br><span class="line"><span class="comment"># --max-retries 每个端口最多重试的次数</span></span><br><span class="line"><span class="comment"># -p1-65535 指定端口的扫描范围</span></span><br><span class="line"><span class="comment"># 192.168.21.19 为被扫描主机的 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP SYN 端口扫描,导致服务器出现大量的半连接</span></span><br><span class="line">nmap  -v -n -sS --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"></span><br><span class="line"><span class="comment"># -sS 使用 TCP SYN </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># UDP 扫描</span></span><br><span class="line">nmap  -v -n -sU --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"><span class="comment"># -sU 使用 UDP 进行扫描</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 识别指定端口应用</span></span><br><span class="line">nmap  -v -n -sV -p2333 192.168.21.19</span><br><span class="line"><span class="comment"># -sV 指定识别该端口上的应用</span></span><br></pre></td></tr></table></figure></p><h1 id="tcpdump-抓包分析"><a href="#tcpdump-抓包分析" class="headerlink" title="tcpdump 抓包分析"></a>tcpdump 抓包分析</h1><ul><li>进入 INPUT 的流量不会被 iptable 影响</li><li>出口 OUTPIT 流量会受到 iptable 影响</li></ul><h1 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h1><ul><li>ping 默认发 4、5 个包</li><li>traceroute 显示的是不同 AS 之间的跳数。其实一个 AS 内部可能有很多路由器，TTL 与实际跳数是不符合的。</li></ul><h1 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h1><ul><li>三次握手建立连接</li><li>四次分手，等待 2 MSL</li><li>只走一条路径</li></ul><h1 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h1><ul><li>更轻更快</li><li>多条路径同时发送</li></ul><h1 id="DDos-攻击"><a href="#DDos-攻击" class="headerlink" title="DDos 攻击"></a>DDos 攻击</h1><p>DDOS 攻击，它在短时间内发起大量请求，耗尽服务器的资源，无法响应正常的访问，造成网站实质下线。DDOS 里面的 DOS 是 denial of service（停止服务）的缩写，表示这种攻击的目的，就是使得服务中断。最前面的那个 D 是 distributed （分布式），表示攻击不是来自一个地方，而是来自四面八方，因此更难防。</p><ol><li>比较常见的一种攻击是 cc 攻击。它就是简单粗暴地送来大量正常的请求，超出服务器的最大承受量，导致宕机。</li><li>SYN攻击属于DoS攻击的一种，它利用TCP协议缺陷，通过发送大量的半连接请求，耗费CPU和内存资源。SYN攻击除了能影响主机外，还可以危害路由器、防火墙等网络系统，事实上SYN攻击并不管目标是什么系统，只要这些系统打开TCP服务就可以实施。服务器接收到连接请求（syn= j），将此信息加入未连接队列，并发送请求包给客户（syn=k,ack=j+1），此时进入SYN_RECV状态。当服务器未收到客户端的确认包时，重发请求包，一直到超时，才将此条目从未连接队列删除。配合IP欺骗，SYN攻击能达到很好的效果，通常，客户端在短时间内伪造大量不存在的IP地址，向服务器不断地发送syn包，服务器回复确认包，并等待客户的确认，由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，目标系统运行缓慢，严重者引起网络堵塞甚至系统瘫痪。</li></ol><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><ol><li>docker container IP default  is 172.17.0.0/16  检查 iptables 是否阻挡</li><li>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT 这一条 iptables 的规则也非常重要。Packets in a RELATED or ESTABLISHED state are those ones which belong to an already opened connection; you’ll generally want to accept them, otherwise connections will get established correctly but nothing will be able to flow after the initial handshake. 如果没有这一条，会遇到 DNS 解析失败， curl 失败。 凡是 iptables 没有允许的 IP, 都不能正常的工作。 例如 DNS 查询发包后，三次握手建立。回包收到了，却会被 iptables 阻挡，上层应用无法拿到解析的结果，导致 hang 住。</li><li>抓包分析时， 进入的包都可以抓到，不会受到 iptables, 发出的包会受到 iptables 影响，可能被 iptables 阻挡导致抓包失败。</li><li>在此衷心的感谢，皇族后裔，八旗子弟，爱新觉罗·高Li，提供的帮助！</li><li>IP 冲突，导致服务不稳定。需要使用 arping -c 3  -I em2 192.168.1.1</li><li>docker 服务失败导致 telnet 不通，抓包表现为 宿主机收到了 telnet 的包，但不会转发给容器内部。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost feiyang]<span class="comment"># tcpdump -i any port 9200  -nnn</span></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">21:44:12.657584 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [S], seq 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657654 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [S], seq 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657658 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [S], seq 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657711 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [S.], seq 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657711 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [S.], seq 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657727 IP 192.168.1.89.9200 &gt; 192.168.1.78.12118: Flags [S.], seq 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657913 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:44:12.657921 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:44:12.657922 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:45:31.315560 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [F.], seq 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315596 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [F.], seq 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315598 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [F.], seq 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315985 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [F.], seq 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.315985 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [F.], seq 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.316012 IP 192.168.1.89.9200 &gt; 192.168.1.78.12118: Flags [F.], seq 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.316225 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [.], ack 2, win 229, length 0</span><br><span class="line">21:45:31.316277 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 2, win 229, length 0</span><br><span class="line">21:45:31.316279 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 2, win 229, length 0</span><br></pre></td></tr></table></figure></li></ol><h1 id="ubuntu-network-config"><a href="#ubuntu-network-config" class="headerlink" title="ubuntu network config"></a>ubuntu network config</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># /etc/network/interfaces</span><br><span class="line"></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eno1</span><br><span class="line">iface eno1 inet manual</span><br><span class="line">    bond-master bond0</span><br><span class="line"></span><br><span class="line">auto eno2</span><br><span class="line">iface eno2 inet manual</span><br><span class="line">    bond-master bond0</span><br><span class="line"></span><br><span class="line">auto bond0</span><br><span class="line">iface bond0 inet manual</span><br><span class="line">    bond-slaves eno1 eno2</span><br><span class="line">    bond-mode 4</span><br><span class="line">    bond-miimon 100</span><br><span class="line">    bond-lacp-rate 1</span><br><span class="line">    bond-xmit_hash_policy layer3+4</span><br><span class="line"></span><br><span class="line">auto bond0.1000</span><br><span class="line">iface bond0.1000 inet static</span><br><span class="line">    address 10.1.1.10</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 10.1.1.254</span><br><span class="line">    vlan-raw-device bond0</span><br><span class="line"></span><br><span class="line">#----------------------------------</span><br><span class="line">#ubuntu default</span><br><span class="line"># The loopback network interface</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"># The primary network interface</span><br><span class="line">auto ens33</span><br><span class="line">iface ens33 inet dhcp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录网络相关知识与 Linux 网络相关的命令。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="network" scheme="http://feiyang233.club/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>Google Sheet API 学习</title>
    <link href="http://feiyang233.club/post/google-api/"/>
    <id>http://feiyang233.club/post/google-api/</id>
    <published>2019-05-24T06:47:34.000Z</published>
    <updated>2019-08-15T07:04:30.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-修改-Google-sheet"><a href="#Python-修改-Google-sheet" class="headerlink" title="Python 修改 Google sheet"></a>Python 修改 Google sheet</h1><p><a href="https://developers.google.com/sheets/api/quickstart/python" target="_blank" rel="noopener">官方文档</a><br>记录一下自己调用 Google Api 的方法。<br><a id="more"></a></p><h1 id="几个重要的概念"><a href="#几个重要的概念" class="headerlink" title="几个重要的概念"></a>几个重要的概念</h1><ol><li>spreadsheetId 整个总表的 ID 是很长的一串字符 </li><li>sheetId 单页的 ID 是纯数字</li></ol><h1 id="Get"><a href="#Get" class="headerlink" title="Get"></a>Get</h1><p>获取数据<a href="https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/get" target="_blank" rel="noopener">get 方法</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SAMPLE_SPREADSHEET_ID = spreadsheetId</span><br><span class="line">SAMPLE_RANGE_NAME = <span class="string">'feiyang!G1:G4'</span></span><br><span class="line"></span><br><span class="line">sheet = service.spreadsheets()</span><br><span class="line">result = sheet.values().get(spreadsheetId=SAMPLE_SPREADSHEET_ID,</span><br><span class="line">                            range=SAMPLE_RANGE_NAME).execute()</span><br><span class="line">values = result.get(<span class="string">'values'</span>, [])</span><br></pre></td></tr></table></figure><h1 id="Append-Data"><a href="#Append-Data" class="headerlink" title="Append Data"></a>Append Data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">range_ = <span class="string">'capacity-raw!A:E'</span>  <span class="comment"># 表内的页名称 ! 范围</span></span><br><span class="line">value_input_option = <span class="string">'USER_ENTERED'</span>  </span><br><span class="line">insert_data_option = <span class="string">'INSERT_ROWS'</span>  </span><br><span class="line"></span><br><span class="line">value_range_body = &#123;</span><br><span class="line">    <span class="string">"range"</span>: <span class="string">"capacity-raw!A:E"</span>,</span><br><span class="line"><span class="string">"values"</span>: getdata.get_data(today,product),</span><br><span class="line"><span class="string">"majorDimension"</span>: <span class="string">"ROWS"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request = service.spreadsheets().values().append(spreadsheetId=spreadsheet_id, range=range_, valueInputOption=value_input_option, insertDataOption=insert_data_option, body=value_range_body)</span><br><span class="line">response = request.execute()</span><br></pre></td></tr></table></figure><h1 id="Update-Data"><a href="#Update-Data" class="headerlink" title="Update Data"></a>Update Data</h1><p>举个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SAMPLE_SPREADSHEET_ID = <span class="string">'xxxxxxxxx'</span></span><br><span class="line">SAMPLE_RANGE_NAME = <span class="string">'daily_report!A9:D9'</span></span><br><span class="line">value_input_option = <span class="string">"RAW"</span>  <span class="comment"># 还有其他的方式</span></span><br><span class="line">value_body = &#123;</span><br><span class="line">    <span class="string">"majorDimension"</span>: <span class="string">"ROWS"</span>,</span><br><span class="line">    <span class="string">"range"</span>: <span class="string">"daily_report!A9:D9"</span>,</span><br><span class="line">    <span class="string">"values"</span>: [[<span class="string">"test"</span>,<span class="string">"123"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>]],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sheet = service.spreadsheets()</span><br><span class="line">result = sheet.values().update(spreadsheetId=SAMPLE_SPREADSHEET_ID,</span><br><span class="line">                            range=SAMPLE_RANGE_NAME, valueInputOption=value_input_option,body=value_body)</span><br><span class="line"></span><br><span class="line">response = result.execute()</span><br><span class="line">pprint(response)</span><br></pre></td></tr></table></figure><h1 id="Sheet-Operation"><a href="#Sheet-Operation" class="headerlink" title="Sheet Operation"></a>Sheet Operation</h1><p>删除行，插入行，复制一行，最重要的是 post body 格式。 官方文档写得不够详细。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">delete_body =&#123;</span><br><span class="line">   "requests": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"deleteDimension"</span>: &#123;</span><br><span class="line">        <span class="attr">"range"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">233333333</span>,</span><br><span class="line">          <span class="attr">"dimension"</span>: <span class="string">"ROWS"</span>,</span><br><span class="line">          <span class="attr">"startIndex"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"endIndex"</span>: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">insert_body =&#123;</span><br><span class="line">   "requests": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"insertDimension"</span>: &#123;</span><br><span class="line">        <span class="attr">"range"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">233333333</span>,</span><br><span class="line">          <span class="attr">"dimension"</span>: <span class="string">"ROWS"</span>,</span><br><span class="line">          <span class="attr">"startIndex"</span>: <span class="number">8</span>,</span><br><span class="line">          <span class="attr">"endIndex"</span>: <span class="number">9</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">copy_body =&#123;</span><br><span class="line">  "requests": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"copyPaste"</span>: &#123;</span><br><span class="line">        <span class="attr">"source"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">233333333</span>,</span><br><span class="line">          <span class="attr">"startRowIndex"</span>: <span class="number">6</span>,</span><br><span class="line">          <span class="attr">"endRowIndex"</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="attr">"startColumnIndex"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"endColumnIndex"</span>: <span class="number">5</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"destination"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">1172952310</span>,</span><br><span class="line">          <span class="attr">"startRowIndex"</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="attr">"endRowIndex"</span>: <span class="number">8</span>,</span><br><span class="line">          <span class="attr">"startColumnIndex"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"endColumnIndex"</span>: <span class="number">5</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"pasteType"</span>: <span class="string">"PASTE_NORMAL"</span>,</span><br><span class="line">        <span class="attr">"pasteOrientation"</span>: <span class="string">"NORMAL"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是 Python post 部分<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request = sheet.batchUpdate(spreadsheetId=SAMPLE_SPREADSHEET_ID, body=body_item)</span><br><span class="line">response = request.execute()</span><br><span class="line">pprint(response)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-修改-Google-sheet&quot;&gt;&lt;a href=&quot;#Python-修改-Google-sheet&quot; class=&quot;headerlink&quot; title=&quot;Python 修改 Google sheet&quot;&gt;&lt;/a&gt;Python 修改 Google sheet&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://developers.google.com/sheets/api/quickstart/python&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;记录一下自己调用 Google Api 的方法。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="google" scheme="http://feiyang233.club/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 监控 memcached</title>
    <link href="http://feiyang233.club/post/memcached/"/>
    <id>http://feiyang233.club/post/memcached/</id>
    <published>2019-04-12T02:28:32.000Z</published>
    <updated>2019-04-12T09:33:49.799Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录如何用安装 memcached_exporter 来收集 memcached 信息并且暴露给 Prometheus 监听程序，Prometheus 将收集的信息传递给 grafana 进行信息可视化。<br><a id="more"></a></p><h1 id="安装-Memcached-Exporter"><a href="#安装-Memcached-Exporter" class="headerlink" title="安装 Memcached Exporter"></a>安装 Memcached Exporter</h1><p>prometheus 官方的 memcached_exporter <a href="https://github.com/prometheus/memcached_exporter" target="_blank" rel="noopener">文档</a>  </p><h2 id="bridge-桥接方式"><a href="#bridge-桥接方式" class="headerlink" title="bridge 桥接方式"></a>bridge 桥接方式</h2><p>在 192.168.21.16 服务器上运行了三个 memcached 端口分别为 11211:11213 目前官方的这个版本还不支持多个地址，社区的解决方案<a href="https://github.com/prometheus/memcached_exporter/issues/48" target="_blank" rel="noopener">点这里</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9211:9150  --name=memcached_11211  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11211</span><br><span class="line"></span><br><span class="line">docker run -d -p 9212:9150  --name=memcached_11212  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11212</span><br><span class="line"></span><br><span class="line">docker run -d -p 9213:9150  --name=memcached_11213  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11213</span><br></pre></td></tr></table></figure></p><p>在这里我们启动了三个 docker container 用的是 bridge 网络方式来分别监听 11211–11213 需要注意的是 memcached.address 默认监听的是 localhost:11211 如果是 bridge 方式的话，用默认的方法 localhost 只能监听到容器内部。  </p><h2 id="host-网络方式"><a href="#host-网络方式" class="headerlink" title="host 网络方式"></a>host 网络方式</h2><p>如果服务器只有一个 memcached 进程的话，那么我们可以用 host 网络的方式。 容器和服务器共享网络，优点是网络高性能，缺点就是需要注意端口冲突。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --network=host  --name=memcached_11211  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=localhost:11211</span><br></pre></td></tr></table></figure></p><h2 id="注意-iptable"><a href="#注意-iptable" class="headerlink" title="注意 iptable"></a>注意 iptable</h2><p>一旦使用了 docker 我们需要特别注意的就是 <strong>iptable</strong> </p><ol><li><del>-A INPUT -s 172.16.0.0/12 -j DROP</del>  #检查iptables filter 表 INPUT 链是否阻止了docker container IP，因为 docker 默认 IP 是 172.17.0.0/24，</li><li>-A INPUT -s 172.17.0.0/24 -p tcp –dport 11211:11213 -j ACCEPT  #若采用 bridge 桥接方式， 需要允许容器连接到 memcached</li><li>-A INPUT -s <em>Prometheus_IP</em> -p tcp –dport 9211:9213 -j ACCEPT  #给 Prometheus 开放监听的白名单  </li></ol><h2 id="检查-memcached-exporter-结果"><a href="#检查-memcached-exporter-结果" class="headerlink" title="检查 memcached_exporter 结果"></a>检查 memcached_exporter 结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">curl 172.17.0.2:9150/metrics <span class="comment">#直接访问容器内部</span></span><br><span class="line">curl localhost:9211/metrics <span class="comment"># 从docker暴露出来的端口访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果中的字段在 grafana 设置图表时，相关的图表就要用对应的字段</span></span><br><span class="line"><span class="comment"># 比如当前连接上 (memcached_current_connections&#123;instance=~"$node"&#125;) </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TYPE memcached_connections_listener_disabled_total counter</span></span><br><span class="line">memcached_connections_listener_disabled_total 0</span><br><span class="line"><span class="comment"># HELP memcached_connections_total Total number of connections opened since the server started running.</span></span><br><span class="line"><span class="comment"># TYPE memcached_connections_total counter</span></span><br><span class="line">memcached_connections_total 255174</span><br><span class="line"><span class="comment"># HELP memcached_connections_yielded_total Total number of connections yielded running due to hitting the memcached's -R limit.</span></span><br><span class="line"><span class="comment"># TYPE memcached_connections_yielded_total counter</span></span><br><span class="line">memcached_connections_yielded_total 0</span><br><span class="line"><span class="comment"># HELP memcached_current_bytes Current number of bytes used to store items.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_bytes gauge</span></span><br><span class="line">memcached_current_bytes 2.57801625e+08</span><br><span class="line"><span class="comment"># HELP memcached_current_connections Current number of open connections.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_connections gauge</span></span><br><span class="line">memcached_current_connections 663</span><br><span class="line"><span class="comment"># HELP memcached_current_items Current number of items stored by this instance.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_items gauge</span></span><br><span class="line">memcached_current_items 1.117251e+06</span><br><span class="line"><span class="comment"># HELP memcached_items_evicted_total Total number of valid items removed from cache to free memory for new items.</span></span><br><span class="line"><span class="comment"># TYPE memcached_items_evicted_total counter</span></span><br><span class="line">memcached_items_evicted_total 0</span><br></pre></td></tr></table></figure><p>如果看到输出的结果，那说明 memcached_exporter 已经收集到 memcached 的信息并将此暴露出来了。<br><a href="http://www.runoob.com/memcached/memcached-stats.html" target="_blank" rel="noopener">memcached</a> 一些字段的含义</p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ol><li>配置错误 connection failed，注意地址 –memcached.address=192.168.21.16:11212 </li><li>启动新的容器失败，地址端口占用，需要重启一下docker</li><li>iptables 一般 reload， restart 会刷新 NAT 表，导致 docker 路由失败。这种情况需要重启 docker， docker 会在 NAT 表添加路由</li></ol><h1 id="Grafana-数据可视化"><a href="#Grafana-数据可视化" class="headerlink" title="Grafana 数据可视化"></a>Grafana 数据可视化</h1><p><a href="https://grafana.com/docs/v3.1/datasources/prometheus/" target="_blank" rel="noopener">grafana</a>  官方文档，添加数据源，模板。<br><a href="https://prometheus.io/docs/prometheus/latest/querying/functions/" target="_blank" rel="noopener">prometheus function</a> 函数在画图时非常重要<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每分钟 command 的数量  </span></span><br><span class="line">sum(rate(memcached_commands_total&#123;instance=~<span class="string">"<span class="variable">$node</span>"</span>&#125;[1m])) by (<span class="built_in">command</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录如何用安装 memcached_exporter 来收集 memcached 信息并且暴露给 Prometheus 监听程序，Prometheus 将收集的信息传递给 grafana 进行信息可视化。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="prometheus" scheme="http://feiyang233.club/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>ELK 日志收集系统快速搭建</title>
    <link href="http://feiyang233.club/post/elk/"/>
    <id>http://feiyang233.club/post/elk/</id>
    <published>2019-03-25T10:35:07.000Z</published>
    <updated>2019-09-20T08:32:01.130Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.elastic.co/guide/index.html" target="_blank" rel="noopener">ELK 官方文档</a> 是一个分布式、可扩展、实时的搜索与数据分析引擎。目前我在工作中只用来收集 server 的 log, 开发锅锅们 debug 的好助手。<br><a id="more"></a>  </p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol><li><a href="https://cloud.tencent.com/developer/column/4008" target="_blank" rel="noopener">腾讯云Elasticsearch Service</a> 这个腾讯云的专栏非常的不错，请您一定要点开看一眼，总有你想要的。  </li><li><a href="https://www.cnblogs.com/along21/p/8613115.html" target="_blank" rel="noopener">ELK重难点总结和整体优化配置</a></li></ol><h1 id="安装设置单节点-ELK"><a href="#安装设置单节点-ELK" class="headerlink" title="安装设置单节点 ELK"></a>安装设置单节点 ELK</h1><p>如果你想快速的搭建单节点 ELK, 那么使用 docker 方式肯定是你的最佳选择。使用三合一的镜像，<a href="https://elk-docker.readthedocs.io/" target="_blank" rel="noopener">文档详情</a><br>注意：安装完 docker, 记得设置 <code>mmap counts</code> 大小至少 262144<br><a href="https://nieyong.github.io/wiki_cpu/mmap%E8%AF%A6%E8%A7%A3.html" target="_blank" rel="noopener">什么是 mmap</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 mmap 命令 二选一</span></span><br><span class="line"><span class="comment"># 一临时添加法</span></span><br><span class="line">sysctl -w vm.max_map_count=262144  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 二永久写入文件</span></span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line">vm.max_map_count=262144  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存好文件执行以下命令查看</span></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 docker 基于centos</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></p><p>单节点的机器，不必暴露 9200(Elasticsearch JSON interface) 和 9300(Elasticsearch transport interface) 端口。<br>如果想在 docker 上暴露端口，用 -p 如果没有填写监听的地址，默认是 0.0.0.0 所有的网卡。建议还是写明确监听的地址，安全性更好。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-p 监听的IP:宿主机端口:容器内的端口</span><br><span class="line">-p 192.168.10.10:9300:9300</span><br></pre></td></tr></table></figure></p><h2 id="命令行启动一个-ELK"><a href="#命令行启动一个-ELK" class="headerlink" title="命令行启动一个 ELK"></a>命令行启动一个 ELK</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -p 5601:5601 -p 5044:5044 \</span><br><span class="line">-v /data/elk-data:/var/lib/elasticsearch  \</span><br><span class="line">-v /data/elk/logstash:/etc/logstash/conf.d  \</span><br><span class="line">-it -e TZ=<span class="string">"Asia/Singapore"</span> -e ES_HEAP_SIZE=<span class="string">"20g"</span>  \</span><br><span class="line">-e LS_HEAP_SIZE=<span class="string">"10g"</span> --name elk-ubuntu sebp/elk</span><br></pre></td></tr></table></figure><p>将配置和数据挂载出来，即使 docker container 出现了问题。可以立即销毁再重启一个，服务受影响的时间很短。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意挂载出来的文件夹的权限问题</span></span><br><span class="line">chmod 755 /data/elk-data </span><br><span class="line">chmod 755 /data/elk/logstash</span><br><span class="line">chown -R root:root /data </span><br><span class="line">-v /data/elk-data:/var/lib/elasticsearch   <span class="comment"># 将 elasticsearch 存储的数据挂载出来，数据持久化。</span></span><br><span class="line">-v /data/elk/logstash:/etc/logstash/conf.d <span class="comment"># 将 logstash 的配置文件挂载出来，方便在宿主机上修改。</span></span><br></pre></td></tr></table></figure></p><h2 id="elasticsearch-重要的参数调优"><a href="#elasticsearch-重要的参数调优" class="headerlink" title="elasticsearch 重要的参数调优"></a>elasticsearch 重要的参数调优</h2><ol><li>ES_HEAP_SIZE Elasticsearch will assign the entire heap specified in jvm.options via the Xms (minimum heap size) and Xmx (maximum heap size) settings. You should set these two settings to be equal to each other. Set Xmx and Xms to no more than 50% of your physical RAM.the exact threshold varies but is near 32 GB. the exact threshold varies but 26 GB is safe on most systems, but can be as large as 30 GB on some systems.<br>利弊关系: The more heap available to Elasticsearch, the more memory it can use for its internal caches, but the less memory it leaves available for the operating system to use for the filesystem cache. Also, larger heaps can cause longer garbage collection pauses.</li><li>LS_HEAP_SIZE 如果 heap size 过低，会导致 CPU 利用率到达瓶颈，造成 JVM 不断的回收垃圾。 不能设置 heap size 超过物理内存。 至少留 1G 给操作系统和其他的进程。</li><li>若是采用上述这个三合一的 docker 镜像，<a href="https://elk-docker.readthedocs.io/#troubleshooting" target="_blank" rel="noopener">官方文档</a>, 对于 ELK 的日志，处理的方式为 Note that ELK’s logs are rotated daily and are deleted after a week, using logrotate. You can change this behaviour by overwriting the elasticsearch, logstash and kibana files in /etc/logrotate.d  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每天的 6:25 会对日志进行分割压缩处理，此时对机器的 disk 有大量的 IO 工作，会导致 system load 上升。 </span></span><br><span class="line">25 6 * * *  root  <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily )</span><br></pre></td></tr></table></figure></li></ol><p>这里的解决办法请看下文的自定义部分。</p><ol start="4"><li>使用Elasticsearch的REST Client的An HTTP line is larger than 4096 bytes<br>{“type”:”too_long_frame_exception”,”reason”:”An HTTP line is larger than 4096 bytes.”}，默认情况下ES对请求参数设置为4K，如果遇到请求参数长度限制可以在elasticsearch.yml中修改如下参数： 请参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-http.html" target="_blank" rel="noopener">官方文档</a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http.max_initial_line_length:</span> <span class="number">8</span><span class="string">k</span></span><br><span class="line"><span class="string">http.max_header_size:</span> <span class="number">16</span><span class="string">k</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="普通方式安装"><a href="#普通方式安装" class="headerlink" title="普通方式安装"></a>普通方式安装</h2><p>也是非常的简单，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html" target="_blank" rel="noopener">官方文档</a>，或者是<a href="https://linuxize.com/post/how-to-install-elasticsearch-on-centos-7/" target="_blank" rel="noopener">民间文档</a>，其实也就是安装一个 JDK， 然后添加一个 repo 仓库。</p><h2 id="filebeat-配置"><a href="#filebeat-配置" class="headerlink" title="filebeat 配置"></a>filebeat 配置</h2><p>在 client 端，我们需要安装并且配置 filebeat <a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-installation.html" target="_blank" rel="noopener">请参考</a><br><a href="https://www.imooc.com/article/70007" target="_blank" rel="noopener">Filebeat 模块与配置</a><br>配置文件 filebeat.yml<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">filebeat.inputs:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">log</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  paths:</span> <span class="comment"># 需要收集的日志</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">/var/log/app/**</span>  <span class="comment">## ** need high versiob filebeat can support recursive</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  fields:</span> <span class="comment">#需要添加的字段</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">"<span class="template-variable">&#123;&#123;inventory_hostname&#125;&#125;</span>"</span> </span><br><span class="line"><span class="attr">    function:</span> <span class="string">"xxx"</span></span><br><span class="line"><span class="attr">  multiline:</span>  <span class="comment"># 多行匹配</span></span><br><span class="line"><span class="attr">    match:</span> <span class="string">after</span></span><br><span class="line"><span class="attr">    negate:</span> <span class="literal">true</span>  <span class="comment"># pay attention the format</span></span><br><span class="line"><span class="attr">    pattern:</span> <span class="string">'^\[[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;'</span>   <span class="comment">#\[</span></span><br><span class="line"><span class="attr">  ignore_older:</span> <span class="number">24</span><span class="string">h</span></span><br><span class="line"><span class="attr">  clean_inactive:</span> <span class="number">72</span><span class="string">h</span></span><br><span class="line"></span><br><span class="line"><span class="string">output.logstash:</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">["&#123;&#123;elk_server&#125;&#125;:25044"]</span></span><br><span class="line">  <span class="comment"># ssl:</span></span><br><span class="line">  <span class="comment">#   certificate_authorities: ["/etc/filebeat/logstash.crt"]</span></span><br></pre></td></tr></table></figure></p><p>批量部署 filebeat.yml 最好使用 ansible<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">stop</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    service:</span> </span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">stopped</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">yes</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">  - name:</span> <span class="string">upload</span> <span class="string">filebeat.yml</span> </span><br><span class="line"><span class="attr">    template:</span></span><br><span class="line"><span class="attr">     src:</span> <span class="string">filebeat.yml</span></span><br><span class="line"><span class="attr">     dest:</span> <span class="string">/etc/filebeat/filebeat.yml</span></span><br><span class="line"><span class="attr">     owner:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     mode:</span> <span class="number">0644</span>      </span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">remove</span></span><br><span class="line"><span class="attr">    file:</span> <span class="comment">#delete all files in this directory</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/var/lib/filebeat/registry</span>    </span><br><span class="line"><span class="attr">      state:</span> <span class="string">absent</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">restart</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    service:</span> </span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">restarted</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure></p><h2 id="查看-filebeat-output"><a href="#查看-filebeat-output" class="headerlink" title="查看 filebeat output"></a>查看 filebeat output</h2><p>首先需要修改配置，将 filebeat 输出到本地的文件，输出的格式为 json.<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">filebeat.inputs:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">log</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  paths:</span></span><br><span class="line"><span class="bullet">     -</span> <span class="string">/var/log/app/**</span></span><br><span class="line"><span class="attr">  fields:</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">"x.x.x.x"</span></span><br><span class="line"><span class="attr">    region:</span> <span class="string">"sg"</span></span><br><span class="line"><span class="attr">  multiline:</span></span><br><span class="line"><span class="attr">    match:</span> <span class="string">after</span></span><br><span class="line"><span class="attr">    negate:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    pattern:</span> <span class="string">'^[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;'</span></span><br><span class="line"><span class="attr">  ignore_older:</span> <span class="number">24</span><span class="string">h</span></span><br><span class="line"><span class="attr">  clean_inactive:</span> <span class="number">72</span><span class="string">h</span></span><br><span class="line"></span><br><span class="line"><span class="string">output.file:</span></span><br><span class="line"><span class="attr"> path:</span> <span class="string">"/home/feiyang"</span></span><br><span class="line"><span class="attr">  filename:</span> <span class="string">feiyang.json</span></span><br></pre></td></tr></table></figure></p><p>通过上述的配置，我们就可以在路径 /home/feiyang 下得到输出结果文件 feiyang.json 在这里需要注意的是，不同版本的 filebeat 输出结果的格式会有所不同，这会给 logstash 解析过滤造成一点点困难。下面举例说明 6.x 和 7.x filebeat 输出结果的不同</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"@timestamp"</span>: <span class="string">"2019-06-27T15:53:27.682Z"</span>,</span><br><span class="line">  <span class="attr">"@metadata"</span>: &#123;</span><br><span class="line">    <span class="attr">"beat"</span>: <span class="string">"filebeat"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"doc"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"6.4.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"fields"</span>: &#123;</span><br><span class="line">    <span class="attr">"host"</span>: <span class="string">"x.x.x.x"</span>,</span><br><span class="line">    <span class="attr">"region"</span>: <span class="string">"sg"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"host"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"x.x.x.x"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"beat"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"x.x.x.x"</span>,</span><br><span class="line">    <span class="attr">"hostname"</span>: <span class="string">"feiyang-localhost"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"6.4.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"offset"</span>: <span class="number">1567983499</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"[2019-06-27T22:53:25.756327232][Info][@http.go.177] [48552188]request"</span>,</span><br><span class="line">  <span class="attr">"source"</span>: <span class="string">"/var/log/feiyang/scripts/all.log"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.4 与 7.2 还是有很大的差异，在结构上。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"@timestamp"</span>: <span class="string">"2019-06-27T15:41:42.991Z"</span>,</span><br><span class="line">  <span class="attr">"@metadata"</span>: &#123;</span><br><span class="line">    <span class="attr">"beat"</span>: <span class="string">"filebeat"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"7.2.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"agent"</span>: &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="string">"3a38567b-e6c3-4b5a-a420-f0dee3a3bec8"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"7.2.0"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"filebeat"</span>,</span><br><span class="line">    <span class="attr">"ephemeral_id"</span>: <span class="string">"b7e3c0b7-b460-4e43-a9af-6d36c25eece7"</span>,</span><br><span class="line">    <span class="attr">"hostname"</span>: <span class="string">"feiyang-localhost"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"log"</span>: &#123;</span><br><span class="line">    <span class="attr">"offset"</span>: <span class="number">69132192</span>,</span><br><span class="line">    <span class="attr">"file"</span>: &#123;</span><br><span class="line">      <span class="attr">"path"</span>: <span class="string">"/var/log/app/feiyang/scripts/info.log"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"2019-06-27 22:41:25.312|WARNING|14186|Option|data|unrecognized|fields=set([u'id'])"</span>,</span><br><span class="line">  <span class="attr">"input"</span>: &#123;</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"log"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"fields"</span>: &#123;</span><br><span class="line">    <span class="attr">"region"</span>: <span class="string">"sg"</span>,</span><br><span class="line">    <span class="attr">"host"</span>: <span class="string">"x.x.x.x"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"ecs"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"host"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"feiyang-localhost"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="只需要配置logstash"><a href="#只需要配置logstash" class="headerlink" title="只需要配置logstash"></a>只需要配置logstash</h2><p>接下来，我们再来看一看 logstash.conf 记得看注释<br>参考链接:</p><ol><li><a href="https://www.elastic.co/guide/en/beats/filebeat/current/configuration-ssl.html" target="_blank" rel="noopener">SSL详情可参考</a></li><li><a href="https://doc.yonyoucloud.com/doc/logstash-best-practice-cn/filter/grok.html" target="_blank" rel="noopener">grok 正则捕获</a></li><li><a href="https://blog.csdn.net/qq_34021712/article/details/79746413" target="_blank" rel="noopener">grok插件语法介绍</a></li><li><a href="http://www.ttlsa.com/elk/elk-logstash-configuration-syntax/" target="_blank" rel="noopener">logstash 配置语法</a></li><li><a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns" target="_blank" rel="noopener">grok 内置 pattern</a>  </li><li><a href="http://www.51niux.com/?id=205" target="_blank" rel="noopener">Logstash详细记录</a></li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; <span class="number">5044</span></span><br><span class="line">    <span class="comment">#ssl =&gt; true</span></span><br><span class="line">    <span class="comment">#ssl_certificate =&gt; "/etc/logstash/logstash.crt"</span></span><br><span class="line">    <span class="comment">#ssl_key =&gt; "/etc/logstash/logstash.key"</span></span><br><span class="line"><span class="comment"># 1. SSL详情可参考 </span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># filter 模块主要是数据预处理，提取一些信息，方便 elasticsearch 好归类存储。</span></span><br><span class="line"><span class="comment"># 2. grok 正则捕获</span></span><br><span class="line"><span class="comment"># 3. grok插件语法介绍 </span></span><br><span class="line"><span class="comment"># 4. logstash 配置语法 </span></span><br><span class="line"><span class="comment"># 5. grok 内置 pattern </span></span><br><span class="line">filter &#123;</span><br><span class="line">    grok &#123;  </span><br><span class="line">      match =&gt; &#123;<span class="string">"message"</span> =&gt; <span class="string">"%&#123;EXIM_DATE:timestamp&#125;\|%&#123;LOGLEVEL:log_level&#125;\|%&#123;INT:pid&#125;\|%&#123;GREEDYDATA&#125;"</span>&#125;</span><br><span class="line"><span class="comment"># message 字段是 log 的内容，例如 2018-12-11 23:46:47.051|DEBUG|3491|helper.py:85|helper._save_to_cache|shop_session</span></span><br><span class="line"><span class="comment"># 在这里我们提取出了 timestamp log_level pid，grok 有内置定义好的patterns: EXIM_DATE, EXIM_DATE, INT</span></span><br><span class="line"><span class="comment"># GREEDYDATA 贪婪数据，代表任意字符都可以匹配 </span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 我们在 filebeat 里面添加了这个字段[fields][function]的话，那就会执行对应的 match 规则去匹配 path</span></span><br><span class="line"><span class="comment"># source 字段就是 log 的来源路径，例如 /var/log/nginx/feiyang233.club.access.log</span></span><br><span class="line"><span class="comment"># match 后我们就可以得到 path=feiyang233.club.access</span></span><br><span class="line">    <span class="keyword">if</span> [fields][function]==<span class="string">"nginx"</span> &#123;</span><br><span class="line">        grok &#123;         </span><br><span class="line">        match =&gt; &#123;<span class="string">"source"</span> =&gt; <span class="string">"/var/log/nginx/%&#123;GREEDYDATA:path&#125;.log%&#123;GREEDYDATA&#125;"</span>&#125;  </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment"># 例如 ims 日志来源是 /var/log/ims_logic/debug.log</span></span><br><span class="line"><span class="comment"># match 后我们就可以得到 path=ims_logic</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> [fields][function]==<span class="string">"ims"</span> &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">        match =&gt; &#123;<span class="string">"source"</span> =&gt; <span class="string">"/var/log/%&#123;GREEDYDATA:path&#125;/%&#123;GREEDYDATA&#125;"</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">        match =&gt; &#123;<span class="string">"source"</span> =&gt; <span class="string">"/var/log/app/%&#123;GREEDYDATA:path&#125;/%&#123;GREEDYDATA&#125;"</span>&#125;</span><br><span class="line">            &#125;         </span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># filebeat 有定义 [fields][function] 时，我们就添加上这个字段，例如 QA</span></span><br><span class="line">    <span class="keyword">if</span> [fields][function] &#123;</span><br><span class="line">          mutate &#123;</span><br><span class="line">              add_field =&gt; &#123;</span><br><span class="line">                  <span class="string">"function"</span> =&gt; <span class="string">"%&#123;[fields][function]&#125;"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment"># 因为线上的机器更多，线上的我默认不在 filebeat 添加 function，所以 else 我就添加上 live  </span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">          mutate &#123;</span><br><span class="line">              add_field =&gt; &#123;</span><br><span class="line">                  <span class="string">"function"</span> =&gt; <span class="string">"live"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># 在之前 filter message 时，我们得到了 timestamp，这里我们修改一下格式，添加上时区。</span></span><br><span class="line">    date &#123;</span><br><span class="line">      match =&gt; [<span class="string">"timestamp"</span> , <span class="string">"yyyy-MM-dd HH:mm:ss Z"</span>]</span><br><span class="line">      target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">      timezone =&gt; <span class="string">"Asia/Singapore"</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 将之前获得的 path 替换其中的 / 替换为 - , 因为 elasticsearch index name 有要求</span></span><br><span class="line"><span class="comment"># 例如 feiyang/test  feiyang_test </span></span><br><span class="line">    mutate &#123;</span><br><span class="line">     gsub =&gt; [<span class="string">"path"</span>,<span class="string">"/"</span>,<span class="string">"-"</span>]</span><br><span class="line">      add_field =&gt; &#123;<span class="string">"host_ip"</span> =&gt; <span class="string">"%&#123;[fields][host]&#125;"</span>&#125;</span><br><span class="line">      remove_field =&gt; [<span class="string">"tags"</span>,<span class="string">"@version"</span>,<span class="string">"offset"</span>,<span class="string">"beat"</span>,<span class="string">"fields"</span>,<span class="string">"exim_year"</span>,<span class="string">"exim_month"</span>,<span class="string">"exim_day"</span>,<span class="string">"exim_time"</span>,<span class="string">"timestamp"</span>]</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># remove_field 去掉一些多余的字段</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 单节点 output 就在本机，也不需要 SSL, 但 index 的命名规则还是需要非常的注意</span></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">"localhost:9200"</span>]</span><br><span class="line">    index =&gt; <span class="string">"sg-%&#123;function&#125;-%&#123;path&#125;-%&#123;+xxxx.ww&#125;"</span></span><br><span class="line"><span class="comment"># sg-nginx-feiyang233.club.access-2019.13  ww代表周数</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的流程图如下所示<br><img src="/img/elk/log.png" alt="log"><br>index 的规则 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.4/indices-create-index.html" target="_blank" rel="noopener">参考链接</a></p><ul><li>Lowercase only</li><li>Cannot include \, /, *, ?, “, &lt;, &gt;, |, ` ` (space character), ,, #</li><li>Indices prior to 7.0 could contain a colon (:), but that’s been deprecated and won’t be supported in 7.0+</li><li>Cannot start with -, _, +</li><li>Cannot be . or ..</li><li>Cannot be longer than 255 bytes (note it is bytes, so multi-byte characters will count towards the 255 limit faster)</li></ul><h2 id="Kibana-简单的使用"><a href="#Kibana-简单的使用" class="headerlink" title="Kibana 简单的使用"></a>Kibana 简单的使用</h2><p>在搭建 ELK 时，暴露出来的 5601 端口就是 Kibana 的服务。<br>访问 <a href="http://your_elk_ip:5601" target="_blank" rel="noopener">http://your_elk_ip:5601</a><br><img src="/img/elk/kibana.png" alt="kibana"></p><h1 id="安装设置集群-ELK-版本-6-7"><a href="#安装设置集群-ELK-版本-6-7" class="headerlink" title="安装设置集群 ELK 版本 6.7"></a>安装设置集群 ELK 版本 6.7</h1><p><a href="https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html" target="_blank" rel="noopener">ELK 安装文档</a>集群主要是高可用，多节点的 Elasticsearch 还可以扩容。本文中用的官方镜像 The base image is <a href="https://hub.docker.com/_/centos/" target="_blank" rel="noopener">centos:7</a></p><h2 id="Elasticsearch-多节点搭建"><a href="#Elasticsearch-多节点搭建" class="headerlink" title="Elasticsearch 多节点搭建"></a>Elasticsearch 多节点搭建</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/docker.html" target="_blank" rel="noopener">官方安装文档 Elasticsearch</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载出来的文件夹权限非常的重要</span></span><br><span class="line">mkdir -p /data/elk-data &amp;&amp; chmod 755 /data/elk-data</span><br><span class="line">chown -R root:root /data </span><br><span class="line">docker run -p WAN_IP:9200:9200 -p 10.66.236.116:9300:9300 \</span><br><span class="line">-v /data/elk-data:/usr/share/elasticsearch/data \</span><br><span class="line">--name feiy_elk \</span><br><span class="line">docker.elastic.co/elasticsearch/elasticsearch:6.7.0</span><br></pre></td></tr></table></figure></p><p>接下来是修改配置文件 elasticsearch.yml<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Master 节点 node-1</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># docker exec -it 70ada825aae1 bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="string">cluster.name:</span> <span class="string">"feiy_elk"</span></span><br><span class="line"><span class="string">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="string">node.master:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">node-1</span></span><br><span class="line"><span class="string">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.116</span></span><br><span class="line"><span class="string">discovery.zen.ping.unicast.hosts:</span> <span class="string">["10.66.236.116:9300","10.66.236.118:9300","10.66.236.115:9300"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slave 节点 node-2</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="string">cluster.name:</span> <span class="string">"feiy_elk"</span></span><br><span class="line"><span class="string">network.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">node-2</span></span><br><span class="line"><span class="string">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.118</span></span><br><span class="line"><span class="string">discovery.zen.ping.unicast.hosts:</span> <span class="string">["10.66.236.116:9300","10.66.236.118:9300","10.66.236.115:9300"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slave 节点 node-3</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="string">cluster.name:</span> <span class="string">"feiy_elk"</span></span><br><span class="line"><span class="string">network.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">node-3</span></span><br><span class="line"><span class="string">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.115</span></span><br><span class="line"><span class="string">discovery.zen.ping.unicast.hosts:</span> <span class="string">["10.66.236.116:9300","10.66.236.118:9300","10.66.236.115:9300"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure><p>检查集群节点个数，状态等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl http://wan_ip:9200/_cluster/health?pretty</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"feiy_elk"</span>,</span><br><span class="line">  <span class="string">"status"</span> : <span class="string">"green"</span>,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"number_of_nodes"</span> : 3,</span><br><span class="line">  <span class="string">"number_of_data_nodes"</span> : 3,</span><br><span class="line">  <span class="string">"active_primary_shards"</span> : 9,</span><br><span class="line">  <span class="string">"active_shards"</span> : 18,</span><br><span class="line">  <span class="string">"relocating_shards"</span> : 0,</span><br><span class="line">  <span class="string">"initializing_shards"</span> : 0,</span><br><span class="line">  <span class="string">"unassigned_shards"</span> : 0,</span><br><span class="line">  <span class="string">"delayed_unassigned_shards"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_pending_tasks"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_in_flight_fetch"</span> : 0,</span><br><span class="line">  <span class="string">"task_max_waiting_in_queue_millis"</span> : 0,</span><br><span class="line">  <span class="string">"active_shards_percent_as_number"</span> : 100.0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最终结果图在 kibana 上可以看到集群状态<br><img src="/img/elk/elk.png" alt="elk"></p><h2 id="Kibana-搭建"><a href="#Kibana-搭建" class="headerlink" title="Kibana 搭建"></a>Kibana 搭建</h2><p><a href="https://www.elastic.co/guide/en/kibana/6.7/docker.html" target="_blank" rel="noopener">官方安装文档  Kibana</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker run --link YOUR_ELASTICSEARCH_CONTAINER_NAME_OR_ID:elasticsearch -p 5601:5601 &#123;docker-repo&#125;:&#123;version&#125;</span></span><br><span class="line">docker run -p 外网IP:5601:5601 --link elasticsearch容器的ID:elasticsearch docker.elastic.co/kibana/kibana:6.7.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意的是 --link 官方其实并不推荐的，推荐的是 use user-defined networks https://docs.docker.com/network/links/</span></span><br><span class="line"><span class="comment"># 测试不用 --link 也可以通。直接用容器的 IP</span></span><br><span class="line">docker run -p 外网IP:5601:5601  docker.elastic.co/kibana/kibana:6.7.0</span><br></pre></td></tr></table></figure></p><p>we recommend that you use user-defined networks to facilitate communication between two containers instead of using –<a href="https://docs.docker.com/network/links/" target="_blank" rel="noopener">link</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/kibana/config/kibana.yml</span></span><br><span class="line"><span class="comment"># 需要把 hosts IP 改为 elasticsearch 容器的 IP</span></span><br><span class="line"><span class="comment"># 我这里 elasticsearch 容器的 IP 是 172.17.0.2</span></span><br><span class="line"><span class="comment"># 如何查看 docker inspect elasticsearch_ID</span></span><br><span class="line"><span class="string">server.name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="string">server.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">elasticsearch.hosts:</span> <span class="string">[</span> <span class="string">"http://172.17.0.2:9200"</span> <span class="string">]</span></span><br><span class="line"><span class="string">xpack.monitoring.ui.container.elasticsearch.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出容器并重启</span></span><br><span class="line"><span class="string">docker</span> <span class="string">restart</span> <span class="string">[container_ID]</span></span><br></pre></td></tr></table></figure><h2 id="Logstash-搭建"><a href="#Logstash-搭建" class="headerlink" title="Logstash 搭建"></a>Logstash 搭建</h2><p>官方安装文档 <a href="https://www.elastic.co/guide/en/logstash/6.7/docker.html" target="_blank" rel="noopener">Logstash</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker -d 以后台的方式启动容器  --name 参数显式地为容器命名</span></span><br><span class="line">docker run -p 5044:5044 -d --name test_logstash  docker.elastic.co/logstash/logstash:6.7.0</span><br><span class="line"><span class="comment"># 也可以指定网卡，监听在内网或者外网 监听在内网 192.168.1.2</span></span><br><span class="line">docker run -p 192.168.1.2:5044:5044 -d --name test_logstash  docker.elastic.co/logstash/logstash:6.7.0</span><br></pre></td></tr></table></figure></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/logstash/pipeline/logstash.conf</span></span><br><span class="line"><span class="comment"># 配置详情请参考下面的链接,记得 output hosts IP 指向 Elasticsearch 的 IP</span></span><br><span class="line"><span class="comment"># Elasticsearch 的默认端口是9200，在下面的配置中可以省略。</span></span><br><span class="line">hosts =&gt; [<span class="string">"IP Address 1:port1"</span>, <span class="string">"IP Address 2:port2"</span>, <span class="string">"IP Address 3"</span>]</span><br></pre></td></tr></table></figure><p><a href="#只需要配置logstash">logstash 过滤规则</a> 见上文的配置和 grok 语法规则<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/logstash/config/logstash.yml</span></span><br><span class="line"><span class="comment"># 需要把 url 改为 elasticsearch master 节点的 IP</span></span><br><span class="line"><span class="string">http.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">xpack.monitoring.elasticsearch.url:</span> <span class="attr">http://elasticsearch_master_IP:9200</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">"feiy"</span></span><br><span class="line"><span class="string">pipeline.workers:</span> <span class="number">24</span> <span class="comment"># same with cores</span></span><br></pre></td></tr></table></figure></p><p>改完配置 exit 从容器里退出到宿主机，然后重启这个容器。更多配置详情，参见<a href="https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html" target="_blank" rel="noopener">官方文档</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如何查看 container_ID</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">docker restart [container_ID]</span><br></pre></td></tr></table></figure></p><h2 id="容灾测试"><a href="#容灾测试" class="headerlink" title="容灾测试"></a>容灾测试</h2><p>我们把当前的 master 节点 node-1 关机，通过 kibana 看看集群的状态是怎样变化的。<br><img src="/img/elk/elk1.png" alt="elk1"><br>当前集群的状态变成了黄色，因为还有 3 个 Unassigned Shards。颜色含义请参考<a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/_cluster_health.html" target="_blank" rel="noopener">官方文档</a>，再过一会发现集群状态变成了绿色。<br><img src="/img/elk/elk2.png" alt="elk2"> </p><h1 id="kibana-控制台-Console"><a href="#kibana-控制台-Console" class="headerlink" title="kibana 控制台 Console"></a>kibana 控制台 Console</h1><p><strong>Quick intro to the UI</strong><br>The Console UI is split into two panes: an editor pane (left) and a response pane (right). Use the editor to type requests and submit them to Elasticsearch. The results will be displayed in the response pane on the right side.  </p><p>Console understands requests in a compact format, similar to cURL:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index a doc</span></span><br><span class="line">PUT index/type/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"body"</span>: <span class="string">"here"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># and get it ...</span></span><br><span class="line">GET index/type/<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>While typing a request, Console will make suggestions which you can then accept by hitting Enter/Tab. These suggestions are made based on the request structure as well as your indices and types.  </p><p><strong>A few quick tips, while I have your attention</strong>   </p><ul><li>Submit requests to ES using the green triangle button.</li><li>Use the wrench menu for other useful things.</li><li>You can paste requests in cURL format and they will be translated to the Console syntax.</li><li>You can resize the editor and output panes by dragging the separator between them.</li><li>Study the keyboard shortcuts under the Help button. Good stuff in there!  </li></ul><h2 id="Console-常用的命令"><a href="#Console-常用的命令" class="headerlink" title="Console 常用的命令"></a>Console 常用的命令</h2><p><a href="https://www.elastic.co/guide/cn/kibana/current/console-kibana.html" target="_blank" rel="noopener">Kibana 控制台</a><br><a href="https://segmentfault.com/a/1190000015654154" target="_blank" rel="noopener">ELK技术栈中的那些查询语法</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">"https://user:passwd@IP:9200/_cat/indices?v"</span></span><br><span class="line"></span><br><span class="line">GET _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_cat/health?v</span><br><span class="line"></span><br><span class="line">GET /_cat/nodes?v</span><br><span class="line"></span><br><span class="line">GET /_cluster/allocation/explain</span><br><span class="line"></span><br><span class="line">GET /_cluster/state</span><br><span class="line"></span><br><span class="line">GET /_cat/thread_pool?v</span><br><span class="line"></span><br><span class="line">GET /_cat/indices?health=red&amp;v</span><br><span class="line"></span><br><span class="line">GET /_cat/indices?v</span><br><span class="line"></span><br><span class="line"><span class="comment">#将当前所有的 index 的 replicas 设置为 0</span></span><br><span class="line"></span><br><span class="line">PUT /*/_settings</span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">"index"</span> : &#123;</span><br><span class="line">       <span class="string">"number_of_replicas"</span> : 0,</span><br><span class="line">       <span class="string">"refresh_interval"</span>: <span class="string">"30s"</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_template</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在单节点的时候，不需要备份，所以将 replicas 设置为 0</span></span><br><span class="line">PUT _template/app-logstash</span><br><span class="line">&#123;</span><br><span class="line"> <span class="string">"index_patterns"</span>: [<span class="string">"app-*"</span>],</span><br><span class="line"> <span class="string">"settings"</span>: &#123;</span><br><span class="line">   <span class="string">"number_of_shards"</span>: 3,</span><br><span class="line">   <span class="string">"number_of_replicas"</span>: 0,</span><br><span class="line">   <span class="string">"refresh_interval"</span>: <span class="string">"30s"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Delete all indices in your Elastic Search cluster</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl <span class="string">'localhost:9200/_cat/indices?v'</span> | tail -n +2 | awk <span class="string">'&#123;print $2&#125;'</span>`; <span class="keyword">do</span> curl -XDELETE <span class="string">"http://127.0.0.1:9200/<span class="variable">$i</span>"</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><h1 id="Elasticsearch-数据迁移"><a href="#Elasticsearch-数据迁移" class="headerlink" title="Elasticsearch 数据迁移"></a>Elasticsearch 数据迁移</h1><p><a href="https://www.elastic.co/guide/en/cloud/current/ec-migrate-data.html" target="_blank" rel="noopener">Elasticsearch 数据迁移官方文档</a>感觉不是很详细。容器化的数据迁移，我太菜用 reindex 失败了，snapshot 也凉凉。<br>最后是用一个开源工具 <a href="https://github.com/medcl/esm-abandoned" target="_blank" rel="noopener">An Elasticsearch Migration Tool</a> 进行数据迁移的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/medcl/esm-abandoned/releases/download/v0.4.2/linux64.tar.gz</span><br><span class="line">tar -xzvf linux64.tar.gz</span><br><span class="line">./esm  -s http://127.0.0.1:9200   -d http://192.168.21.55:9200 -x index_name  -w=5 -b=10 -c 10000 --copy_settings --copy_mappings --force  --refresh</span><br></pre></td></tr></table></figure><h1 id="Nginx-代理转发"><a href="#Nginx-代理转发" class="headerlink" title="Nginx 代理转发"></a>Nginx 代理转发</h1><p>因为有时候 docker 重启，iptables restart 也会刷新，所以导致了我们的限制规则会被更改，出现安全问题。这是由于 docker 的网络隔离基于 iptable 实现造成的问题。为了避免这个安全问题，我们可以在启动 docker 时，就只监听在内网，或者本地 127.0.0.1 然后通过 nginx 转发。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># cat kibana.conf</span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 25601;</span><br><span class="line">    server_name x.x.x.x;</span><br><span class="line">    access_log /var/log/nginx/kibana.access.log;</span><br><span class="line">    error_log /var/log/nginx/kibana.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        allow x.x.x.x;</span><br><span class="line">        allow x.x.x.x;</span><br><span class="line">        deny all;</span><br><span class="line"></span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_buffer_size 64k;</span><br><span class="line">        proxy_buffers   32 32k;</span><br><span class="line">        proxy_busy_buffers_size 128k;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">        proxy_pass    http://127.0.0.1:5601;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>! 这里需要注意的是， iptable filter 表 INPUT 链 有没有阻挡 172.17.0.0/16  docker 默认的网段。是否阻挡了 25601 这个端口。</p><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><ul><li>iptables 防不住。需要看<a href="/post/network/">上一篇博客</a>里的 iptable 问题。或者监听在内网，用 Nginx 代理转发。</li><li>elk <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html" target="_blank" rel="noopener">网络问题</a> </li><li>elk <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/modules-node.html" target="_blank" rel="noopener">node</a></li><li><code>discovery.type=single-node</code> 在测试单点时可用，搭建集群时不能设置这个环境变量，详情见<a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/bootstrap-checks.html#single-node-discovery" target="_blank" rel="noopener">官方文档</a></li><li>ELK的一次<a href="https://www.leiyawu.com/2018/04/03/elk/" target="_blank" rel="noopener">吞吐量优化</a></li><li><p>filebeat 版本过低导致 recursive glob patterns <a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-log.html#recursive_glob" target="_blank" rel="noopener">**</a> 不可用<br>用 ansible 升级 filebeat</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">upload</span> <span class="string">filebeat.repo</span> </span><br><span class="line"><span class="attr">    copy:</span></span><br><span class="line"><span class="attr">     src:</span> <span class="string">elasticsearch.repo</span></span><br><span class="line"><span class="attr">     dest:</span> <span class="string">/etc/yum.repos.d/elasticsearch.repo</span></span><br><span class="line"><span class="attr">     owner:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     mode:</span> <span class="number">0644</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    yum:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">latest</span> <span class="comment">#6.x.1-1 7.x.1-1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">restart</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    service:</span> </span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">restarted</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">yes</span></span><br><span class="line">      </span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/elasticsearch.repo</span></span><br><span class="line"><span class="string">[elasticsearch-6.x]</span></span><br><span class="line"><span class="string">name=Elasticsearch</span> <span class="string">repository</span> <span class="string">for</span> <span class="number">6.</span><span class="string">x</span> <span class="string">packages</span></span><br><span class="line"><span class="string">baseurl=https://artifacts.elastic.co/packages/6.x/yum</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">autorefresh=1</span></span><br><span class="line"><span class="string">type=rpm-md</span></span><br><span class="line"></span><br><span class="line"><span class="string">[elasticsearch-7.x]</span></span><br><span class="line"><span class="string">name=Elasticsearch</span> <span class="string">repository</span> <span class="string">for</span> <span class="number">7.</span><span class="string">x</span> <span class="string">packages</span></span><br><span class="line"><span class="string">baseurl=https://artifacts.elastic.co/packages/7.x/yum</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">autorefresh=1</span></span><br><span class="line"><span class="string">type=rpm-md</span></span><br></pre></td></tr></table></figure></li><li><p>filebeat 7.x 与 6.x 不兼容问题. 关键字变化很大, 比如说 “sorce” 变为了 [log][file][path]</p></li><li>“message”:”Alias [.kibana] has more than one indices associated with it [[.kibana_1, .kibana_2]] 这是因为 kibana 连接了一台机器，如果我们把这台 host 和 kibana 删除，但 kibana 的数据还会在另外两台 host上。当重新创建 host 加入时，会自动同步 .kibana，kibana 就会报错<h1 id="自定义部分"><a href="#自定义部分" class="headerlink" title="自定义部分"></a>自定义部分</h1><h2 id="自动删除-index"><a href="#自动删除-index" class="headerlink" title="自动删除 index"></a>自动删除 index</h2>因为我是按周数来 %{+xxxx.ww} 存 index，由于我们的存储机器硬盘有限，最多能存放两个周的日志，所以需要删除两周之前的 index<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /opt/delete.sh</span></span><br><span class="line"><span class="comment"># 这个是放在容器内的脚本。</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">week=$(date -d <span class="string">"-2 week "</span> +%V)</span><br><span class="line">year=$(date +%Y)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$year</span><span class="string">"-"</span><span class="variable">$week</span></span><br><span class="line">curl -XDELETE <span class="string">'http://127.0.0.1:9200/*-'</span><span class="variable">$year</span><span class="string">'.'</span><span class="variable">$week</span><span class="string">''</span></span><br></pre></td></tr></table></figure></li></ul><p>宿主机上跑 cronjob<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/crontab</span></span><br><span class="line"></span><br><span class="line">0 03  * * 1 root /bin/docker <span class="built_in">exec</span> [mysql 容器 ID] bash -c  <span class="string">"cd /opt &amp;&amp; bash delete.sh"</span> </span><br><span class="line"></span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure></p><h2 id="内部log过大"><a href="#内部log过大" class="headerlink" title="内部log过大"></a>内部log过大</h2><p>因为默认的 log level 的 INFO, 所以 logstash 的日志特别大。导致在做 logrotate 日志切割时 disk I/O 特别的大。<br>解决的办法就是修改 log.level 在  /opt/logstash/config/log4j2.properties 里修改 log.level， 还有修改 /opt/logstash/config/logstash.yml  然后重启 logstash<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ------------ Debugging Settings --------------</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Options for log.level:</span></span><br><span class="line"><span class="comment">#   * fatal</span></span><br><span class="line"><span class="comment">#   * error</span></span><br><span class="line"><span class="comment">#   * warn</span></span><br><span class="line"><span class="comment">#   * info (default)</span></span><br><span class="line"><span class="comment">#   * debug</span></span><br><span class="line"><span class="comment">#   * trace</span></span><br><span class="line"><span class="comment">#日志输出的等级</span></span><br><span class="line"><span class="comment"># Trace:是追踪，就是程序推进一下.</span></span><br><span class="line"><span class="comment"># Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.</span></span><br><span class="line"><span class="comment"># Info:消息在粗粒度级别上突出强调应用程序的运行过程.</span></span><br><span class="line"><span class="comment"># Warn:输出警告及warn以下级别的日志.</span></span><br><span class="line"><span class="comment"># Error:输出错误信息日志.</span></span><br><span class="line"><span class="comment"># Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.</span></span><br><span class="line"> <span class="string">log.level:</span> <span class="string">info</span></span><br></pre></td></tr></table></figure></p><p>修改日志保留的日期，默认是一周，可以修改 /etc/logrotate.d/logstash  rotate 天数</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ELK 官方文档&lt;/a&gt; 是一个分布式、可扩展、实时的搜索与数据分析引擎。目前我在工作中只用来收集 server 的 log, 开发锅锅们 debug 的好助手。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="elk" scheme="http://feiyang233.club/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>GitHub-Hexo-NexT 免费搭建自己的博客</title>
    <link href="http://feiyang233.club/post/hexo-blog/"/>
    <id>http://feiyang233.club/post/hexo-blog/</id>
    <published>2019-03-15T03:05:30.000Z</published>
    <updated>2019-07-11T07:29:40.709Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于写博客"><a href="#关于写博客" class="headerlink" title="关于写博客"></a>关于写博客</h2><p>2018 年我在 GitHub 上看到<a href="http://blog.dploop.org/" target="_blank" rel="noopener">强哥的博客</a>，当时为之心动然后 Fork 了那个 repository。后来搬砖沦为社会人就断更了，在工作之后看到<a href="https://wsgzao.github.io/" target="_blank" rel="noopener">奥哥的博客</a>，在他的安利之下，把之前的 Jekyll 的博客换成如今的 Hexo-NexT，打算记录下工作的点滴，学习的心得。一是分享，二是方便自己回顾和查阅。<a id="more"></a>  </p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>如果没有 GitHub 账号，需要去官网 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 注册一个账号。账号注册好之后，需要创建一个 repository，名称格式为 xxx.github.io  例如我的 GitHub 名称为 fainyang, 浏览器显示的 URL 为 <a href="https://github.com/fainyang" target="_blank" rel="noopener">https://github.com/fainyang</a> 那么我新建的 repository 就是 fainyang.github.io    </p><p><img src="/img/2019/github.png" alt="github">  </p><p>申请完账号，创建了 repository 之后，下一步就是在自己的电脑上安装 Hexo。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo——快速、简洁且高效的博客框架。官网 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a> 文档还有视频讲解如何安装  </p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>在安装 Hexo 之前，需要安装 Git 与 Node.js 请参考 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">这里</a>   </p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g  </span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo init &lt;folder&gt;   # &lt;folder&gt; 自己取个文件夹名字</span><br><span class="line">cd &lt;folder&gt;          # 移动到 &lt;folder&gt; 文件夹，不清楚当前路径，可以执行 Mac:pwd  Windows: chdir</span><br><span class="line">npm install          #feiy-mac:Coding feiy$ pwd    /Users/feiy/Coding</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml    #站点配置文件,主要就是修改这个文件</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds      #模板文件夹</span><br><span class="line">├── source         #存放文章，图片的文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes         #主题文件夹，等会下载 NexT 主题</span><br></pre></td></tr></table></figure></p><h3 id="这是我的-config-yml-配置"><a href="#这是我的-config-yml-配置" class="headerlink" title="这是我的 _config.yml 配置"></a>这是我的 _config.yml 配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">feiyang's</span> <span class="string">blog</span>  </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">费洋的博客</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">佛系咸鱼</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">feiyang</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>     <span class="comment">#网址的显示语言</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://fainyang.github.io</span>      <span class="comment">#需要修改为自己的网址</span></span><br><span class="line"><span class="attr">enforce_ssl:</span> <span class="string">fainyang.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">post/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> </span><br><span class="line"> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tab_replace:</span> </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span> </span><br><span class="line"><span class="attr">tag_map:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/fainyang/fainyang.github.io.git</span>  <span class="comment">#部署上传的地址，需要修改为自己的</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  message:</span> <span class="string">new</span> <span class="string">hexo_blog</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Others</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  yearly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  monthly:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h3><p>官网详细的介绍 <a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令缩写</span><br><span class="line">hexo n "文章标题" == hexo new "文章标题" #新建文章</span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server   #启动服务预览</span><br><span class="line">hexo d == hexo deploy   #部署</span><br></pre></td></tr></table></figure><h3 id="本地运行网站"><a href="#本地运行网站" class="headerlink" title="本地运行网站"></a>本地运行网站</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s  # 当前路径要在之前创建的 hexo init &lt;folder&gt;  这个 &lt;folder&gt; 下</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>在浏览器输入 <code>http://localhost:4000</code> 就可以看到初始的网站 </p><h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><p>Elegant Theme for Hexo——精于心，简于形。 官网 <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p><h3 id="安装-Next"><a href="#安装-Next" class="headerlink" title="安装 Next"></a>安装 Next</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 当前路径要在之前创建的 hexo init &lt;folder&gt;  这个 &lt;folder&gt; 下 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前路径 Mac:<span class="built_in">pwd</span>  Windows: <span class="built_in">chdir</span></span></span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>git clone 完成后，指定文件夹的目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml    #站点配置文件，主要就是修改这个文件</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds      #模板文件夹</span><br><span class="line">├── source         #存放文章，图片的文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes         #主题文件夹，等会下载 NexT 主题</span><br><span class="line">    ├── landscape</span><br><span class="line">    └── next</span><br><span class="line">        └── _config.yml  #主题配置文件，修改博客主题样式等</span><br></pre></td></tr></table></figure></p><h3 id="主题配置文件-config-yml"><a href="#主题配置文件-config-yml" class="headerlink" title="主题配置文件 _config.yml"></a>主题配置文件 _config.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  菜单显示项</span></span><br><span class="line"><span class="attr">menu:</span> </span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes 主题选择，我用的是 Gemini</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure><p>此时可以在本地预览一下运行命令 <code>hexo s</code></p><h3 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h3><p>部署前，需要修改配置文件里面的 git 地址<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/yourname/yourname.github.io.git</span>  <span class="comment">#部署上传的地址，需要修改为自己的</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  message:</span> <span class="string">new</span> <span class="string">hexo_blog</span></span><br></pre></td></tr></table></figure></p><p>修改好 _config.yml 里的 deploy 模块后，就可以开始进行部署，上传到 GitHub<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><p>第一次部署需要输入自己的 GitHub 账号和密码。后面更新部署时就不需要再次输入密码了。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line">feiy-mac:fainyang.github.io feiy$ hexo clean     #清除缓存</span><br><span class="line">INFO  Deleted database.</span><br><span class="line">INFO  Deleted public folder.</span><br><span class="line">feiy-mac:fainyang.github.io feiy$ hexo generate  #生成文件</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 902 ms</span><br><span class="line">INFO  Generated: sitemap.xml</span><br><span class="line">INFO  Generated: atom.xml</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: tags/index.html</span><br><span class="line">INFO  Generated: categories/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: about/index.html</span><br><span class="line">INFO  Generated: img/combination1.png</span><br><span class="line">INFO  Generated: images/algolia_logo.svg</span><br><span class="line">INFO  Generated: img/combination2.png</span><br><span class="line">INFO  Generated: img/404-southpark.jpg</span><br><span class="line">INFO  Generated: img/favicon.ico</span><br><span class="line">INFO  Generated: img/gay.jpeg</span><br><span class="line">INFO  Generated: images/apple-touch-icon-next.png</span><br><span class="line">INFO  Generated: img/old_driver.jpg</span><br><span class="line">INFO  Generated: img/qq-qrcode.png</span><br><span class="line">INFO  Generated: img/zjxc.jpg</span><br><span class="line">INFO  Generated: images/cc-by-nc-nd.svg</span><br><span class="line">INFO  Generated: images/avatar.gif</span><br><span class="line">INFO  Generated: images/cc-by-nc-sa.svg</span><br><span class="line">INFO  Generated: images/cc-by-nc.svg</span><br><span class="line">INFO  Generated: images/cc-by-sa.svg</span><br><span class="line">INFO  Generated: images/cc-by-nd.svg</span><br><span class="line">INFO  Generated: images/cc-by.svg</span><br><span class="line">INFO  Generated: images/favicon.ico</span><br><span class="line">INFO  Generated: images/quote-l.svg</span><br><span class="line">INFO  Generated: images/cc-zero.svg</span><br><span class="line">INFO  Generated: images/loading.gif</span><br><span class="line">INFO  Generated: images/logo.svg</span><br><span class="line">INFO  Generated: images/searchicon.png</span><br><span class="line">INFO  Generated: images/favicon-16x16-next.png</span><br><span class="line">INFO  Generated: images/placeholder.gif</span><br><span class="line">INFO  Generated: images/favicon-32x32-next.png</span><br><span class="line">INFO  Generated: images/quote-r.svg</span><br><span class="line">INFO  Generated: images/feiy.gif</span><br><span class="line">INFO  Generated: archives/2019/03/index.html</span><br><span class="line">INFO  Generated: archives/2018/02/index.html</span><br><span class="line">INFO  Generated: post/hexo-blog/index.html</span><br><span class="line">INFO  Generated: img/work/6.jpg</span><br><span class="line">INFO  Generated: archives/2018/08/index.html</span><br><span class="line">INFO  Generated: categories/学习/index.html</span><br><span class="line">INFO  Generated: archives/2018/11/index.html</span><br><span class="line">INFO  Generated: archives/2018/07/index.html</span><br><span class="line">INFO  Generated: img/robot/run.png</span><br><span class="line">INFO  Generated: tags/python/index.html</span><br><span class="line">INFO  Generated: categories/生活/index.html</span><br><span class="line">INFO  Generated: tags/hexo/index.html</span><br><span class="line">INFO  Generated: tags/工作/index.html</span><br><span class="line">INFO  Generated: archives/2018/04/index.html</span><br><span class="line">INFO  Generated: archives/2018/03/index.html</span><br><span class="line">INFO  Generated: tags/links/index.html</span><br><span class="line">INFO  Generated: post/Canteen/index.html</span><br><span class="line">INFO  Generated: tags/NUS/index.html</span><br><span class="line">INFO  Generated: img/2019/github.png</span><br><span class="line">INFO  Generated: post/Onboarding/index.html</span><br><span class="line">INFO  Generated: post/Combination/index.html</span><br><span class="line">INFO  Generated: post/Robot/index.html</span><br><span class="line">INFO  Generated: post/blog/index.html</span><br><span class="line">INFO  Generated: post/Master/index.html</span><br><span class="line">INFO  Generated: post/links/index.html</span><br><span class="line">INFO  Generated: post/timestampdiff/index.html</span><br><span class="line">INFO  Generated: img/time3.png</span><br><span class="line">INFO  Generated: img/start.jpg</span><br><span class="line">INFO  Generated: img/robot/tencent.png</span><br><span class="line">INFO  Generated: img/work/8.JPG</span><br><span class="line">INFO  Generated: img/work/7.JPG</span><br><span class="line">INFO  Generated: img/avatar-icon.jpg</span><br><span class="line">INFO  Generated: img/time1.png</span><br><span class="line">INFO  Generated: img/wx-qrcode.png</span><br><span class="line">INFO  Generated: archives/2018/index.html</span><br><span class="line">INFO  Generated: archives/2019/index.html</span><br><span class="line">INFO  Generated: img/146228364162795.jpg</span><br><span class="line">INFO  Generated: lib/font-awesome/HELP-US-OUT.txt</span><br><span class="line">INFO  Generated: css/main.css</span><br><span class="line">INFO  Generated: img/canteen/bird.jpg</span><br><span class="line">INFO  Generated: img/combination3.png</span><br><span class="line">INFO  Generated: img/time4.png</span><br><span class="line">INFO  Generated: img/path.jpg</span><br><span class="line">INFO  Generated: img/time2.png</span><br><span class="line">INFO  Generated: img/work/10.JPG</span><br><span class="line">INFO  Generated: img/work/5.JPG</span><br><span class="line">INFO  Generated: img/work/13.JPG</span><br><span class="line">INFO  Generated: img/work/2.JPG</span><br><span class="line">INFO  Generated: img/work/1.JPG</span><br><span class="line">INFO  Generated: lib/font-awesome/bower.json</span><br><span class="line">INFO  Generated: img/robot/ditou.jpg</span><br><span class="line">INFO  Generated: img/canteen/contact.png</span><br><span class="line">INFO  Generated: img/robot/happy.jpg</span><br><span class="line">INFO  Generated: img/robot/poor.jpeg</span><br><span class="line">INFO  Generated: img/robot/miaohui.jpg</span><br><span class="line">INFO  Generated: img/robot/qidai.jpeg</span><br><span class="line">INFO  Generated: img/robot/python.png</span><br><span class="line">INFO  Generated: img/robot/tuling.png</span><br><span class="line">INFO  Generated: img/canteen/B.png</span><br><span class="line">INFO  Generated: img/robot/dalao.png</span><br><span class="line">INFO  Generated: lib/velocity/velocity.ui.min.js</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.woff2</span><br><span class="line">INFO  Generated: img/robot/result3.jpeg</span><br><span class="line">INFO  Generated: img/canteen/F-319.png</span><br><span class="line">INFO  Generated: img/canteen/F-320.png</span><br><span class="line">INFO  Generated: img/robot/result1.jpeg</span><br><span class="line">INFO  Generated: img/work/9.JPG</span><br><span class="line">INFO  Generated: img/canteen/wen.png</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.woff</span><br><span class="line">INFO  Generated: img/canteen/E1.png</span><br><span class="line">INFO  Generated: lib/velocity/velocity.ui.js</span><br><span class="line">INFO  Generated: lib/velocity/velocity.min.js</span><br><span class="line">INFO  Generated: img/canteen/E-322.png</span><br><span class="line">INFO  Generated: img/canteen/F-321.png</span><br><span class="line">INFO  Generated: img/canteen/F-322.png</span><br><span class="line">INFO  Generated: img/canteen/F-323.png</span><br><span class="line">INFO  Generated: img/canteen/Y-320.png</span><br><span class="line">INFO  Generated: img/canteen/Y-321.png</span><br><span class="line">INFO  Generated: img/canteen/Y-322.png</span><br><span class="line">INFO  Generated: img/work/12.JPG</span><br><span class="line">INFO  Generated: img/robot/result2.jpeg</span><br><span class="line">INFO  Generated: img/work/4.JPG</span><br><span class="line">INFO  Generated: img/canteen/E-319.png</span><br><span class="line">INFO  Generated: js/src/algolia-search.js</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.css.map</span><br><span class="line">INFO  Generated: img/issue.png</span><br><span class="line">INFO  Generated: img/combination4.png</span><br><span class="line">INFO  Generated: img/canteen/E-323.png</span><br><span class="line">INFO  Generated: img/work/3.JPG</span><br><span class="line">INFO  Generated: img/canteen/Y-319.png</span><br><span class="line">INFO  Generated: img/canteen/table.png</span><br><span class="line">INFO  Generated: img/work/11.JPG</span><br><span class="line">INFO  Generated: img/work/15.JPG</span><br><span class="line">INFO  Generated: js/src/affix.js</span><br><span class="line">INFO  Generated: js/src/exturl.js</span><br><span class="line">INFO  Generated: js/src/next-boot.js</span><br><span class="line">INFO  Generated: js/src/scrollspy.js</span><br><span class="line">INFO  Generated: js/src/js.cookie.js</span><br><span class="line">INFO  Generated: js/src/post-details.js</span><br><span class="line">INFO  Generated: js/src/scroll-cookie.js</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.eot</span><br><span class="line">INFO  Generated: img/canteen/Y-323.png</span><br><span class="line">INFO  Generated: img/canteen/E-321.png</span><br><span class="line">INFO  Generated: img/canteen/E-320.png</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.min.css</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.css</span><br><span class="line">INFO  Generated: js/src/motion.js</span><br><span class="line">INFO  Generated: js/src/utils.js</span><br><span class="line">INFO  Generated: js/src/schemes/pisces.js</span><br><span class="line">INFO  Generated: img/work/16.JPG</span><br><span class="line">INFO  Generated: js/src/schemes/muse.js</span><br><span class="line">INFO  Generated: img/work/14.JPG</span><br><span class="line">INFO  Generated: lib/jquery/index.js</span><br><span class="line">INFO  Generated: img/install-steps.gif</span><br><span class="line">INFO  Generated: lib/velocity/velocity.js</span><br><span class="line">INFO  Generated: img/work/17.JPG</span><br><span class="line">INFO  Generated: img/work/18.jpg</span><br><span class="line">INFO  152 files generated in 1.86 s</span><br><span class="line">feiy-mac:fainyang.github.io feiy$ hexo deploy     #部署到 GitHub</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">[master f55c4d1] new hexo_blog</span><br><span class="line"> 34 files changed, 8859 insertions(+), 150 deletions(-)</span><br><span class="line"> create mode 100644 archives/2019/03/index.html</span><br><span class="line"> create mode 100644 archives/2019/index.html</span><br><span class="line"> create mode 100644 categories/index.html</span><br><span class="line"> create mode 100644 categories/学习/index.html</span><br><span class="line"> create mode 100644 categories/生活/index.html</span><br><span class="line"> create mode 100644 img/2019/github.png</span><br><span class="line"> create mode 100644 post/hexo-blog/index.html</span><br><span class="line"> create mode 100644 tags/NUS/index.html</span><br><span class="line"> create mode 100644 tags/hexo/index.html</span><br><span class="line"> rename tags/&#123;life =&gt; links&#125;/index.html (87%)</span><br><span class="line"> create mode 100644 tags/工作/index.html</span><br><span class="line">Enumerating objects: 114, done.</span><br><span class="line">Counting objects: 100% (114/114), done.</span><br><span class="line">Delta compression using up to 4 threads</span><br><span class="line">Compressing objects: 100% (43/43), done.</span><br><span class="line">Writing objects: 100% (69/69), 97.73 KiB | 3.62 MiB/s, done.</span><br><span class="line">Total 69 (delta 33), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (33/33), completed with 17 local objects.</span><br><span class="line">To https://github.com/fainyang/fainyang.github.io.git</span><br><span class="line">   2b7a9ca..f55c4d1  HEAD -&gt; master</span><br><span class="line">Branch 'master' set up to track remote branch 'master' from 'https://github.com/fainyang/fainyang.github.io.git'.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure></p><p>在浏览器输入: yourname.github.io 如果看到博客页面那就大功告成。如果有错误的话，在 GitHub repository Setting 里的 GitHub Pages 可以看到错误信息。  </p><p><img src="/img/2019/publish.png" alt="publish"> </p><h2 id="图片管理"><a href="#图片管理" class="headerlink" title="图片管理"></a>图片管理</h2><p><a href="https://wsgzao.github.io/" target="_blank" rel="noopener">奥哥</a>推荐的一个非常好用的图片管理工具 <a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a> 图片上传+管理新体验。</p><h2 id="踩过的一些坑"><a href="#踩过的一些坑" class="headerlink" title="踩过的一些坑"></a>踩过的一些坑</h2><ol><li>在添加标签和分类的时候，当在source下面创建了文件夹的 index.md 这个文件一定要添加相关的 type. 例如 type: “categories”, type: “tags”.</li><li>添加<a href="https://theme-next.iissnan.com/third-party-services.html#local-search" target="_blank" rel="noopener">搜索功能</a>时，一直转圈加载不出来。是因为自己写的文章中存在不可见字符：一个backspace的字符。 详情可以参考： <a href="http://luffy.studio/2018/04/11/Hexo%E4%B8%ADLocalSearch%E5%8D%A1%E6%AD%BB%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">一</a>&nbsp; <a href="https://www.sqlsec.com/2017/12/hexosearch.html" target="_blank" rel="noopener">二</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于写博客&quot;&gt;&lt;a href=&quot;#关于写博客&quot; class=&quot;headerlink&quot; title=&quot;关于写博客&quot;&gt;&lt;/a&gt;关于写博客&lt;/h2&gt;&lt;p&gt;2018 年我在 GitHub 上看到&lt;a href=&quot;http://blog.dploop.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;强哥的博客&lt;/a&gt;，当时为之心动然后 Fork 了那个 repository。后来搬砖沦为社会人就断更了，在工作之后看到&lt;a href=&quot;https://wsgzao.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;奥哥的博客&lt;/a&gt;，在他的安利之下，把之前的 Jekyll 的博客换成如今的 Hexo-NexT，打算记录下工作的点滴，学习的心得。一是分享，二是方便自己回顾和查阅。
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="hexo" scheme="http://feiyang233.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>实用链接分享</title>
    <link href="http://feiyang233.club/post/links/"/>
    <id>http://feiyang233.club/post/links/</id>
    <published>2018-11-24T16:00:00.000Z</published>
    <updated>2019-07-26T06:33:43.633Z</updated>
    
    <content type="html"><![CDATA[<h2 id="站在大佬们的肩膀上"><a href="#站在大佬们的肩膀上" class="headerlink" title="站在大佬们的肩膀上"></a>站在大佬们的肩膀上</h2><p>工作，学习，健身。 其实我蛮担心自己的发际线<br><a id="more"></a>  </p><h3 id="运维博客"><a href="#运维博客" class="headerlink" title="运维博客"></a>运维博客</h3><ol><li><a href="https://www.zsythink.net/" target="_blank" rel="noopener">朱双印博客</a> iptables, ansible, zabbix 都很不错  </li><li><a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html" target="_blank" rel="noopener">骏马金龙</a> rsync, LVS, nginx, zooKeeper  </li><li><a href="http://www.jinbuguo.com/" target="_blank" rel="noopener">金步国作品集</a> Linux  </li><li><a href="https://wsgzao.github.io/" target="_blank" rel="noopener">HelloDog</a> 大佬同事奥哥的博客 </li></ol><h3 id="实用文档"><a href="#实用文档" class="headerlink" title="实用文档"></a>实用文档</h3><ol><li><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">ansible</a> 批量操作的好帮手  </li><li><a href="https://www.zabbix.com/documentation/current/start" target="_blank" rel="noopener">zabbix</a> 实时监控了解一下  </li><li><a href="https://www.elastic.co/guide/index.html" target="_blank" rel="noopener">ELK</a> 收集过滤检索神器  </li><li><a href="https://docs.docker.com/" target="_blank" rel="noopener">Docker</a> 方便快速的容器 </li><li><a href="https://kubernetes.io/zh/docs/" target="_blank" rel="noopener">Kubernetes</a> DevOps 玩转容器部署</li></ol><h3 id="学习一个"><a href="#学习一个" class="headerlink" title="学习一个"></a>学习一个</h3><ol><li><a href="https://www.imooc.com/" target="_blank" rel="noopener">慕课网</a> 程序员的梦工厂</li><li><a href="http://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a> 学的不仅是技术，更是梦想   </li><li><a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">w3school</a> Web 技术教程</li></ol><h3 id="提高生产力"><a href="#提高生产力" class="headerlink" title="提高生产力"></a>提高生产力</h3><ol><li><a href="https://trello.com" target="_blank" rel="noopener">任务管理看板</a> Trello 免费无广告</li><li><a href="https://dbngin.com/" target="_blank" rel="noopener">数据库引擎</a> Free All-in-One Database Version Management Tool</li><li><a href="https://tableplus.io/?utm_source=dbngin" target="_blank" rel="noopener">TablePlus</a> Database management made easy 和 2 中的数据库引擎可以自动关联。</li></ol><h3 id="好书推荐"><a href="#好书推荐" class="headerlink" title="好书推荐"></a>好书推荐</h3><ol><li><a href="http://blog.dploop.org/" target="_blank" rel="noopener">强哥</a> 安利的 <a href="https://vonng.gitbooks.io/ddia-cn/content/" target="_blank" rel="noopener">设计数据密集型应用</a></li><li><a href="https://mp.weixin.qq.com/s/FqYpxGoWd_POdGa63_n_MQ" target="_blank" rel="noopener">这或许是东半球分析十大排序算法最好的一篇文章</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;站在大佬们的肩膀上&quot;&gt;&lt;a href=&quot;#站在大佬们的肩膀上&quot; class=&quot;headerlink&quot; title=&quot;站在大佬们的肩膀上&quot;&gt;&lt;/a&gt;站在大佬们的肩膀上&lt;/h2&gt;&lt;p&gt;工作，学习，健身。 其实我蛮担心自己的发际线&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="links" scheme="http://feiyang233.club/tags/links/"/>
    
  </entry>
  
  <entry>
    <title>新加坡留学分享</title>
    <link href="http://feiyang233.club/post/Master/"/>
    <id>http://feiyang233.club/post/Master/</id>
    <published>2018-08-10T16:00:00.000Z</published>
    <updated>2019-10-18T02:33:35.976Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要留学"><a href="#为什么要留学" class="headerlink" title="为什么要留学"></a>为什么要留学</h2><p>这篇博客主要分享我的新加坡水硕留学经历，希望能对你有一点点帮助。<br><a id="more"></a><br>更新：1.<a href="https://mp.weixin.qq.com/s/yQ1Q3TKZ2IrXR59Au5k7qA" target="_blank" rel="noopener">史上最全 NUS 硕士项目攻略</a>  2.<a href="https://mp.weixin.qq.com/s/zeudXLHsmdIXIlMt-AOuBw" target="_blank" rel="noopener">史上最全的 NTU 硕士项目攻略</a></p><p>留学的优势：  </p><ul><li><code>时间短</code>，新加坡的授课型 Master 一年就读完。因为 EE 学院是按照学期收学费的，最快一年修完。大家当然都早点修完省学费。当国内同届的同学毕业时，你已经是有 2年工作经验的初级混子了。    </li><li><code>毕业容易</code>，毕业要求是修满 10 门课，没有导师。轻轻松松考完 10 门课混水硕文凭，考试是按照正态分布评分的，想挂科太难了。当然，你也可以选一个project跟着导师做一年项目，一个project抵两门课的学分。不要抱太大的期望，关键还是靠自学。比如我自己就选了<a href="https://github.com/fainyang/EE_Project/blob/master/mse%20sys/README.md" target="_blank" rel="noopener">项目</a>，认识一个不错的导师，受益良多。  </li><li><code>读博容易</code>， 读完一年硕士，再去申请博士，比本科毕业申请直博容易太多，而且有机会面对面和导师交流，提前了解实验室的情况。我一届的 master 同学，想读博的，最后硕士毕业都梦想成真读博了。</li><li><code>长见识</code>，肉身翻墙出来看看世界之大，结识外国的朋友们，体验东南亚文化，然后你就知道还是祖国安逸，我多么想念四川美食。   </li><li><code>当跳板</code>，如果想出国工作，那么出国读书无疑是最好的一条路，毕业后留下来找工作。当然也有 Master 毕业再去美国读博的。   </li><li><code>海龟光环</code>，像华为的海外招聘回国工作的起薪比国内稍高一点。还有一个巨大的优势就是走<a href="http://xds.gcdr.gov.cn/home/infodetail.jsp?id=8a8048495e7cbae3015ea8a346f80013" target="_blank" rel="noopener">海外选调生</a>考公务员竞争小，学而优则仕。  </li><li><code>出游方便</code>，因为新加坡是东南亚的经济中心，飞东南亚的航班又多又便宜。读书期间假期飞东南亚各国旅游，马来西亚，泰国，越南，印度尼西亚，菲律宾都非常方便。例如去年 recess week 学校假期我去槟城往返一共才 350 人民币的机票。</li></ul><p>留学的劣势：  </p><ul><li><code>花费贵</code>，硕士读下来至少 18 万人民币的学费，每个月生活费至少五千人民币。新加坡留学贷款，可以在学校里贷款 8 千新币，相当于 4 万人民币，利息很低，工作以后慢慢还。  </li><li><code>压力大</code>，虽然是水硕，但是全英文环境最开始还是有点不适应。如果选了 project，还要做项目写论文答辩。相当于把国内三年完成的事情全部压缩到一年内完成，十分的匆忙。  </li><li><code>水土不服</code>，这个因人而异。来新加坡读书有的同学瘦了十多斤，有的冒痘痘，有的脱发。但大家相同的感受就是太晒了（其实温度还好，最高 33° 左右）。  </li></ul><h2 id="什么样的人适合来新加坡留学"><a href="#什么样的人适合来新加坡留学" class="headerlink" title="什么样的人适合来新加坡留学"></a>什么样的人适合来新加坡留学</h2><ul><li>安全第一，<a href="http://www.shicheng.news/show/225993" target="_blank" rel="noopener">新加坡治安</a>在世界数一数二了。在大学里去食堂吃饭把电脑，手机放图书馆桌上很安全。在我读书的一年里，没有听说中国留学生有谁遇到失窃的。晚上大街上走也很安全的。（相比于犯罪分子，倒不如小心野生动物，蛇，蜥蜴那些）</li><li>英语差的人，比如我自己（雅思考了三次才上 6.5）。其实新加坡留学一年生活中，除了上课，和导师，外国人交流用英文。平时都用中文，本地华人的中文也非常好。（其实这也是缺点，读书一年，发现自己的口语没有怎么提高）</li><li>怕离家太远。新加坡回国非常快，飞中国南方的城市大约4个小时，而且往返机票（非节假日）大约两千多人民币。</li><li>负担不起美国留学，又想出来看看的人，比如我自己。新加坡的学费和生活费相对便宜。 </li><li>国内考研失败，但想继续读研的同学，出国读研肯定比二战的压力小太多了。国内考研每年一次，国外读研申请分两次，有秋季和春季。 </li></ul><h2 id="留学的条件"><a href="#留学的条件" class="headerlink" title="留学的条件"></a>留学的条件</h2><p>就三点：学科成绩，英语成绩，留学费用。  </p><ul><li>学科成绩：NUS NTU 两所学校 Master 招生大部分都是 985，211的毕业生。NUS ECE学院基本上要本科成绩平均分85+，NTU EEE学院要求会稍微低一点。  </li><li>英语成绩：<a href="https://www.eng.nus.edu.sg/graduate/graduate-coursework-based-programmes/msc-application/admission-requirements/" target="_blank" rel="noopener">NUS</a> 雅思最低 6 分，<a href="http://www.eee.ntu.edu.sg/Programmes/ProspectiveStudents/Graduate/MOE_sub_MSc/Pages/Admission_Reqts.aspx" target="_blank" rel="noopener">NTU</a> 雅思最低 6.5 分 但最好 NUS 也是6.5 分。 这样的话开学就不用额外再上英语课。雅思的备考，可以报班，也可以自学。推荐APP: 雅思哥，小站雅思。个人的建议是英语不好的同学还是花钱报班吧，老师带着入门快点。  </li><li>留学费用：今年2018 NUS Master 入学的<a href="http://www.nus.edu.sg/registrar/info/gd/GDTuitionCurrent.pdf" target="_blank" rel="noopener">费用</a>国际留学生一共是36,750新币。 以前是有 government-subsidised graduate programmes 补贴的(减免一半的学费)，读下来学费加生活费一年至少18+7=25万。申请的时候还需要银行开具存款证明，每年的标准不同，大概在人民币 15 万左右。 卖身契详情请点击<a href="http://www.nus.edu.sg/admissions/graduate-studies/scholarships-financial-aid-and-fees/financial-aid-schemes/service-obligation-scheme.html" target="_blank" rel="noopener">NUS 卖身契介绍</a> 或者 <a href="https://tgonline.moe.gov.sg/tgis/normal/studentViewServiceObligationSubsidyInfo.action" target="_blank" rel="noopener">新加坡教育局卖身契介绍</a>，目前的消息是从 2020 年入学开始就没有授课硕士的卖身契了<blockquote><p>From AY2019 onwards, all graduate coursework programmes are not eligible for the SO Scheme with exception of following programmes which are not eligible for the SO scheme only from AY2020 onwards:Master of Science (Electrical Engineering) 因为违约的人还是有很多，详情请看<a href="https://mp.weixin.qq.com/s/ztldmcbuGCQhVSwToHeBQQ" target="_blank" rel="noopener">新闻</a></p></blockquote></li></ul><h2 id="如何申请"><a href="#如何申请" class="headerlink" title="如何申请"></a>如何申请</h2><ul><li><code>找中介</code>，适用于时间匆忙，想花钱省事的同学们。中介费大概在2万左右，中介老师会帮你写简历，文书，推荐信，邮寄申请材料等。推荐找大机构知名的中介，私人中介小心被坑。就算找了中介，自己还是要上点心，看看中介帮写的材料，注意申请的截止时间等。</li><li><code>DIY</code>，适用于时间充足，想省钱的同学。作为 DIY 过来人，新加坡和香港的申请都比较简单，申请的 requirement 网上都有，截止时间也都写的明明白白，只是需要自己细心的去寻找。如果有学长学姐指导，老司机带是最稳的。要自己 DIY 记得让父母申请一张 <code>Visa</code> 或者 <code>Master Card</code>，因为申请缴费的时候是不能用银联卡的。<a href="http://bbs.gter.net/forum-812-1.html" target="_blank" rel="noopener">寄托论坛</a>上也有前辈们分享如何申请的。</li><li>申请所需资料：本科成绩单，本科在读证明，语言成绩单(雅思或托福)，个人简历，2 封推荐信，个人陈述（申请的理由，规划那些），银行存款证明。  </li><li>申请分秋季入学和春季入学。秋季是每年的一月开始申请，先在学校官网上申请，最后把所需的资料邮寄到学校，顺丰到新加坡只需 3 天。  </li></ul><h2 id="入学前准备"><a href="#入学前准备" class="headerlink" title="入学前准备"></a>入学前准备</h2><p>秋季入学是每年的五月初发 offer，寄托论坛也有 <a href="http://www.gter.net/offer/index.html" target="_blank" rel="noopener">offer榜</a>，可以看看其他人的录取情况。很多人都会收到两所学校的录取，那么上 NUS 还是选 NTU 呢？首先当然看看自己所读的专业哪个学校好啦，其实两所学校都差不多。NUS 在本地人眼里更好一点，离城里近，但申请不到宿舍，ECE 学院选课自由，有点像国内的按大类招生。 NTU 坐落在郊区，能申到宿舍。食堂十分的优秀，比 NUS 好吃。环境优美，有野猪等野生动物出没。</p><p>在收到 offer 后最重要的一件事情就是：<code>申请宿舍</code>，NUS Master 申请宿舍成功率低，因为 NUS 地方小宿舍少，几乎在 NUS 读 Master 的同学们都是在外面租房子，一般都是六个人租一整套三室一厅，两个人 share 一间房。租房子必须找中介，<a href="http://www.propertyguru.com.sg/" target="_blank" rel="noopener">Property Guru</a> 和 <a href="https://www.99.co/" target="_blank" rel="noopener">99co</a>新加坡本地发布平台，房源多。查找 NUS 周围的房源，然后联系中介看房，最后签合同。最近还有一个不错的小程序叫：小坡岛新加坡租房。一般 share 住房租人均在 450-600 新币/月，水电气网大约 50 新/月。 </p><p>NTU 就很优秀了，人人都能申请到宿舍。宿舍的配套设施很完善，厨房，洗衣房，自习室，健身房，食堂都有。宿舍价格根据宿舍类型定价 300-600 新币/月。  </p><p>把住的地方提前搞定后，等学校帮忙办理好学生签证，接下来就是收拾行李准备留学啦。  </p><ul><li>新加坡的手机网络，国内全网通手机就 OK，最好提前在淘宝买一张 3天无限流量卡。等安顿好了，再去 711、Cheers、手机店买本地 prepaid 电话卡，等有了住址证明再办理 postpaid 电话卡，比如 <a href="https://zero1.sg/" target="_blank" rel="noopener">zero1</a> 无限流量电话卡。    </li><li>必备的APP: Grab（东南亚滴滴，打车方便，可以绑定支付宝付款）SG Buses or MyTransport (坐公交车必备，查询等车时间) Google Maps (出国当然用谷歌)  </li><li>银行卡：推荐办理在境外取现不收取手续费的银联卡。比如华夏银行，成都银行金卡等，在新加坡办理银行卡一定需要住址证明，这点非常重要，没有新加坡本地银行卡生活体验很差，不能扫码支付，最终体会硬币多的烦恼。   </li><li>机票：廉价航空没有行李额！留学生过来读书肯定都带了箱子，等到机场再买行李额要贵哭。我建议是不要买廉价航空，川航、国航都是两件行李额，南航是一件。  </li><li>新加坡全年夏天，衣服最多带一件外套抵御教室里寒冷的空调。这面的优衣库，H&amp;M 价格和国内差不多。  </li><li>再安利一下同事奥哥写的<a href="https://wsgzao.github.io/post/singapore/" target="_blank" rel="noopener">新加坡生活指南</a>，网站有可能被墙了。 </li></ul><h2 id="学生生活"><a href="#学生生活" class="headerlink" title="学生生活"></a>学生生活</h2><ul><li>报到：到新加坡安顿好以后，就去学校注册报到，然后就是校医院体检（主要检查肺结核和 HIV ）。接下来还有半个月开学，可以出去逛一逛，熟悉一下环境。  </li><li>选课：开学之前要网上选课，这个根据自己的爱好和学长学姐的建议，不要踩雷。可以选择 10门课，也可以选择 8门课 + 1个项目。  </li><li>上课：时间都是在晚上（本科课程在白天，NUS 可以跨选本科的课程，NTU 不能选本科课程），因为有非全日制的同学（人家白天要上班的），一周最多也就5节课。 每周都会有作业，有的 project 还需要小组组队完成。 编程作业 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>了解一下，说不定有答案。  </li><li>考试：在选课时就能看到期末考试日期，所以可以提前买回家的机票呀。考试时间一般是 2-2.5 小时，有开卷，闭卷，一页纸。评分按正态分布，想挂科和得 A+ 一样的困难。 混个水硕还是非常容易的。</li><li>项目： 选一个导师跟着做一年。NUS 最后要写论文答辩，NTU 写论文不答辩。确认过眼神，遇上对的老师收获巨大，选错就以泪洗面！</li><li>毕业要求：总学分平均绩点大于3.0， 3.0 我上我也行！（满绩是5.0 允许单科低于3.0 只要不是 F 就行，一般缺考才会得 F ） </li><li>就业去向：留下来的大多去了半导体和互联网公司，回国大部分都去互联网公司，少部分走<a href="http://xds.gcdr.gov.cn/home/infodetail.jsp?id=8a8048495e7cbae3015ea8a346f80013" target="_blank" rel="noopener">海外选调生</a>当公务员。 2019 年，我刚刚成功内推一个我电 14 级的通信学妹入职我司。</li><li>继续读博： 其实有很大比例的同学是把新加坡水硕当跳板，硕士毕业后去 NUS NTU 读博，还有去美国读博的。先读了 master 再读 PhD 比较容易，我认识的同学中，想读 PhD 的最终都梦想成真，只是有的老师手里名额多，硕士毕业马上入学 PhD。有的导师名额少，需要先做 RA 排队等待。</li><li>提醒一下：女生在校期间可以去校医院预约打 HPV 疫苗。学生卡还有很多优惠，比如学生邮箱免费注册 jetbrains 全家桶，环球影城半价，看电影半价，苹果学生优惠等。</li></ul><p>我的学生日常：白天早起去学校图书馆自习，起晚了太阳晒呀。白天自习，晚上上课。每周和导师一次 meeting 汇报情况。周末做作业、项目，偶尔出去聚餐。 如今回想起来，白天不上课应该去找一个实习做一做的，这样有助于就业。  </p><p>第二学期就比较忙一点，因为要找工作。每学期学校都有招聘会，不容错过。其他找工作的途径，在我上一篇博客咸鱼入海Sea里有。新加坡半导体和互联网就业相对容易，新加坡工程系毕业的 Master 起薪大概在 3600-4500 新币/月。 新加坡<a href="http://www.yan.sg/zhidaodenaxishi/" target="_blank" rel="noopener">个人所得税</a>很低。Master 刚毕业一年大概就交 600 新的税。 更新：2018 年，工作半年我自己交的税是 72 新币。<br>在新加坡上班，目前我自己的感受：互联网比国内轻松一点，很少加班，周末双休。 半导体上班同学的感受：<a href="https://baike.baidu.com/item/micron/10950612?fr=aladdin" target="_blank" rel="noopener">Micron</a>上班 8小时，加班有工资美滋滋。 <a href="https://baike.baidu.com/item/%E5%85%89%E5%AE%9D%E7%A7%91%E6%8A%80%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8/8844437" target="_blank" rel="noopener">Liteon</a> 同学感觉就像在国企上班一样，每天 5:30pm 下班，闲的都想回学校再读一个part-time Phd.如果能有幸进入 全球大厂例如 Facebook（包三餐，早9:30晚6），Google，Apple,或者新加坡的国企（早10晚6），可能真的会乐不思蜀了。</p><p>曾经的我，以为出国遥不可及，担心给家里带来巨大的负担。如今看来一切付出都是值得的，至少在我的留学圈子里，没有任何一个同学后悔出来看一看。很惭愧，只做了一点微小的贡献。    </p><h2 id="最后祝大家前程似锦，梦想成真"><a href="#最后祝大家前程似锦，梦想成真" class="headerlink" title="最后祝大家前程似锦，梦想成真"></a>最后祝大家前程似锦，梦想成真</h2><p>感谢阅读，如果看完文章的你，还对新加坡留学有疑问的话，可以加我的QQ: 601300870</p><h2 id="NUS-学生邮箱好处多"><a href="#NUS-学生邮箱好处多" class="headerlink" title="NUS 学生邮箱好处多"></a>NUS 学生邮箱好处多</h2><p>NUS 的学生邮箱 6 个月强制重置邮箱密码一次。我在工作后太懒，忘记了改密码。发邮件给学校的 IT Center 结果没有回复我。谷歌一下找到了两个网站可以，其中一个是<a href="https://myaces.nus.edu.sg/passwordreset/index.html" target="_blank" rel="noopener">NUS-ID Password Reset</a>, 在这个网站上我重置失败，原因未知。还有一个是 <a href="https://alummail.nus.edu.sg/RequestResetPassword.aspx" target="_blank" rel="noopener">Reset Password - NUS AlumMAIL Portal</a>，在这个网上我重置邮箱密码成功了。<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191018102737.png" alt><br>学生邮箱还可以用来申请 <a href="https://www.jetbrains.com" target="_blank" rel="noopener">jetbrains</a> 全家桶，每年一续<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191018103016.png" alt><br>还可以使用一些微软的工具，如下图<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191018103020.png" alt></p><p>还有一点是，可以使用全球大学的校园网 Eduroam 详情请点击 <a href="https://mp.weixin.qq.com/s/N_5EZ8n-2v5fNXHfyI6QGg" target="_blank" rel="noopener">NUS WiFi 介绍</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要留学&quot;&gt;&lt;a href=&quot;#为什么要留学&quot; class=&quot;headerlink&quot; title=&quot;为什么要留学&quot;&gt;&lt;/a&gt;为什么要留学&lt;/h2&gt;&lt;p&gt;这篇博客主要分享我的新加坡水硕留学经历，希望能对你有一点点帮助。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="NUS" scheme="http://feiyang233.club/tags/NUS/"/>
    
  </entry>
  
  <entry>
    <title>咸鱼入海Sea</title>
    <link href="http://feiyang233.club/post/Onboarding/"/>
    <id>http://feiyang233.club/post/Onboarding/</id>
    <published>2018-07-03T16:00:00.000Z</published>
    <updated>2019-06-06T03:09:07.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="求职经历"><a href="#求职经历" class="headerlink" title="求职经历"></a>求职经历</h2><p>今年研究生毕业，在经历了一波三折的找工作之后。我这个咸鱼最终也找到了一份心仪的工作，<a id="more"></a>在<a href="https://www.seagroup.com/home" target="_blank" rel="noopener">sea</a>公司做Operation Enginner. 我是在春季的校园招聘会上投的简历，今天还翻到了曾经在招聘会上领取的资料<br><img src="/img/work/1.JPG" alt="sea1">  </p><p>一般找工作的途径：  </p><ol><li>找学长学姐内推  </li><li>通过校园招聘会现场投简历  </li><li>公司官网在线投简历  </li><li>招聘网站，像<a href="https://www.monster.com.sg/" target="_blank" rel="noopener">Monster</a>，<a href="https://www.glassdoor.com/index.htm" target="_blank" rel="noopener">Glassdoor</a>，<a href="https://www.jobstreet.com.sg/" target="_blank" rel="noopener">Jobstreet</a>.  </li><li>如果是NUS学生，还可以通过<a href="https://nus-csm.symplicity.com/students/index.php?s=home" target="_blank" rel="noopener">NUS校园求职网站</a>  </li></ol><p>总的来说，有内推是最好的，响应速度快，简历不容易被刷。其次是校园招聘会和校园求职网，都是校招，难度也低。 公司官网也可以，但要自己去一家家的找。专门的求职网站选择就很多，但自己要耐心的筛选（太多不知道的公司了，我曾经就被一家小作坊坑了，去面试的时候被那工作环境震惊）.<br>心得体会，应届生进入社会第一课：<code>虚心好学，接受自己的平庸。</code>早做准备，明白自己想干什么。举例子，如果打算未来从事某一项工作，那就去看看网上这份工作的描述，对求职者的要求是什么。（PS:简历也是很重要的一部分）祝大家求职顺利!  </p><h2 id="公司介绍"><a href="#公司介绍" class="headerlink" title="公司介绍"></a>公司介绍</h2><p><a href="https://www.seagroup.com/home" target="_blank" rel="noopener">Sea</a>是东南亚的一家互联网公司，旗下有garena（东南亚游戏代理：王者荣耀，英雄联盟等），shopee（东南亚的电商），airpay（想做东南亚的支付宝）。 公司的员工都很年轻，几乎都是美丽小姐姐、帅气小哥哥们，超级nice的。公司的环境也相当的棒：<br><img src="/img/work/2.JPG" alt="sea2">  </p><p><img src="/img/work/3.JPG" alt="sea3">  </p><p><img src="/img/work/4.JPG" alt="sea4"> </p><h3 id="入职大礼包"><a href="#入职大礼包" class="headerlink" title="入职大礼包"></a>入职大礼包</h3><p><img src="/img/work/5.JPG" alt="sea5">  </p><p>还有互联网公司标配的Mac Pro<br><img src="/img/work/6.jpg" alt="sea6">  </p><p>两个戴尔 U2417H 显示器<br><img src="/img/work/7.JPG" alt="sea7">  </p><h3 id="公司福利"><a href="#公司福利" class="headerlink" title="公司福利"></a>公司福利</h3><p><img src="/img/work/8.JPG" alt="sea8">  </p><p>每个月还有两次马杀鸡按摩<br><img src="/img/work/9.JPG" alt="sea9">  </p><p>还有最受好评的小卖部，视频<a href="https://www.bilibili.com/video/av26321390" target="_blank" rel="noopener">链接</a>在这里<br><img src="/img/work/10.JPG" alt="sea10">  </p><p><img src="/img/work/11.JPG" alt="sea11">  </p><p><img src="/img/work/12.JPG" alt="sea12">  </p><p><img src="/img/work/13.JPG" alt="sea13">  </p><p><img src="/img/work/14.JPG" alt="sea14">  </p><p><img src="/img/work/15.JPG" alt="sea15">  </p><p><img src="/img/work/16.JPG" alt="sea16">   </p><p>早上还有一盒水果和晚上的工作餐<br><img src="/img/work/17.JPG" alt="sea17"><br><img src="/img/work/18.jpg" alt="sea18"> </p><p>环境福利虽好，但每晚大概吃完饭都八点了，搬砖狗住！  </p><h2 id="谨以此文记录咸鱼开启职场生活"><a href="#谨以此文记录咸鱼开启职场生活" class="headerlink" title="谨以此文记录咸鱼开启职场生活"></a>谨以此文记录咸鱼开启职场生活</h2><p>公司的职位在<a href="http://career.seagroup.com/" target="_blank" rel="noopener">这里</a>，需要内推的欢迎联系我email: <a href="mailto:fainyang@foxmail.com" target="_blank" rel="noopener">fainyang@foxmail.com</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;求职经历&quot;&gt;&lt;a href=&quot;#求职经历&quot; class=&quot;headerlink&quot; title=&quot;求职经历&quot;&gt;&lt;/a&gt;求职经历&lt;/h2&gt;&lt;p&gt;今年研究生毕业，在经历了一波三折的找工作之后。我这个咸鱼最终也找到了一份心仪的工作，
    
    </summary>
    
    
      <category term="工作" scheme="http://feiyang233.club/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>NUS食堂排队指南</title>
    <link href="http://feiyang233.club/post/Canteen/"/>
    <id>http://feiyang233.club/post/Canteen/</id>
    <published>2018-03-31T16:00:00.000Z</published>
    <updated>2019-07-12T04:04:42.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="人生苦短，珍惜时间"><a href="#人生苦短，珍惜时间" class="headerlink" title="人生苦短，珍惜时间"></a>人生苦短，珍惜时间</h2><p>这个其实是我读研在 NUS 跟着导师做的项目，自认为还是比较有趣的。在食堂吃饭，最怕长队漫漫，还有狗粮作伴。人生很多事情因为慢慢等待就错过了，本来打算去食堂吃某一样菜，却因为漫长的排队等待而望而却步。<br>所以嘛，年轻人要想少留遗憾，就要主动出击，爱要提前行动呀！<br><a id="more"></a></p><p><img src="/img/canteen/bird.jpg" alt="鸟"><br>本文主要基于WiFi历史数据，分析NUS 工学院、文学院、YIH食堂的规律（本来最初还计划有computing食堂的，奈何系统上没有相关的信息记录）。<br>用数据说话，分析每天食堂的拥挤时段给大家参考，以便大家减少排队时间，提高用餐体验。  </p><p>假设每个用户只有一个设备（在食堂用电脑的也比较少），并且在校园内大多数人都会打开WiFi。我们根据WiFi的连接情况，可以间接的判断人群密度，停留时间，流入流出速率。人群密度只需要统计每分钟连接WiFi的设备数即可。停留时间是由思科WiFi系统记录设备第一次连接WiFi的时间和当前时间作差得出，当设备离线超过15min系统会刷新first located time。流入流出速率则是比较前后两分钟mac address的不同来判断得出。</p><h3 id="首先举个例子好啦"><a href="#首先举个例子好啦" class="headerlink" title="首先举个例子好啦"></a><code>首先举个例子好啦</code></h3><p>WiFi原始数据如下图所示： 可以在<a href="https://datacommons.nus.edu.sg/Default" target="_blank" rel="noopener">NUS Data Commons</a>用NUS ID登录后在Cisco MSE下载。<br><img src="/img/canteen/table.png" alt="Table"></p><p>经过分析处理，得到的结果图如下所示：<br><img src="/img/canteen/E1.png" alt="E1">  </p><ul><li>蓝色线条 代表总人数</li><li><code>红色</code>线条 代表平均停留时间</li><li>绿色线条 代表流入率</li><li>黑色线条 代表流出率</li></ul><p>上图是周一E1 6楼3月19号周一的情况。首先蓝色线条有5个峰值，而红色线条有5段逐渐增加的区间。两者结合，我们可知E1该天有5个上课时间段：9AM-11AM, 12PM-2PM, 2PM-4PM, 4PM-6PM, 6PM-9PM。<br>因为在上课时间，总人数肯定比较多，随着课堂的进行，dwell time停留时间也在逐渐增加。在课堂的开始和下课阶段，流入和流出率较大。晚上的课大多数都是master课程，老师一般会在7:30左右课间休息，8:30左右下课。图中的结果和作者亲身经历也完全吻合，侧面说明我们处理分析数据的方法是正确的。</p><h3 id="那如何分析食堂的数据呢？"><a href="#那如何分析食堂的数据呢？" class="headerlink" title="那如何分析食堂的数据呢？"></a>那如何分析食堂的数据呢？</h3><p>大家肯定想知道，什么时间去吃饭，<code>不算太早但排队的人也不多呢？</code><br>本文分析了2018年春季第10周（3.19-3.23）的数据，采用的分析方法是:  </p><ul><li><p>一般在总人数陡增前到达食堂是比较<code>稳</code>的，迟了队伍前面就是千军万马。<br><img src="/img/canteen/wen.png" alt="稳"> </p></li><li><p>平均停留时间开始急速下降的时候，因为如果没有顾客，食堂的device平均停留时间会由于食堂员工的存在随时间不断增加。当有大量学生来时，平均停留时间会因为基数的增大而开始下降。</p></li><li>流入流出率这里不采用，是因为根据作者的亲身经历来看，每分钟的流入流出率因为不可能那么大。误差估计是WiFi系统对于每分钟probing（探测）设备的统计误差，时有时无造成的。</li></ul><h2 id="工学院食堂"><a href="#工学院食堂" class="headerlink" title="工学院食堂"></a>工学院食堂</h2><p>Engineer师生常去的食堂，价格也超级便宜。队伍比较长的一般是西餐，日本料理等。感觉这学期在E1的课比较少，每周只有周一晚上才去吃饭。下图是周一工学院食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/E-319.png" alt="E">  </p><p>从图中我们可以看出，在<code>11:31</code>时，蓝色线条总人数开始迅速增加，红色线条平均停留时间也开始下降，这不正是暴风雨前的预兆吗？说明这个时间是用餐高峰期的开始。同样的，晚餐的用餐高峰期是从<code>5:20</code>开始的。</p><h2 id="文学院食堂"><a href="#文学院食堂" class="headerlink" title="文学院食堂"></a>文学院食堂</h2><p>文学院食堂作者最爱的是海南鸡饭，三楼凉拌功夫的麻辣香锅也很不错。作者曾经有一次亲身经历，11:40到文学院食堂，人多到我想放弃。。。下图是周一文学院食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/F-319.png" alt="F">  </p><p>文学院食堂从<code>11:20</code>，平均停留时间就开始下滑，<code>11:30</code>后总人数也是急剧攀升。说明这个11:20-11:30时间是用餐高峰期的开始。 晚餐虽然呈现出变化趋势，但真的一点都不拥挤。。。  </p><h2 id="YIH食堂"><a href="#YIH食堂" class="headerlink" title="YIH食堂"></a>YIH食堂</h2><p>YIH的mixed food每次人都超级多，排队时还经常可以吃狗粮，美滋滋。但YIH相比于前面两个食堂，人数明显是少很多，因为食堂本来就不是很大。下图是周一YIH食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/Y-319.png" alt="Y"> </p><p>从上图可以看出，午餐高峰时间从<code>11:20</code>开始，总人数开始增加，平均停留时间迅速减小，这不正是千军万马来临前的预兆吗？ 同样的，晚餐高峰是从<code>5:29</code>开始的。</p><h2 id="表格总结-划重点"><a href="#表格总结-划重点" class="headerlink" title="表格总结 划重点"></a>表格总结 <code>划重点</code></h2><p>每个食堂都分析了一周5天的数据，结果汇总在下表：<br><img src="/img/canteen/B.png" alt="B">   </p><p><code>敲黑板:</code>一般来说中午下课时间大概是在<code>11:30</code>，所以赶在这之前去食堂，人都会比较少。晚上除了YIH，其余两个食堂也不怎么拥挤。</p><h3 id="剩下的图：周二到周五"><a href="#剩下的图：周二到周五" class="headerlink" title="剩下的图：周二到周五"></a>剩下的图：周二到周五</h3><p><img src="/img/canteen/E-320.png" alt="E2"><br><img src="/img/canteen/E-321.png" alt="E3"><br><img src="/img/canteen/E-322.png" alt="E4"><br><img src="/img/canteen/E-323.png" alt="E5"> </p><p><img src="/img/canteen/F-320.png" alt="F2"><br><img src="/img/canteen/F-321.png" alt="F3"><br><img src="/img/canteen/F-322.png" alt="F4"><br><img src="/img/canteen/F-323.png" alt="F5">   </p><p><img src="/img/canteen/Y-320.png" alt="Y2"><br><img src="/img/canteen/Y-321.png" alt="Y3"><br><img src="/img/canteen/Y-322.png" alt="Y4"><br><img src="/img/canteen/Y-323.png" alt="Y5">  </p><h2 id="最后的吐槽"><a href="#最后的吐槽" class="headerlink" title="最后的吐槽"></a>最后的吐槽</h2><p>最后的一个月，马上就要毕业了，最近忙的没有时间写博客。课程，项目，论文，期末考试，找工作都是一座座艰难的大山。狗住Uo･ｪ･oU加油٩(●˙▿˙●)۶…⋆ฺ  </p><p>PS: 如果对这个分析有更好的建议，或者发现了错误之处。欢迎交流，联系方式:</p><ul><li>QQ: 601300870</li><li>Email: <a href="mailto:fainyang@foxmail.com" target="_blank" rel="noopener">fainyang@foxmail.com</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;人生苦短，珍惜时间&quot;&gt;&lt;a href=&quot;#人生苦短，珍惜时间&quot; class=&quot;headerlink&quot; title=&quot;人生苦短，珍惜时间&quot;&gt;&lt;/a&gt;人生苦短，珍惜时间&lt;/h2&gt;&lt;p&gt;这个其实是我读研在 NUS 跟着导师做的项目，自认为还是比较有趣的。在食堂吃饭，最怕长队漫漫，还有狗粮作伴。人生很多事情因为慢慢等待就错过了，本来打算去食堂吃某一样菜，却因为漫长的排队等待而望而却步。&lt;br&gt;所以嘛，年轻人要想少留遗憾，就要主动出击，爱要提前行动呀！&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="NUS" scheme="http://feiyang233.club/tags/NUS/"/>
    
  </entry>
  
  <entry>
    <title>小白也会用的微信机器人</title>
    <link href="http://feiyang233.club/post/Robot/"/>
    <id>http://feiyang233.club/post/Robot/</id>
    <published>2018-03-08T16:00:00.000Z</published>
    <updated>2019-03-15T03:00:12.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="天下武功，唯快不破"><a href="#天下武功，唯快不破" class="headerlink" title="天下武功，唯快不破"></a>天下武功，唯快不破</h2><p>这一篇文章是讲解如何安装微信自动回复机器人，独乐乐不如众乐乐。<br><code>画风突转，先来一段鸡汤：</code>并不是每个人都值得你腾出手中的事情秒回，如果有那么一个人，让你情不自禁地秒回了，说明那个人何其重要。<br>或者说，你被别人秒回，又是多么温暖的存在啊。<br>他秒回的瞬间，仿佛在说：你在我心中，很重要。<br><a id="more"></a></p><p><img src="/img/robot/miaohui.jpg" alt="秒回"></p><blockquote><p>只可惜我只是一个机器人，惊不惊喜，意不意外？</p></blockquote><p>废话不多说，先来看一看效果图：</p><p><img src="/img/robot/result1.jpeg" alt="举例子图片1"> </p><p><img src="/img/robot/result2.jpeg" alt="举例子图片2"></p><p><img src="/img/robot/result3.jpeg" alt="举例子图片3"></p><p>看完是不是有点小激动呢？</p><p><img src="/img/robot/qidai.jpeg" alt="激动的搓搓小手"></p><p>老司机通道：<code>会python的直接往下拉--看运行机器人程序</code></p><h2 id="第一步安装python环境"><a href="#第一步安装python环境" class="headerlink" title="第一步安装python环境"></a>第一步安装python环境</h2><p>俗话说，人生苦短，我用python。安装python就像安装游戏、QQ一样，去<a href="https://www.python.org/downloads/" target="_blank" rel="noopener">官网</a>下载安装包，只是安装后桌面没有运行图标，而是在我们的计算机上安装了一个运行环境。</p><p>看<a href="https://www.jianshu.com/p/7a0b52075f70" target="_blank" rel="noopener">Windows-python安装教程</a><br>如果不明白的话，再看看<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014316090478912dab2a3a9e8f4ed49d28854b292f85bb000" target="_blank" rel="noopener">视频教程</a>。</p><p>用苹果电脑的点击观看<a href="https://www.jianshu.com/p/a10402b48a1c" target="_blank" rel="noopener">苹果电脑python安装教程</a>。<br>如果看不懂，可以去视频网站<code>搜python安装教学视频</code>，一边看视频一边依葫芦画瓢，我在这里就不详细说明了。万事开头难，搞不懂的话你可以微信问我呀，哈哈。</p><p>安装好以后，在Windows命令行 or Mac的终端检查一下python的version版本</p><p><img src="/img/robot/python.png" alt="检查"></p><h2 id="安装python包"><a href="#安装python包" class="headerlink" title="安装python包"></a>安装python包</h2><p>当你把python环境安装好了以后，接下来你需要安装<code>python包</code>（python包是武林高手们打造的神兵利器，从新手村刚刚出来的你再也不用苦苦磨炼，自己去做武器啦）</p><p><img src="/img/robot/happy.jpg" alt="超开心耶"></p><p>那么问题来了，你怎么样从大侠手中借到神兵利器？？？<br>这个时候就需要我们常说的py交易（开玩笑的啦），肯定是用<a href="https://www.jianshu.com/p/cf420956e9c1" target="_blank" rel="noopener">pip</a><br>。此外，这个机器人自动回复，需要两个包：一个是requests，另一个是itchat。</p><p>在Windows命令行 or Mac的终端 输入以下命令<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line"></span><br><span class="line">pip install itchat</span><br></pre></td></tr></table></figure></p><p>当用pip借到大佬们的神兵利器后，终于可以开始打怪升级了，美滋滋。</p><p><img src="/img/robot/dalao.png" alt="低头"></p><h2 id="运行机器人程序"><a href="#运行机器人程序" class="headerlink" title="运行机器人程序"></a>运行机器人程序</h2><p>第一步需要点击下载<a href="https://codeload.github.com/fainyang/Test/zip/master" target="_blank" rel="noopener">源代码</a> 下载时存放的<code>地点</code>要记住。<br>下载之后解压文件<code>Test-master.zip</code>，其中的<code>tuling.py</code>就是我们的微信自动回复机器人小程序 。<br>在文件夹中找到<code>tuling.py</code>,右键=&gt;打开方式用<code>记事本</code>打开，其中有两个地方需要修改。</p><p>第一个是图灵机器人的<code>apikey</code>，首先点击打开<a href="http://www.tuling123.com/" target="_blank" rel="noopener">图灵机器人网站</a>注册一个账号，免费创建一个机器人，得到机器人的<code>apikey</code></p><p><img src="/img/robot/tuling.png" alt="tuling"></p><p>第二个地方就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itchat.auto_login(enableCmdQR=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>修改为如下形式：这样是为了弹窗形式二维码比命令行形式的二维码清晰<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itchat.auto_login()</span><br></pre></td></tr></table></figure></p><p>至此，我们得到了机器人<code>apikey</code>，修改了二维码形式，就可以运行<code>tuling.py</code>了。</p><p>（最简单的小白法） Mac的终端 输入以下命令：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd  xxxx/Test-master   <span class="comment">#注释：先移动到tuling.py 所在文件</span></span><br><span class="line">python tuling.py      <span class="comment">#释：运行tuling.py</span></span><br></pre></td></tr></table></figure></p><p><img src="/img/robot/run.png" alt="run"><br>Windows用户在<code>Test-master</code>文件夹打开命令行，方法为：在此文件夹窗口内空白区域<code>右键单击（需要同时按住Shift）</code>，从菜单中选择＂在此处打开命令行窗口＂的项。</p><p>然后在命令窗口输入<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tuling.py</span><br></pre></td></tr></table></figure></p><p>如果前面python包成功安装，运行将会弹出来一个网页登录的二维码。微信扫码登录后，看到命令窗口的个人信息就意味着大功告成了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Getting uuid of QR code.</span><br><span class="line">Downloading QR code.</span><br><span class="line">Please scan the QR code to log <span class="keyword">in</span>.</span><br><span class="line">Please press confirm on your phone.</span><br><span class="line">Loading the contact, this may take a little <span class="keyword">while</span>.</span><br><span class="line">TERM environment variable <span class="keyword">not</span> set.</span><br><span class="line">Login successfully <span class="keyword">as</span> Fain 费洋</span><br><span class="line">Start auto replying.</span><br></pre></td></tr></table></figure></p><p>但是这个机器人有一个缺陷：一旦运行python的电脑断网、休眠、关机。那么自动回复将会失效，因为自动回复的核心是<code>电脑</code>运行python调用图灵机器人来进行回复。但是对于小白来讲，这就已经足够~(≧▽≦)~啦啦啦。</p><h2 id="兽（瘦）人永不为奴，云服务器永不关机"><a href="#兽（瘦）人永不为奴，云服务器永不关机" class="headerlink" title="兽（瘦）人永不为奴，云服务器永不关机"></a>兽（瘦）人永不为奴，云服务器永不关机</h2><p>我这周刚买的<a href="https://cloud.tencent.com/act/campus" target="_blank" rel="noopener">腾讯云</a>服务器，学生优惠下来3年360，超级划算的。<br><img src="/img/robot/tencent.png" alt="tencent"></p><p>我选择的系统是CentOS7.4（自带python2.7），需要安装python3.6–请参考<a href="http://www.jb51.net/article/133560.htm" target="_blank" rel="noopener">教程1</a> 和<a href="https://cloud.tencent.com/developer/article/1017880" target="_blank" rel="noopener">教程2</a> </p><p>安装好python环境以后，也需要安装两个包，一个是<code>requests</code>，另一个是<code>itchat</code>。<br>然后是在本地用<code>scp</code>把<code>tuling.py</code> 上传到云服务器，方法请参考<a href="https://cloud.tencent.com/document/product/213/2133" target="_blank" rel="noopener">这里</a>。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 本地文件地址 云服务器登录名@云服务器公网IP/域名:云服务器文件地址</span><br></pre></td></tr></table></figure></p><p>上传完成以后，运行试一试？结果你会发现当我们远程ssh关闭的时候，云服务器中的python程序也关闭了。<br>为了能长时间运行，你需要使用<a href="https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/" target="_blank" rel="noopener">Linux 技巧</a>来续几年。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsid python tuling.py</span><br></pre></td></tr></table></figure><p>这样我们的机器人就能在云服务器一直运行啦，直到天荒地老，海枯石烂？</p><p>错！是服务器到期欠费。</p><p><img src="/img/robot/poor.jpeg" alt="poor"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;天下武功，唯快不破&quot;&gt;&lt;a href=&quot;#天下武功，唯快不破&quot; class=&quot;headerlink&quot; title=&quot;天下武功，唯快不破&quot;&gt;&lt;/a&gt;天下武功，唯快不破&lt;/h2&gt;&lt;p&gt;这一篇文章是讲解如何安装微信自动回复机器人，独乐乐不如众乐乐。&lt;br&gt;&lt;code&gt;画风突转，先来一段鸡汤：&lt;/code&gt;并不是每个人都值得你腾出手中的事情秒回，如果有那么一个人，让你情不自禁地秒回了，说明那个人何其重要。&lt;br&gt;或者说，你被别人秒回，又是多么温暖的存在啊。&lt;br&gt;他秒回的瞬间，仿佛在说：你在我心中，很重要。&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>排列组合了解一下(阿里笔试题改编)</title>
    <link href="http://feiyang233.club/post/Combination/"/>
    <id>http://feiyang233.club/post/Combination/</id>
    <published>2018-03-03T16:00:00.000Z</published>
    <updated>2019-03-15T02:58:11.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h2><p>假设有小费和小王俩好基友，天天形影不离，二人分在一个组。<br>为了减少迟到的现象，班主任规定如下：</p><ol><li>迟到一次，则当事人记一分。（迟到）</li><li>小组两人在某一天同时迟到，则小组总分再记一分。（连坐）</li><li>一周内如果每天都迟到，则当事人再扣一分。（太皮了）</li></ol><a id="more"></a><p>  三种情况可累加记分，一周结算一次小组总分。<br>  肯定有人想说<br><img src="/img/gay.jpeg" alt="gay里gay气"> </p><h2 id="举个例子好了"><a href="#举个例子好了" class="headerlink" title="举个例子好了"></a>举个例子好了</h2><p>下图为某一周的出勤情况：从图中看出小费同学比较皮，天天迟到！小王同学有两天和小费同学一起开黑，导致了迟到。<br>所以总的小组计分为10分！</p><p><img src="/img/combination1.png" alt="出勤情况"></p><p><code>那么问题来了：如果已知某一周小组的总分情况，列出可能的出勤表</code></p><h2 id="咸鱼采用的暴力破解法"><a href="#咸鱼采用的暴力破解法" class="headerlink" title="咸鱼采用的暴力破解法"></a>咸鱼采用的暴力破解法</h2><p>有两个对象，每个对象有5个记录。每次记录的值有两种情况，我们可以暴力枚举出所有的情况。<br>一共也才2的10次方，1024种情况。对于计算机来说，当然是小菜一碟咯。</p><p>所有上面的出勤图就可以简化为0-1数值图：<br><img src="/img/combination2.png" alt="数值图"></p><p>接下来问题就变成，如何枚举出这1024种情况？</p><ol><li>2行5列一共10个值，循环列出0-1111111111二进制数的情况，高位补0。</li><li>如上图，2列是独立的，我们只需求出5位的情况，两列互相遍历即可。</li><li>用python自带的 <a href="https://docs.python.org/3/library/itertools.html" target="_blank" rel="noopener">itertools</a>库，分分钟枚举完成。</li></ol><p><img src="/img/combination3.png" alt="解释图"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(start_day,faith_score)</span>:</span></span><br><span class="line">    Calendar=[[<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>],[<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>]] <span class="comment">#模拟日历2行5列</span></span><br><span class="line">    L=list(itertools.product([<span class="number">0</span>,<span class="number">1</span>],repeat=<span class="number">5</span>)) <span class="comment">#枚举产生</span></span><br><span class="line">    leng=len(L)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(leng):<span class="comment">#两次遍历</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(leng):</span><br><span class="line">            Calendar[<span class="number">0</span>]=L[i]</span><br><span class="line">            Calendar[<span class="number">1</span>]=L[j]</span><br><span class="line">            <span class="keyword">if</span> sumcredit(Calendar)==faith_score:<span class="comment">#判断情况</span></span><br><span class="line">                gg=todate(Calendar,start_day)</span><br><span class="line">                print(gg) <span class="comment">#输出情况</span></span><br></pre></td></tr></table></figure><p>只要有了枚举的所有情况，判断计分则是很容易的事情。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">credit1</span><span class="params">(L)</span>:</span> <span class="comment">#迟到一次扣一分</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> L[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> L[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">if</span> j==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">credit2</span> <span class="params">(L)</span>:</span>  <span class="comment">#一起迟到，多扣一分</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">if</span> L[<span class="number">0</span>][i]==<span class="number">1</span> <span class="keyword">and</span> L[<span class="number">1</span>][i]==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">credit3</span> <span class="params">(L)</span>:</span> <span class="comment">#连续迟到，罪加一等</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">in</span> L[<span class="number">0</span>]:</span><br><span class="line">        credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">in</span> L[<span class="number">1</span>]:</span><br><span class="line">        credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sumcredit</span><span class="params">(L)</span>:</span> <span class="comment">#累加总分</span></span><br><span class="line">    c1=credit1(L)</span><br><span class="line">    c2=credit2(L)</span><br><span class="line">    c3=credit3(L)</span><br><span class="line">    <span class="keyword">return</span> c1+c2+c3</span><br></pre></td></tr></table></figure><h2 id="时间问题，不容小觑"><a href="#时间问题，不容小觑" class="headerlink" title="时间问题，不容小觑"></a>时间问题，不容小觑</h2><p>因为时间在<code>跨月份</code>是时候有点麻烦，不能用普通的++，但我们可以用<code>datetime</code>库呀。<br>输入一个起始时间，我们要得到那一周的5天。<code>timedelta()</code>函数你值得拥有。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime,timedelta</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_date</span><span class="params">(date)</span>:</span>       <span class="comment">#Y表示四位数的年份(0-9999)</span></span><br><span class="line">    date_begin=datetime.strptime(date,<span class="string">'%Y%m%d'</span>) </span><br><span class="line">    time=str(datetime.date(date_begin))</span><br><span class="line"></span><br><span class="line">    date1=date_begin+timedelta(days=<span class="number">1</span>) <span class="comment">#加1s，哈哈</span></span><br><span class="line">    time1=str(datetime.date(date1))</span><br><span class="line"></span><br><span class="line">    date2=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time2=str(datetime.date(date2))</span><br><span class="line"></span><br><span class="line">    date3=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time3=str(datetime.date(date3))</span><br><span class="line"></span><br><span class="line">    date4=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time4=str(datetime.date(date4))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> time,time1,time2,time3,time4</span><br></pre></td></tr></table></figure><p>最后我们在输出 出勤情况的时候，将那个简化后的二维数组List<code>=&gt;</code>日历对应起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">todate</span><span class="params">(L,date)</span>:</span></span><br><span class="line">    time,time1,time2,time3,time4=get_date(date)</span><br><span class="line">    record=[time+<span class="string">'-小费'</span>,time+<span class="string">'-小王'</span>,time1+<span class="string">'-小费'</span>,time1+<span class="string">'-小王'</span>,time2+<span class="string">'-小费'</span>,\</span><br><span class="line">    time2+<span class="string">'-小王'</span>,time3+<span class="string">'-小费'</span>,time3+<span class="string">'-小王'</span>,time4+<span class="string">'-小费'</span>,time4+<span class="string">'-小王'</span>]</span><br><span class="line">    L1=L[<span class="number">0</span>]+L[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(L1)):</span><br><span class="line">        <span class="keyword">if</span> L1[i]==<span class="number">1</span>: <span class="comment">#1 代表迟到</span></span><br><span class="line">            record[i]+=<span class="string">'(迟到)'</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment">#0代表没迟到</span></span><br><span class="line">            record[i]+=<span class="string">'(正常)'</span></span><br><span class="line">    <span class="keyword">return</span> record</span><br></pre></td></tr></table></figure><p>假设我们输入<code>date=20180305,score=0</code><br>输出如下结果：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'2018-03-04-小费(正常)'</span>, <span class="string">'2018-03-04-小王(正常)'</span>,</span><br><span class="line"> <span class="string">'2018-03-05-小费(正常)'</span>, <span class="string">'2018-03-05-小王(正常)'</span>, </span><br><span class="line"> <span class="string">'2018-03-06-小费(正常)'</span>, <span class="string">'2018-03-06-小王(正常)'</span>, </span><br><span class="line"> <span class="string">'2018-03-06-小费(正常)'</span>, <span class="string">'2018-03-06-小王(正常)'</span>, </span><br><span class="line"> <span class="string">'2018-03-06-小费(正常)'</span>, <span class="string">'2018-03-06-小王(正常)'</span>]</span><br><span class="line">[Finished <span class="keyword">in</span> <span class="number">0.2</span>s]</span><br></pre></td></tr></table></figure></p><p>假设我们输入<code>date=20180305,score=1</code><br>输出如下结果：<br><img src="/img/combination4.png" alt="结果"></p><h2 id="最后一点废话"><a href="#最后一点废话" class="headerlink" title="最后一点废话"></a>最后一点废话</h2><p>有一篇关于itertools的文章<a href="https://mp.weixin.qq.com/s/Rb5aYWA7NYOi1eckGtakuQ" target="_blank" rel="noopener">这段代码很Pythonic | 相见恨晚的 itertools 库</a> 安利一下。此文章的python<a href="https://github.com/fainyang/LeetCode_practice/blob/master/score.py" target="_blank" rel="noopener">源代码</a></p><p>马上就要毕业了，再也没有当学生那种无忧无虑的感觉了。以前贪玩欠的债，找工作的时候哭出来。<br>去面试才知道自己有多菜，所幸我还比较<code>naive</code>，未来珍惜时间，好好学习。狗住，加油！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题介绍&quot;&gt;&lt;a href=&quot;#问题介绍&quot; class=&quot;headerlink&quot; title=&quot;问题介绍&quot;&gt;&lt;/a&gt;问题介绍&lt;/h2&gt;&lt;p&gt;假设有小费和小王俩好基友，天天形影不离，二人分在一个组。&lt;br&gt;为了减少迟到的现象，班主任规定如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;迟到一次，则当事人记一分。（迟到）&lt;/li&gt;
&lt;li&gt;小组两人在某一天同时迟到，则小组总分再记一分。（连坐）&lt;/li&gt;
&lt;li&gt;一周内如果每天都迟到，则当事人再扣一分。（太皮了）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>时间求差值timestampdiff</title>
    <link href="http://feiyang233.club/post/timestampdiff/"/>
    <id>http://feiyang233.club/post/timestampdiff/</id>
    <published>2018-02-22T16:00:00.000Z</published>
    <updated>2019-03-15T09:17:29.989Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题背景介绍"><a href="#问题背景介绍" class="headerlink" title="问题背景介绍"></a>问题背景介绍</h2><p>因为Prof想知道每个building里的average-dwell时间，NUS-WiFi数据库提供了current-time，<br>first-time。思路就是根据两者时间的差值来估计stay in building的时间。</p><a id="more"></a><p><img src="/img/time1.png" alt="数据时间格式"></p><h2 id="人生苦短，首选python"><a href="#人生苦短，首选python" class="headerlink" title="人生苦短，首选python"></a>人生苦短，首选python</h2><p>第一想法当然是用python，用python包：<code>time</code>, <code>datetime</code>.<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">difftime</span><span class="params">(begintime,endtime)</span>:</span></span><br><span class="line">date1=time.strptime(begintime,<span class="string">'%Y-%m-%d %H:%M:%S'</span>) </span><br><span class="line">date2=time.strptime(endtime,<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line"><span class="comment">#y两位数的年份表示（00-99）</span></span><br><span class="line"><span class="comment">#Y四位数的年份表示（000-9999）</span></span><br><span class="line">date3=datetime.datetime(</span><br><span class="line">date1[<span class="number">0</span>],date1[<span class="number">1</span>],date1[<span class="number">2</span>],date1[<span class="number">3</span>],date1[<span class="number">4</span>],date1[<span class="number">5</span>]) </span><br><span class="line">date4=datetime.datetime(</span><br><span class="line">date2[<span class="number">0</span>],date2[<span class="number">1</span>],date2[<span class="number">2</span>],date2[<span class="number">3</span>],date2[<span class="number">4</span>],date2[<span class="number">5</span>])</span><br><span class="line">minutes=(date4-date3).seconds/<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> minutes</span><br></pre></td></tr></table></figure><p>结果如下图：</p><p><img src="/img/time3.png" alt="结果展示"></p><h2 id="MySQL-表示不服"><a href="#MySQL-表示不服" class="headerlink" title="MySQL 表示不服"></a><code>MySQL</code> 表示不服</h2><p>上学期我用python做的统计工作，例如每分钟有多少device，或者每个device在building里停留了多少分钟.<br>用python至少得写30+行代码去读写csv文件，在MySQL就是一行代码的事情，相见恨晚。<br><code>无知限制了我的生产力！</code><br>MySQL的数据类型里有时间戳格式timestamp。也有专门计算时间差值的<code>timestampdiff</code>函数。<br>TIMESTAMPDIFF(unit,begin,end);返回end-begin的时间差值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select timestampdiff(minute,firstime,curtime)</span><br></pre></td></tr></table></figure><p>结果如下图：</p><p><img src="/img/time2.png" alt="结果展示"></p><h2 id="INSERT遇到问题了"><a href="#INSERT遇到问题了" class="headerlink" title="INSERT遇到问题了"></a>INSERT遇到问题了</h2><p>我想把timestampdiff返回的值插入在表的最后，先创建一个字段（列），再用insert插入，结果遇到了问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into test (diff)  select timestampdiff(minute,firstime,curtime)  from test;</span><br></pre></td></tr></table></figure><p><img src="/img/issue.png" alt="插入问题"></p><p>如图所示，结果是插在了diff列，但直接插在表的后面，没有覆盖原有的值。经过思考后，我尝试了 update的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update test set diff=timestampdiff(minute,firstime,curtime);</span><br></pre></td></tr></table></figure><p>终于成功了！</p><p><img src="/img/time4.png" alt="成功了"></p><h2 id="咸鱼的叹息"><a href="#咸鱼的叹息" class="headerlink" title="咸鱼的叹息"></a>咸鱼的叹息</h2><p>python定义了一个函数来计算，用MySQL就是一句话的事情。光找这句话我就花了好久，还得好好学习。<br>还是在项目中体会得多，光看书是不行的，纸上得来终觉浅。</p><p>很惭愧，连一点微小的工作都没有做，打扰了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题背景介绍&quot;&gt;&lt;a href=&quot;#问题背景介绍&quot; class=&quot;headerlink&quot; title=&quot;问题背景介绍&quot;&gt;&lt;/a&gt;问题背景介绍&lt;/h2&gt;&lt;p&gt;因为Prof想知道每个building里的average-dwell时间，NUS-WiFi数据库提供了current-time，&lt;br&gt;first-time。思路就是根据两者时间的差值来估计stay in building的时间。&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
  </entry>
  
</feed>
