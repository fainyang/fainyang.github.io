<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>feiyang&#39;s blog</title>
  
  <subtitle>费洋的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fainyang.github.io/"/>
  <updated>2019-03-15T04:07:13.088Z</updated>
  <id>https://fainyang.github.io/</id>
  
  <author>
    <name>feiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub-Hexo-NexT 免费搭建自己的博客</title>
    <link href="https://fainyang.github.io/post/hexo-blog/"/>
    <id>https://fainyang.github.io/post/hexo-blog/</id>
    <published>2019-03-15T03:05:30.000Z</published>
    <updated>2019-03-15T04:07:13.088Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于写博客"><a href="#关于写博客" class="headerlink" title="关于写博客"></a>关于写博客</h2><p>2018 年我在 GitHub 上看到<a href="http://blog.dploop.org/" target="_blank" rel="noopener">强哥的博客</a>，当时为之心动然后 Fork 了那个 repository。后来搬砖沦为社会人就断更了，在工作之后看到<a href="https://wsgzao.github.io/" target="_blank" rel="noopener">奥哥的博客</a>，在他的安利之下，把之前的 Jekyll 的博客换成如今的 Hexo-NexT，打算记录下工作的点滴，学习的心得。一是分享，二是方便自己回顾和查阅。<a id="more"></a>  </p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>如果没有 GitHub 账号，需要去官网 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 注册一个账号。账号注册好之后，需要创建一个 repository，名称格式为 xxx.github.io  例如我的 GitHub 名称为 fainyang, 浏览器显示的 URL 为 <a href="https://github.com/fainyang" target="_blank" rel="noopener">https://github.com/fainyang</a> 那么我新建的 repository 就是 fainyang.github.io    </p><p><img src="/img/2019/github.png" alt="github">  </p><p>申请完账号，创建了 repository 之后，下一步就是在自己的电脑上安装 Hexo。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo——快速、简洁且高效的博客框架。官网 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a> 文档还有视频讲解如何安装<br>Hexo 全局 yml 配置文件可以参考奥哥的一篇博客 <a href="https://wsgzao.github.io/post/hexo-jacman/" target="_blank" rel="noopener">https://wsgzao.github.io/post/hexo-jacman/</a></p><h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><p>Elegant Theme for Hexo——精于心，简于形。 官网 <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p><h2 id="未完待更新"><a href="#未完待更新" class="headerlink" title="未完待更新"></a>未完待更新</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于写博客&quot;&gt;&lt;a href=&quot;#关于写博客&quot; class=&quot;headerlink&quot; title=&quot;关于写博客&quot;&gt;&lt;/a&gt;关于写博客&lt;/h2&gt;&lt;p&gt;2018 年我在 GitHub 上看到&lt;a href=&quot;http://blog.dploop.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;强哥的博客&lt;/a&gt;，当时为之心动然后 Fork 了那个 repository。后来搬砖沦为社会人就断更了，在工作之后看到&lt;a href=&quot;https://wsgzao.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;奥哥的博客&lt;/a&gt;，在他的安利之下，把之前的 Jekyll 的博客换成如今的 Hexo-NexT，打算记录下工作的点滴，学习的心得。一是分享，二是方便自己回顾和查阅。
    
    </summary>
    
      <category term="学习" scheme="https://fainyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="hexo" scheme="https://fainyang.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>实用链接分享</title>
    <link href="https://fainyang.github.io/post/links/"/>
    <id>https://fainyang.github.io/post/links/</id>
    <published>2018-11-24T16:00:00.000Z</published>
    <updated>2019-03-15T02:58:42.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="站在大佬们的肩膀上"><a href="#站在大佬们的肩膀上" class="headerlink" title="站在大佬们的肩膀上"></a>站在大佬们的肩膀上</h2><p>工作，学习，健身。 其实我蛮担心自己的发际线<br><a id="more"></a>  </p><h3 id="运维博客"><a href="#运维博客" class="headerlink" title="运维博客"></a>运维博客</h3><ol><li><a href="https://www.zsythink.net/" target="_blank" rel="noopener">朱双印博客</a> iptables, ansible, zabbix 都很不错  </li><li><a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html" target="_blank" rel="noopener">骏马金龙</a> rsync, LVS, nginx, zooKeeper  </li><li><a href="http://www.jinbuguo.com/" target="_blank" rel="noopener">金步国作品集</a> Linux  </li><li><a href="https://wsgzao.github.io/" target="_blank" rel="noopener">HelloDog</a> 大佬同事奥哥的博客 </li></ol><h3 id="实用文档"><a href="#实用文档" class="headerlink" title="实用文档"></a>实用文档</h3><ol><li><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">ansible</a> 批量操作的好帮手  </li><li><a href="https://www.zabbix.com/documentation/current/start" target="_blank" rel="noopener">zabbix</a> 实时监控了解一下  </li><li><a href="https://www.elastic.co/guide/index.html" target="_blank" rel="noopener">ELK</a> 收集过滤检索神器  </li><li><a href="https://docs.docker.com/" target="_blank" rel="noopener">Docker</a> 方便快速的容器 </li></ol><h3 id="学习一个"><a href="#学习一个" class="headerlink" title="学习一个"></a>学习一个</h3><ol><li><a href="https://www.imooc.com/" target="_blank" rel="noopener">慕课网</a> 程序员的梦工厂</li><li><a href="http://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a> 学的不仅是技术，更是梦想   </li><li><a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">w3school</a> Web 技术教程</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;站在大佬们的肩膀上&quot;&gt;&lt;a href=&quot;#站在大佬们的肩膀上&quot; class=&quot;headerlink&quot; title=&quot;站在大佬们的肩膀上&quot;&gt;&lt;/a&gt;站在大佬们的肩膀上&lt;/h2&gt;&lt;p&gt;工作，学习，健身。 其实我蛮担心自己的发际线&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://fainyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="links" scheme="https://fainyang.github.io/tags/links/"/>
    
  </entry>
  
  <entry>
    <title>新加坡留学分享</title>
    <link href="https://fainyang.github.io/post/Master/"/>
    <id>https://fainyang.github.io/post/Master/</id>
    <published>2018-08-10T16:00:00.000Z</published>
    <updated>2019-03-15T02:59:38.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要留学"><a href="#为什么要留学" class="headerlink" title="为什么要留学"></a>为什么要留学</h2><p>这篇博客主要分享我的新加坡水硕留学经历，希望能对你有一点点帮助。<br><a id="more"></a></p><p>留学的优势：  </p><ul><li><code>时间短</code>，新加坡的授课型 Master 一年就读完。因为 EE 学院是按照学期收学费的，最快一年修完。大家当然都早点修完省学费。当国内同届的同学毕业时，你已经是有 2年工作经验的初级混子了。    </li><li><code>毕业容易</code>，毕业要求是修满 10 门课，没有导师。轻轻松松考完 10 门课混水硕文凭，考试是按照正态分布评分的，想挂科太难了。当然，你也可以选一个project跟着导师做一年项目，一个project抵两门课的学分。不要抱太大的期望，关键还是靠自学。  </li><li><code>长见识</code>，肉身翻墙出来看看世界之大，结识外国的朋友们，体验东南亚文化，然后你就知道还是祖国安逸，我多么想念四川美食。   </li><li><code>当跳板</code>，如果想出国工作，那么出国读书无疑是最好的一条路，毕业后留下来找工作。当然也有 Master 毕业再去美国读博的。   </li><li><code>海龟光环</code>，像华为的海外招聘回国工作的起薪比国内稍高一点。还有一个巨大的优势就是走<a href="http://xds.gcdr.gov.cn/home/infodetail.jsp?id=8a8048495e7cbae3015ea8a346f80013" target="_blank" rel="noopener">海外选调生</a>考公务员竞争小。  </li><li><code>出游方便</code>，因为新加坡是东南亚的经济中心，飞东南亚的航班又多又便宜。读书期间假期飞东南亚各国旅游，马来西亚，泰国，越南，印度尼西亚，菲律宾都非常方便。例如去年 recess week 我去槟城往返一共才 350 人民币的机票。</li></ul><p>留学的劣势：  </p><ul><li><code>花费贵</code>，硕士读下来至少 18 万人民币的学费，每个月生活费至少五千人民币。  </li><li><code>压力大</code>，虽然是水硕，但是全英文环境最开始还是有点不适应。如果选了 project，还要做项目写论文答辩。相当于把国内三年完成的事情全部压缩到一年内完成，十分的匆忙。  </li><li><code>水土不服</code>，这个因人而异。来新加坡读书有的同学瘦了十多斤，有的冒痘痘，有的脱发。但大家相同的感受就是太晒了（其实温度还好，最高 35° 左右）。  </li></ul><h3 id="什么样的人适合来新加坡留学"><a href="#什么样的人适合来新加坡留学" class="headerlink" title="什么样的人适合来新加坡留学"></a>什么样的人适合来新加坡留学</h3><ul><li>安全第一，<a href="http://www.shicheng.news/show/225993" target="_blank" rel="noopener">新加坡治安</a>在世界数一数二了。在大学里去食堂吃饭把电脑，手机放图书馆桌上很安全。在我读书的一年里，没有听说中国留学生有谁遇到失窃的。晚上大街上走也很安全的。（相比于犯罪分子，倒不如小心野生动物，蛇，蜥蜴那些）</li><li>英语差的人，比如我自己。其实新加坡留学一年生活中，除了上课，和导师，外国人交流用英文。平时都用中文，本地华人的中文也非常好。（其实这也是缺点，读书一年，发现自己的口语没有怎么提高）</li><li>怕离家太远。新加坡回国非常快，飞中国南方的城市大约4个小时，而且往返机票（非节假日）大约两千多人民币。</li><li>负担不起美国留学，又想出来看看的人，比如我自己。新加坡的学费和生活费相对便宜。 </li><li>国内考研失败，但想继续读研的同学，出国读研肯定比二战的压力小太多了。国内考研每年一次，国外读研申请分两次，有秋季和春季。 </li></ul><h2 id="留学的条件"><a href="#留学的条件" class="headerlink" title="留学的条件"></a>留学的条件</h2><p>就三点：学科成绩，英语成绩，留学费用。  </p><ul><li>学科成绩：NUS NTU 两所学校 Master 招生大部分都是 985，211的毕业生。NUS ECE学院基本上要本科成绩平均分85+，NTU EEE学院要求会稍微低一点。  </li><li>英语成绩：<a href="https://www.eng.nus.edu.sg/graduate-studies/graduate-education/coursework-application/english-language-requirements/" target="_blank" rel="noopener">NUS</a> 雅思最低 6 分，<a href="http://www.eee.ntu.edu.sg/Programmes/ProspectiveStudents/Graduate/MOE_sub_MSc/Pages/Admission_Reqts.aspx" target="_blank" rel="noopener">NTU</a> 雅思最低 6.5 分 但最好 NUS 也是6.5 分。 这样的话开学就不用额外再上英语课。雅思的备考，可以报班，也可以自学。推荐APP: 雅思哥，小站雅思。个人的建议是英语不好的同学还是花钱报班吧，老师带着入门快点。  </li><li>留学费用：今年 NUS Master 入学的<a href="http://www.nus.edu.sg/registrar/info/gd/GDTuitionCurrent.pdf" target="_blank" rel="noopener">费用</a>国际留学生一共是36,750新币。 以前是有 government-subsidised graduate programmes 补贴的(减免一半的学费)，但是从明年 2019 开始就没有了。读下来学费加生活费一年至少18+7=25万。申请的时候还需要银行开具存款证明，每年的标准不同，大概在人民币 15 万左右。  </li></ul><h2 id="如何申请"><a href="#如何申请" class="headerlink" title="如何申请"></a>如何申请</h2><ul><li><code>找中介</code>，适用于时间匆忙，想花钱省事的同学们。中介费大概在2万左右，中介老师会帮你写简历，文书，推荐信，邮寄申请材料等。推荐找大机构知名的中介，私人中介小心被坑。就算找了中介，自己还是要上点心，看看中介帮写的材料，注意申请的截止时间。</li><li><code>DIY</code>，适用于时间充足，想省钱的同学。作为 DIY 过来人，新加坡和香港的申请都比较简单，申请的 requirement 网上都有，截止时间也都写的明明白白，只是需要自己细心的去寻找。如果有学长学姐指导，老司机带是最稳的。要自己 DIY 记得让父母申请一张 <code>Visa</code> 或者 <code>Master Card</code>，因为申请缴费的时候是不能用银联卡的。<a href="http://bbs.gter.net/forum-812-1.html" target="_blank" rel="noopener">寄托论坛</a>上也有前辈们分享如何申请的。</li><li>申请所需资料：本科成绩单，本科在读证明，语言成绩单(雅思或托福)，个人简历，2 封推荐信，个人陈述（申请的理由，规划那些），银行存款证明。  </li><li>申请分秋季入学和春季入学。秋季是每年的一月开始申请，先在学校官网上申请，最后把所需的资料邮寄到学校，顺丰到新加坡只需 3 天。  </li></ul><h2 id="入学前准备"><a href="#入学前准备" class="headerlink" title="入学前准备"></a>入学前准备</h2><p>秋季入学是每年的五月初发 offer，寄托论坛也有 <a href="http://www.gter.net/offer/index.html" target="_blank" rel="noopener">offer榜</a>，可以看看其他人的录取情况。很多人都会收到两所学校的录取，那么上 NUS 还是选 NTU 呢？首先当然看看自己所读的专业哪个学校好啦，其实两所学校都差不多。NUS 在本地人眼里更好一点，离城里近，但申请不到宿舍，ECE 学院选课自由，有点像国内的按大类招生。 NTU 坐落在郊区，能申到宿舍。食堂十分的优秀，比 NUS 好吃。环境优美，有野猪等野生动物出没。</p><p>在收到 offer 后最重要的一件事情就是：<code>申请宿舍</code>，NUS Master 申请宿舍成功率低，因为 NUS 地方小宿舍少，几乎在 NUS 读 Master 的同学们都是在外面租房子，一般都是六个人租一整套三室一厅，两个人 share 一间房。租房子必须找中介，<a href="http://www.propertyguru.com.sg/" target="_blank" rel="noopener">Property Guru</a> 新加坡本地发布平台，房源多。查找 NUS 周围的房源，然后联系中介看房，最后签合同。一般 share 住房租人均在 450-600 新币/月，水电气网大约 50 新/月。 </p><p>NTU 就很优秀了，人人都能申请到宿舍。宿舍的配套设施很完善，厨房，洗衣房，自习室，健身房，食堂都有。宿舍价格根据宿舍类型定价 300-600 新币/月。  </p><p>把住的地方提前搞定后，等学校帮忙办理好学生签证，接下来就是收拾行李准备留学啦。  </p><ul><li>新加坡的手机网络，国内全网通手机就 OK，最好提前在淘宝买一张 3天无限流量卡。等安顿好了，再去 711、Cheers、手机店买本地电话卡。    </li><li>必备的APP: Grab（东南亚滴滴，打车方便，可以绑定支付宝付款）SG Buses (坐公交车必备，查询等车时间) Google Maps (出国当然用谷歌)  </li><li>银行卡：推荐办理在境外取现不收取手续费的银联卡。比如华夏银行，成都银行金卡等。   </li><li>机票：廉价航空没有行李额！留学生过来读书肯定都带了箱子，等到机场再买行李额要贵哭。我建议是不要买廉价航空，川航、国航都是两件行李额，南航是一件。  </li><li>新加坡全年夏天，衣服最多带一件外套抵御教室里寒冷的空调。这面的优衣库，H&amp;M 价格和国内差不多。  </li><li>再安利一下同事奥哥写的<a href="https://wsgzao.github.io/post/singapore/" target="_blank" rel="noopener">新加坡生活指南</a>，网站有可能被墙了。 </li></ul><h2 id="学生生活"><a href="#学生生活" class="headerlink" title="学生生活"></a>学生生活</h2><ul><li>报到：到新加坡安顿好以后，就去学校注册报到，然后就是校医院体检（主要检查肺结核和 HIV ）。接下来还有半个月开学，可以出去逛一逛，熟悉一下环境。  </li><li>选课：开学之前要网上选课，这个根据自己的爱好和学长学姐的建议，不要踩雷。可以选择 10门课，也可以选择 8门课 + 1个项目。  </li><li>上课：时间都是在晚上（本科课程在白天，NUS 可以跨选本科的课程，NTU 不能选本科课程），因为有非全日制的同学（人家白天要上班的），一周最多也就5节课。 每周都会有作业，有的 project 还需要小组组队完成。 编程作业 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>了解一下，说不定有答案。  </li><li>考试：在选课时就能看到期末考试日期，所以可以提前买回家的机票呀。考试时间一般是 2-2.5 小时，有开卷，闭卷，一页纸。评分按正态分布，想挂科和得 A+ 一样的困难。 混个水硕还是非常容易的。</li><li>项目： 选一个导师跟着做一年。NUS 最后要写论文答辩，NTU 写论文不答辩。确认过眼神，遇上对的老师收获巨大，选错就以泪洗面！</li><li>毕业要求：总学分平均绩点大于3.0 （满绩是5.0 允许单科低于3.0 只要不是 F 就行，一般缺考才会得 F ） </li><li>就业去向：留下来的大多去了半导体和互联网公司，回国大部分都去互联网公司，少部分走<a href="http://xds.gcdr.gov.cn/home/infodetail.jsp?id=8a8048495e7cbae3015ea8a346f80013" target="_blank" rel="noopener">海外选调生</a>当公务员。 </li></ul><p>我的学生日常：白天早起去学校图书馆自习，起晚了太阳晒呀。白天自习，晚上上课。每周和导师一次 meeting 汇报情况。周末做作业、项目，偶尔出去聚餐。 如今回想起来，白天不上课应该去找一个实习做一做的，这样有助于就业。  </p><p>第二学期就比较忙一点，因为要找工作。每学期学校都有招聘会，不容错过。其他找工作的途径，在我上一篇博客咸鱼入海Sea里有。新加坡半导体和互联网就业相对容易，新加坡工程系毕业的 Master 起薪大概在 3600-4500 新币/月。 新加坡<a href="http://www.yan.sg/zhidaodenaxishi/" target="_blank" rel="noopener">个人所得税</a>很低。Master 刚毕业一年大概就交 600 新的税。<br>在新加坡上班，目前我自己的感受：互联网比国内轻松一点，很少加班，周末双休。 半导体上班同学的感受：<a href="https://baike.baidu.com/item/micron/10950612?fr=aladdin" target="_blank" rel="noopener">Micron</a>上班 8小时，加班有工资美滋滋。 <a href="https://baike.baidu.com/item/%E5%85%89%E5%AE%9D%E7%A7%91%E6%8A%80%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8/8844437" target="_blank" rel="noopener">Liteon</a> 同学感觉就像在国企上班一样，每天 5:30pm 下班，闲的都想回学校再读一个part-time Phd.</p><p>曾经的我，以为出国遥不可及，担心给家里带来巨大的负担。如今看来一切付出都是值得的，至少在我的留学圈子里，没有哪个同学后悔出来看一看。很惭愧，只做了一点微小的贡献。    </p><h2 id="最后祝大家前程似锦，梦想成真"><a href="#最后祝大家前程似锦，梦想成真" class="headerlink" title="最后祝大家前程似锦，梦想成真"></a>最后祝大家前程似锦，梦想成真</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要留学&quot;&gt;&lt;a href=&quot;#为什么要留学&quot; class=&quot;headerlink&quot; title=&quot;为什么要留学&quot;&gt;&lt;/a&gt;为什么要留学&lt;/h2&gt;&lt;p&gt;这篇博客主要分享我的新加坡水硕留学经历，希望能对你有一点点帮助。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="https://fainyang.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="NUS" scheme="https://fainyang.github.io/tags/NUS/"/>
    
  </entry>
  
  <entry>
    <title>咸鱼入海Sea</title>
    <link href="https://fainyang.github.io/post/Onboarding/"/>
    <id>https://fainyang.github.io/post/Onboarding/</id>
    <published>2018-07-03T16:00:00.000Z</published>
    <updated>2019-03-15T04:09:43.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="求职经历"><a href="#求职经历" class="headerlink" title="求职经历"></a>求职经历</h2><p>今年研究生毕业，在经历了一波三折的找工作之后。我这个咸鱼最终也找到了一份心仪的工作，<a id="more"></a>在<a href="https://www.seagroup.com/home" target="_blank" rel="noopener">sea</a>公司做Operation Enginner. 我是在春季的校园招聘会上投的简历，今天还翻到了曾经在招聘会上领取的资料<br><img src="/img/work/1.JPG" alt="sea1">  </p><p>一般找工作的途径：  </p><ol><li>找学长学姐内推  </li><li>通过校园招聘会现场投简历  </li><li>公司官网在线投简历  </li><li>招聘网站，像<a href="https://www.monster.com.sg/" target="_blank" rel="noopener">Monster</a>，<a href="https://www.glassdoor.com/index.htm" target="_blank" rel="noopener">Glassdoor</a>，<a href="https://www.jobstreet.com.sg/" target="_blank" rel="noopener">Jobstreet</a>.  </li><li>如果是NUS学生，还可以通过<a href="https://nus-csm.symplicity.com/students/index.php?s=home" target="_blank" rel="noopener">NUS校园求职网站</a>  </li></ol><p>总的来说，有内推是最好的，响应速度快，简历不容易被刷。其次是校园招聘会和校园求职网，都是校招，难度也低。 公司官网也可以，但要自己去一家家的找。专门的求职网站选择就很多，但自己要耐心的筛选（太多不知道的公司了，我曾经就被一家小作坊坑了，去面试的时候被那工作环境震惊）.<br>心得体会，应届生进入社会第一课：<code>虚心好学，接受自己的平庸。</code>早做准备，明白自己想干什么。举例子，如果打算未来从事某一项工作，那就去看看网上这份工作的描述，对求职者的要求是什么。（PS:简历也是很重要的一部分）祝大家求职顺利!  </p><h2 id="公司介绍"><a href="#公司介绍" class="headerlink" title="公司介绍"></a>公司介绍</h2><p><a href="https://www.seagroup.com/home" target="_blank" rel="noopener">Sea</a>是东南亚的一家互联网公司，旗下有garena（东南亚游戏代理：王者荣耀，英雄联盟等），shopee（东南亚的电商），airpay（想做东南亚的支付宝）。 公司的员工都很年轻，几乎都是美丽小姐姐、帅气小哥哥们，超级nice的。公司的环境也相当的棒：<br><img src="/img/work/2.JPG" alt="sea2">  </p><p><img src="/img/work/3.JPG" alt="sea3">  </p><p><img src="/img/work/4.JPG" alt="sea4"> </p><h3 id="入职大礼包"><a href="#入职大礼包" class="headerlink" title="入职大礼包"></a>入职大礼包</h3><p><img src="/img/work/5.JPG" alt="sea5">  </p><p>还有互联网公司标配的Mac Pro<br><img src="/img/work/6.jpg" alt="sea6">  </p><p>两个戴尔 U2417H 显示器<br><img src="/img/work/7.JPG" alt="sea7">  </p><h3 id="公司福利"><a href="#公司福利" class="headerlink" title="公司福利"></a>公司福利</h3><p><img src="/img/work/8.JPG" alt="sea8">  </p><p>每个月还有两次马杀鸡按摩<br><img src="/img/work/9.JPG" alt="sea9">  </p><p>还有最受好评的小卖部，视频<a href="https://www.bilibili.com/video/av26321390" target="_blank" rel="noopener">链接</a>在这里<br><img src="/img/work/10.JPG" alt="sea10">  </p><p><img src="/img/work/11.JPG" alt="sea11">  </p><p><img src="/img/work/12.JPG" alt="sea12">  </p><p><img src="/img/work/13.JPG" alt="sea13">  </p><p><img src="/img/work/14.JPG" alt="sea14">  </p><p><img src="/img/work/15.JPG" alt="sea15">  </p><p><img src="/img/work/16.JPG" alt="sea16">   </p><p>早上还有一盒水果和晚上的工作餐<br><img src="/img/work/17.JPG" alt="sea17"><br><img src="/img/work/18.jpg" alt="sea18"> </p><p>环境福利虽好，但每晚大概吃完饭都八点了，搬砖狗住！  </p><h2 id="谨以此文记录咸鱼开启职场生活"><a href="#谨以此文记录咸鱼开启职场生活" class="headerlink" title="谨以此文记录咸鱼开启职场生活"></a>谨以此文记录咸鱼开启职场生活</h2><p>公司的职位在<a href="http://career.seagroup.com/" target="_blank" rel="noopener">这里</a>，需要内推的欢迎联系我email: <a href="mailto:feiy@seagroup.com" target="_blank" rel="noopener">feiy@seagroup.com</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;求职经历&quot;&gt;&lt;a href=&quot;#求职经历&quot; class=&quot;headerlink&quot; title=&quot;求职经历&quot;&gt;&lt;/a&gt;求职经历&lt;/h2&gt;&lt;p&gt;今年研究生毕业，在经历了一波三折的找工作之后。我这个咸鱼最终也找到了一份心仪的工作，
    
    </summary>
    
    
      <category term="工作" scheme="https://fainyang.github.io/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>NUS食堂排队指南</title>
    <link href="https://fainyang.github.io/post/Canteen/"/>
    <id>https://fainyang.github.io/post/Canteen/</id>
    <published>2018-03-31T16:00:00.000Z</published>
    <updated>2019-03-15T02:59:06.743Z</updated>
    
    <content type="html"><![CDATA[<h2 id="人生苦短，珍惜时间"><a href="#人生苦短，珍惜时间" class="headerlink" title="人生苦短，珍惜时间"></a>人生苦短，珍惜时间</h2><p>在食堂吃饭，最怕长队漫漫，还有狗粮作伴。人生很多事情因为慢慢等待就错过了，本来打算去食堂吃某一样菜，却因为漫长的排队等待而望而却步。<br>所以嘛，年轻人要想少留遗憾，就要主动出击，爱要提前行动呀！<br><a id="more"></a></p><p><img src="/img/canteen/bird.jpg" alt="鸟"><br>本文主要基于WiFi历史数据，分析NUS 工学院、文学院、YIH食堂的规律（本来最初还计划有computing食堂的，奈何系统上没有相关的信息记录）。<br>用数据说话，分析每天食堂的拥挤时段给大家参考，以便大家减少排队时间，提高用餐体验。  </p><p>假设每个用户只有一个设备（在食堂用电脑的也比较少），并且在校园内大多数人都会打开WiFi。我们根据WiFi的连接情况，可以间接的判断人群密度，停留时间，流入流出速率。人群密度只需要统计每分钟连接WiFi的设备数即可。停留时间是由思科WiFi系统记录设备第一次连接WiFi的时间和当前时间作差得出，当设备离线超过15min系统会刷新first located time。流入流出速率则是比较前后两分钟mac address的不同来判断得出。</p><h3 id="首先举个例子好啦"><a href="#首先举个例子好啦" class="headerlink" title="首先举个例子好啦"></a><code>首先举个例子好啦</code></h3><p>WiFi原始数据如下图所示： 可以在<a href="https://datacommons.nus.edu.sg/Default" target="_blank" rel="noopener">NUS Data Commons</a>用NUS ID登录后在Cisco MSE下载。<br><img src="/img/canteen/table.png" alt="Table"></p><p>经过分析处理，得到的结果图如下所示：<br><img src="/img/canteen/E1.png" alt="E1">  </p><ul><li>蓝色线条 代表总人数</li><li><code>红色</code>线条 代表平均停留时间</li><li>绿色线条 代表流入率</li><li>黑色线条 代表流出率</li></ul><p>上图是周一E1 6楼3月19号周一的情况。首先蓝色线条有5个峰值，而红色线条有5段逐渐增加的区间。两者结合，我们可知E1该天有5个上课时间段：9AM-11AM, 12PM-2PM, 2PM-4PM, 4PM-6PM, 6PM-9PM。<br>因为在上课时间，总人数肯定比较多，随着课堂的进行，dwell time停留时间也在逐渐增加。在课堂的开始和下课阶段，流入和流出率较大。晚上的课大多数都是master课程，老师一般会在7:30左右课间休息，8:30左右下课。图中的结果和作者亲身经历也完全吻合，侧面说明我们处理分析数据的方法是正确的。</p><h3 id="那如何分析食堂的数据呢？"><a href="#那如何分析食堂的数据呢？" class="headerlink" title="那如何分析食堂的数据呢？"></a>那如何分析食堂的数据呢？</h3><p>大家肯定想知道，什么时间去吃饭，<code>不算太早但排队的人也不多呢？</code><br>本文分析了2018年春季第10周（3.19-3.23）的数据，采用的分析方法是:  </p><ul><li><p>一般在总人数陡增前到达食堂是比较<code>稳</code>的，迟了队伍前面就是千军万马。<br><img src="/img/canteen/wen.png" alt="稳"> </p></li><li><p>平均停留时间开始急速下降的时候，因为如果没有顾客，食堂的device平均停留时间会由于食堂员工的存在随时间不断增加。当有大量学生来时，平均停留时间会因为基数的增大而开始下降。</p></li><li>流入流出率这里不采用，是因为根据作者的亲身经历来看，每分钟的流入流出率因为不可能那么大。误差估计是WiFi系统对于每分钟probing（探测）设备的统计误差，时有时无造成的。</li></ul><h2 id="工学院食堂"><a href="#工学院食堂" class="headerlink" title="工学院食堂"></a>工学院食堂</h2><p>Engineer师生常去的食堂，价格也超级便宜。队伍比较长的一般是西餐，日本料理等。感觉这学期在E1的课比较少，每周只有周一晚上才去吃饭。下图是周一工学院食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/E-319.png" alt="E">  </p><p>从图中我们可以看出，在<code>11:31</code>时，蓝色线条总人数开始迅速增加，红色线条平均停留时间也开始下降，这不正是暴风雨前的预兆吗？说明这个时间是用餐高峰期的开始。同样的，晚餐的用餐高峰期是从<code>5:20</code>开始的。</p><h2 id="文学院食堂"><a href="#文学院食堂" class="headerlink" title="文学院食堂"></a>文学院食堂</h2><p>文学院食堂作者最爱的是海南鸡饭，三楼凉拌功夫的麻辣香锅也很不错。作者曾经有一次亲身经历，11:40到文学院食堂，人多到我想放弃。。。下图是周一文学院食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/F-319.png" alt="F">  </p><p>文学院食堂从<code>11:20</code>，平均停留时间就开始下滑，<code>11:30</code>后总人数也是急剧攀升。说明这个11:20-11:30时间是用餐高峰期的开始。 晚餐虽然呈现出变化趋势，但真的一点都不拥挤。。。  </p><h2 id="YIH食堂"><a href="#YIH食堂" class="headerlink" title="YIH食堂"></a>YIH食堂</h2><p>YIH的mixed food每次人都超级多，排队时还经常可以吃狗粮，美滋滋。但YIH相比于前面两个食堂，人数明显是少很多，因为食堂本来就不是很大。下图是周一YIH食堂的情况，时间为10AM–7:30PM<br><img src="/img/canteen/Y-319.png" alt="Y"> </p><p>从上图可以看出，午餐高峰时间从<code>11:20</code>开始，总人数开始增加，平均停留时间迅速减小，这不正是千军万马来临前的预兆吗？ 同样的，晚餐高峰是从<code>5:29</code>开始的。</p><h2 id="表格总结-划重点"><a href="#表格总结-划重点" class="headerlink" title="表格总结 划重点"></a>表格总结 <code>划重点</code></h2><p>每个食堂都分析了一周5天的数据，结果汇总在下表：<br><img src="/img/canteen/B.png" alt="B">   </p><p><code>敲黑板:</code>一般来说中午下课时间大概是在<code>11:30</code>，所以赶在这之前去食堂，人都会比较少。晚上除了YIH，其余两个食堂也不怎么拥挤。</p><h3 id="剩下的图：周二到周五"><a href="#剩下的图：周二到周五" class="headerlink" title="剩下的图：周二到周五"></a>剩下的图：周二到周五</h3><p><img src="/img/canteen/E-320.png" alt="E2"><br><img src="/img/canteen/E-321.png" alt="E3"><br><img src="/img/canteen/E-322.png" alt="E4"><br><img src="/img/canteen/E-323.png" alt="E5"> </p><p><img src="/img/canteen/F-320.png" alt="F2"><br><img src="/img/canteen/F-321.png" alt="F3"><br><img src="/img/canteen/F-322.png" alt="F4"><br><img src="/img/canteen/F-323.png" alt="F5">   </p><p><img src="/img/canteen/Y-320.png" alt="Y2"><br><img src="/img/canteen/Y-321.png" alt="Y3"><br><img src="/img/canteen/Y-322.png" alt="Y4"><br><img src="/img/canteen/Y-323.png" alt="Y5">  </p><h2 id="最后的吐槽"><a href="#最后的吐槽" class="headerlink" title="最后的吐槽"></a>最后的吐槽</h2><p>最后的一个月，马上就要毕业了，最近忙的没有时间写博客。课程，项目，论文，期末考试，找工作都是一座座艰难的大山。狗住Uo･ｪ･oU加油٩(●˙▿˙●)۶…⋆ฺ  </p><p>PS: 如果对这个分析有更好的建议，或者发现了错误之处。欢迎交流，联系方式在网页最下方。<br><img src="/img/canteen/contact.png" alt="contact"> </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;人生苦短，珍惜时间&quot;&gt;&lt;a href=&quot;#人生苦短，珍惜时间&quot; class=&quot;headerlink&quot; title=&quot;人生苦短，珍惜时间&quot;&gt;&lt;/a&gt;人生苦短，珍惜时间&lt;/h2&gt;&lt;p&gt;在食堂吃饭，最怕长队漫漫，还有狗粮作伴。人生很多事情因为慢慢等待就错过了，本来打算去食堂吃某一样菜，却因为漫长的排队等待而望而却步。&lt;br&gt;所以嘛，年轻人要想少留遗憾，就要主动出击，爱要提前行动呀！&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="https://fainyang.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="NUS" scheme="https://fainyang.github.io/tags/NUS/"/>
    
  </entry>
  
  <entry>
    <title>小白也会用的微信机器人</title>
    <link href="https://fainyang.github.io/post/Robot/"/>
    <id>https://fainyang.github.io/post/Robot/</id>
    <published>2018-03-08T16:00:00.000Z</published>
    <updated>2019-03-15T03:00:12.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="天下武功，唯快不破"><a href="#天下武功，唯快不破" class="headerlink" title="天下武功，唯快不破"></a>天下武功，唯快不破</h2><p>这一篇文章是讲解如何安装微信自动回复机器人，独乐乐不如众乐乐。<br><code>画风突转，先来一段鸡汤：</code>并不是每个人都值得你腾出手中的事情秒回，如果有那么一个人，让你情不自禁地秒回了，说明那个人何其重要。<br>或者说，你被别人秒回，又是多么温暖的存在啊。<br>他秒回的瞬间，仿佛在说：你在我心中，很重要。<br><a id="more"></a></p><p><img src="/img/robot/miaohui.jpg" alt="秒回"></p><blockquote><p>只可惜我只是一个机器人，惊不惊喜，意不意外？</p></blockquote><p>废话不多说，先来看一看效果图：</p><p><img src="/img/robot/result1.jpeg" alt="举例子图片1"> </p><p><img src="/img/robot/result2.jpeg" alt="举例子图片2"></p><p><img src="/img/robot/result3.jpeg" alt="举例子图片3"></p><p>看完是不是有点小激动呢？</p><p><img src="/img/robot/qidai.jpeg" alt="激动的搓搓小手"></p><p>老司机通道：<code>会python的直接往下拉--看运行机器人程序</code></p><h2 id="第一步安装python环境"><a href="#第一步安装python环境" class="headerlink" title="第一步安装python环境"></a>第一步安装python环境</h2><p>俗话说，人生苦短，我用python。安装python就像安装游戏、QQ一样，去<a href="https://www.python.org/downloads/" target="_blank" rel="noopener">官网</a>下载安装包，只是安装后桌面没有运行图标，而是在我们的计算机上安装了一个运行环境。</p><p>看<a href="https://www.jianshu.com/p/7a0b52075f70" target="_blank" rel="noopener">Windows-python安装教程</a><br>如果不明白的话，再看看<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014316090478912dab2a3a9e8f4ed49d28854b292f85bb000" target="_blank" rel="noopener">视频教程</a>。</p><p>用苹果电脑的点击观看<a href="https://www.jianshu.com/p/a10402b48a1c" target="_blank" rel="noopener">苹果电脑python安装教程</a>。<br>如果看不懂，可以去视频网站<code>搜python安装教学视频</code>，一边看视频一边依葫芦画瓢，我在这里就不详细说明了。万事开头难，搞不懂的话你可以微信问我呀，哈哈。</p><p>安装好以后，在Windows命令行 or Mac的终端检查一下python的version版本</p><p><img src="/img/robot/python.png" alt="检查"></p><h2 id="安装python包"><a href="#安装python包" class="headerlink" title="安装python包"></a>安装python包</h2><p>当你把python环境安装好了以后，接下来你需要安装<code>python包</code>（python包是武林高手们打造的神兵利器，从新手村刚刚出来的你再也不用苦苦磨炼，自己去做武器啦）</p><p><img src="/img/robot/happy.jpg" alt="超开心耶"></p><p>那么问题来了，你怎么样从大侠手中借到神兵利器？？？<br>这个时候就需要我们常说的py交易（开玩笑的啦），肯定是用<a href="https://www.jianshu.com/p/cf420956e9c1" target="_blank" rel="noopener">pip</a><br>。此外，这个机器人自动回复，需要两个包：一个是requests，另一个是itchat。</p><p>在Windows命令行 or Mac的终端 输入以下命令<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line"></span><br><span class="line">pip install itchat</span><br></pre></td></tr></table></figure></p><p>当用pip借到大佬们的神兵利器后，终于可以开始打怪升级了，美滋滋。</p><p><img src="/img/robot/dalao.png" alt="低头"></p><h2 id="运行机器人程序"><a href="#运行机器人程序" class="headerlink" title="运行机器人程序"></a>运行机器人程序</h2><p>第一步需要点击下载<a href="https://codeload.github.com/fainyang/Test/zip/master" target="_blank" rel="noopener">源代码</a> 下载时存放的<code>地点</code>要记住。<br>下载之后解压文件<code>Test-master.zip</code>，其中的<code>tuling.py</code>就是我们的微信自动回复机器人小程序 。<br>在文件夹中找到<code>tuling.py</code>,右键=&gt;打开方式用<code>记事本</code>打开，其中有两个地方需要修改。</p><p>第一个是图灵机器人的<code>apikey</code>，首先点击打开<a href="http://www.tuling123.com/" target="_blank" rel="noopener">图灵机器人网站</a>注册一个账号，免费创建一个机器人，得到机器人的<code>apikey</code></p><p><img src="/img/robot/tuling.png" alt="tuling"></p><p>第二个地方就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itchat.auto_login(enableCmdQR=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>修改为如下形式：这样是为了弹窗形式二维码比命令行形式的二维码清晰<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itchat.auto_login()</span><br></pre></td></tr></table></figure></p><p>至此，我们得到了机器人<code>apikey</code>，修改了二维码形式，就可以运行<code>tuling.py</code>了。</p><p>（最简单的小白法） Mac的终端 输入以下命令：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd  xxxx/Test-master   <span class="comment">#注释：先移动到tuling.py 所在文件</span></span><br><span class="line">python tuling.py      <span class="comment">#释：运行tuling.py</span></span><br></pre></td></tr></table></figure></p><p><img src="/img/robot/run.png" alt="run"><br>Windows用户在<code>Test-master</code>文件夹打开命令行，方法为：在此文件夹窗口内空白区域<code>右键单击（需要同时按住Shift）</code>，从菜单中选择＂在此处打开命令行窗口＂的项。</p><p>然后在命令窗口输入<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tuling.py</span><br></pre></td></tr></table></figure></p><p>如果前面python包成功安装，运行将会弹出来一个网页登录的二维码。微信扫码登录后，看到命令窗口的个人信息就意味着大功告成了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Getting uuid of QR code.</span><br><span class="line">Downloading QR code.</span><br><span class="line">Please scan the QR code to log <span class="keyword">in</span>.</span><br><span class="line">Please press confirm on your phone.</span><br><span class="line">Loading the contact, this may take a little <span class="keyword">while</span>.</span><br><span class="line">TERM environment variable <span class="keyword">not</span> set.</span><br><span class="line">Login successfully <span class="keyword">as</span> Fain 费洋</span><br><span class="line">Start auto replying.</span><br></pre></td></tr></table></figure></p><p>但是这个机器人有一个缺陷：一旦运行python的电脑断网、休眠、关机。那么自动回复将会失效，因为自动回复的核心是<code>电脑</code>运行python调用图灵机器人来进行回复。但是对于小白来讲，这就已经足够~(≧▽≦)~啦啦啦。</p><h2 id="兽（瘦）人永不为奴，云服务器永不关机"><a href="#兽（瘦）人永不为奴，云服务器永不关机" class="headerlink" title="兽（瘦）人永不为奴，云服务器永不关机"></a>兽（瘦）人永不为奴，云服务器永不关机</h2><p>我这周刚买的<a href="https://cloud.tencent.com/act/campus" target="_blank" rel="noopener">腾讯云</a>服务器，学生优惠下来3年360，超级划算的。<br><img src="/img/robot/tencent.png" alt="tencent"></p><p>我选择的系统是CentOS7.4（自带python2.7），需要安装python3.6–请参考<a href="http://www.jb51.net/article/133560.htm" target="_blank" rel="noopener">教程1</a> 和<a href="https://cloud.tencent.com/developer/article/1017880" target="_blank" rel="noopener">教程2</a> </p><p>安装好python环境以后，也需要安装两个包，一个是<code>requests</code>，另一个是<code>itchat</code>。<br>然后是在本地用<code>scp</code>把<code>tuling.py</code> 上传到云服务器，方法请参考<a href="https://cloud.tencent.com/document/product/213/2133" target="_blank" rel="noopener">这里</a>。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 本地文件地址 云服务器登录名@云服务器公网IP/域名:云服务器文件地址</span><br></pre></td></tr></table></figure></p><p>上传完成以后，运行试一试？结果你会发现当我们远程ssh关闭的时候，云服务器中的python程序也关闭了。<br>为了能长时间运行，你需要使用<a href="https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/" target="_blank" rel="noopener">Linux 技巧</a>来续几年。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsid python tuling.py</span><br></pre></td></tr></table></figure><p>这样我们的机器人就能在云服务器一直运行啦，直到天荒地老，海枯石烂？</p><p>错！是服务器到期欠费。</p><p><img src="/img/robot/poor.jpeg" alt="poor"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;天下武功，唯快不破&quot;&gt;&lt;a href=&quot;#天下武功，唯快不破&quot; class=&quot;headerlink&quot; title=&quot;天下武功，唯快不破&quot;&gt;&lt;/a&gt;天下武功，唯快不破&lt;/h2&gt;&lt;p&gt;这一篇文章是讲解如何安装微信自动回复机器人，独乐乐不如众乐乐。&lt;br&gt;&lt;code&gt;画风突转，先来一段鸡汤：&lt;/code&gt;并不是每个人都值得你腾出手中的事情秒回，如果有那么一个人，让你情不自禁地秒回了，说明那个人何其重要。&lt;br&gt;或者说，你被别人秒回，又是多么温暖的存在啊。&lt;br&gt;他秒回的瞬间，仿佛在说：你在我心中，很重要。&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://fainyang.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>排列组合了解一下(阿里笔试题改编)</title>
    <link href="https://fainyang.github.io/post/Combination/"/>
    <id>https://fainyang.github.io/post/Combination/</id>
    <published>2018-03-03T16:00:00.000Z</published>
    <updated>2019-03-15T02:58:11.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h2><p>假设有小费和小王俩好基友，天天形影不离，二人分在一个组。<br>为了减少迟到的现象，班主任规定如下：</p><ol><li>迟到一次，则当事人记一分。（迟到）</li><li>小组两人在某一天同时迟到，则小组总分再记一分。（连坐）</li><li>一周内如果每天都迟到，则当事人再扣一分。（太皮了）</li></ol><a id="more"></a><p>  三种情况可累加记分，一周结算一次小组总分。<br>  肯定有人想说<br><img src="/img/gay.jpeg" alt="gay里gay气"> </p><h2 id="举个例子好了"><a href="#举个例子好了" class="headerlink" title="举个例子好了"></a>举个例子好了</h2><p>下图为某一周的出勤情况：从图中看出小费同学比较皮，天天迟到！小王同学有两天和小费同学一起开黑，导致了迟到。<br>所以总的小组计分为10分！</p><p><img src="/img/combination1.png" alt="出勤情况"></p><p><code>那么问题来了：如果已知某一周小组的总分情况，列出可能的出勤表</code></p><h2 id="咸鱼采用的暴力破解法"><a href="#咸鱼采用的暴力破解法" class="headerlink" title="咸鱼采用的暴力破解法"></a>咸鱼采用的暴力破解法</h2><p>有两个对象，每个对象有5个记录。每次记录的值有两种情况，我们可以暴力枚举出所有的情况。<br>一共也才2的10次方，1024种情况。对于计算机来说，当然是小菜一碟咯。</p><p>所有上面的出勤图就可以简化为0-1数值图：<br><img src="/img/combination2.png" alt="数值图"></p><p>接下来问题就变成，如何枚举出这1024种情况？</p><ol><li>2行5列一共10个值，循环列出0-1111111111二进制数的情况，高位补0。</li><li>如上图，2列是独立的，我们只需求出5位的情况，两列互相遍历即可。</li><li>用python自带的 <a href="https://docs.python.org/3/library/itertools.html" target="_blank" rel="noopener">itertools</a>库，分分钟枚举完成。</li></ol><p><img src="/img/combination3.png" alt="解释图"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(start_day,faith_score)</span>:</span></span><br><span class="line">    Calendar=[[<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>],[<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>]] <span class="comment">#模拟日历2行5列</span></span><br><span class="line">    L=list(itertools.product([<span class="number">0</span>,<span class="number">1</span>],repeat=<span class="number">5</span>)) <span class="comment">#枚举产生</span></span><br><span class="line">    leng=len(L)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(leng):<span class="comment">#两次遍历</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(leng):</span><br><span class="line">            Calendar[<span class="number">0</span>]=L[i]</span><br><span class="line">            Calendar[<span class="number">1</span>]=L[j]</span><br><span class="line">            <span class="keyword">if</span> sumcredit(Calendar)==faith_score:<span class="comment">#判断情况</span></span><br><span class="line">                gg=todate(Calendar,start_day)</span><br><span class="line">                print(gg) <span class="comment">#输出情况</span></span><br></pre></td></tr></table></figure><p>只要有了枚举的所有情况，判断计分则是很容易的事情。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">credit1</span><span class="params">(L)</span>:</span> <span class="comment">#迟到一次扣一分</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> L[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> L[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">if</span> j==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">credit2</span> <span class="params">(L)</span>:</span>  <span class="comment">#一起迟到，多扣一分</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">if</span> L[<span class="number">0</span>][i]==<span class="number">1</span> <span class="keyword">and</span> L[<span class="number">1</span>][i]==<span class="number">1</span>:</span><br><span class="line">            credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">credit3</span> <span class="params">(L)</span>:</span> <span class="comment">#连续迟到，罪加一等</span></span><br><span class="line">    credit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">in</span> L[<span class="number">0</span>]:</span><br><span class="line">        credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">in</span> L[<span class="number">1</span>]:</span><br><span class="line">        credit+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> credit</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sumcredit</span><span class="params">(L)</span>:</span> <span class="comment">#累加总分</span></span><br><span class="line">    c1=credit1(L)</span><br><span class="line">    c2=credit2(L)</span><br><span class="line">    c3=credit3(L)</span><br><span class="line">    <span class="keyword">return</span> c1+c2+c3</span><br></pre></td></tr></table></figure><h2 id="时间问题，不容小觑"><a href="#时间问题，不容小觑" class="headerlink" title="时间问题，不容小觑"></a>时间问题，不容小觑</h2><p>因为时间在<code>跨月份</code>是时候有点麻烦，不能用普通的++，但我们可以用<code>datetime</code>库呀。<br>输入一个起始时间，我们要得到那一周的5天。<code>timedelta()</code>函数你值得拥有。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime,timedelta</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_date</span><span class="params">(date)</span>:</span>       <span class="comment">#Y表示四位数的年份(0-9999)</span></span><br><span class="line">    date_begin=datetime.strptime(date,<span class="string">'%Y%m%d'</span>) </span><br><span class="line">    time=str(datetime.date(date_begin))</span><br><span class="line"></span><br><span class="line">    date1=date_begin+timedelta(days=<span class="number">1</span>) <span class="comment">#加1s，哈哈</span></span><br><span class="line">    time1=str(datetime.date(date1))</span><br><span class="line"></span><br><span class="line">    date2=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time2=str(datetime.date(date2))</span><br><span class="line"></span><br><span class="line">    date3=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time3=str(datetime.date(date3))</span><br><span class="line"></span><br><span class="line">    date4=date_begin+timedelta(days=<span class="number">2</span>)</span><br><span class="line">    time4=str(datetime.date(date4))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> time,time1,time2,time3,time4</span><br></pre></td></tr></table></figure><p>最后我们在输出 出勤情况的时候，将那个简化后的二维数组List<code>=&gt;</code>日历对应起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">todate</span><span class="params">(L,date)</span>:</span></span><br><span class="line">    time,time1,time2,time3,time4=get_date(date)</span><br><span class="line">    record=[time+<span class="string">'-小费'</span>,time+<span class="string">'-小王'</span>,time1+<span class="string">'-小费'</span>,time1+<span class="string">'-小王'</span>,time2+<span class="string">'-小费'</span>,\</span><br><span class="line">    time2+<span class="string">'-小王'</span>,time3+<span class="string">'-小费'</span>,time3+<span class="string">'-小王'</span>,time4+<span class="string">'-小费'</span>,time4+<span class="string">'-小王'</span>]</span><br><span class="line">    L1=L[<span class="number">0</span>]+L[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(L1)):</span><br><span class="line">        <span class="keyword">if</span> L1[i]==<span class="number">1</span>: <span class="comment">#1 代表迟到</span></span><br><span class="line">            record[i]+=<span class="string">'(迟到)'</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment">#0代表没迟到</span></span><br><span class="line">            record[i]+=<span class="string">'(正常)'</span></span><br><span class="line">    <span class="keyword">return</span> record</span><br></pre></td></tr></table></figure><p>假设我们输入<code>date=20180305,score=0</code><br>输出如下结果：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'2018-03-04-小费(正常)'</span>, <span class="string">'2018-03-04-小王(正常)'</span>,</span><br><span class="line"> <span class="string">'2018-03-05-小费(正常)'</span>, <span class="string">'2018-03-05-小王(正常)'</span>, </span><br><span class="line"> <span class="string">'2018-03-06-小费(正常)'</span>, <span class="string">'2018-03-06-小王(正常)'</span>, </span><br><span class="line"> <span class="string">'2018-03-06-小费(正常)'</span>, <span class="string">'2018-03-06-小王(正常)'</span>, </span><br><span class="line"> <span class="string">'2018-03-06-小费(正常)'</span>, <span class="string">'2018-03-06-小王(正常)'</span>]</span><br><span class="line">[Finished <span class="keyword">in</span> <span class="number">0.2</span>s]</span><br></pre></td></tr></table></figure></p><p>假设我们输入<code>date=20180305,score=1</code><br>输出如下结果：<br><img src="/img/combination4.png" alt="结果"></p><h2 id="最后一点废话"><a href="#最后一点废话" class="headerlink" title="最后一点废话"></a>最后一点废话</h2><p>有一篇关于itertools的文章<a href="https://mp.weixin.qq.com/s/Rb5aYWA7NYOi1eckGtakuQ" target="_blank" rel="noopener">这段代码很Pythonic | 相见恨晚的 itertools 库</a> 安利一下。此文章的python<a href="https://github.com/fainyang/LeetCode_practice/blob/master/score.py" target="_blank" rel="noopener">源代码</a></p><p>马上就要毕业了，再也没有当学生那种无忧无虑的感觉了。以前贪玩欠的债，找工作的时候哭出来。<br>去面试才知道自己有多菜，所幸我还比较<code>naive</code>，未来珍惜时间，好好学习。狗住，加油！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题介绍&quot;&gt;&lt;a href=&quot;#问题介绍&quot; class=&quot;headerlink&quot; title=&quot;问题介绍&quot;&gt;&lt;/a&gt;问题介绍&lt;/h2&gt;&lt;p&gt;假设有小费和小王俩好基友，天天形影不离，二人分在一个组。&lt;br&gt;为了减少迟到的现象，班主任规定如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;迟到一次，则当事人记一分。（迟到）&lt;/li&gt;
&lt;li&gt;小组两人在某一天同时迟到，则小组总分再记一分。（连坐）&lt;/li&gt;
&lt;li&gt;一周内如果每天都迟到，则当事人再扣一分。（太皮了）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="学习" scheme="https://fainyang.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="https://fainyang.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>时间求差值timestampdiff</title>
    <link href="https://fainyang.github.io/post/timestampdiff/"/>
    <id>https://fainyang.github.io/post/timestampdiff/</id>
    <published>2018-02-22T16:00:00.000Z</published>
    <updated>2019-03-15T03:00:14.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题背景介绍"><a href="#问题背景介绍" class="headerlink" title="问题背景介绍"></a>问题背景介绍</h2><p>因为Prof想知道每个building里的average-dwell时间，NUS-WiFi数据库提供了current-time，<br>first-time。思路就是根据两者时间的差值来估计stay in building的时间。</p><a id="more"></a><p><img src="/img/time1.png" alt="数据时间格式"></p><h2 id="人生苦短，首选python"><a href="#人生苦短，首选python" class="headerlink" title="人生苦短，首选python"></a>人生苦短，首选python</h2><p>第一想法当然是用python，用python包：<code>time</code>, <code>datetime</code>.<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">difftime</span><span class="params">(begintime,endtime)</span>:</span></span><br><span class="line">date1=time.strptime(begintime,<span class="string">'%Y-%m-%d %H:%M:%S'</span>) </span><br><span class="line">date2=time.strptime(endtime,<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line"><span class="comment">#y两位数的年份表示（00-99）</span></span><br><span class="line"><span class="comment">#Y四位数的年份表示（000-9999）</span></span><br><span class="line">date3=datetime.datetime(</span><br><span class="line">date1[<span class="number">0</span>],date1[<span class="number">1</span>],date1[<span class="number">2</span>],date1[<span class="number">3</span>],date1[<span class="number">4</span>],date1[<span class="number">5</span>]) </span><br><span class="line">date4=datetime.datetime(</span><br><span class="line">date2[<span class="number">0</span>],date2[<span class="number">1</span>],date2[<span class="number">2</span>],date2[<span class="number">3</span>],date2[<span class="number">4</span>],date2[<span class="number">5</span>])</span><br><span class="line">minutes=(date4-date3).seconds/<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> minutes</span><br></pre></td></tr></table></figure><p>结果如下图：</p><p><img src="/img/time3.png" alt="结果展示"></p><h2 id="MySQL-表示不服"><a href="#MySQL-表示不服" class="headerlink" title="MySQL 表示不服"></a><code>MySQL</code> 表示不服</h2><p>上学期我用python做的统计工作，例如每分钟有多少device，或者每个device在building里停留了多少分钟.<br>用python至少得写30+行代码去读写csv文件，在MySQL就是一行代码的事情，相见恨晚。<br><code>无知限制了我的生产力！</code><br>MySQL的数据类型里有时间戳格式timestamp。也有专门计算时间差值的<code>timestampdiff</code>函数。<br>TIMESTAMPDIFF(unit,begin,end);返回end-begin的时间差值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select timestampdiff(minute,firstime,curtime)</span><br></pre></td></tr></table></figure><p>结果如下图：</p><p><img src="/img/time2.png" alt="结果展示"></p><h2 id="INSERT遇到问题了"><a href="#INSERT遇到问题了" class="headerlink" title="INSERT遇到问题了"></a>INSERT遇到问题了</h2><p>我想把timestampdiff返回的值插入在表的最后，先创建一个字段（列），再用insert插入，结果遇到了问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into test (diff)  select timestampdiff(minute,firstime,curtime)  from test;</span><br></pre></td></tr></table></figure><p><img src="/img/issue.png" alt="插入问题"></p><p>如图所示，结果是插在了diff列，但直接插在表的后面，没有覆盖原有的值。经过思考后，我尝试了 update的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update test set diff=timestampdiff(minute,firstime,curtime);</span><br></pre></td></tr></table></figure><p>终于成功了！</p><p><img src="/img/time4.png" alt="成功了"></p><h2 id="咸鱼的叹息"><a href="#咸鱼的叹息" class="headerlink" title="咸鱼的叹息"></a>咸鱼的叹息</h2><p>python定义了一个函数来计算，用MySQL就是一句话的事情。光找这句话我就花了好久，还得好好学习。<br>还是在项目中体会得多，光看书是不行的，纸上得来终觉浅。</p><p>很惭愧，连一点微小的工作都没有做，打扰了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题背景介绍&quot;&gt;&lt;a href=&quot;#问题背景介绍&quot; class=&quot;headerlink&quot; title=&quot;问题背景介绍&quot;&gt;&lt;/a&gt;问题背景介绍&lt;/h2&gt;&lt;p&gt;因为Prof想知道每个building里的average-dwell时间，NUS-WiFi数据库提供了current-time，&lt;br&gt;first-time。思路就是根据两者时间的差值来估计stay in building的时间。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://fainyang.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>开始blog啦</title>
    <link href="https://fainyang.github.io/post/blog/"/>
    <id>https://fainyang.github.io/post/blog/</id>
    <published>2018-02-19T16:00:00.000Z</published>
    <updated>2019-03-15T02:56:54.506Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一篇post"><a href="#第一篇post" class="headerlink" title="第一篇post"></a>第一篇post</h2><p>虽然还不知道怎么用，先把这个网站搭起再说。<br>生活需要多点乐趣，人生苦短，需要一点甜甜的爱。<br>最幸福的事情莫过于找到所爱，所爱的事业，所爱的人。<br>除了美食，最近我也慢慢开始发现编程的乐趣。<br>今年的愿望是：每晚早点休息，年轻人不要熬夜。晚安</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一篇post&quot;&gt;&lt;a href=&quot;#第一篇post&quot; class=&quot;headerlink&quot; title=&quot;第一篇post&quot;&gt;&lt;/a&gt;第一篇post&lt;/h2&gt;&lt;p&gt;虽然还不知道怎么用，先把这个网站搭起再说。&lt;br&gt;生活需要多点乐趣，人生苦短，需要一点甜甜的爱。&lt;b
      
    
    </summary>
    
      <category term="生活" scheme="https://fainyang.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
</feed>
