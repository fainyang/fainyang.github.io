<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>feiyang&#39;s blog</title>
  
  <subtitle>费洋的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://feiyang233.club/"/>
  <updated>2020-03-06T07:23:40.134Z</updated>
  <id>http://feiyang233.club/</id>
  
  <author>
    <name>feiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elasticsearch(elk) technology and practice</title>
    <link href="http://feiyang233.club/post/elk-geek/"/>
    <id>http://feiyang233.club/post/elk-geek/</id>
    <published>2020-03-03T03:11:11.000Z</published>
    <updated>2020-03-06T07:23:40.134Z</updated>
    
    <content type="html"><![CDATA[<p>Elasticsearch is a search engine based on the Lucene library. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in Java. This blog is record  what I learn from this <a href="https://time.geekbang.org/course/intro/100030501" target="_blank" rel="noopener">geek Course</a><br><a id="more"></a><br>The <a href="https://time.geekbang.org/column/article/104136" target="_blank" rel="noopener">recommendation</a> for learning Elasticsearch. </p><h1 id="Getting-started-with-elasticsearch"><a href="#Getting-started-with-elasticsearch" class="headerlink" title="Getting started with elasticsearch"></a>Getting started with elasticsearch</h1><p>This course github <a href="https://github.com/geektime-geekbang/geektime-ELK" target="_blank" rel="noopener">https://github.com/geektime-geekbang/geektime-ELK</a><br>Elasticsearch <a href="https://www.elastic.co/" target="_blank" rel="noopener">https://www.elastic.co/</a></p><ul><li>Elasticsearch Certification <a href="https://www.elastic.co/cn/training/certification" target="_blank" rel="noopener">https://www.elastic.co/cn/training/certification</a></li><li>ElasticSearch Engineering I training  <a href="https://www.elastic.co/cn/training/elasticsearch-engineer-1" target="_blank" rel="noopener">https://www.elastic.co/cn/training/elasticsearch-engineer-1</a></li><li>ElasticSearch Engineering II training  <a href="https://www.elastic.co/cn/training/elasticsearch-engineer-2" target="_blank" rel="noopener">https://www.elastic.co/cn/training/elasticsearch-engineer-2</a><h2 id="Install-elasticsearch"><a href="#Install-elasticsearch" class="headerlink" title="Install elasticsearch"></a>Install elasticsearch</h2>Install can refer <a href="https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html" target="_blank" rel="noopener">offical docs</a>  </li></ul><p>From version 7.0, don’t need install java by yourself.</p><table><thead><tr><th style="text-align:center">directory</th><th style="text-align:center">Vaconfig filelue</th><th style="text-align:center">description</th></tr></thead><tbody><tr><td style="text-align:center">bin</td><td style="text-align:center"></td><td style="text-align:center">execution file</td></tr><tr><td style="text-align:center">config</td><td style="text-align:center">elasticsearch.yml</td><td style="text-align:center">es cluster config</td></tr><tr><td style="text-align:center">JDK</td><td style="text-align:center"></td><td style="text-align:center">Java env</td></tr><tr><td style="text-align:center">data</td><td style="text-align:center">path.data</td><td style="text-align:center">es data file</td></tr><tr><td style="text-align:center">lib</td><td style="text-align:center"></td><td style="text-align:center">Java lib</td></tr><tr><td style="text-align:center">logs</td><td style="text-align:center">path.log</td><td style="text-align:center">log file</td></tr><tr><td style="text-align:center">modules</td><td style="text-align:center"></td><td style="text-align:center">including all es modules</td></tr><tr><td style="text-align:center">plugins</td><td style="text-align:center"></td><td style="text-align:center">including all installed plugins</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adjust JVM - config/jvm.options</span></span><br><span class="line">default is 1GB</span><br></pre></td></tr></table></figure><p>Config recommendation</p><ol><li>Xms equal to Xmx</li><li>Xmx don’t larger than 50% of memory</li><li>Xmx no larger than 30GB can refer <a href="https://www.elastic.co/blog/a-heap-of-trouble" target="_blank" rel="noopener">https://www.elastic.co/blog/a-heap-of-trouble</a></li></ol><h2 id="plugins"><a href="#plugins" class="headerlink" title="plugins"></a>plugins</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#启动单节点 start single nodes</span></span><br><span class="line">bin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data</span><br><span class="line"></span><br><span class="line">bin/elasticsearch-plugin list</span><br><span class="line">bin/elasticsearch-plugin install analysis-icu</span><br><span class="line"></span><br><span class="line"><span class="comment">#start kibana</span></span><br><span class="line">bin/kibana</span><br><span class="line"></span><br><span class="line">bin/kibana-plugin install plugin_location</span><br><span class="line">bin/kibana-plugin list</span><br><span class="line">bin/kibana-plugin remove</span><br><span class="line"></span><br><span class="line"><span class="comment"># dev tools in kibana</span></span><br><span class="line"><span class="comment">#查看安装的插件 check installed plugins</span></span><br><span class="line">GET http://localhost:9200/_cat/plugins?v</span><br><span class="line"><span class="comment">#查看集群 check cluster </span></span><br><span class="line">GET http://localhost:9200</span><br><span class="line"><span class="comment">#查看nodes check nodes</span></span><br><span class="line">GET _cat/nodes</span><br><span class="line">GET _cluster/health</span><br></pre></td></tr></table></figure><p>Run multiple nodes in the same machine<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.dat= node0_data -d</span><br><span class="line">bin/elasticsearch -E node.name=node1 -E cluster.name=geektime -E path.dat= node1_data -d</span><br><span class="line">bin/elasticsearch -E node.name=node2 -E cluster.name=geektime -E path.dat= node2_data -d</span><br><span class="line">bin/elasticsearch -E node.name=node3 -E cluster.name=geektime -E path.dat= node3_data -d</span><br></pre></td></tr></table></figure></p><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>Use docker-compose start cerebro kibana and 2 elasticsearch<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2.2'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  cerebro:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">lmenezes/cerebro:0.8.5</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">cerebro</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9000:9000"</span></span><br><span class="line"><span class="attr">    command:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="bullet">-Dhosts.0.host=http://elasticsearch:9200</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"><span class="attr">  kibana:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">docker.elastic.co/kibana/kibana:7.1.0</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">kibana7</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">I18N_LOCALE=zh-CN</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">XPACK_GRAPH_ENABLED=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">TIMELION_ENABLED=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">XPACK_MONITORING_COLLECTION_ENABLED="true"</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"5601:5601"</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"><span class="attr">  elasticsearch:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.1.0</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">es7_01</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.name=geektime</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">node.name=es7_01</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.initial_master_nodes=es7_01,es7_02</span></span><br><span class="line"><span class="attr">    ulimits:</span></span><br><span class="line"><span class="attr">      memlock:</span></span><br><span class="line"><span class="attr">        soft:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">        hard:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - es7data1:</span><span class="string">/usr/share/elasticsearch/data</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"><span class="attr">  elasticsearch2:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.1.0</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">es7_02</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.name=geektime</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">node.name=es7_02</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.initial_master_nodes=es7_01,es7_02</span></span><br><span class="line"><span class="attr">    ulimits:</span></span><br><span class="line"><span class="attr">      memlock:</span></span><br><span class="line"><span class="attr">        soft:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">        hard:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - es7data2:</span><span class="string">/usr/share/elasticsearch/data</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">  es7data1:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">  es7data2:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  es7net:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure></p><h2 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h2><blockquote><p>Make sure all the version is the same for elasticsearch logstash and kibana<br>Now the latest version is 7.6, because this course use 7.1, <a href="https://www.elastic.co/downloads/past-releases/logstash-7-1-0" target="_blank" rel="noopener">https://www.elastic.co/downloads/past-releases/logstash-7-1-0</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download logstash，（7.1.0）in mac you need also install JAVA</span></span><br><span class="line"><span class="comment"># cd movielens, modify logstash.conf config</span></span><br><span class="line"><span class="comment"># modify your path of movies.csv</span></span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; <span class="string">"YOUR_FULL_PATH_OF_movies.csv"</span></span><br><span class="line">    start_position =&gt; <span class="string">"beginning"</span></span><br><span class="line">    sincedb_path =&gt; <span class="string">"/dev/null"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># First start Elasticsearch cluster，then start logstash </span></span><br><span class="line">sudo ./bin/logstash -f /YOUR_PATH_of_logstash.conf</span><br></pre></td></tr></table></figure><ul><li>Download MovieLens data set：<a href="https://grouplens.org/datasets/movielens/" target="_blank" rel="noopener">https://grouplens.org/datasets/movielens/</a></li><li>Logstash download：<a href="https://www.elastic.co/cn/downloads/logstash" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/logstash</a></li><li>Logstash docs：<a href="https://www.elastic.co/guide/en/logstash/current/index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/current/index.html</a></li></ul><h1 id="Elasticsearch-basic"><a href="#Elasticsearch-basic" class="headerlink" title="Elasticsearch basic"></a>Elasticsearch basic</h1><p>Document is the smallest unit of elasticsearch. Document will transform to json and store in es. Every document has unique ID.</p><ul><li>Mutiple Tyeps <a href="https://www.elastic.co/cn/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0" target="_blank" rel="noopener">https://www.elastic.co/cn/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0</a></li><li>CAT Index API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-indices.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-indices.html</a><br>Index 相关 API<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#查看索引相关信息 check index info</span><br><span class="line">GET kibana_sample_data_ecommerce</span><br><span class="line"></span><br><span class="line">#查看索引的文档总数 check index count</span><br><span class="line">GET kibana_sample_data_ecommerce/_count</span><br><span class="line"></span><br><span class="line">#查看前10条文档，了解文档格式 check first 10 index </span><br><span class="line">POST kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#_cat indices API</span><br><span class="line">#查看indices </span><br><span class="line">GET /_cat/indices/kibana*?v&amp;s=index</span><br><span class="line"></span><br><span class="line">#查看状态为绿的索引 </span><br><span class="line">GET /_cat/indices?v&amp;health=green</span><br><span class="line"></span><br><span class="line">#按照文档个数排序</span><br><span class="line">GET /_cat/indices?v&amp;s=docs.count:desc</span><br><span class="line"></span><br><span class="line">#查看具体的字段</span><br><span class="line">GET /_cat/indices/kibana*?pri&amp;v&amp;h=health,index,pri,rep,docs.count,mt</span><br><span class="line"></span><br><span class="line">#How much memory is used per index?</span><br><span class="line">GET /_cat/indices?v&amp;h=i,tm&amp;s=tm:desc</span><br></pre></td></tr></table></figure></li></ul><h2 id="Node-amp-Shard"><a href="#Node-amp-Shard" class="headerlink" title="Node &amp; Shard"></a>Node &amp; Shard</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html</a></p><ol><li>Master-eligible node: A node that has node.master set to true (default), which makes it eligible to be elected as the master node, which controls the cluster.</li><li>Data node: A node that has node.data set to true (default). Data nodes hold data and perform data related operations such as CRUD, search, and aggregations.</li><li>Ingest node: A node that has node.ingest set to true (default). Ingest nodes are able to apply an ingest pipeline to a document in order to transform and enrich the document before indexing. With a heavy ingest load, it makes sense to use dedicated ingest nodes and to mark the master and data nodes as node.ingest: false.</li><li>Machine learning node: A node that has xpack.ml.enabled and node.ml set to true, which is the default behavior in the Elasticsearch default distribution. If you want to use machine learning features, there must be at least one machine learning node in your cluster. For more information about machine learning features, see Machine learning in the Elastic Stack.</li></ol><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html</a></p><ol><li>primary shard: Each document is stored in a single primary shard. When you index a document, it is indexed first on the primary shard, then on all replicas of the primary shard. By default, an index has one primary shard. You can specify more primary shards to scale the number of documents that your index can handle. You cannot change the number of primary shards in an index, once the index is created. However, an index can be split into a new index using the split API. See also routing</li><li>replica shard: Each primary shard can have zero or more replicas. A replica is a copy of the primary shard, and has two purposes:</li></ol><ul><li>increase failover: a replica shard can be promoted to a primary shard if the primary fails</li><li>increase performance: get and search requests can be handled by primary or replica shards.</li></ul><p>By default, each primary shard has one replica, but the number of replicas can be changed dynamically on an existing index. A replica shard will never be started on the same node as its primary shard.</p><h2 id="cluster-health"><a href="#cluster-health" class="headerlink" title="cluster-health"></a>cluster-health</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">get _cat/nodes?v</span><br><span class="line">GET /_nodes/es7_01,es7_02</span><br><span class="line">GET /_cat/nodes?v</span><br><span class="line">GET /_cat/nodes?v&amp;h=id,ip,port,v,m</span><br><span class="line"></span><br><span class="line">GET _cluster/health</span><br><span class="line">GET _cluster/health?level=shards</span><br><span class="line">GET /_cluster/health/kibana_sample_data_ecommerce,kibana_sample_data_flights</span><br><span class="line">GET /_cluster/health/kibana_sample_data_flights?level=shards</span><br><span class="line"></span><br><span class="line">#### cluster state</span><br><span class="line">The cluster state API allows access to metadata representing the state of the whole cluster. This includes information such as</span><br><span class="line">GET /_cluster/state</span><br><span class="line"></span><br><span class="line">#cluster get settings</span><br><span class="line">GET /_cluster/settings</span><br><span class="line">GET /_cluster/settings?include_defaults=true</span><br><span class="line"></span><br><span class="line">GET _cat/shards</span><br><span class="line">GET _cat/shards?h=index,shard,prirep,state,unassigned.reason</span><br></pre></td></tr></table></figure></p><ul><li>CAT Nodes API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-nodes.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-nodes.html</a></li><li>Cluster API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html</a></li><li>CAT Shards API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-shards.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-shards.html</a></li></ul><h2 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h2><ul><li>Document API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">############Create Document############</span><br><span class="line">#create document. 自动生成 _id</span><br><span class="line">POST users/_doc</span><br><span class="line">&#123;</span><br><span class="line">&quot;user&quot; : &quot;Mike&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-04-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Kibana&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#create document. 指定Id。如果id已经存在，报错</span><br><span class="line">PUT users/_doc/1?op_type=create</span><br><span class="line">&#123;</span><br><span class="line">    &quot;user&quot; : &quot;Jack&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#create document. 指定 ID 如果已经存在，就报错</span><br><span class="line">PUT users/_create/1</span><br><span class="line">&#123;</span><br><span class="line">     &quot;user&quot; : &quot;Jack&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### Get Document by ID</span><br><span class="line">#Get the document by ID</span><br><span class="line">GET users/_doc/1</span><br><span class="line"></span><br><span class="line">###  Index &amp; Update</span><br><span class="line">#Update 指定 ID  (先删除，在写入)</span><br><span class="line">GET users/_doc/1</span><br><span class="line"></span><br><span class="line">PUT users/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">&quot;user&quot; : &quot;Mike&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#GET users/_doc/1</span><br><span class="line">#在原文档上增加字段</span><br><span class="line">POST users/_update/1/</span><br><span class="line">&#123;</span><br><span class="line">    &quot;doc&quot;:&#123;</span><br><span class="line">        &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">        &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### Delete by Id</span><br><span class="line"># 删除文档</span><br><span class="line">DELETE users/_doc/1</span><br><span class="line"></span><br><span class="line">### Bulk 操作</span><br><span class="line">#执行两次，查看每次的结果</span><br><span class="line"></span><br><span class="line">#执行第1次</span><br><span class="line">POST _bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line">&#123; &quot;delete&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;create&quot; : &#123; &quot;_index&quot; : &quot;test2&quot;, &quot;_id&quot; : &quot;3&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value3&quot; &#125;</span><br><span class="line">&#123; &quot;update&quot; : &#123;&quot;_id&quot; : &quot;1&quot;, &quot;_index&quot; : &quot;test&quot;&#125; &#125;</span><br><span class="line">&#123; &quot;doc&quot; : &#123;&quot;field2&quot; : &quot;value2&quot;&#125; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#执行第2次</span><br><span class="line">POST _bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line">&#123; &quot;delete&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;create&quot; : &#123; &quot;_index&quot; : &quot;test2&quot;, &quot;_id&quot; : &quot;3&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value3&quot; &#125;</span><br><span class="line">&#123; &quot;update&quot; : &#123;&quot;_id&quot; : &quot;1&quot;, &quot;_index&quot; : &quot;test&quot;&#125; &#125;</span><br><span class="line">&#123; &quot;doc&quot; : &#123;&quot;field2&quot; : &quot;value2&quot;&#125; &#125;</span><br><span class="line"></span><br><span class="line">### mget 操作</span><br><span class="line">GET /_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#URI中指定index</span><br><span class="line">GET /test/_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET /_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">            &quot;_source&quot; : false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;,</span><br><span class="line">            &quot;_source&quot; : [&quot;field3&quot;, &quot;field4&quot;]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;3&quot;,</span><br><span class="line">            &quot;_source&quot; : &#123;</span><br><span class="line">                &quot;include&quot;: [&quot;user&quot;],</span><br><span class="line">                &quot;exclude&quot;: [&quot;user.location&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### msearch 操作</span><br><span class="line">POST kibana_sample_data_ecommerce/_msearch</span><br><span class="line">&#123;&#125;</span><br><span class="line">&#123;&quot;query&quot; : &#123;&quot;match_all&quot; : &#123;&#125;&#125;,&quot;size&quot;:1&#125;</span><br><span class="line">&#123;&quot;index&quot; : &quot;kibana_sample_data_flights&quot;&#125;</span><br><span class="line">&#123;&quot;query&quot; : &#123;&quot;match_all&quot; : &#123;&#125;&#125;,&quot;size&quot;:2&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 清除测试数据</span><br><span class="line">#清除数据 delete data</span><br><span class="line">DELETE users</span><br><span class="line">DELETE test</span><br><span class="line">DELETE test2</span><br></pre></td></tr></table></figure></li></ul><h2 id="inverted-index"><a href="#inverted-index" class="headerlink" title="inverted-index"></a>inverted-index</h2><ul><li><a href="https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a></li><li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/inverted-index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/cn/elasticsearch/guide/current/inverted-index.html</a></li></ul><p>Demo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Mastering Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Elasticsearch Server&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Elasticsearch Essentials&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="analyzer"><a href="#analyzer" class="headerlink" title="analyzer"></a>analyzer</h2><p>Demo for practice<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#Simple Analyzer – 按照非字母切分（符号被过滤），小写处理</span><br><span class="line">#Stop Analyzer – 小写处理，停用词过滤（the，a，is）</span><br><span class="line">#Whitespace Analyzer – 按照空格切分，不转小写</span><br><span class="line">#Keyword Analyzer – 不分词，直接将输入当作输出</span><br><span class="line">#Patter Analyzer – 正则表达式，默认 \W+ (非字符分隔)</span><br><span class="line">#Language – 提供了30多种常见语言的分词器</span><br><span class="line">#2 running Quick brown-foxes leap over lazy dogs in the summer evening</span><br><span class="line"></span><br><span class="line">#查看不同的analyzer的效果</span><br><span class="line">#standard</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#simpe</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;simple&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;stop&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#stop</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#keyword</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;keyword&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;pattern&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#english</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;english&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;icu_analyzer&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的确实在理”&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的确实在理”&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;icu_analyzer&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;这个苹果不大好吃&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer-anatomy.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer-anatomy.html</a></li></ul><h2 id="URI-Search"><a href="#URI-Search" class="headerlink" title="URI Search"></a>URI Search</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a></li><li><a href="https://searchenginewatch.com/sew/news/2065080/search-engines-101" target="_blank" rel="noopener">https://searchenginewatch.com/sew/news/2065080/search-engines-101</a></li><li><a href="https://www.huffpost.com/entry/search-engines-101-part-i_b_1104525" target="_blank" rel="noopener">https://www.huffpost.com/entry/search-engines-101-part-i_b_1104525</a></li><li><a href="https://www.entrepreneur.com/article/176398" target="_blank" rel="noopener">https://www.entrepreneur.com/article/176398</a></li><li><a href="https://www.searchtechnologies.com/meaning-of-relevancy" target="_blank" rel="noopener">https://www.searchtechnologies.com/meaning-of-relevancy</a></li></ul><table><thead><tr><th style="text-align:center">Grammer</th><th style="text-align:center">search range</th></tr></thead><tbody><tr><td style="text-align:center">/_search</td><td style="text-align:center">all index in cluster</td></tr><tr><td style="text-align:center">/index1/_search</td><td style="text-align:center">only index1</td></tr><tr><td style="text-align:center">/index,index2/_search</td><td style="text-align:center">index1 and index2</td></tr><tr><td style="text-align:center">/index*/_search</td><td style="text-align:center">regex index*</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#URI Query</span><br><span class="line">GET kibana_sample_data_ecommerce/_search?q=customer_first_name:Eddie</span><br><span class="line">GET kibana*/_search?q=customer_first_name:Eddie</span><br><span class="line">GET /_all/_search?q=customer_first_name:Eddie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#REQUEST Body</span><br><span class="line">POST kibana_sample_data_ecommerce/_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;: &#123;</span><br><span class="line">&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a></li></ul><table><thead><tr><th style="text-align:center">fields</th><th style="text-align:center">function</th></tr></thead><tbody><tr><td style="text-align:center">q</td><td style="text-align:center">query string syntax</td></tr><tr><td style="text-align:center">df</td><td style="text-align:center">default field</td></tr><tr><td style="text-align:center">sort</td><td style="text-align:center">sort by xx</td></tr><tr><td style="text-align:center">from size</td><td style="text-align:center">for page</td></tr><tr><td style="text-align:center">profile</td><td style="text-align:center">check the query process</td></tr><tr><td style="text-align:center">A B</td><td style="text-align:center">A OR B</td></tr><tr><td style="text-align:center">“A B”</td><td style="text-align:center">A AND B</td></tr><tr><td style="text-align:center">title:(A AND B)</td><td style="text-align:center">title=”A AND B”</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">#基本查询</span><br><span class="line">GET /movies/_search?q=2012&amp;df=title&amp;sort=year:desc&amp;from=0&amp;size=10&amp;timeout=1s</span><br><span class="line"></span><br><span class="line">#带profile</span><br><span class="line">GET /movies/_search?q=2012&amp;df=title</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#泛查询，正对_all,所有字段</span><br><span class="line">GET /movies/_search?q=2012</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#指定字段</span><br><span class="line">GET /movies/_search?q=title:2012&amp;sort=year:desc&amp;from=0&amp;size=10&amp;timeout=1s</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查找美丽心灵, Mind为泛查询</span><br><span class="line">GET /movies/_search?q=title:Beautiful Mind</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 泛查询</span><br><span class="line">GET /movies/_search?q=title:2012</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#使用引号，Phrase查询</span><br><span class="line">GET /movies/_search?q=title:&quot;Beautiful Mind&quot;</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#分组，Bool查询</span><br><span class="line">GET /movies/_search?q=title:(Beautiful Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#布尔操作符</span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET /movies/_search?q=title:(Beautiful AND Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET /movies/_search?q=title:(Beautiful NOT Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET /movies/_search?q=title:(Beautiful %2BMind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#范围查询 ,区间写法</span><br><span class="line">GET /movies/_search?q=title:beautiful AND year:[2002 TO 2018%7D</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#通配符查询</span><br><span class="line">GET /movies/_search?q=title:b*</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//模糊匹配&amp;近似度匹配</span><br><span class="line">GET /movies/_search?q=title:beautifl~1</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /movies/_search?q=title:&quot;Lord Rings&quot;~2</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Elasticsearch is a search engine based on the Lucene library. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in Java. This blog is record  what I learn from this &lt;a href=&quot;https://time.geekbang.org/course/intro/100030501&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;geek Course&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="elk" scheme="http://feiyang233.club/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>Operation Course Record</title>
    <link href="http://feiyang233.club/post/operation-course/"/>
    <id>http://feiyang233.club/post/operation-course/</id>
    <published>2020-02-13T10:56:35.000Z</published>
    <updated>2020-03-07T12:55:26.512Z</updated>
    
    <content type="html"><![CDATA[<p>This blog is for record what I learn from this <a href="https://kaiwu.lagou.com/course/courseInfo.htm?courseId=42#/detail/pc?id=1546" target="_blank" rel="noopener">Operation Course</a></p><a id="more"></a><h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><h2 id="SHORTCUTS"><a href="#SHORTCUTS" class="headerlink" title="SHORTCUTS"></a>SHORTCUTS</h2><p>Ctrl + r：find the histroy<br>Ctrl + l：clear the terminal<br>Ctrl + a \ Ctrl + e：move to head\end in row<br>Ctrl + w \ Ctrl + k：delete before\after cursor</p><p>ZZ : VIM save and quit</p><p>Ctrl+C: Interrupt (kill) the current foreground process running in in the terminal. This sends the SIGINT signal to the process, which is technically just a request—most processes will honor it, but some may ignore it.<br>Ctrl+Z: Suspend the current foreground process running in bash. This sends the SIGTSTP signal to the process. To return the process to the foreground later, use the fg process_name command.<br>Ctrl+D: Close the bash shell. This sends an EOF (End-of-file) marker to bash, and bash exits when it receives this marker. This is similar to running the exit command.</p><p>top SHORTCUTS  </p><p>Shift + p：Sort by CPU<br>Shift + m：Sort by Memory</p><h2 id="find-large-file"><a href="#find-large-file" class="headerlink" title="find large file"></a>find large file</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">du -x --max-depth=1 / |sort -k1 -nr</span><br><span class="line">du -x -d 1 -h / |sort -k1 -nr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> find <span class="built_in">which</span> folder has most inode</span></span><br><span class="line">find -type f | awk -F / -v OFS=/ '&#123;$NF="";dir[$0]++&#125;END&#123;for(i in dir)print dir[i]" "i&#125;'| sort -k1 -nr | head</span><br><span class="line"></span><br><span class="line">769 ./wrk/obj/openssl-1.1.1b/test/</span><br><span class="line">551 ./.cache/mozilla/firefox/hha91z74.default-release/cache2/entries/</span><br><span class="line">462 ./wrk/obj/openssl-1.1.1b/doc/man3/</span><br><span class="line">229 ./wrk/obj/LuaJIT-2.1.0-beta3/src/</span><br><span class="line">212 ./wrk/obj/openssl-1.1.1b/test/certs/</span><br><span class="line">207 ./wrk/obj/openssl-1.1.1b/apps/</span><br><span class="line">199 ./wrk/obj/openssl-1.1.1b/crypto/asn1/</span><br><span class="line">194 ./.cache/gnome-software/icons/</span><br><span class="line">185 ./wrk/obj/openssl-1.1.1b/crypto/evp/</span><br><span class="line">157 ./wrk/obj/openssl-1.1.1b/test/recipes/</span><br></pre></td></tr></table></figure><h2 id="rename"><a href="#rename" class="headerlink" title="rename"></a>rename</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> find consumer.xml file and replace all aaaaaa to bbbbbb</span></span><br><span class="line">find ./ -type f -name consumer.xml -exec sed -i "s/aaaaaa/bbbbbb/g" &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> find all .txt file and compress <span class="keyword">then</span> copy to /home/.</span></span><br><span class="line">(find . -name "*.txt"|xargs tar -cvf test.tar) &amp;&amp; cp -f test.tar /home/.</span><br></pre></td></tr></table></figure><h2 id="network"><a href="#network" class="headerlink" title="network"></a>network</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> network status</span></span><br><span class="line">netstat -n | awk '/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> get IP </span></span><br><span class="line">ip a|grep "global"|awk '&#123;print $2&#125;'| awk -F/ '&#123;print $1&#125;'</span><br></pre></td></tr></table></figure><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><ol><li><a href="https://mp.weixin.qq.com/s/IRQq3h4mur60rjVfcLsBzA" target="_blank" rel="noopener">Nginx是什么？能干什么？</a></li></ol><h2 id="cpu-affinity"><a href="#cpu-affinity" class="headerlink" title="cpu affinity"></a>cpu affinity</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_cpu_affinity</span> auto</span><br></pre></td></tr></table></figure><p><a href="http://nginx.org/en/docs/ngx_core_module.html#worker_cpu_affinity" target="_blank" rel="noopener">offical document</a></p><h2 id="epoll"><a href="#epoll" class="headerlink" title="epoll"></a>epoll</h2><p>Add in kernel 2.6</p><ol><li>epoll’s event flow model is thread-safe;</li><li>epoll follow the selection model and improve efficiency;</li><li>epoll is event-driven. You can select the relevant state of the entire file to be scanned according to your needs. epoll avoids replacing the scanned file according to the event. You can directly call the callback function, which is more efficient.</li><li>Removed the maximum limit on the number of file sizes that can be monitored by the temporary process inside the select model (1024). If you have used an earlier version of Apache, the selection model it uses will be delayed when the request exceeds 1000. The request is wrong, and the performance will be significantly improved by using Nginx.</li><li>In addition, an optimization place involved in the events {} configuration is worker_connections, which is also set in events. Through the above learning, we know the role of the worker thread, and the connections supported by each worker thread are Limited, it will be set to 1024 by default here, and when we are dealing with high concurrency scenarios, it is often too low to split worker threads to 1024. It is recommended that you increase the worker_connections, you can refer to the actual business needs Nginx processing Maximum to increase this setting.</li></ol><h2 id="sendfile"><a href="#sendfile" class="headerlink" title="sendfile"></a>sendfile</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200216173928.png" alt><br>refer <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile" target="_blank" rel="noopener">docs</a><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /video/ &#123;</span><br><span class="line">    <span class="attribute">sendfile</span>       <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nopush</span>     <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">aio</span>            <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h2><p><a href="http://nginx.org/en/docs/http/ngx_http_gzip_module.html" target="_blank" rel="noopener">docs</a></p><ol><li><code>gzip on</code> is responsible for turning on the compression function of the backend;</li><li><code>gzip_buffer 16 8k</code> means to set the memory space of Nginx when processing file compression;</li><li><code>gzip_comp_level 6</code> indicates the compression level of Nginx when processing compression. Generally, the higher the level, the larger the compression ratio. However, it does not mean that the larger the compression ratio, the better. It is still necessary to choose a suitable compression ratio according to the actual situation. The compression ratio is too large. Affects performance. Compression ratio is too small to achieve the desired effect. Generally, it is recommended that you set it to 6 to be more appropriate.</li><li><code>gzip_http_version 1.1</code> means only compress the HTTP 1.1 version of the protocol;</li><li><code>gzip_min_length 256</code> means that compression is performed only when the length is greater than the minimum 256 bytes, and if it is less than this length, no compression is performed;</li><li><code>gzip_proxied any</code> means that Nginx as a reverse proxy sets some gzip compression policies based on the information returned by the backend server;</li><li><code>gzip_vary on</code> indicates whether to send Vary: Accept_Encoding response header field, to realize that the receiver server is gzip compressed;</li><li><code>application / vnd.ms-fontobject image / x-icon</code>; gip compression type;</li><li>g<code>zip_disable &quot;msie6&quot;</code>; Turn off compression for IE6.</li></ol><h2 id="Timing-Variables"><a href="#Timing-Variables" class="headerlink" title="Timing Variables"></a>Timing Variables</h2><ul><li><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html?&amp;_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_request_time" target="_blank" rel="noopener">request_time</a> – Full request time, starting when NGINX reads the first byte from the client and ending when NGINX sends the last byte of the response body</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&amp;_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_upstream_connect_time" target="_blank" rel="noopener">upstream_connect_time</a> – Time spent establishing a connection with an upstream server</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&amp;_ga=2.57291882.1195201124.1581934594-512055108.1581845805#var_upstream_header_time" target="_blank" rel="noopener">upstream_header_time</a> – Time between establishing a connection to an upstream server and receiving the first byte of the response header</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&amp;_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_upstream_response_time" target="_blank" rel="noopener">upstream_response_time</a> – Time between establishing a connection to an upstream server and receiving the last byte of the response body</li></ul><h2 id="nginx-cache"><a href="#nginx-cache" class="headerlink" title="nginx cache"></a>nginx cache</h2><ol><li>ssl_session_cache</li><li><p>open_file_cache</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">index</span> index.htm index.html;</span><br><span class="line">    <span class="attribute">expires</span> max;  </span><br><span class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">1000</span> inactive=<span class="number">20s</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_valid</span> <span class="number">30s</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_min_uses</span> <span class="number">2</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>proxy_cache_path</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_cache_path</span> /path/to/cache levels=<span class="number">1</span>:<span class="number">2</span> keys_zone=my_cache:<span class="number">10m</span> max_size=<span class="number">10g</span> inactive=<span class="number">60m</span>location / &#123;</span><br><span class="line">        <span class="attribute">proxy_cache</span> my_cache;</span><br><span class="line">        …</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="load-balance"><a href="#load-balance" class="headerlink" title="load balance"></a>load balance</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200229125517.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200229125522.png" alt><br>nginx LB general config like follow<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="attribute">upstream</span> app_servers &#123;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="attribute">location</span> / &#123;</span><br><span class="line">                      <span class="attribute">proxy_pass</span> http://app_servers; </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol><li><p>real ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br></pre></td></tr></table></figure></li><li><p>Host forward</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span> ;</span><br><span class="line"><span class="attribute">proxy</span> set_header Host www.vipumi.com;</span><br></pre></td></tr></table></figure></li><li><p>session miss</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip_hash</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="attribute">upstream</span> app_servers &#123;</span><br><span class="line">                 ip_hash;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="attribute">location</span> / &#123;</span><br><span class="line">                  <span class="attribute">proxy_pass</span> http://app_servers; </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL_hash</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="attribute">upstream</span> app_servers &#123;</span><br><span class="line">            <span class="attribute">hash</span> <span class="variable">$request_uri</span>;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="attribute">location</span> / &#123;</span><br><span class="line">                  <span class="attribute">proxy_pass</span> http://app_servers;   </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># session copy between upstream servers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># session share: store in zookeeper</span></span><br></pre></td></tr></table></figure></li><li><p>live ping</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use taobao Tengine module</span></span><br><span class="line"></span><br><span class="line">check interval=3000 rise=2 fall=5 timeout=1000 type=http;  //定义检查间隔、周期、时间</span><br><span class="line">check_keepalive_requests 100;  //一个连接发送的请求数</span><br><span class="line">check_http_send “HEAD / HTTP/1.1\r\nConnection: keep-alive\r\n\r\n”; //定义健康检查方式</span><br><span class="line">check_http_expect_alive http_2xx http_3xx;  //判断后端返回状态码</span><br></pre></td></tr></table></figure></li></ol><h1 id="dynamic-upstream"><a href="#dynamic-upstream" class="headerlink" title="dynamic upstream"></a>dynamic upstream</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200301123058.png" alt></p><h2 id="nginx-config"><a href="#nginx-config" class="headerlink" title="nginx config"></a>nginx config</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">error_log</span>  logs/error.log  <span class="literal">info</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">lua_shared_dict</span> upstreams <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">upstream</span> local &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:81</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:82</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:83</span>;</span><br><span class="line">        <span class="attribute">balancer_by_lua_file</span> <span class="string">"./ngx_lua/upstream.lua"</span>;</span><br><span class="line">        <span class="comment">#check interval=3000 rise=2 fall=5 timeout=1000;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">800</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://local;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> = /ups &#123;</span><br><span class="line">            <span class="attribute">default_type</span>  text/plain;</span><br><span class="line">            <span class="attribute">content_by_lua_file</span> <span class="string">"./ngx_lua/upsops.lua"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> = /ups/check &#123;</span><br><span class="line">            <span class="attribute">default_type</span>  text/plain;</span><br><span class="line">            <span class="attribute">content_by_lua_file</span> <span class="string">"./ngx_lua/srvcheck.lua"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>upstream.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"><span class="keyword">local</span> upstream = <span class="built_in">require</span> <span class="string">"ngx.upstream"</span></span><br><span class="line"><span class="keyword">local</span> get_servers = upstream.get_servers</span><br><span class="line"><span class="keyword">local</span> set_peer_down = upstream.set_peer_down</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> curr_ups = upstream.current_upstream_name()</span><br><span class="line"><span class="keyword">local</span> srvs = get_servers(curr_ups)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 摘除主节点的服务节点，传入的addr对应于主节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_primary_server_down</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_primary_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">false</span>,peer.id,<span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 摘除备份节点的服务节点，传入的addr对应于备份节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_backup_server_down</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_backup_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">true</span>,peer.id,<span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 恢复主节点的服务节点，传入的addr对应于主节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_primary_server_up</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_primary_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">false</span>,peer.id,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 恢复备份节点的服务节点，传入的addr对应于备份节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_backup_server_up</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_backup_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">true</span>,peer.id,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i,peer <span class="keyword">in</span> <span class="built_in">ipairs</span>(srvs) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> isdown = ups:get(peer[<span class="string">"name"</span>])</span><br><span class="line">    <span class="comment">-- 摘除服务节点</span></span><br><span class="line">    <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> peer.backup == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- peer.addr: socket 地址，可能是Lua字符串或lua字符串的数组.</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_primary_server_down(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_primary_server_down(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> peer.backup == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_backup_server_down(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_backup_server_down(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- 恢复服务节点</span></span><br><span class="line">    <span class="keyword">elseif</span> isdown == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> peer.backup == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_primary_server_up(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_primary_server_up(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> peer.backup == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_backup_server_up(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_backup_server_up(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>upsops.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> cjson = <span class="built_in">require</span> <span class="string">"cjson"</span>;</span><br><span class="line"><span class="keyword">local</span> upstream = <span class="built_in">require</span> <span class="string">"ngx.upstream"</span></span><br><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> get_upstreams = upstream.get_upstreams</span><br><span class="line"><span class="keyword">local</span> all_ups = upstream.get_upstreams()</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> op = ngx.req.get_uri_args()[<span class="string">"op"</span>];</span><br><span class="line"><span class="keyword">local</span> server = ngx.req.get_uri_args()[<span class="string">"server"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> op == <span class="literal">nil</span> <span class="keyword">or</span> server == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    ngx.say(<span class="string">"usage: /ups?op=add&amp;server=192.168.56.101:8080"</span>);</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">down_server</span><span class="params">(upstream_name,server)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">local</span> perrs = upstream.get_servers(upstream_name)</span><br><span class="line">    <span class="keyword">local</span> avail = #perrs</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #perrs <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = perrs[i]</span><br><span class="line">        <span class="keyword">local</span> isdown = ups:get(peer[<span class="string">"name"</span>])</span><br><span class="line">        <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            avail = avail - <span class="number">1</span></span><br><span class="line">            ngx.<span class="built_in">log</span>(ngx.ERR,<span class="string">"## peer.down: true  ups: "</span>..upstream_name..<span class="string">" peer.name: "</span>..peer.name..<span class="string">" server: "</span>..server..<span class="string">" avail: "</span>..avail)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> peer.name == server <span class="keyword">then</span></span><br><span class="line">            ret = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret <span class="keyword">then</span></span><br><span class="line">        avail = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> avail</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> op == <span class="string">"add"</span> <span class="keyword">then</span></span><br><span class="line">    ups:set(server,<span class="number">0</span>)</span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"add a server success."</span>,data=&#123;server&#125;&#125;))</span><br><span class="line"><span class="keyword">elseif</span> op == <span class="string">"del"</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> isdown = ups:get(server)</span><br><span class="line">    <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"del a server success."</span>,data=&#123;server&#125;&#125;))</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> _,u <span class="keyword">in</span> <span class="built_in">ipairs</span>(all_ups) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> srvs = upstream.get_servers(u)</span><br><span class="line">        <span class="keyword">for</span> i,peer <span class="keyword">in</span> <span class="built_in">ipairs</span>(srvs) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">local</span> down_svc = down_server(u,server)</span><br><span class="line">            ngx.<span class="built_in">log</span>(ngx.ERR,<span class="string">"## down_svc: "</span>..down_svc..<span class="string">" upstream: "</span>..u..<span class="string">" server: "</span>..server)</span><br><span class="line">            <span class="keyword">if</span> down_svc &lt; <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,u..<span class="string">" You cat not set peer down: "</span>..peer[<span class="string">"name"</span>])</span><br><span class="line">                ngx.say(cjson.encode(&#123;code=<span class="string">"E00001"</span>, msg=<span class="string">"You cat not set peer down: "</span>..peer[<span class="string">"name"</span>],data=&#123;peer[<span class="string">"name"</span>]&#125;&#125;))</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    ups:set(server,<span class="number">1</span>)</span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"del a server success."</span>,data=&#123;server&#125;&#125;))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">"E00001"</span>, msg=<span class="string">"do none."</span>,data=&#123;&#125;&#125;))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>srvcheck.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> cjson = <span class="built_in">require</span> <span class="string">"cjson"</span>;</span><br><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"><span class="keyword">local</span> servers = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">pairs</span>(ups:get_keys(<span class="number">0</span>)) <span class="keyword">do</span></span><br><span class="line">   servers[v] = ups:get(v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"OK"</span>, data=servers&#125;))</span><br></pre></td></tr></table></figure></li></ol><h1 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h1><ul><li>21 curl exercises <a href="https://jvns.ca/blog/2019/08/27/curl-exercises/" target="_blank" rel="noopener">https://jvns.ca/blog/2019/08/27/curl-exercises/</a></li><li>answer <a href="http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/" target="_blank" rel="noopener">http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/</a></li><li><a href="https://wsgzao.github.io/post/curl/" target="_blank" rel="noopener">https://wsgzao.github.io/post/curl/</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法 </span></span><br><span class="line">curl [option] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的使用，获取服务器内容，默认将输出打印到标准输出中(STDOUT) 中。</span></span><br><span class="line">curl http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 - v 参数可以看到详细解析过程，通常用于 debug</span></span><br><span class="line">curl -v http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl 发送 Get 请求</span></span><br><span class="line">curl URL</span><br><span class="line">curl URL -O 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 发送 post 请求</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 cookies</span></span><br><span class="line">curl URL --cookie <span class="string">"cookie 内容"</span></span><br><span class="line">curl URL --cookie-jar cookie 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置代理字符串</span></span><br><span class="line">curl URL --user-agent <span class="string">"代理内容"</span></span><br><span class="line">curl URL -A <span class="string">"代理内容"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 限制带宽</span></span><br><span class="line">curl URL --<span class="built_in">limit</span>-rate 速度</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 认证</span></span><br><span class="line">curl -u user:<span class="built_in">pwd</span> URL</span><br><span class="line">curl -u user URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 只打印 http 头部信息</span></span><br><span class="line">curl -I URL</span><br><span class="line">curl -head URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 末尾参数</span></span><br><span class="line">--progress  显示进度条</span><br><span class="line">--silent    不现实进度条</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要修改 / etc/hosts，curl 直接解析 ip 请求域名</span></span><br><span class="line"><span class="comment"># 将 http://example.com 或 https://example.com 请求指定域名解析的 IP 为 127.0.0.1</span></span><br><span class="line">curl --resolve example.com:80:127.0.0.1 http://example.com/</span><br><span class="line">curl --resolve example.com:443:127.0.0.1 https://example.com/</span><br><span class="line"></span><br><span class="line">-X/--request [GET|POST|PUT|DELETE|…]  指定请求的 HTTP 方法</span><br><span class="line">-H/--header                           指定请求的 HTTP Header</span><br><span class="line">-d/--data                             指定请求的 HTTP 消息体（Body）</span><br><span class="line">-v/--verbose                          输出详细的返回信息</span><br><span class="line">-u/--user                             指定账号、密码</span><br><span class="line">-b/--cookie                           读取 cookie  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 典型的测试命令为：</span></span><br><span class="line">curl -v -X POST -H <span class="string">"Content-Type: application/json"</span> http://127.0.0.1:8080/user -d<span class="string">'&#123;"username":"admin","password":"admin1234"&#125;'</span>...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 get 请求</span></span><br><span class="line">curl http://www.linuxidc.com/login.cgi?user=test001&amp;password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 post 请求</span></span><br><span class="line">curl -d <span class="string">"user=nickwolfe&amp;password=12345"</span> http://www.linuxidc.com/login.cgi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时需要使用 - X 选项，除了使用 POST 外，还可以使用 http 规范定义的其它请求谓词，如 PUT,DELETE 等</span></span><br><span class="line">curl -XPOST url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时，通常需要指定请求体数据。可以使用 - d 或 --data 来指定发送的请求体。</span></span><br><span class="line">curl -XPOST -d <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要对请求数据进行 urlencode, 可以使用下面的方式：</span></span><br><span class="line">curl -XPOST --data-urlencode <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此外发送 post 请求还可以有如下几种子选项：</span></span><br><span class="line">–data-raw</span><br><span class="line">–data-ascii</span><br><span class="line">–data-binary</span><br><span class="line"></span><br><span class="line"><span class="comment"># To retrieve the job config.xml</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml'</span> -u username:API_TOKEN -o &lt;jobname&gt;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use this config to create a new job</span></span><br><span class="line">curl -s -XPOST <span class="string">'&lt;jenkinshost&gt;/createItem?name=&lt;jobname&gt;'</span> -u username:API_TOKEN --data-binary @&lt;jobname&gt;.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get all jenkins jobs</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/api/json?pretty=true'</span> -u username:API_TOKEN -o jobs.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># get jenkins view</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/view/&lt;viewname&gt;/api/json'</span> -u username:API_TOKEN -o view.json</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This blog is for record what I learn from this &lt;a href=&quot;https://kaiwu.lagou.com/course/courseInfo.htm?courseId=42#/detail/pc?id=1546&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Operation Course&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://feiyang233.club/tags/shell/"/>
    
      <category term="nginx" scheme="http://feiyang233.club/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>2019 Reviews</title>
    <link href="http://feiyang233.club/post/reviews-2019/"/>
    <id>http://feiyang233.club/post/reviews-2019/</id>
    <published>2020-01-26T05:58:50.000Z</published>
    <updated>2020-01-26T06:45:07.644Z</updated>
    
    <content type="html"><![CDATA[<p>The pasted 2019 is so fast, this blog is to record my progress and regret of 2019.<br><a id="more"></a></p><ul><li>2019 I migrate from seagroup to shopee due to organize migration, I can learn more complex and advanced architecture.</li><li>Read 4 books, http, linux security, promethues, golang.</li><li>I begin to learn algorithm and golang.</li><li>I have more experience in ELK, Zabbix, Promethues and Network</li><li>I begin to learn front-end react to develop shopee CDN platform.</li></ul><p>I also make some difference in my work, Ocha project migrate to new cluster, add more monitors for shopee order team. But there are also some regret.</p><ul><li>Less chance to gym and exercise, so weight increase.</li><li>Never go out for travel in 2019.</li><li>Oral English still so bad, need more practice.</li><li>No some special area. I plan to deep into ELK </li></ul><p>What I will do in 2020 ?</p><ul><li>More exercise, keep weight around 70 kg</li><li>Learn elk and pass <a href="https://www.elastic.co/training/certification" target="_blank" rel="noopener">Elastic Certified Engineer</a></li><li>Read book 《Advanced Programming in the UNIX Environment》Third Edition</li><li>Continue to learn algorithm one question one week.</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The pasted 2019 is so fast, this blog is to record my progress and regret of 2019.&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="review" scheme="http://feiyang233.club/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Linux performance optimization</title>
    <link href="http://feiyang233.club/post/linux/"/>
    <id>http://feiyang233.club/post/linux/</id>
    <published>2019-12-24T08:07:17.000Z</published>
    <updated>2020-03-01T04:50:49.189Z</updated>
    
    <content type="html"><![CDATA[<p>This blog record some useful tools for linux.<br><a id="more"></a></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/5_90fSpp-JeD-ffZixqc9g" target="_blank" rel="noopener">一文读懂Linux进程、进程组、会话、僵尸</a></li><li><a href="https://mp.weixin.qq.com/s/QBF2ozxqy03Cprh_ugi3NA" target="_blank" rel="noopener">Linux中父进程为何要苦苦地知道子进程的死亡原因？</a></li><li><a href="https://mp.weixin.qq.com/s/2Sx52ggm_D-oFVAhmNTbHw" target="_blank" rel="noopener">浅谈 Linux 高负载的系统化分析</a></li><li><a href="https://mp.weixin.qq.com/s/TQZ3anPiStzgI1B--uTGlQ" target="_blank" rel="noopener">CPU 使用率低高负载的原因</a></li><li><a href="https://mp.weixin.qq.com/s/Bv1j41dZJBXy-yfVwvtJPw" target="_blank" rel="noopener">Linux系统文件系统及文件基础篇</a></li><li><a href="https://mp.weixin.qq.com/s/Ilc2s4ReBiMVWQDi8aH4Tw" target="_blank" rel="noopener">如何在Linux中使用awk工具详解</a></li><li><a href="https://mp.weixin.qq.com/s/XWy_pgxOG0tspvHBDpYafg" target="_blank" rel="noopener">通过10个例子掌握Linux下lsof命令</a> </li><li><a href="https://mp.weixin.qq.com/s/oGc79uYz05wDfRSivMpJUA" target="_blank" rel="noopener">学习操作系统</a></li></ol><p>Linux performance tools<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225190537.png" alt></p><h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>What is the Linux system load ? Can refer this <a href="https://mp.weixin.qq.com/s/AhZw_k5U_Pf2k9AOvruFcQ" target="_blank" rel="noopener">article</a> or <a href="http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html" target="_blank" rel="noopener">this</a><br>Linux load averages are “system load averages” that show the running thread (task) demand on the system as an average number of running plus waiting threads. R + D state: Running + Uninterruptible Sleep</p><h2 id="stress-sysstat"><a href="#stress-sysstat" class="headerlink" title="stress sysstat"></a>stress sysstat</h2><p>We can do some test by command <code>stress</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apt install stress sysstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># stress i cpu</span></span><br><span class="line">stress --cpu 1 --timeout 600</span><br><span class="line"></span><br><span class="line"><span class="comment"># check uptime load</span></span><br><span class="line">watch -d uptime</span><br><span class="line"></span><br><span class="line"><span class="comment"># check ALL cpu status</span></span><br><span class="line">mpstat -P ALL 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># check every process or thread cpu usage </span></span><br><span class="line">pidstat -u 5 1</span><br></pre></td></tr></table></figure></p><p>A thread is the basic unit of scheduling, and the process is the basic unit of resource owners</p><ul><li>Thread</li></ul><ol><li>smallest sequence of programming instructions that can be managed independently by a scheduler</li><li>Has its own register e.g. PC (program counter), SP (stack pointer)</li></ol><ul><li>Process</li></ul><ol><li>instance of a computer porgram that is being executed</li><li>A process can have one or multiple thread</li><li>Most programs are single threaded</li></ol><ul><li>Parallel computing</li></ul><ol><li>Run program currently on one or more CPUs</li><li>Multi-threading (shared-memory)</li><li>Multi-processing (independent-memory)  <h2 id="context-switch"><a href="#context-switch" class="headerlink" title="context switch"></a>context switch</h2></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interval 5s output 1 row data</span></span><br><span class="line">$ vmstat 5</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy  id  wa st</span><br><span class="line"> 0  0     0 7005360  91564 818900    0    0     0     0   25   33  0  0  100  0  0</span><br><span class="line"></span><br><span class="line"><span class="comment"># cs（context switch）</span></span><br><span class="line"><span class="comment"># in（interrupt）</span></span><br><span class="line"><span class="comment"># r（Running or Runnable）</span></span><br><span class="line"><span class="comment"># b（Blocked）</span></span><br></pre></td></tr></table></figure><p><code>vmstat</code> only provide overall context switch of system, <code>pidstat -w</code> shows process context switch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interval 5s output 1 row data</span></span><br><span class="line">$ pidstat -w 5</span><br><span class="line">Linux 4.15.0 (ubuntu)  09/23/18  _x86_64_  (2 CPU)</span><br><span class="line"> </span><br><span class="line">08:18:26      UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">08:18:31        0         1      0.20      0.00  systemd</span><br><span class="line">08:18:31        0         8      5.40      0.00  rcu_sched</span><br><span class="line"></span><br><span class="line"><span class="comment"># cswch: voluntary context switches</span></span><br><span class="line"><span class="comment"># nvcswch: non voluntary context switches</span></span><br></pre></td></tr></table></figure><p>we use <code>sysbench</code> to simulate a system multi-threaded scheduling switch.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">sysbench --threads=10 --max-time=300 threads run</span><br><span class="line"></span><br><span class="line"><span class="comment"># check all context switch</span></span><br><span class="line">vmstat 1</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs     us sy id wa st</span><br><span class="line"> 6  0      0 6487428 118240 1292772  0    0     0     0 9019  1398830 16 84  0  0  0</span><br><span class="line"> 8  0      0 6487428 118240 1292772  0    0     0     0 10191 1392312 16 84  0  0  0</span><br><span class="line"></span><br><span class="line"><span class="comment"># check which process cause high cs 1398830</span></span><br><span class="line"><span class="comment"># -w  Report  task switching activity  </span></span><br><span class="line"><span class="comment"># -u  Report CPU utilization.</span></span><br><span class="line">pidstat -w -u 1</span><br><span class="line">08:06:33      UID       PID    %usr %system  %guest   %<span class="built_in">wait</span>    %CPU   CPU  Command</span><br><span class="line">08:06:34        0     10488   30.00  100.00    0.00    0.00  100.00     0  sysbench</span><br><span class="line">08:06:34        0     26326    0.00    1.00    0.00    0.00    1.00     0  kworker/u4:2</span><br><span class="line"> </span><br><span class="line">08:06:33      UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">08:06:34        0         8     11.00      0.00  rcu_sched</span><br><span class="line">08:06:34        0        16      1.00      0.00  ksoftirqd/1</span><br><span class="line">08:06:34        0       471      1.00      0.00  hv_balloon</span><br><span class="line">08:06:34        0      1230      1.00      0.00  iscsid</span><br><span class="line">08:06:34        0      4089      1.00      0.00  kworker/1:5</span><br><span class="line">08:06:34        0      4333      1.00      0.00  kworker/0:3</span><br><span class="line">08:06:34        0     10499      1.00    224.00  pidstat</span><br><span class="line">08:06:34        0     26326    236.00      0.00  kworker/u4:2</span><br><span class="line">08:06:34     1000     26784    223.00      0.00  sshd</span><br><span class="line"></span><br><span class="line"><span class="comment"># -t display statistics for  threads  associated  with  selected tasks.</span></span><br><span class="line">pidstat -wt 1</span><br><span class="line"></span><br><span class="line">08:14:05      UID      TGID       TID   cswch/s nvcswch/s  Command</span><br><span class="line">...</span><br><span class="line">08:14:05        0     10551         -      6.00      0.00  sysbench</span><br><span class="line">08:14:05        0         -     10551      6.00      0.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10552  18911.00 103740.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10553  18915.00 100955.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10554  18827.00 103954.00  |__sysbench</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check /proc/interrupts</span></span><br><span class="line"></span><br><span class="line">watch -d cat /proc/interrupts</span><br><span class="line"></span><br><span class="line">          CPU0       CPU1</span><br><span class="line">...</span><br><span class="line">RES:    2450431    5279697   Rescheduling interrupts</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="cpu-utilization"><a href="#cpu-utilization" class="headerlink" title="cpu utilization"></a>cpu utilization</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/<span class="built_in">stat</span> | grep ^cpu</span><br><span class="line">cpu  280580 7407 286084 172900810 83602 0 583 0 0 0</span><br><span class="line">cpu0 144745 4181 176701 86423902 52076 0 301 0 0 0</span><br><span class="line">cpu1 135834 3226 109383 86476907 31525 0 282 0 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf is a good tools</span></span><br><span class="line">perf top</span><br><span class="line"></span><br><span class="line">perf record <span class="comment"># Ctrl+C stop</span></span><br><span class="line"></span><br><span class="line">perf report <span class="comment"># show record</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Best practice how to perf container process</span></span><br><span class="line"><span class="comment"># perf record in host then perf report in container</span></span><br><span class="line"><span class="comment"># install perf in host </span></span><br><span class="line">apt-get install -y linux-tools-common linux-tools-generic linux-tools-$(uname -r)）</span><br><span class="line"></span><br><span class="line">perf record -g -p &lt; pid&gt;</span><br><span class="line"></span><br><span class="line">docker cp perf.data <span class="built_in">test</span>:/tmp </span><br><span class="line">docker <span class="built_in">exec</span> -i -t <span class="built_in">test</span> bash</span><br><span class="line"><span class="built_in">cd</span> /tmp/ </span><br><span class="line">apt-get update &amp;&amp; apt-get install -y linux-tools linux-perf procps</span><br><span class="line">perf_4.9 report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pstress display a tree of processes</span></span><br><span class="line">pstree | grep stress</span><br></pre></td></tr></table></figure><h2 id="many-Z-zombie-state"><a href="#many-Z-zombie-state" class="headerlink" title="many Z (zombie) state"></a>many Z (zombie) state</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line"></span><br><span class="line">top - 05:56:23 up 17 days, 16:45,  2 users,  load average: 2.00, 1.68, 1.39</span><br><span class="line">Tasks: 247 total,   1 running,  79 sleeping,   0 stopped, 115 zombie</span><br><span class="line">%Cpu0  :  0.0 us,  0.7 sy,  0.0 ni, 38.9 id, 60.5 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.7 sy,  0.0 ni,  4.7 id, 94.6 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 4340 root      20   0   44676   4048   3432 R   0.3  0.0   0:00.05 top</span><br><span class="line"> 4345 root      20   0   37280  33624    860 D   0.3  0.0   0:00.01 app</span><br><span class="line"> 4344 root      20   0   37280  33624    860 D   0.3  0.4   0:00.01 app</span><br><span class="line">    1 root      20   0  160072   9416   6752 S   0.0  0.1   0:38.59 systemd</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># dstat check cpu and IO</span></span><br><span class="line">dstat 1 10</span><br><span class="line"></span><br><span class="line">You did not select any stats, using -cdngy by default.</span><br><span class="line">--total-cpu-usage-- -dsk/total- -net/total- ---paging-- ---system--</span><br><span class="line">usr sys idl wai stl| <span class="built_in">read</span>  writ| recv  send|  <span class="keyword">in</span>   out | int   csw</span><br><span class="line">  0   0  96   4   0|1219k  408k|   0     0 |   0     0 |  42   885</span><br><span class="line">  0   0   2  98   0|  34M    0 | 198B  790B|   0     0 |  42   138</span><br><span class="line">  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  42   135</span><br><span class="line">  0   0  84  16   0|5633k    0 |  66B  342B|   0     0 |  52   177</span><br><span class="line">  0   3  39  58   0|  22M    0 |  66B  342B|   0     0 |  43   144</span><br><span class="line">  0   0   0 100   0|  34M    0 | 200B  450B|   0     0 |  46   147</span><br><span class="line">  0   0   2  98   0|  34M    0 |  66B  342B|   0     0 |  45   134</span><br><span class="line">  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  39   131</span><br><span class="line">  0   0  83  17   0|5633k    0 |  66B  342B|   0     0 |  46   168</span><br><span class="line">  0   3  39  59   0|  22M    0 |  66B  342B|   0     0 |  37   134</span><br><span class="line"></span><br><span class="line"><span class="comment"># find the D pid</span></span><br><span class="line">top</span><br><span class="line">...</span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 4340 root      20   0   44676   4048   3432 R   0.3  0.0   0:00.05 top</span><br><span class="line"> 4345 root      20   0   37280  33624    860 D   0.3  0.0   0:00.01 app</span><br><span class="line"> 4344 root      20   0   37280  33624    860 D   0.3  0.4   0:00.01 app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># for example pid = 4344</span></span><br><span class="line">pidstat -d -p 4344 1 3</span><br><span class="line">06:38:50      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:38:51        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line">06:38:52        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line">06:38:53        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line"></span><br><span class="line"><span class="comment"># check all process, find 6082</span></span><br><span class="line">pidstat -d 1 20</span><br><span class="line">...</span><br><span class="line">06:48:46      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:47        0      4615      0.00      0.00      0.00       1  kworker/u4:1</span><br><span class="line">06:48:47        0      6080  32768.00      0.00      0.00     170  app</span><br><span class="line">06:48:47        0      6081  32768.00      0.00      0.00     184  app</span><br><span class="line"> </span><br><span class="line">06:48:47      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:48        0      6080      0.00      0.00      0.00     110  app</span><br><span class="line"> </span><br><span class="line">06:48:48      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:49        0      6081      0.00      0.00      0.00     191  app</span><br><span class="line"> </span><br><span class="line">06:48:49      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line"> </span><br><span class="line">06:48:50      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:51        0      6082  32768.00      0.00      0.00       0  app</span><br><span class="line">06:48:51        0      6083  32768.00      0.00      0.00       0  app</span><br><span class="line"> </span><br><span class="line">06:48:51      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:52        0      6082  32768.00      0.00      0.00     184  app</span><br><span class="line">06:48:52        0      6083  32768.00      0.00      0.00     175  app</span><br><span class="line"> </span><br><span class="line">06:48:52      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:53        0      6083      0.00      0.00      0.00     105  app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># use strace</span></span><br><span class="line">strace -p 6082</span><br><span class="line">strace: attach: ptrace(PTRACE_SEIZE, 6082): Operation not permitted</span><br><span class="line"></span><br><span class="line">ps aux | grep 6082</span><br><span class="line">root      6082  0.0  0.0      0     0 pts/0    Z+   13:43   0:00 [app] &lt;defunct&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># find blkdev_direct_IO </span></span><br><span class="line">perf record -g</span><br><span class="line">perf report</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225210140.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find father of 3084</span></span><br><span class="line">pstree -aps 3084</span><br><span class="line">systemd,1</span><br><span class="line">  └─dockerd,15006 -H fd://</span><br><span class="line">      └─docker-containe,15024 --config /var/run/docker/containerd/containerd.toml</span><br><span class="line">          └─docker-containe,3991 -namespace moby -workdir...</span><br><span class="line">              └─app,4009</span><br><span class="line">                  └─(app,3084)</span><br></pre></td></tr></table></figure><h2 id="soft-interrupt"><a href="#soft-interrupt" class="headerlink" title="soft interrupt"></a>soft interrupt</h2><p>Linux divides the interrupt handling process into two phases, the upper half and the lower half: The first part is used to quickly handle interrupts. It runs in interrupt disable mode and mainly deals with hardware-related or time-sensitive tasks. The second part is used to delay processing of the unfinished work in the upper half, usually running as a kernel thread.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /proc/softirqs provides the operation of soft interrupts;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /proc/interrupts provides the operation of hard interrupts.</span></span><br><span class="line"></span><br><span class="line">cat /proc/softirqs</span><br><span class="line">                    CPU0       CPU1</span><br><span class="line">          HI:          0          0</span><br><span class="line">       TIMER:     811613    1972736</span><br><span class="line">      NET_TX:         49          7</span><br><span class="line">      NET_RX:    1136736    1506885</span><br><span class="line">       BLOCK:          0          0</span><br><span class="line">    IRQ_POLL:          0          0</span><br><span class="line">     TASKLET:     304787       3691</span><br><span class="line">       SCHED:     689718    1897539</span><br><span class="line">     HRTIMER:          0          0</span><br><span class="line">         RCU:    1330771    1354737</span><br><span class="line"></span><br><span class="line">ps aux | grep softirq</span><br><span class="line">root   7  0.0  0.0     0    0 ?    S    Oct10   0:01 [ksoftirqd/0]</span><br><span class="line">root  16  0.0  0.0     0    0 ?    S    Oct10   0:01 [ksoftirqd/1]</span><br><span class="line"></span><br><span class="line"><span class="comment"># sar - Collect, report, or save system activity information.</span></span><br><span class="line"></span><br><span class="line">sar -n DEV 1</span><br><span class="line">15:03:46        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">15:03:47         eth0  12607.00   6304.00    664.86    358.11      0.00      0.00      0.00      0.01</span><br><span class="line">15:03:47      docker0   6302.00  12604.00    270.79    664.66      0.00      0.00      0.00      0.00</span><br><span class="line">15:03:47           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">15:03:47    veth9f6bbcd 6302.00  12604.00    356.95    664.66      0.00      0.00      0.00      0.05</span><br><span class="line"></span><br><span class="line"><span class="comment"># check TCP package SYN ddos attack</span></span><br><span class="line">tcpdump -i eth0 -n tcp port 80</span><br><span class="line">15:11:32.678966 IP 192.168.0.2.18238 &gt; 192.168.0.30.80: Flags [S], seq 458303614, win 512, length 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215653.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215708.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215717.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215723.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215732.png" alt></p><h1 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165532.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165536.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165539.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165542.png" alt></p><h2 id="buffer-amp-cache"><a href="#buffer-amp-cache" class="headerlink" title="buffer &amp; cache"></a>buffer &amp; cache</h2><p>Buffers are temporary storage of raw disk blocks, that is, used to cache data on the disk, usually not particularly large (about 20MB). In this way, the kernel can centralize scattered writes and optimize disk writes in a unified manner. For example, multiple small writes can be combined into a single large write.  </p><p>Cached is a page cache that reads files from disk, that is, it is used to cache data read from files. This way, the next time you access these file data, you can quickly get it directly from memory without having to access the slow disk again.  </p><p>SReclaimable is part of Slab. Slab consists of two parts, the recyclable part is recorded with SReclaimable; the non-recyclable part is recorded with SUnreclaim.  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Before using cachestat and cachetop, we must first install the bcc package</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://repo.iovisor.org/apt/xenial xenial main"</span> | sudo tee /etc/apt/sources.list.d/iovisor.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y bcc-tools libbcc-examples linux-headers-$(uname -r)</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/share/bcc/tools</span><br><span class="line"></span><br><span class="line"><span class="comment">#cachestat provides read and write hits for the entire system cache.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1s interval 3 row data</span></span><br><span class="line">cachestat 1 3</span><br><span class="line">   TOTAL   MISSES     HITS  DIRTIES   BUFFERS_MB  CACHED_MB</span><br><span class="line">    2        0        2        1           17        279</span><br><span class="line">    2        0        2        1           17        279</span><br><span class="line">    2        0        2        1           17        279 </span><br><span class="line"></span><br><span class="line"><span class="comment">#cachetop provides cache hits for each process.</span></span><br><span class="line"></span><br><span class="line">cachetop</span><br><span class="line">11:58:50 Buffers MB: 258 / Cached MB: 347 / Sort: HITS / Order: ascending</span><br><span class="line">PID      UID      CMD              HITS     MISSES   DIRTIES  READ_HIT%  WRITE_HIT%</span><br><span class="line">13029 root     python                 1        0        0     100.0%       0.0%</span><br></pre></td></tr></table></figure><p>Check the specify file cache, we can use <a href="https://github.com/tobert/pcstat" target="_blank" rel="noopener">pcstat</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPATH=~/go</span><br><span class="line"><span class="built_in">export</span> PATH=~/go/bin:<span class="variable">$PATH</span></span><br><span class="line">go get golang.org/x/sys/unix</span><br><span class="line">go get github.com/tobert/pcstat/pcstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># first try</span></span><br><span class="line">pcstat /bin/ls</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line">| Name    | Size (bytes)   | Pages      | Cached    | Percent |</span><br><span class="line">|---------+----------------+------------+-----------+---------|</span><br><span class="line">| /bin/ls | 133792         | 33         | 0         | 000.000 |</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># second try</span></span><br><span class="line">ls</span><br><span class="line">pcstat /bin/ls</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line">| Name    | Size (bytes)   | Pages      | Cached    | Percent |</span><br><span class="line">|---------+----------------+------------+-----------+---------|</span><br><span class="line">| /bin/ls | 133792         | 33         | 33        | 100.000 |</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br></pre></td></tr></table></figure></p><h2 id="memory-leak"><a href="#memory-leak" class="headerlink" title="memory leak"></a>memory leak</h2><ol><li>Check the whole memory by <code>vmstat</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vmstat 3</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line">0  0    0 6601824  97620 1098784    0    0     0     0   62  322  0  0 100  0  0</span><br><span class="line">0  0    0 6601700  97620 1098788    0    0     0     0   57  251  0  0 100  0  0</span><br><span class="line">0  0    0 6601320  97620 1098788    0    0     0     3   52  306  0  0 100  0  0</span><br><span class="line">0  0    0 6601452  97628 1098788    0    0     0    27   63  326  0  0 100  0  0</span><br><span class="line">2  0    0 6601328  97628 1098788    0    0     0    44   52  299  0  0 100  0  0</span><br><span class="line">0  0    0 6601080  97628 1098792    0    0     0     0   56  285  0  0 100  0  0</span><br></pre></td></tr></table></figure></li></ol><p>The free column of memory is constantly changing and is in a downward trend; the buffer and cache remain basically unchanged.</p><ol start="2"><li><code>memleak</code> is a tool in the bcc package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/bcc/tools/memleak -a -p $(pidof app)</span><br><span class="line">WARNING: Couldn<span class="string">'t find .text section in /app</span></span><br><span class="line"><span class="string">WARNING: BCC can'</span>t handle sym look ups <span class="keyword">for</span> /app</span><br><span class="line">    addr = 7f8f704732b0 size = 8192</span><br><span class="line">    addr = 7f8f704772d0 size = 8192</span><br><span class="line">    addr = 7f8f704712a0 size = 8192</span><br><span class="line">    addr = 7f8f704752c0 size = 8192</span><br><span class="line">    32768 bytes <span class="keyword">in</span> 4 allocations from stack</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        start_thread+0xdb [libpthread-2.27.so] </span><br><span class="line"><span class="comment"># [unknown] is app is in docker</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy exec file from docker, then to check</span></span><br><span class="line">docker cp app:/app /app</span><br><span class="line">/usr/share/bcc/tools/memleak -p $(pidof app) -a</span><br><span class="line">Attaching to pid 12512, Ctrl+C to quit.</span><br><span class="line">[03:00:41] Top 10 stacks with outstanding allocations:</span><br><span class="line">    addr = 7f8f70863220 size = 8192</span><br><span class="line">    addr = 7f8f70861210 size = 8192</span><br><span class="line">    addr = 7f8f7085b1e0 size = 8192</span><br><span class="line">    addr = 7f8f7085f200 size = 8192</span><br><span class="line">    addr = 7f8f7085d1f0 size = 8192</span><br><span class="line">    40960 bytes <span class="keyword">in</span> 5 allocations from stack</span><br><span class="line">        fibonacci+0x1f [app]</span><br><span class="line">        child+0x4f [app]</span><br><span class="line">        start_thread+0xdb [libpthread-2.27.so]</span><br></pre></td></tr></table></figure></li></ol><h2 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h2><p>Data that has been modified by the application and has not yet been written to the disk (that is, dirty pages) must be written to the disk before memory can be released.These dirty pages can generally be written to disk in two ways.</p><ol><li>You can use the system call fsync in your application to synchronize dirty pages to disk;</li><li>It can also be left to the system, and the kernel thread pdflush is responsible for refreshing these dirty pages.<br>Swap writes these infrequently accessed memory to disk, then releases this memory for use by other more needed processes. When the memory is accessed again, it is sufficient to re-read it from disk.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227180106.png" alt><br>In the NUMA architecture, multiple processors are divided into different nodes, and each node has its own local memory space.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227180111.png" alt></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">numactl --hardware</span><br><span class="line">available: 2 nodes (0-1)</span><br><span class="line">node 0 cpus: 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30</span><br><span class="line">node 0 size: 32674 MB</span><br><span class="line">node 0 free: 418 MB</span><br><span class="line">node 1 cpus: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31</span><br><span class="line">node 1 size: 32768 MB</span><br><span class="line">node 1 free: 212 MB</span><br><span class="line">node distances:</span><br><span class="line">node   0   1 </span><br><span class="line">  0:  10  21 </span><br><span class="line">  1:  21  10 </span><br><span class="line"></span><br><span class="line">cat /proc/zoneinfo</span><br><span class="line">...</span><br><span class="line">Node 0, zone   Normal</span><br><span class="line"> pages free     227894</span><br><span class="line">       min      14896</span><br><span class="line">       low      18620</span><br><span class="line">       high     22344</span><br><span class="line">...</span><br><span class="line">     nr_free_pages 227894</span><br><span class="line">     nr_zone_inactive_anon 11082</span><br><span class="line">     nr_zone_active_anon 14024</span><br><span class="line">     nr_zone_inactive_file 539024</span><br><span class="line">     nr_zone_active_file 923986</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -r memory，-S  Swap </span></span><br><span class="line">$ sar -r -S 1</span><br><span class="line">04:39:56    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:39:57      6249676   6839824   1919632     23.50    740512     67316   1691736     10.22    815156    841868         4</span><br><span class="line"> </span><br><span class="line">04:39:56    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:39:57      8388604         0      0.00         0      0.00</span><br><span class="line"> </span><br><span class="line">04:39:57    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:39:58      6184472   6807064   1984836     24.30    772768     67380   1691736     10.22    847932    874224        20</span><br><span class="line"> </span><br><span class="line">04:39:57    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:39:58      8388604         0      0.00         0      0.00</span><br><span class="line"> </span><br><span class="line">…</span><br><span class="line"> </span><br><span class="line">04:44:06    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:44:07       152780   6525716   8016528     98.13   6530440     51316   1691736     10.22    867124   6869332         0</span><br><span class="line"> </span><br><span class="line">04:44:06    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:44:07      8384508      4096      0.05        52      1.27</span><br><span class="line"></span><br><span class="line"><span class="comment"># check cachetop 50 hit rate</span></span><br><span class="line"></span><br><span class="line">cachetop 5</span><br><span class="line">12:28:28 Buffers MB: 6349 / Cached MB: 87 / Sort: HITS / Order: ascending</span><br><span class="line">PID      UID      CMD              HITS     MISSES   DIRTIES  READ_HIT%  WRITE_HIT%</span><br><span class="line">18280   root     python              22        0        0     100.0%       0.0%</span><br><span class="line">18279   root     dd              41088    41022        0      50.0%      50.0%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pages_free fluctuation</span></span><br><span class="line">watch -d grep -A 15 <span class="string">'Normal'</span> /proc/zoneinfo</span><br><span class="line">Node 0, zone   Normal</span><br><span class="line">  pages free     21328</span><br><span class="line">        min      14896</span><br><span class="line">        low      18620</span><br><span class="line">        high     22344</span><br><span class="line">        spanned  1835008</span><br><span class="line">        present  1835008</span><br><span class="line">        managed  1796710</span><br><span class="line">        protection: (0, 0, 0, 0, 0)</span><br><span class="line">      nr_free_pages 21328</span><br><span class="line">      nr_zone_inactive_anon 79776</span><br><span class="line">      nr_zone_active_anon 206854</span><br><span class="line">      nr_zone_inactive_file 918561</span><br><span class="line">      nr_zone_active_file 496695</span><br><span class="line">      nr_zone_unevictable 2251</span><br><span class="line">      nr_zone_write_pending 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sort by VmSwap</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /proc/*/status ; <span class="keyword">do</span> awk <span class="string">'/VmSwap|Name|^Pid/&#123;printf $2 " " $3&#125;END&#123; print ""&#125;'</span> <span class="variable">$file</span>; <span class="keyword">done</span> | sort -k 3 -n -r | head</span><br><span class="line">dockerd 2226 10728 kB</span><br><span class="line">docker-containe 2251 8516 kB</span><br><span class="line">snapd 936 4020 kB</span><br><span class="line">networkd-dispat 911 836 kB</span><br><span class="line">polkitd 1004 44 kB</span><br></pre></td></tr></table></figure><h2 id="summary-1"><a href="#summary-1" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232819.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232823.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232828.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232831.png" alt></p><p>What’s the difference between system and disk ?<br>A disk is a storage device (to be exact, a block device) that can be divided into different disk partitions. On a disk or disk partition, you can also create a file system and mount it in a directory on the system. In this way, the system can read and write files through this mount directory.</p><p>In other words, a disk is a block device that stores data and is the carrier of a file system. Therefore, the file system still needs to ensure the persistent storage of data through disk.</p><p>You will see this sentence in many places, everything in Linux is a file. In other words, you can access disks and files through the same file interface (such as open, read, write, close, etc.).</p><p>What we usually mean by “documents” is actually ordinary documents.</p><p>The disk or partition refers to the block device file.</p><h1 id="I-O"><a href="#I-O" class="headerlink" title="I-O"></a>I-O</h1><p>The Linux file system allocates two data structures for each file, an <code>index node</code> and a <code>directory entry</code>. They are mainly used to record the meta information and directory structure of files.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228204621.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228204848.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slabtop - display kernel slab cache information in real time</span></span><br><span class="line"></span><br><span class="line">slabtop</span><br><span class="line"></span><br><span class="line">Active / Total Objects (% used)    : 503302 / 506242 (99.4%)</span><br><span class="line"> Active / Total Slabs (% used)      : 10730 / 10730 (100.0%)</span><br><span class="line"> Active / Total Caches (% used)     : 100 / 143 (69.9%)</span><br><span class="line"> Active / Total Size (% used)       : 153659.58K / 155417.98K (98.9%)</span><br><span class="line"> Minimum / Average / Maximum Object : 0.01K / 0.31K / 8.00K</span><br><span class="line"></span><br><span class="line">  OBJS ACTIVE  USE OBJ SIZE  SLABS OBJ/SLAB CACHE SIZE NAME                   </span><br><span class="line">103782 103782 100%    0.19K   2471       42     19768K dentry</span><br><span class="line"> 73749  73749 100%    0.10K   1891       39      7564K buffer_head</span><br><span class="line"> 45900  45900 100%    0.13K    765       60      6120K kernfs_node_cache</span><br><span class="line"> 39985  39985 100%    0.58K    727       55     23264K inode_cache</span><br><span class="line"> 34830  34830 100%    1.05K   1161       30     37152K ext4_inode_cache</span><br><span class="line"> 18462  18462 100%    0.04K    181      102       724K ext4_extent_status</span><br><span class="line"> 17784  17784 100%    0.20K    456       39      3648K vm_area_struct</span><br><span class="line"> 15456  15456 100%    0.69K    336       46     10752K squashfs_inode_cache</span><br><span class="line"> 14336  14144   0%    0.50K    224       64      7168K kmalloc-512</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228233800.png" alt></p><h2 id="check-io"><a href="#check-io" class="headerlink" title="check io"></a>check io</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iostat -d -x 1 </span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">loop1            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sdb              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228234202.png" alt></p><ul><li>% util is the disk I / O usage </li><li>r/s + w/s is IOPS</li><li>rkB/s + wkB/s is the throughput</li><li>r_await + w_await is the response time</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check process</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line">13:39:51      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">13:39:52      102       916      0.00      4.00      0.00       0  rsyslogd</span><br><span class="line"></span><br><span class="line">iotop</span><br><span class="line">Total DISK READ :       0.00 B/s | Total DISK WRITE :       7.85 K/s </span><br><span class="line">Actual DISK READ:       0.00 B/s | Actual DISK WRITE:       0.00 B/s </span><br><span class="line">  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    COMMAND </span><br><span class="line">15055 be/3 root        0.00 B/s    7.85 K/s  0.00 %  0.00 % systemd-journald</span><br></pre></td></tr></table></figure><h2 id="write-issue"><a href="#write-issue" class="headerlink" title="write issue"></a>write issue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"> top </span><br><span class="line">top - 14:43:43 up 1 day,  1:39,  2 users,  load average: 2.48, 1.09, 0.63 </span><br><span class="line">Tasks: 130 total,   2 running,  74 sleeping,   0 stopped,   0 zombie </span><br><span class="line">%Cpu0  :  0.7 us,  6.0 sy,  0.0 ni,  0.7 id, 92.7 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">%Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 92.3 id,  7.3 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">KiB Mem :  8169308 total,   747684 free,   741336 used,  6680288 buff/cache </span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7113124 avail Mem </span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND </span><br><span class="line">18940 root      20   0  656108 355740   5236 R   6.3  4.4   0:12.56 python </span><br><span class="line">1312 root      20   0  236532  24116   9648 S   0.3  0.3   9:29.80 python3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 92.7 io_wait </span></span><br><span class="line"><span class="comment"># memroy most is used for buff/cache </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check which device</span></span><br><span class="line">iostat -x -d 1 </span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sdb              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00   64.00      0.00  32768.00     0.00     0.00   0.00   0.00    0.00 7270.44 1102.18     0.00   512.00  15.50  99.20</span><br><span class="line"></span><br><span class="line"><span class="comment"># check which process</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line"> </span><br><span class="line">15:08:35      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">15:08:36        0     18940      0.00  45816.00      0.00      96  python </span><br><span class="line"></span><br><span class="line">15:08:36      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">15:08:37        0       354      0.00      0.00      0.00     350  jbd2/sda1-8 </span><br><span class="line">15:08:37        0     18940      0.00  46000.00      0.00      96  python </span><br><span class="line">15:08:37        0     20065      0.00      0.00      0.00    1503  kworker/u4:2 </span><br><span class="line"></span><br><span class="line"><span class="comment"># check pid 18940</span></span><br><span class="line">strace -p 18940 </span><br><span class="line">strace: Process 18940 attached </span><br><span class="line">...</span><br><span class="line">mmap(NULL, 314576896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0f7aee9000 </span><br><span class="line">mmap(NULL, 314576896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0f682e8000 </span><br><span class="line">write(3, <span class="string">"2018-12-05 15:23:01,709 - __main"</span>..., 314572844 </span><br><span class="line">) = 314572844 </span><br><span class="line">munmap(0x7f0f682e8000, 314576896)       = 0 </span><br><span class="line">write(3, <span class="string">"\n"</span>, 1)                       = 1 </span><br><span class="line">munmap(0x7f0f7aee9000, 314576896)       = 0 </span><br><span class="line">close(3)                                = 0 </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">"/tmp/logtest.txt.1"</span>, &#123;st_mode=S_IFREG|0644, st_size=943718535, ...&#125;) = 0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check pid 18940 open files</span></span><br><span class="line">lsof -p 18940 </span><br><span class="line">COMMAND   PID USER   FD   TYPE DEVICE  SIZE/OFF    NODE NAME </span><br><span class="line">python  18940 root  cwd    DIR   0,50      4096 1549389 / </span><br><span class="line">python  18940 root  rtd    DIR   0,50      4096 1549389 / </span><br><span class="line">… </span><br><span class="line">python  18940 root    2u   CHR  136,0       0t0       3 /dev/pts/0 </span><br><span class="line">python  18940 root    3w   REG    8,1 117944320     303 /tmp/logtest.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># root cause is python wirte 300MB/s to /tmp/logtest.txt</span></span><br></pre></td></tr></table></figure><h2 id="io-wait-issue"><a href="#io-wait-issue" class="headerlink" title="io_wait issue"></a>io_wait issue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">top </span><br><span class="line">top - 14:27:02 up 10:30,  1 user,  load average: 1.82, 1.26, 0.76 </span><br><span class="line">Tasks: 129 total,   1 running,  74 sleeping,   0 stopped,   0 zombie </span><br><span class="line">%Cpu0  :  3.5 us,  2.1 sy,  0.0 ni,  0.0 id, 94.4 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">%Cpu1  :  2.4 us,  0.7 sy,  0.0 ni, 70.4 id, 26.5 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">KiB Mem :  8169300 total,  3323248 free,   436748 used,  4409304 buff/cache </span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7412556 avail Mem </span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND </span><br><span class="line">12280 root      20   0  103304  28824   7276 S  14.0  0.4   0:08.77 python </span><br><span class="line">   16 root      20   0       0      0      0 S   0.3  0.0   0:09.22 ksoftirqd/1 </span><br><span class="line">1549 root      20   0  236712  24480   9864 S   0.3  0.3   3:31.38 python3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># iowait is high, memory is ok.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># util = 98%</span></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00   71.00      0.00  32912.00     0.00     0.00   0.00   0.00    0.00 18118.31 241.89     0.00   463.55  13.86  98.40 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check which porcess</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line">14:39:14      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">14:39:15        0     12280      0.00 335716.00      0.00       0  python </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strace -p 12280 </span><br><span class="line">strace: Process 12280 attached </span><br><span class="line">select(0, NULL, NULL, NULL, &#123;tv_sec=0, tv_usec=567708&#125;) = 0 (Timeout) </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">"/usr/local/lib/python3.7/importlib/_bootstrap.py"</span>, &#123;st_mode=S_IFREG|0644, st_size=39278, ...&#125;) = 0 </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">"/usr/local/lib/python3.7/importlib/_bootstrap.py"</span>, &#123;st_mode=S_IFREG|0644, st_size=39278, ...&#125;) = 0 </span><br><span class="line"></span><br><span class="line"><span class="comment"># filter result</span></span><br><span class="line"> strace -p 12280 2&gt;&amp;1 | grep write </span><br><span class="line"></span><br><span class="line"><span class="comment"># introduce new tool bcc</span></span><br><span class="line"><span class="comment"># install bcc</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://repo.iovisor.org/apt/<span class="variable">$(lsb_release -cs)</span> <span class="variable">$(lsb_release -cs)</span> main"</span> | sudo tee /etc/apt/sources.list.d/iovisor.list </span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install bcc-tools libbcc-examples linux-headers-$(uname -r)</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/share/bcc/tools</span><br><span class="line">./filetop -C </span><br><span class="line"> </span><br><span class="line">TID    COMM             READS  WRITES R_Kb    W_Kb    T FILE </span><br><span class="line">514    python           0      1      0       2832    R 669.txt </span><br><span class="line">514    python           0      1      0       2490    R 667.txt </span><br><span class="line">514    python           0      1      0       2685    R 671.txt </span><br><span class="line">514    python           0      1      0       2392    R 670.txt </span><br><span class="line">514    python           0      1      0       2050    R 672.txt </span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">TID    COMM             READS  WRITES R_Kb    W_Kb    T FILE </span><br><span class="line">514    python           2      0      5957    0       R 651.txt </span><br><span class="line">514    python           2      0      5371    0       R 112.txt </span><br><span class="line">514    python           2      0      4785    0       R 861.txt </span><br><span class="line">514    python           2      0      4736    0       R 213.txt </span><br><span class="line">514    python           2      0      4443    0       R 45.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># -T thread check thread 514</span></span><br><span class="line">ps -efT | grep 514</span><br><span class="line">root     12280  514 14626 33 14:47 pts/0    00:00:05 /usr/<span class="built_in">local</span>/bin/python /app.py </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># new tool opensnoop</span></span><br><span class="line">opensnoop </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/650.txt </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/651.txt </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/652.txt</span><br></pre></td></tr></table></figure><h2 id="sql-slow"><a href="#sql-slow" class="headerlink" title="sql slow"></a>sql slow</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use top to check overview</span></span><br><span class="line">top</span><br><span class="line">top - 12:02:15 up 6 days,  8:05,  1 user,  load average: 0.66, 0.72, 0.59</span><br><span class="line">Tasks: 137 total,   1 running,  81 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  0.7 us,  1.3 sy,  0.0 ni, 35.9 id, 62.1 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.3 us,  0.7 sy,  0.0 ni, 84.7 id, 14.3 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  8169300 total,  7238472 free,   546132 used,   384696 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7316952 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">27458 999       20   0  833852  57968  13176 S   1.7  0.7   0:12.40 mysqld</span><br><span class="line">27617 root      20   0   24348   9216   4692 S   1.0  0.1   0:04.40 python</span><br><span class="line"> 1549 root      20   0  236716  24568   9864 S   0.3  0.3  51:46.57 python3</span><br><span class="line">22421 root      20   0       0      0      0 I   0.3  0.0   0:01.16 kworker/u</span><br><span class="line"></span><br><span class="line"><span class="comment"># io wait is high, so we check io</span></span><br><span class="line"></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">...</span><br><span class="line">sda            273.00    0.00  32568.00      0.00     0.00     0.00   0.00   0.00    7.90    0.00   1.16   119.30     0.00   3.56  97.20</span><br><span class="line"></span><br><span class="line"><span class="comment"># rkB/s is 32 MB, util is 97.2%</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find the pid of high IO</span></span><br><span class="line">pidstat -d 1</span><br><span class="line">12:04:11      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">12:04:12      999     27458  32640.00      0.00      0.00       0  mysqld</span><br><span class="line">12:04:12        0     27617      4.00      4.00      0.00       3  python</span><br><span class="line">12:04:12        0     27864      0.00      4.00      0.00       0  systemd-journal</span><br><span class="line"></span><br><span class="line"><span class="comment"># next use strace+ lsof </span></span><br><span class="line">strace -f -p 27458</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"934EiwT363aak7VtqF1mHGa4LL4Dhbks"</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"hSs7KBDepBqA6m4ce6i6iUfFTeG9Ot9z"</span>..., 20480) = 20480</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"NRhRjCSsLLBjTfdqiBRLvN9K6FRfqqLm"</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"AKgsik4BilLb7y6OkwQUjjqGeCTQTaRl"</span>..., 24576) = 24576</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"hFMHx7FzUSqfFI22fQxWCpSnDmRjamaW"</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"ajUzLmKqivcDJSkiw7QWf2ETLgvQIpfC"</span>..., 20480) = 20480</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thread 28014 is reading a large amount of data, and the descriptor read is 38. </span></span><br><span class="line"><span class="comment"># We can execute the following lsof command and specify the thread number 28014, </span></span><br><span class="line"><span class="comment"># specifically view this suspicious thread and suspicious file:</span></span><br><span class="line">lsof -p 28014</span><br><span class="line"><span class="comment"># no output previous command </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check the previous command, failed</span></span><br><span class="line"><span class="built_in">echo</span> $?</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"><span class="comment">#-t thread  -a show command</span></span><br><span class="line">pstree -t -a -p 27458</span><br><span class="line">mysqld,27458 --log_bin=on --sync_binlog=1</span><br><span class="line">...</span><br><span class="line">  ├─&#123;mysqld&#125;,27922</span><br><span class="line">  ├─&#123;mysqld&#125;,27923</span><br><span class="line">  └─&#123;mysqld&#125;,28014</span><br><span class="line"></span><br><span class="line"><span class="comment"># use pid not thread id</span></span><br><span class="line">lsof -p 27458</span><br><span class="line">COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">...</span><br><span class="line">​mysqld  27458      999   38u   REG    8,1 512440000 2601895 /var/lib/mysql/<span class="built_in">test</span>/products.MYD</span><br></pre></td></tr></table></figure><h2 id="slow-redis"><a href="#slow-redis" class="headerlink" title="slow redis"></a>slow redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line">top - 12:46:18 up 11 days,  8:49,  1 user,  load average: 1.36, 1.36, 1.04</span><br><span class="line">Tasks: 137 total,   1 running,  79 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  6.0 us,  2.7 sy,  0.0 ni,  5.7 id, 84.7 wa,  0.0 hi,  1.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  1.0 us,  3.0 sy,  0.0 ni, 94.7 id,  0.0 wa,  0.0 hi,  1.3 si,  0.0 st</span><br><span class="line">KiB Mem :  8169300 total,  7342244 free,   432912 used,   394144 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7478748 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 9181 root      20   0  193004  27304   8716 S   8.6  0.3   0:07.15 python</span><br><span class="line"> 9085 systemd+  20   0   28352   9760   1860 D   5.0  0.1   0:04.34 redis-server</span><br><span class="line">  368 root      20   0       0      0      0 D   1.0  0.0   0:33.88 jbd2/sda1-8</span><br><span class="line">  149 root       0 -20       0      0      0 I   0.3  0.0   0:10.63 kworker/0:1H</span><br><span class="line"> 1549 root      20   0  236716  24576   9864 S   0.3  0.3  91:37.30 python3</span><br><span class="line"></span><br><span class="line"> <span class="comment"># high io wait 84.7%</span></span><br><span class="line"></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">...</span><br><span class="line">sda              0.00  492.00      0.00   2672.00     0.00   176.00   0.00  26.35    0.00    1.76   0.00     0.00     5.43   0.00   0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># why has write operation ? redis is just read</span></span><br><span class="line">pidstat -d 1</span><br><span class="line">12:49:35      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">12:49:36        0       368      0.00     16.00      0.00      86  jbd2/sda1-8</span><br><span class="line">12:49:36      100      9085      0.00    636.00      0.00       1  redis-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># -f follow process and thread，-T system call time，-tt show time</span></span><br><span class="line">strace -f -T -tt -p 9085</span><br><span class="line">[pid  9085] 14:20:16.826131 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 65, NULL, 8) = 1 &lt;0.000055&gt;</span><br><span class="line">[pid  9085] 14:20:16.826301 <span class="built_in">read</span>(8, <span class="string">"*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:5b2e76cc-"</span>..., 16384) = 61 &lt;0.000071&gt;</span><br><span class="line">[pid  9085] 14:20:16.826477 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000063&gt;</span><br><span class="line">[pid  9085] 14:20:16.826645 write(8, <span class="string">"<span class="variable">$3</span>\r\nbad\r\n"</span>, 9) = 9 &lt;0.000173&gt;</span><br><span class="line">[pid  9085] 14:20:16.826907 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 65, NULL, 8) = 1 &lt;0.000032&gt;</span><br><span class="line">[pid  9085] 14:20:16.827030 <span class="built_in">read</span>(8, <span class="string">"*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:55862ada-"</span>..., 16384) = 61 &lt;0.000044&gt;</span><br><span class="line">[pid  9085] 14:20:16.827149 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000043&gt;</span><br><span class="line">[pid  9085] 14:20:16.827285 write(8, <span class="string">"<span class="variable">$3</span>\r\nbad\r\n"</span>, 9) = 9 &lt;0.000141&gt;</span><br><span class="line">[pid  9085] 14:20:16.827514 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 64, NULL, 8) = 1 &lt;0.000049&gt;</span><br><span class="line">[pid  9085] 14:20:16.827641 <span class="built_in">read</span>(8, <span class="string">"*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:53522908-"</span>..., 16384) = 61 &lt;0.000043&gt;</span><br><span class="line">[pid  9085] 14:20:16.827784 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000034&gt;</span><br><span class="line">[pid  9085] 14:20:16.827945 write(8, <span class="string">"<span class="variable">$4</span>\r\ngood\r\n"</span>, 10) = 10 &lt;0.000288&gt;</span><br><span class="line">[pid  9085] 14:20:16.828339 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 63, NULL, 8) = 1 &lt;0.000057&gt;</span><br><span class="line">[pid  9085] 14:20:16.828486 <span class="built_in">read</span>(8, <span class="string">"*3\r\n<span class="variable">$4</span>\r\nSADD\r\n<span class="variable">$4</span>\r\ngood\r\n<span class="variable">$36</span>\r\n535"</span>..., 16384) = 67 &lt;0.000040&gt;</span><br><span class="line">[pid  9085] 14:20:16.828623 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000052&gt;</span><br><span class="line">[pid  9085] 14:20:16.828760 write(7, <span class="string">"*3\r\n<span class="variable">$4</span>\r\nSADD\r\n<span class="variable">$4</span>\r\ngood\r\n<span class="variable">$36</span>\r\n535"</span>..., 67) = 67 &lt;0.000060&gt;</span><br><span class="line">[pid  9085] 14:20:16.828970 fdatasync(7) = 0 &lt;0.005415&gt;</span><br><span class="line">[pid  9085] 14:20:16.834493 write(8, <span class="string">":1\r\n"</span>, 4) = 4 &lt;0.000250&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lsof -p 9085</span><br><span class="line">redis-ser 9085 systemd-network    3r     FIFO   0,12      0t0 15447970 pipe</span><br><span class="line">redis-ser 9085 systemd-network    4w     FIFO   0,12      0t0 15447970 pipe</span><br><span class="line">redis-ser 9085 systemd-network    5u  a_inode   0,13        0    10179 [eventpoll]</span><br><span class="line">redis-ser 9085 systemd-network    6u     sock    0,9      0t0 15447972 protocol: TCP</span><br><span class="line">redis-ser 9085 systemd-network    7w      REG    8,1  8830146  2838532 /data/appendonly.aof</span><br><span class="line">redis-ser 9085 systemd-network    8u     sock    0,9      0t0 15448709 protocol: TCP</span><br><span class="line"></span><br><span class="line"><span class="comment"># Descriptor number 3 is a pipe, number 5 is an eventpoll</span></span><br><span class="line"><span class="comment"># number 7 is an ordinary file, and number 8 is a TCP socket.</span></span><br><span class="line"><span class="comment"># Only the 7th ordinary file will generate disk write, </span></span><br><span class="line"><span class="comment"># and the file path it operates on is /data/appendonly.aof. </span></span><br><span class="line"><span class="comment"># The corresponding system calls include write and fdatasync.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strace -f -p 9085 -T -tt -e fdatasync</span><br><span class="line">strace: Process 9085 attached with 4 threads</span><br><span class="line">[pid  9085] 14:22:52.013547 fdatasync(7) = 0 &lt;0.007112&gt;</span><br><span class="line">[pid  9085] 14:22:52.022467 fdatasync(7) = 0 &lt;0.008572&gt;</span><br><span class="line">[pid  9085] 14:22:52.032223 fdatasync(7) = 0 &lt;0.006769&gt;</span><br><span class="line">...</span><br><span class="line">[pid  9085] 14:22:52.139629 fdatasync(7) = 0 &lt;0.008183&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># final check the process in docker</span></span><br><span class="line">PID=$(docker inspect --format &#123;&#123;.State.Pid&#125;&#125; app)</span><br><span class="line">nsenter --target <span class="variable">$PID</span> --net -- lsof -i</span><br><span class="line">COMMAND    PID            USER   FD   TYPE   DEVICE SIZE/OFF NODE NAME</span><br><span class="line">redis-ser 9085 systemd-network    6u  IPv4 15447972      0t0  TCP localhost:6379 (LISTEN)</span><br><span class="line">redis-ser 9085 systemd-network    8u  IPv4 15448709      0t0  TCP localhost:6379-&gt;localhost:32996 (ESTABLISHED)</span><br><span class="line">python    9181            root    3u  IPv4 15448677      0t0  TCP *:http (LISTEN)</span><br><span class="line">python    9181            root    5u  IPv4 15449632      0t0  TCP localhost:32996-&gt;localhost:6379 (ESTABLISHED)</span><br></pre></td></tr></table></figure><h2 id="summary-2"><a href="#summary-2" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183130.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183134.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183137.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183323.png" alt></p><h1 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229202720.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229202724.png" alt></p><ul><li>Bandwidth, which indicates the maximum transmission rate of the link. The unit is usually b/s (bits per second).</li><li>Throughput, which indicates the amount of data successfully transmitted per unit of time. The unit is usually b/s (bits/second) or B/s (bytes/second). Throughput is limited by bandwidth, and throughput/bandwidth is the utilization of the network.</li><li>Delay means the delay from the time the network request is sent until the remote response is received.</li><li>PPS is the abbreviation of Packet Per Second (packet per second), which means the transmission rate in network packets.</li></ul><h2 id="basic-command"><a href="#basic-command" class="headerlink" title="basic command"></a>basic command</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ifconfig </span></span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.17.3  netmask 255.255.255.0  broadcast 192.168.17.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe35:6403  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:35:64:03  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 2193  bytes 150818 (150.8 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 203  bytes 24234 (24.2 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 17791  bytes 1264539 (1.2 MB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 17791  bytes 1264539 (1.2 MB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><ul><li>errors indicates the number of packets with errors, such as check errors, frame synchronization errors, etc.</li><li>dropped indicates the number of dropped packets, that is, the packet has received the Ring Buffer, but the packet was lost due to insufficient memory and other reasons;</li><li>overruns indicates the number of overrun packets, that is, the network I / O speed is too fast, causing the packets in the Ring Buffer to be too late to be processed (the queue is full) and the packet loss;</li><li>carrier indicates the number of packets with carrirer errors, such as mismatch in duplex mode, problems with physical cables, etc .;</li><li>collisions indicates the number of collision packets.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang<span class="comment"># netstat -nlp | head -n 3</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      549/systemd-resolve </span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ss -lntp | head -n 3</span></span><br><span class="line">State    Recv-Q    Send-Q        Local Address:Port        Peer Address:Port                                                                                    </span><br><span class="line">LISTEN   0         128           127.0.0.53%lo:53               0.0.0.0:*        users:((<span class="string">"systemd-resolve"</span>,pid=549,fd=13))                                      </span><br><span class="line">LISTEN   0         128                 0.0.0.0:22               0.0.0.0:*        users:((<span class="string">"sshd"</span>,pid=1040,fd=3))</span><br></pre></td></tr></table></figure><ul><li><p>When the socket is connected (Established),<br>Recv-Q indicates the number of bytes (that is, the length of the receive queue) that the socket buffer has not been taken away by the application.<br>Send-Q indicates the number of bytes (that is, the length of the send queue) that have not been acknowledged by the remote host.</p></li><li><p>When the socket is in the listening state (Listening),<br>Recv-Q represents the current value of the syn backlog.<br>Send-Q represents the largest syn backlog value.</p></li></ul><p>The syn backlog is the length of the semi-connected queue in the TCP protocol stack, and accordingly there is also a fully connected queue (accept queue)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># netstat -s</span></span><br><span class="line">Ip:</span><br><span class="line">    Forwarding: 2</span><br><span class="line">    19787 total packets received</span><br><span class="line">    0 forwarded</span><br><span class="line">    0 incoming packets discarded</span><br><span class="line">    19785 incoming packets delivered</span><br><span class="line">    19373 requests sent out</span><br><span class="line">Icmp:</span><br><span class="line">    0 ICMP messages received</span><br><span class="line">    0 input ICMP message failed</span><br><span class="line">    ICMP input histogram:</span><br><span class="line">    0 ICMP messages sent</span><br><span class="line">    0 ICMP messages failed</span><br><span class="line">    ICMP output histogram:</span><br><span class="line">Tcp:</span><br><span class="line">    4 active connection openings</span><br><span class="line">    1 passive connection openings</span><br><span class="line">    4 failed connection attempts</span><br><span class="line">    0 connection resets received</span><br><span class="line">    1 connections established</span><br><span class="line">    294 segments received</span><br><span class="line">    195 segments sent out</span><br><span class="line">    0 segments retransmitted</span><br><span class="line">    0 bad segments received</span><br><span class="line">    4 resets sent</span><br><span class="line">Udp:</span><br><span class="line">    19388 packets received</span><br><span class="line">    0 packets to unknown port received</span><br><span class="line">    0 packet receive errors</span><br><span class="line">    19180 packets sent</span><br><span class="line">    0 receive buffer errors</span><br><span class="line">    0 send buffer errors</span><br><span class="line">    IgnoredMulti: 107</span><br><span class="line">UdpLite:</span><br><span class="line">TcpExt:</span><br><span class="line">    3 delayed acks sent</span><br><span class="line">    47 packet headers predicted</span><br><span class="line">    2 acknowledgments not containing data payload received</span><br><span class="line">    170 predicted acknowledgments</span><br><span class="line">    TCPBacklogCoalesce: 9</span><br><span class="line">    TCPAutoCorking: 12</span><br><span class="line">    TCPOrigDataSent: 180</span><br><span class="line">    TCPDelivered: 180</span><br><span class="line">IpExt:</span><br><span class="line">    InMcastPkts: 279</span><br><span class="line">    OutMcastPkts: 66</span><br><span class="line">    InBcastPkts: 107</span><br><span class="line">    OutBcastPkts: 7</span><br><span class="line">    InOctets: 1405727</span><br><span class="line">    OutOctets: 1393405</span><br><span class="line">    InMcastOctets: 19672</span><br><span class="line">    OutMcastOctets: 6290</span><br><span class="line">    InBcastOctets: 9737</span><br><span class="line">    OutBcastOctets: 327</span><br><span class="line">    InNoECTPkts: 19788</span><br><span class="line"></span><br><span class="line"><span class="comment"># ss</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ss -s</span></span><br><span class="line">Total: 958 (kernel 2224)</span><br><span class="line">TCP:   6 (estab 1, closed 0, orphaned 0, synrecv 0, timewait 0/0), ports 0</span><br><span class="line"></span><br><span class="line">Transport  Total     IP        IPv6</span><br><span class="line">*         2224      -         -        </span><br><span class="line">RAW       0         0         0        </span><br><span class="line">UDP       6         4         2        </span><br><span class="line">TCP       6         4         2        </span><br><span class="line">INET     12        8         4        </span><br><span class="line">FRAG     0         0         0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sar</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># sar -n DEV 1</span></span><br><span class="line">Linux 5.0.0-37-generic (ubuntu) 12/29/2019 _x86_64_(2 CPU)</span><br><span class="line"></span><br><span class="line">08:42:20 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:42:21 PM     ens33      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">08:42:21 PM        lo     80.00     80.00      5.55      5.55      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">08:42:21 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:42:22 PM     ens33     34.00     34.00      1.99      3.25      0.00      0.00      0.00      0.00</span><br><span class="line">08:42:22 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># ping</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ping -c3 114.114.114.114</span></span><br><span class="line">PING 114.114.114.114 (114.114.114.114) 56(84) bytes of data.</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=1 ttl=128 time=222 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=2 ttl=128 time=221 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=3 ttl=128 time=222 ms</span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ethtool ens33 | grep Speed</span></span><br><span class="line">Speed: 1000Mb/s</span><br></pre></td></tr></table></figure><h2 id="C10K-and-C1000K"><a href="#C10K-and-C1000K" class="headerlink" title="C10K and C1000K"></a>C10K and C1000K</h2><ol><li>select or poll Apache</li><li>epoll Nginx </li><li>Asynchronous I/O</li></ol><ol><li>one master, multiple worker</li><li>multi-process listen same port, need enable SO_REUSEPORT</li><li>C1000K’s solution is essentially built on epoll’s non-blocking I / O model.</li><li>C10M: To solve this problem, the most important thing is to skip the lengthy path of the kernel protocol stack and send the network packets directly to the application to be processed. There are two common mechanisms here, DPDK and XDP.</li></ol><ul><li>DPDK is the standard for user mode networks. It skips the kernel protocol stack and directly processes the network reception by the user mode process through polling.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229210141.png" alt>  </li><li>XDP (eXpress Data Path) is a high-performance network data path provided by the Linux kernel. It allows network packets to be processed before entering the kernel protocol stack, which can also bring higher performance. The bottom layer of XDP, like the bcc-tools we used before, is implemented based on the eBPF mechanism of the Linux kernel.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229210414.png" alt></li></ul><h2 id="performance-test"><a href="#performance-test" class="headerlink" title="performance test"></a>performance test</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable pktgen</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># modprobe pktgen</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ps -ef | grep pktgen | grep -v grep</span></span><br><span class="line">root       2478      2  0 22:25 ?        00:00:00 [kpktgend_0]</span><br><span class="line">root       2480      2  0 22:25 ?        00:00:00 [kpktgend_1]</span><br><span class="line">root       2481      2  0 22:25 ?        00:00:00 [kpktgend_0]</span><br><span class="line">root       2482      2  0 22:25 ?        00:00:00 [kpktgend_1]</span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ls /proc/net/pktgen/</span></span><br><span class="line">kpktgend_0  kpktgend_1  pgctrl</span><br></pre></td></tr></table></figure><p>do some test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># define function</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">pgset</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> result</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$1</span> &gt; <span class="variable">$PGDEV</span></span><br><span class="line"> </span><br><span class="line">    result=`cat <span class="variable">$PGDEV</span> | fgrep <span class="string">"Result: OK:"</span>`</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$result</span>"</span> = <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">         cat <span class="variable">$PGDEV</span> | fgrep Result:</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># bind 0 thread to eth0</span></span><br><span class="line">PGDEV=/proc/net/pktgen/kpktgend_0</span><br><span class="line">pgset <span class="string">"rem_device_all"</span>   <span class="comment"># clear bind</span></span><br><span class="line">pgset <span class="string">"add_device eth0"</span>  <span class="comment"># add eth0 </span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># config eth0 </span></span><br><span class="line">PGDEV=/proc/net/pktgen/eth0</span><br><span class="line">pgset <span class="string">"count 1000000"</span>    <span class="comment"># total send package</span></span><br><span class="line">pgset <span class="string">"delay 5000"</span>       <span class="comment"># interval </span></span><br><span class="line">pgset <span class="string">"clone_skb 0"</span>      <span class="comment"># SKB package duplicate</span></span><br><span class="line">pgset <span class="string">"pkt_size 64"</span>      <span class="comment"># package size</span></span><br><span class="line">pgset <span class="string">"dst 192.168.0.30"</span> <span class="comment"># dest IP</span></span><br><span class="line">pgset <span class="string">"dst_mac 11:11:11:11:11:11"</span>  <span class="comment"># dest MAC</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># start test</span></span><br><span class="line">PGDEV=/proc/net/pktgen/pgctrl</span><br><span class="line">pgset <span class="string">"start"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat /proc/net/pktgen/eth0</span><br><span class="line">Params: count 1000000  min_pkt_size: 64  max_pkt_size: 64</span><br><span class="line">     frags: 0  delay: 0  clone_skb: 0  ifname: eth0</span><br><span class="line">     flows: 0 flowlen: 0</span><br><span class="line">...</span><br><span class="line">Current:</span><br><span class="line">     pkts-sofar: 1000000  errors: 0</span><br><span class="line">     started: 1534853256071us  stopped: 1534861576098us idle: 70673us</span><br><span class="line">...</span><br><span class="line">Result: OK: 8320027(c8249354+d70673) usec, 1000000 (64byte,0frags)</span><br><span class="line">  120191pps 61Mb/sec (61537792bps) errors: 0</span><br></pre></td></tr></table></figure><p>TCP test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install iperf3</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install iperf3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># iperf3 -s -i 1 -p 10000</span></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">Server listening on 10000</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iperf3 -c 192.168.0.30 -b 1G -t 15 -P 2 -p 10000</span><br><span class="line"></span><br><span class="line">[ ID] Interval           Transfer     Bandwidth</span><br><span class="line">...</span><br><span class="line">[SUM]   0.00-15.04  sec  0.00 Bytes  0.00 bits/sec                  sender</span><br><span class="line">[SUM]   0.00-15.04  sec  1.51 GBytes   860 Mbits/sec                  receiver</span><br></pre></td></tr></table></figure><p>HTTP test</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu</span><br><span class="line">apt-get install -y apache2-utils</span><br><span class="line"># CentOS</span><br><span class="line">yum install -y httpd-tools</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ab -c 1000 -n 10000 http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Server Software:        nginx/1.15.8</span><br><span class="line">Server Hostname:        192.168.0.30</span><br><span class="line">Server Port:            80</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">Requests per second:    1078.54 [#/sec] (mean)</span><br><span class="line">Time per request:       927.183 [ms] (mean)</span><br><span class="line">Time per request:       0.927 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          890.00 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0   27 152.1      1    1038</span><br><span class="line">Processing:     9  207 843.0     22    9242</span><br><span class="line">Waiting:        8  207 843.0     22    9242</span><br><span class="line">Total:         15  233 857.7     23    9268</span><br><span class="line"> </span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%     23</span><br><span class="line">  66%     24</span><br><span class="line">  75%     24</span><br><span class="line">  80%     26</span><br><span class="line">  90%    274</span><br><span class="line">  95%   1195</span><br><span class="line">  98%   2335</span><br><span class="line">  99%   4663</span><br><span class="line"> 100%   9268 (longest request)</span><br></pre></td></tr></table></figure><p>App test<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/wg/wrk</span><br><span class="line"><span class="built_in">cd</span> wrk</span><br><span class="line">apt-get install build-essential -y</span><br><span class="line">make</span><br><span class="line">sudo cp wrk /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wrk -c 1000 -t 2 http://192.168.0.30/</span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30/</span><br><span class="line">  2 threads and 1000 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency    65.83ms  174.06ms   1.99s    95.85%</span><br><span class="line">    Req/Sec     4.87k   628.73     6.78k    69.00%</span><br><span class="line">  96954 requests <span class="keyword">in</span> 10.06s, 78.59MB <span class="built_in">read</span></span><br><span class="line">  Socket errors: connect 0, <span class="built_in">read</span> 0, write 0, timeout 179</span><br><span class="line">Requests/sec:   9641.31</span><br><span class="line">Transfer/sec:      7.82MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># setup add parameter</span></span><br><span class="line">-- example script that demonstrates response handling and</span><br><span class="line">-- retrieving an authentication token to <span class="built_in">set</span> on all future</span><br><span class="line">-- requests</span><br><span class="line"> </span><br><span class="line">token = nil</span><br><span class="line">path  = <span class="string">"/authenticate"</span></span><br><span class="line"> </span><br><span class="line">request = <span class="keyword">function</span>()</span><br><span class="line">   <span class="built_in">return</span> wrk.format(<span class="string">"GET"</span>, path)</span><br><span class="line">end</span><br><span class="line"> </span><br><span class="line">response = <span class="keyword">function</span>(status, headers, body)</span><br><span class="line">   <span class="keyword">if</span> not token and status == 200 <span class="keyword">then</span></span><br><span class="line">      token = headers[<span class="string">"X-Token"</span>]</span><br><span class="line">      path  = <span class="string">"/resource"</span></span><br><span class="line">      wrk.headers[<span class="string">"X-Token"</span>] = token</span><br><span class="line">   end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">wrk -c 1000 -t 2 -s auth.lua http://192.168.0.30/</span><br></pre></td></tr></table></figure></p><h2 id="DNS-slow"><a href="#DNS-slow" class="headerlink" title="DNS slow"></a>DNS slow</h2><ul><li>A record, used to translate the domain name into an IP address;</li><li>CNAME record for creating aliases;</li><li>The NS record indicates the name server address corresponding to the domain name.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># dig +trace +nodnssec feiyang233.club</span></span><br><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># nslookup feiyang233.club</span></span><br><span class="line">Server:1.1.1.1</span><br><span class="line">Address:1.1.1.1<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">feiyang233.clubcanonical name = fainyang.github.io.</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.109.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.110.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.111.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.108.153</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># dig +trace +nodnssec feiyang233.club</span></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.11-Ubuntu &lt;&lt;&gt;&gt; +trace +nodnssec feiyang233.club</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.7974INNSi.root-servers.net.</span><br><span class="line">.7974INNSj.root-servers.net.</span><br><span class="line">.7974INNSk.root-servers.net.</span><br><span class="line">.7974INNSl.root-servers.net.</span><br><span class="line">.7974INNSm.root-servers.net.</span><br><span class="line">.7974INNSa.root-servers.net.</span><br><span class="line">.7974INNSb.root-servers.net.</span><br><span class="line">.7974INNSc.root-servers.net.</span><br><span class="line">.7974INNSd.root-servers.net.</span><br><span class="line">.7974INNSe.root-servers.net.</span><br><span class="line">.7974INNSf.root-servers.net.</span><br><span class="line">.7974INNSg.root-servers.net.</span><br><span class="line">.7974INNSh.root-servers.net.</span><br><span class="line">;; Received 431 bytes from 1.1.1.1<span class="comment">#53(1.1.1.1) in 8 ms</span></span><br><span class="line"></span><br><span class="line">club.172800INNSns4.dns.nic.club.</span><br><span class="line">club.172800INNSns1.dns.nic.club.</span><br><span class="line">club.172800INNSns6.dns.nic.club.</span><br><span class="line">club.172800INNSns2.dns.nic.club.</span><br><span class="line">club.172800INNSns3.dns.nic.club.</span><br><span class="line">club.172800INNSns5.dns.nic.club.</span><br><span class="line">;; Received 456 bytes from 192.36.148.17<span class="comment">#53(i.root-servers.net) in 104 ms</span></span><br><span class="line"></span><br><span class="line">feiyang233.club.3600INNSf1g1ns1.dnspod.net.</span><br><span class="line">feiyang233.club.3600INNSf1g1ns2.dnspod.net.</span><br><span class="line">;; Received 98 bytes from 156.154.144.215<span class="comment">#53(ns1.dns.nic.club) in 189 ms</span></span><br><span class="line"></span><br><span class="line">;; Received 44 bytes from 182.140.167.166<span class="comment">#53(f1g1ns1.dnspod.net) in 404 ms</span></span><br></pre></td></tr></table></figure><ol><li><p>no /etc/resolv.conf </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nslookup feiyang233.club</span><br><span class="line">;; connection timed out; no servers could be reached</span><br><span class="line"></span><br><span class="line"><span class="comment"># add DNS</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"nameserver 1.1.1.1"</span> &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure></li><li><p>DNS unstable</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">time nslookup time.geekbang.org</span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8<span class="comment">#53</span></span><br><span class="line"> </span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:time.geekbang.org</span><br><span class="line">Address: 39.106.233.176</span><br><span class="line"> </span><br><span class="line">real0m10.349s</span><br><span class="line">user0m0.004s</span><br><span class="line">sys0m0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time nslookup time.geekbang.org</span><br><span class="line">;; connection timed out; no servers could be reached</span><br><span class="line"> </span><br><span class="line">real0m15.011s</span><br><span class="line">user0m0.006s</span><br><span class="line">sys0m0.006s</span><br></pre></td></tr></table></figure></li></ol><p>The DNS server itself has problems, the response is slow and unstable;</p><p>The network delay from the client to the DNS server is relatively large;</p><p>DNS request or response packets are lost by network devices on the link in some cases.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 8.8.8.8</span><br><span class="line">PING 8.8.8.8 (8.8.8.8): 56 data bytes</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=0 ttl=31 time=137.637 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=1 ttl=31 time=144.743 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=2 ttl=31 time=138.576 ms</span><br><span class="line">--- 8.8.8.8 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 137.637/140.319/144.743/3.152 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># try other DNS</span></span><br><span class="line"></span><br><span class="line">ping -c3 114.114.114.114</span><br><span class="line">PING 114.114.114.114 (114.114.114.114): 56 data bytes</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=0 ttl=67 time=31.130 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=1 ttl=56 time=31.302 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=2 ttl=56 time=31.250 ms</span><br><span class="line">--- 114.114.114.114 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 31.130/31.227/31.302/0.072 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> nameserver 114.114.114.114 &gt; /etc/resolv.conf</span><br><span class="line">time nslookup time.geekbang.org</span><br><span class="line">Server:114.114.114.114</span><br><span class="line">Address:114.114.114.114<span class="comment">#53</span></span><br><span class="line"> </span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:time.geekbang.org</span><br><span class="line">Address: 39.106.233.176</span><br><span class="line"> </span><br><span class="line">real    0m0.064s</span><br><span class="line">user    0m0.007s</span><br><span class="line">sys     0m0.006s</span><br></pre></td></tr></table></figure><h2 id="dump-traffic"><a href="#dump-traffic" class="headerlink" title="dump traffic"></a>dump traffic</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install tcpdump wireshark</span><br><span class="line"> </span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install -y tcpdump wireshark</span><br><span class="line"></span><br><span class="line">tcpdump -nn udp port 53 or host 35.190.27.188</span><br><span class="line"></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">14:02:31.100564 IP 172.16.3.4.56669 &gt; 114.114.114.114.53: 36909+ A? geektime.org. (30)</span><br><span class="line">14:02:31.507699 IP 114.114.114.114.53 &gt; 172.16.3.4.56669: 36909 1/0/0 A 35.190.27.188 (46)</span><br><span class="line">14:02:31.508164 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, id 4356, seq 1, length 64</span><br><span class="line">14:02:31.539667 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, id 4356, seq 1, length 64</span><br><span class="line">14:02:31.539995 IP 172.16.3.4.60254 &gt; 114.114.114.114.53: 49932+ PTR? 188.27.190.35.in-addr.arpa. (44)</span><br><span class="line">14:02:36.545104 IP 172.16.3.4.60254 &gt; 114.114.114.114.53: 49932+ PTR? 188.27.190.35.in-addr.arpa. (44)</span><br><span class="line">14:02:41.551284 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, id 4356, seq 2, length 64</span><br><span class="line">14:02:41.582363 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, id 4356, seq 2, length 64</span><br><span class="line">14:02:42.552506 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, id 4356, seq 3, length 64</span><br><span class="line">14:02:42.583646 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, id 4356, seq 3, length 64</span><br></pre></td></tr></table></figure><p>The purpose of PTR reverse address resolution is to find out the domain name from the IP address, but in fact, not all IP addresses will define PTR records, so PTR queries are likely to fail.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check PTR</span></span><br><span class="line"></span><br><span class="line">nslookup -<span class="built_in">type</span>=PTR 35.190.27.188 8.8.8.8</span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8<span class="comment">#53</span></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">188.27.190.35.in-addr.arpaname = 188.27.190.35.bc.googleusercontent.com.</span><br><span class="line">Authoritative answers can be found from:</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">dig +short example.com</span><br><span class="line">93.184.216.34</span><br><span class="line">tcpdump -nn host 93.184.216.34 -w web.pcap</span><br><span class="line"></span><br><span class="line"><span class="comment"># in another tty</span></span><br><span class="line">curl http://example.com</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091850.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091854.png" alt><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tcpdump output format</span></span><br><span class="line">Timestamp Protocol Source Address Source Port&gt; Destination Address Destination Port Network Packet Details</span><br><span class="line">时间戳 协议 源地址 源端口 &gt; 目的地址 目的端口 网络包详细信息</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091857.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091900.png" alt></p><h2 id="anti-DDoS"><a href="#anti-DDoS" class="headerlink" title="anti-DDoS"></a>anti-DDoS</h2><p>DDoS（Distributed Denial of Service） </p><ul><li>Running out of bandwidth</li><li>Running out of operating system resources</li><li>Running out of application resources</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -S set TCP  SYN，-p port 80</span></span><br><span class="line"><span class="comment"># -i u10  10us interval</span></span><br><span class="line">hping3 -S -p 80 -i u10 192.168.0.30</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -w only output HTTP status total time -o redirect to /dev/null</span></span><br><span class="line">curl -s -w <span class="string">'Http code: %&#123;http_code&#125;\nTotal time:%&#123;time_total&#125;s\n'</span> -o /dev/null http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Http code: 200</span><br><span class="line">Total time:0.002s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sar -n DEV 1</span><br><span class="line">08:55:49        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:55:50      docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">08:55:50         eth0  22274.00    629.00   1174.64     37.78      0.00      0.00      0.00      0.02</span><br><span class="line">08:55:50           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># small package 54B （1174*1024/22274=54）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -i eth0 nic，-n Don't convert addresses (i.e., host addresses, port numbers, etc.) to names.</span></span><br><span class="line"><span class="comment"># tcp port 80 </span></span><br><span class="line">$ tcpdump -i eth0 -n tcp port 80</span><br><span class="line">09:15:48.287047 IP 192.168.0.2.27095 &gt; 192.168.0.30: Flags [S], seq 1288268370, win 512, length 0</span><br><span class="line">09:15:48.287050 IP 192.168.0.2.27131 &gt; 192.168.0.30: Flags [S], seq 2084255254, win 512, length 0</span><br><span class="line">09:15:48.287052 IP 192.168.0.2.27116 &gt; 192.168.0.30: Flags [S], seq 677393791, win 512, length 0</span><br><span class="line">09:15:48.287055 IP 192.168.0.2.27141 &gt; 192.168.0.30: Flags [S], seq 1276451587, win 512, length 0</span><br><span class="line">09:15:48.287068 IP 192.168.0.2.27154 &gt; 192.168.0.30: Flags [S], seq 1851495339, win 512, length 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231164029.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231164122.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check SYN_REC</span></span><br><span class="line">netstat -n -p | grep SYN_REC</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:12503      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:13502      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:15256      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:18117      SYN_RECV    -</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">netstat -n -p | grep SYN_REC | wc -l</span><br><span class="line">193</span><br><span class="line"></span><br><span class="line"><span class="comment"># method for SYN DDoS</span></span><br><span class="line"><span class="comment"># limit SYN 1/s</span></span><br><span class="line">$ iptables -A INPUT -p tcp --syn -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 1/s -j ACCEPT</span><br><span class="line"> </span><br><span class="line"><span class="comment"># limit every IP only establish 10 connections during 60s</span></span><br><span class="line">$ iptables -I INPUT -p tcp --dport 80 --syn -m recent --name SYN_FLOOD --update --seconds 60 --hitcount 10 -j REJECT</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_max_syn_backlog</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 256</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase max</span></span><br><span class="line">sysctl -w net.ipv4.tcp_max_syn_backlog=1024</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># decrease retry time from default 5 to 1</span></span><br><span class="line">sysctl -w net.ipv4.tcp_synack_retries=1</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable TCP SYN Cookies</span></span><br><span class="line">sysctl -w net.ipv4.tcp_syncookies=1</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># above set is temporary, for persistent</span></span><br><span class="line">cat /etc/sysctl.conf</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br></pre></td></tr></table></figure><p>In a Linux server, you can increase the anti-attack capability of the server and reduce the impact of DDoS on normal services through various methods such as kernel tuning, DPDK, and XDP. In the application, you can use various levels of caching, WAF, CDN and other methods to mitigate the impact of DDoS on the application.</p><h2 id="network-slow"><a href="#network-slow" class="headerlink" title="network slow"></a>network slow</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">traceroute --tcp -p 80 -n baidu.com</span><br><span class="line">traceroute to baidu.com (123.125.115.110), 30 hops max, 60 byte packets</span><br><span class="line"> 1  * * *</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  * * *</span><br><span class="line"> 4  * * *</span><br><span class="line"> 5  * * *</span><br><span class="line"> 6  * * *</span><br><span class="line"> 7  * * *</span><br><span class="line"> 8  * * *</span><br><span class="line"> 9  * * *</span><br><span class="line">10  * * *</span><br><span class="line">11  * * *</span><br><span class="line">12  * * *</span><br><span class="line">13  * * *</span><br><span class="line">14  123.125.115.110  20.684 ms *  20.798 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># install wrk</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/wg/wrk</span><br><span class="line"><span class="built_in">cd</span> wrk</span><br><span class="line">apt-get install build-essential -y</span><br><span class="line">make</span><br><span class="line">sudo cp wrk /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># create 2 nginx</span></span><br><span class="line">docker run --network=host --name=good -itd nginx</span><br><span class="line"></span><br><span class="line">docker run --name nginx --network=host -itd feisky/nginx:latency</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl port 80 and 8080</span></span><br><span class="line"><span class="comment"># 80 ok</span></span><br><span class="line">curl http://192.168.0.30</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">...</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 8080 ok</span></span><br><span class="line">curl http://192.168.0.30:8080</span><br><span class="line">...</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 80 ok </span></span><br><span class="line">hping3 -c 3 -S -p 80 192.168.0.30</span><br><span class="line">HPING 192.168.0.30 (eth0 192.168.0.30): S <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=80 flags=SA seq=0 win=29200 rtt=7.8 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=80 flags=SA seq=1 win=29200 rtt=7.7 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=80 flags=SA seq=2 win=29200 rtt=7.6 ms</span><br><span class="line"> </span><br><span class="line">--- 192.168.0.30 hping statistic ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 7.6/7.7/7.8 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8080 ok</span></span><br><span class="line">hping3 -c 3 -S -p 8080 192.168.0.30</span><br><span class="line">HPING 192.168.0.30 (eth0 192.168.0.30): S <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=8080 flags=SA seq=0 win=29200 rtt=7.7 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=8080 flags=SA seq=1 win=29200 rtt=7.6 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=8080 flags=SA seq=2 win=29200 rtt=7.3 ms</span><br><span class="line"> </span><br><span class="line">--- 192.168.0.30 hping statistic ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 7.3/7.6/7.7 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 80 </span></span><br><span class="line">测试 80 端口性能</span><br><span class="line">$ <span class="comment"># wrk --latency -c 100 -t 2 --timeout 2 http://192.168.0.30/</span></span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30/</span><br><span class="line">  2 threads and 100 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency     9.19ms   12.32ms 319.61ms   97.80%</span><br><span class="line">    Req/Sec     6.20k   426.80     8.25k    85.50%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%    7.78ms</span><br><span class="line">     75%    8.22ms</span><br><span class="line">     90%    9.14ms</span><br><span class="line">     99%   50.53ms</span><br><span class="line">  123558 requests <span class="keyword">in</span> 10.01s, 100.15MB <span class="built_in">read</span></span><br><span class="line">Requests/sec:  12340.91</span><br><span class="line">Transfer/sec:     10.00MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 8080, this nginx is very slow</span></span><br><span class="line">wrk --latency -c 100 -t 2 --timeout 2 http://192.168.0.30:8080/</span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30:8080/</span><br><span class="line">  2 threads and 100 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency    43.60ms    6.41ms  56.58ms   97.06%</span><br><span class="line">    Req/Sec     1.15k   120.29     1.92k    88.50%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%   44.02ms</span><br><span class="line">     75%   44.33ms</span><br><span class="line">     90%   47.62ms</span><br><span class="line">     99%   48.88ms</span><br><span class="line">  22853 requests <span class="keyword">in</span> 10.01s, 18.55MB <span class="built_in">read</span></span><br><span class="line">Requests/sec:   2283.31</span><br><span class="line">Transfer/sec:      1.85MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># dump the traffic</span></span><br><span class="line"></span><br><span class="line">tcpdump -nn tcp port 8080 -w nginx.pcap</span><br><span class="line">wrk --latency -c 100 -t 2 --timeout 2 http://192.168.0.30:8080/</span><br></pre></td></tr></table></figure><p>Open this nginx.pcap in Wireshark, Statics -&gt; Flow Graph，select “Limit to display filter” and setup Flow type to “TCP Flows”：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101110429.png" alt><br>Blue area is very slow costs 40ms, 40ms is minimum timeout for TCP delayed acknowledgement (Delayed ACK).<br>An optimization mechanism for TCP ACK, that is, instead of sending an ACK for each request, you wait for a while (such as 40ms). If there are other packets that need to be sent during this period, send them with the ACK. Of course, if you can’t wait for other packets, then send ACK separately after timeout.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TCP_QUICKACK (since Linux 2.4.4)</span></span><br><span class="line"><span class="comment"># Enable  quickack mode if set or disable quickack mode if cleared.  In quickack mode, </span></span><br><span class="line"><span class="comment"># acks are sent imme‐diately, rather than delayed if needed in accordance to normal TCP operation.</span></span><br><span class="line"><span class="comment"># This flag is  not  perma‐nent,  it only enables a switch to or from quickack mode.  </span></span><br><span class="line"><span class="comment"># Subsequent operation of the TCP protocol will once again enter/leave quickack mode</span></span><br><span class="line"><span class="comment"># depending on internal  protocol  processing  and  factors  such  as delayed ack timeouts occurring </span></span><br><span class="line"><span class="comment"># and data transfer.  This option should not be used in code intended to be portable.</span></span><br></pre></td></tr></table></figure><p><a href="https://en.wikipedia.org/wiki/Nagle%27s_algorithm" target="_blank" rel="noopener">The Nagle algorithm</a> is an optimization algorithm used in the TCP protocol to reduce the number of small packets sent, in order to improve the utilization of the actual bandwidth. The Nagle algorithm specifies that there can be at most one unconfirmed outstanding packet on a TCP connection; no other packets are sent until an ACK for this packet is received.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#TCP_NODELAY</span></span><br><span class="line"><span class="comment"># If set, disable the Nagle algorithm.  This means that segments are always sent as soon as possible,</span></span><br><span class="line"><span class="comment"># even if there is only a small amount of data.  When not set, data is buffered until there is a </span></span><br><span class="line"><span class="comment"># sufficient amount to send out, thereby avoiding the frequent sending of small packets, </span></span><br><span class="line"><span class="comment"># which results in poor uti‐lization of the network.  </span></span><br><span class="line"><span class="comment"># This option is overridden by TCP_CORK; however, setting this option forces an explicit flush of</span></span><br><span class="line"><span class="comment"># pending output, even if TCP_CORK is currently set.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check tcp_nodelay</span></span><br><span class="line">cat /etc/nginx/nginx.conf | grep tcp_nodelay</span><br><span class="line">    tcp_nodelay    off;</span><br></pre></td></tr></table></figure><h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>Network Address and Port Translation<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101112538.png" alt><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SNAT</span></span><br><span class="line"><span class="comment"># MASQUERADE, change out ip to Linux wan ip</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -j MASQUERADE</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100</span><br><span class="line"></span><br><span class="line"><span class="comment"># DNAT</span></span><br><span class="line">iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100</span><br><span class="line">iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable forward function</span></span><br><span class="line"><span class="comment"># sysctl net.ipv4.ip_forward</span></span><br><span class="line"><span class="comment"># net.ipv4.ip_forward = 1</span></span><br><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># open files</span></span><br><span class="line"><span class="built_in">ulimit</span> -n</span><br><span class="line">1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase to 66535</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 65536</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Requests per second:    6576.21 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       760.317 [ms] (mean)</span><br><span class="line">Time per request:       0.152 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          5390.19 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0  177 714.3      9    7338</span><br><span class="line">Processing:     0   27  39.8     19     961</span><br><span class="line">Waiting:        0   23  39.5     16     951</span><br><span class="line">Total:          1  204 716.3     28    7349</span><br><span class="line"></span><br><span class="line"><span class="comment"># run new test container</span></span><br><span class="line">docker run --name nginx --privileged -p 8080:8080 -itd feisky/nginx:nat</span><br><span class="line"></span><br><span class="line">iptables -nL -t nat</span><br><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">DOCKER     all  --  0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">Chain DOCKER (2 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">RETURN     all  --  0.0.0.0/0            0.0.0.0/0</span><br><span class="line">DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:172.17.0.2:8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># test again</span></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">apr_pollset_poll: The timeout specified has expired (70007)</span><br><span class="line">Total of 5602 requests completed</span><br><span class="line"></span><br><span class="line"><span class="comment"># set timeout is 30s</span></span><br><span class="line">ab -c 5000 -n 10000 -r -s 30 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">Requests per second:    76.47 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       65380.868 [ms] (mean)</span><br><span class="line">Time per request:       13.076 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          44.79 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0 1300 5578.0      1   65184</span><br><span class="line">Processing:     0 37916 59283.2      1  130682</span><br><span class="line">Waiting:        0    2   8.7      1     414</span><br><span class="line">Total:          1 39216 58711.6   1021  130682</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>we create a script to follow this iptable path<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env stap</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># Dropwatch.stp</span></span><br><span class="line"><span class="comment"># Author: Neil Horman &lt;nhorman@redhat.com&gt;</span></span><br><span class="line"><span class="comment"># An example script to mimic the behavior of the dropwatch utility</span></span><br><span class="line"><span class="comment"># http://fedorahosted.org/dropwatch</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Array to hold the list of drop points we find</span></span><br><span class="line">global locations</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Note when we turn the monitor on and off</span></span><br><span class="line">probe begin &#123; <span class="built_in">printf</span>(<span class="string">"Monitoring for dropped packets\n"</span>) &#125;</span><br><span class="line">probe end &#123; <span class="built_in">printf</span>(<span class="string">"Stopping dropped packet monitor\n"</span>) &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># increment a drop counter for every location we drop at</span></span><br><span class="line">probe kernel.trace(<span class="string">"kfree_skb"</span>) &#123; locations[<span class="variable">$location</span>] &lt;&lt;&lt; 1 &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Every 5 seconds report our drop locations</span></span><br><span class="line">probe timer.sec(5)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>)</span><br><span class="line">  foreach (l <span class="keyword">in</span> locations-) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d packets dropped at %s\n"</span>,</span><br><span class="line">           @count(locations[l]), symname(l))</span><br><span class="line">  &#125;</span><br><span class="line">  delete locations</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>run this script<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">stap --all-modules dropwatch.stp</span><br><span class="line">Monitoring <span class="keyword">for</span> dropped packets</span><br><span class="line"></span><br><span class="line">10031 packets dropped at nf_hook_slow</span><br><span class="line">676 packets dropped at tcp_v4_rcv</span><br><span class="line"> </span><br><span class="line">7284 packets dropped at nf_hook_slow</span><br><span class="line">268 packets dropped at tcp_v4_rcv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># use perf to check </span></span><br><span class="line"><span class="comment"># record 30s crtl + c</span></span><br><span class="line">$ perf record -a -g -- sleep 30</span><br><span class="line"> </span><br><span class="line"><span class="comment"># print report</span></span><br><span class="line">$ perf report -g graph,0</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101140853.png" alt></p><p>Slow in 3 point</p><ol><li>ipv4_conntrack_in</li><li>br_nf_pre_routing</li><li>iptable_nat_ipv4_in</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check conntrack</span></span><br><span class="line">sysctl -a | grep conntrack</span><br><span class="line">net.netfilter.nf_conntrack_count = 180</span><br><span class="line">net.netfilter.nf_conntrack_max = 1000</span><br><span class="line">net.netfilter.nf_conntrack_buckets = 65536</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 60</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># net.netfilter.nf_conntrack_max = 1000 is to small</span></span><br><span class="line">dmesg | tail</span><br><span class="line">[104235.156774] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line">[104243.800401] net_ratelimit: 3939 callbacks suppressed</span><br><span class="line">[104243.800401] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line">[104262.962157] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The connection tracking object size is 376, and the list item size is 16</span><br><span class="line">nf_conntrack_max * connection tracking object size + nf_conntrack_buckets * list item size</span><br><span class="line">= 1000 * 376 + 65536 * 16 B</span><br><span class="line">= 1.4 MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase conntrack</span></span><br><span class="line">sysctl -w net.netfilter.nf_conntrack_max=131072</span><br><span class="line">sysctl -w net.netfilter.nf_conntrack_buckets=65536</span><br><span class="line"></span><br><span class="line"><span class="comment"># test again, now delay is ok</span></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">Requests per second:    6315.99 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       791.641 [ms] (mean)</span><br><span class="line">Time per request:       0.158 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          4985.15 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0  355 793.7     29    7352</span><br><span class="line">Processing:     8  311 855.9     51   14481</span><br><span class="line">Waiting:        0  292 851.5     36   14481</span><br><span class="line">Total:         15  666 1216.3    148   14645</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conntrack -L -o extended | head</span><br><span class="line">ipv4     2 tcp      6 7 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51744 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51744 [ASSURED] mark=0 use=1</span><br><span class="line">ipv4     2 tcp      6 6 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51524 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51524 [ASSURED] mark=0 use=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conntrack -L -o extended | wc -l</span><br><span class="line">14289</span><br><span class="line"></span><br><span class="line"><span class="comment"># collecte all states</span></span><br><span class="line">conntrack -L -o extended | awk <span class="string">'/^.*tcp.*$/ &#123;sum[$6]++&#125; END &#123;for(i in sum) print i, sum[i]&#125;'</span></span><br><span class="line">SYN_RECV 4</span><br><span class="line">CLOSE_WAIT 9</span><br><span class="line">ESTABLISHED 2877</span><br><span class="line">FIN_WAIT 3</span><br><span class="line">SYN_SENT 2113</span><br><span class="line">TIME_WAIT 9283</span><br><span class="line"></span><br><span class="line"><span class="comment"># collect each source IP</span></span><br><span class="line">conntrack -L -o extended | awk <span class="string">'&#123;print $7&#125;'</span> | cut -d <span class="string">"="</span> -f 2 | sort | uniq -c | sort -nr | head -n 10</span><br><span class="line">  14116 192.168.0.2</span><br><span class="line">    172 192.168.0.96</span><br></pre></td></tr></table></figure><h2 id="important"><a href="#important" class="headerlink" title="important"></a>important</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tcp time_wait settings check </span></span><br><span class="line">sysctl net.netfilter.nf_conntrack_tcp_timeout_time_wait</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br></pre></td></tr></table></figure><h2 id="summary-3"><a href="#summary-3" class="headerlink" title="summary"></a>summary</h2><p>After setting TCP_NODELAY for the TCP connection, you can disable the Nagle algorithm;</p><p>After TCP_CORK is enabled for a TCP connection, small packets can be aggregated into large packets before being sent (note that it will block the sending of small packets);</p><p>With SO_SNDBUF and SO_RCVBUF, you can adjust the size of the socket send buffer and receive buffer, respectively.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141930.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141933.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141936.png" alt><br>The three values of tcp_rmem and tcp_wmem are min, default, and max respectively. The system will automatically adjust the size of the TCP receive / send buffer according to these settings.</p><p>The three values of udp_mem are min, pressure, max. The system will automatically adjust the size of the UDP send buffer according to these settings.</p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101215350.png" alt></p><h1 id="Best-Practice"><a href="#Best-Practice" class="headerlink" title="Best Practice"></a>Best Practice</h1><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check running  docker</span></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># check logs</span></span><br><span class="line">docker logs -f [container_id]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check container config in json format</span></span><br><span class="line">docker inspect [container_id] -f <span class="string">'&#123;&#123;json .State&#125;&#125;'</span> | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"Status"</span>: <span class="string">"exited"</span>,</span><br><span class="line">  <span class="string">"Running"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"Paused"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"Restarting"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"OOMKilled"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"Dead"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"Pid"</span>: 0,</span><br><span class="line">  <span class="string">"ExitCode"</span>: 137,</span><br><span class="line">  <span class="string">"Error"</span>: <span class="string">""</span>,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># OMM Kill, we can check in host</span></span><br><span class="line">dmesg</span><br><span class="line">[193038.106393] java invoked oom-killer: gfp_mask=0x14000c0(GFP_KERNEL), nodemask=(null), order=0, oom_score_adj=0</span><br><span class="line">[193038.106396] java cpuset=0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53 mems_allowed=0</span><br><span class="line">[193038.106402] CPU: 0 PID: 27424 Comm: java Tainted: G  OE    4.15.0-1037 <span class="comment">#39-Ubuntu</span></span><br><span class="line">[193038.106404] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS 090007  06/02/2017</span><br><span class="line">[193038.106405] Call Trace:</span><br><span class="line">[193038.106414]  dump_stack+0x63/0x89</span><br><span class="line">[193038.106419]  dump_header+0x71/0x285</span><br><span class="line">[193038.106422]  oom_kill_process+0x220/0x440</span><br><span class="line">[193038.106424]  out_of_memory+0x2d1/0x4f0</span><br><span class="line">[193038.106429]  mem_cgroup_out_of_memory+0x4b/0x80</span><br><span class="line">[193038.106432]  mem_cgroup_oom_synchronize+0x2e8/0x320</span><br><span class="line">[193038.106435]  ? mem_cgroup_css_online+0x40/0x40</span><br><span class="line">[193038.106437]  pagefault_out_of_memory+0x36/0x7b</span><br><span class="line">[193038.106443]  mm_fault_error+0x90/0x180</span><br><span class="line">[193038.106445]  __do_page_fault+0x4a5/0x4d0</span><br><span class="line">[193038.106448]  do_page_fault+0x2e/0xe0</span><br><span class="line">[193038.106454]  ? page_fault+0x2f/0x50</span><br><span class="line">[193038.106456]  page_fault+0x45/0x50</span><br><span class="line">[193038.106459] RIP: 0033:0x7fa053e5a20d</span><br><span class="line">[193038.106460] RSP: 002b:00007fa0060159e8 EFLAGS: 00010206</span><br><span class="line">[193038.106462] RAX: 0000000000000000 RBX: 00007fa04c4b3000 RCX: 0000000009187440</span><br><span class="line">[193038.106463] RDX: 00000000943aa440 RSI: 0000000000000000 RDI: 000000009b223000</span><br><span class="line">[193038.106464] RBP: 00007fa006015a60 R08: 0000000002000002 R09: 00007fa053d0a8a1</span><br><span class="line">[193038.106465] R10: 00007fa04c018b80 R11: 0000000000000206 R12: 0000000100000768</span><br><span class="line">[193038.106466] R13: 00007fa04c4b3000 R14: 0000000100000768 R15: 0000000010000000</span><br><span class="line">[193038.106468] Task <span class="keyword">in</span> /docker/0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53</span><br><span class="line">killed as a result of <span class="built_in">limit</span> of /docker/</span><br><span class="line">0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53</span><br><span class="line">[193038.106478] memory: usage 524288kB, <span class="built_in">limit</span> 524288kB, failcnt 77</span><br><span class="line">[193038.106480] memory+swap: usage 0kB, <span class="built_in">limit</span> 9007199254740988kB, failcnt 0</span><br><span class="line">[193038.106481] kmem: usage 3708kB, <span class="built_in">limit</span> 9007199254740988kB, failcnt 0</span><br><span class="line">[193038.106481] Memory cgroup stats <span class="keyword">for</span> /docker/0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53: cache:0KB rss:520580KB rss_huge:450560KB shmem:0KB mapped_file:0KB dirty:0KB writeback:0KB inactive_anon:0KB active_anon:520580KB inactive_file:0KB active_file:0KB unevictable:0KB</span><br><span class="line">[193038.106494] [ pid ]   uid  tgid total_vm      rss pgtables_bytes swapents oom_score_adj name</span><br><span class="line">[193038.106571] [27281]     0 27281  1153302   134371  1466368        0             0 java</span><br><span class="line">[193038.106574] Memory cgroup out of memory: Kill process 27281 (java) score 1027 or sacrifice child</span><br><span class="line">[193038.148334] Killed process 27281 (java) total-vm:4613208kB, anon-rss:517316kB, file-rss:20168kB, shmem-rss:0kB</span><br><span class="line">[193039.607503] oom_reaper: reaped process 27281 (java), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># add memory limit</span></span><br><span class="line">docker run --name tomcat --cpus 0.1 -m 512M -p 8080:8080 -itd feisky/tomcat:8</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> tomcat java -XX:+PrintFlagsFinal -version | grep HeapSize</span><br><span class="line">uintx ErgoHeapSizeLimit                         = 0                                   &#123;product&#125;</span><br><span class="line">uintx HeapSizePerGCThread                       = 87241520                            &#123;product&#125;</span><br><span class="line">uintx InitialHeapSize                          := 132120576                           &#123;product&#125;</span><br><span class="line">uintx LargePageHeapSizeThreshold                = 134217728                           &#123;product&#125;</span><br><span class="line">uintx MaxHeapSize                              := 2092957696   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># set env to limit memory</span></span><br><span class="line">docker run --name tomcat --cpus 0.1 -m 512M -e JAVA_OPTS=<span class="string">'-Xmx512m -Xms512m'</span> -p 8080:8080 -itd feisky/tomcat:8</span><br><span class="line"></span><br><span class="line"><span class="comment"># check thread </span></span><br><span class="line">PID=$(docker inspect [container_id] -f <span class="string">'&#123;&#123;.State.Pid&#125;&#125;'</span>)</span><br><span class="line"><span class="comment"># run pidstat</span></span><br><span class="line">$ pidstat -t -p <span class="variable">$PID</span> 1</span><br><span class="line">12:59:28      UID      TGID       TID    %usr %system  %guest   %<span class="built_in">wait</span>    %CPU   CPU  Command</span><br><span class="line">12:59:29        0     29850         -   10.00    0.00    0.00    0.00   10.00     0  java</span><br><span class="line">12:59:29        0         -     29850    0.00    0.00    0.00    0.00    0.00     0  |__java</span><br><span class="line">12:59:29        0         -     29897    5.00    1.00    0.00   86.00    6.00     1  |__java</span><br><span class="line">...</span><br><span class="line">12:59:29        0         -     29905    3.00    0.00    0.00   97.00    3.00     0  |__java</span><br><span class="line">12:59:29        0         -     29906    2.00    0.00    0.00   49.00    2.00     1  |__java</span><br><span class="line">12:59:29        0         -     29908    0.00    0.00    0.00   45.00    0.00     0  |__java</span><br><span class="line"></span><br><span class="line"><span class="comment"># io_wait is high</span></span><br></pre></td></tr></table></figure><h2 id="packet-loss"><a href="#packet-loss" class="headerlink" title="packet loss"></a>packet loss</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check max connection</span></span><br><span class="line">sysctl net.netfilter.nf_conntrack_max</span><br><span class="line">net.netfilter.nf_conntrack_max = 262144</span><br><span class="line"></span><br><span class="line">sysctl net.netfilter.nf_conntrack_count</span><br><span class="line">net.netfilter.nf_conntrack_count = 182</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute in container</span></span><br><span class="line">root@nginx:/ iptables -t filter -nvL</span><br><span class="line">Chain INPUT (policy ACCEPT 25 packets, 1000 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line">    6   240 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981</span><br><span class="line"> </span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line"> </span><br><span class="line">Chain OUTPUT (policy ACCEPT 15 packets, 660 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line">    6   264 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981</span><br><span class="line"></span><br><span class="line"><span class="comment"># check MTU</span></span><br><span class="line">netstat -i</span><br><span class="line">Kernel Interface table</span><br><span class="line">Iface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg</span><br><span class="line">eth0       100      157      0    344 0            94      0      0      0 BMRU</span><br><span class="line">lo       65536        0      0      0 0             0      0      0      0 LRU</span><br></pre></td></tr></table></figure><p>During Linux startup, there are three special processes, that is, the three processes with the smallest PID numbers.</p><p>Process 0 is an idle process. This is also the first process created by the system. After initializing processes 1 and 2, it becomes an idle task. It runs when no other tasks are executing on the CPU.</p><p>Process 1 is the init process, which is usually the systemd process. It runs in user mode and is used to manage other user mode processes.</p><p>Process 2 is a kthreadd process, which runs in kernel mode and is used to manage kernel threads.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ps -f --ppid 2 -p 2</span><br><span class="line">UID         PID   PPID  C STIME TTY          TIME CMD</span><br><span class="line">root          2      0  0 12:02 ?        00:00:01 [kthreadd]</span><br><span class="line">root          9      2  0 12:02 ?        00:00:21 [ksoftirqd/0]</span><br><span class="line">root         10      2  0 12:02 ?        00:11:47 [rcu_sched]</span><br><span class="line">root         11      2  0 12:02 ?        00:00:18 [migration/0]</span><br><span class="line">...</span><br><span class="line">root      11094      2  0 14:20 ?        00:00:00 [kworker/1:0-eve]</span><br><span class="line">root      11647      2  0 14:27 ?        00:00:00 [kworker/0:2-cgr]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kernel thread names (CMD) are in square brackets []</span></span><br><span class="line">ps -ef | grep <span class="string">"\[.*\]"</span></span><br><span class="line">root         2     0  0 08:14 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0 08:14 ?        00:00:00 [rcu_gp]</span><br><span class="line">root         4     2  0 08:14 ?        00:00:00 [rcu_par_gp]</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># test -S: SYN  -p port, -i interval 10us</span></span><br><span class="line">hping3 -S -p 80 -i u10 192.168.0.30</span><br><span class="line"></span><br><span class="line"><span class="comment"># top</span></span><br><span class="line">top</span><br><span class="line">top - 08:31:43 up 17 min,  1 user,  load average: 0.00, 0.00, 0.02</span><br><span class="line">Tasks: 128 total,   1 running,  69 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  0.3 us,  0.3 sy,  0.0 ni, 66.8 id,  0.3 wa,  0.0 hi, 32.4 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 65.2 id,  0.0 wa,  0.0 hi, 34.5 si,  0.0 st</span><br><span class="line">KiB Mem :  8167040 total,  7234236 free,   358976 used,   573828 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7560460 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">    9 root      20   0       0      0      0 S   7.0  0.0   0:00.48 ksoftirqd/0</span><br><span class="line">   18 root      20   0       0      0      0 S   6.9  0.0   0:00.56 ksoftirqd/1</span><br><span class="line"> 2489 root      20   0  876896  38408  21520 S   0.3  0.5   0:01.50 docker-containe</span><br><span class="line"> 3008 root      20   0   44536   3936   3304 R   0.3  0.0   0:00.09 top</span><br><span class="line">    1 root      20   0   78116   9000   6432 S   0.0  0.1   0:11.77 systemd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check ksoftirqd pid is 9</span></span><br><span class="line">pstack 9</span><br><span class="line">Could not attach to target 9: Operation not permitted.</span><br><span class="line">detach: No such process</span><br><span class="line"></span><br><span class="line">cat /proc/9/stack</span><br><span class="line">[&lt;0&gt;] smpboot_thread_fn+0x166/0x170</span><br><span class="line">[&lt;0&gt;] kthread+0x121/0x140</span><br><span class="line">[&lt;0&gt;] ret_from_fork+0x35/0x40</span><br><span class="line">[&lt;0&gt;] 0xffffffffffffffff</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf </span></span><br><span class="line">perf record -a -g -p 9 -- sleep 30</span><br><span class="line">perf report</span><br><span class="line"></span><br><span class="line"><span class="comment"># install flamegraph</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/brendangregg/FlameGraph</span><br><span class="line"><span class="built_in">cd</span> FlameGraph</span><br><span class="line"></span><br><span class="line">perf script -i /root/perf.data | ./stackcollapse-perf.pl --all |  ./flamegraph.pl &gt; ksoftirqd.svg</span><br></pre></td></tr></table></figure><h2 id="Dynamic-Tracing"><a href="#Dynamic-Tracing" class="headerlink" title="Dynamic Tracing"></a>Dynamic Tracing</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /sys/kernel/debug/tracing</span><br><span class="line"></span><br><span class="line"><span class="comment"># if not exist this directory</span></span><br><span class="line">mount -t debugfs nodev /sys/kernel/debug</span><br><span class="line"></span><br><span class="line">cat available_tracers</span><br><span class="line">hwlat blk mmiotrace function_graph wakeup_dl wakeup_rt wakeup <span class="keyword">function</span> nop</span><br><span class="line"></span><br><span class="line">cat available_filter_functions</span><br><span class="line">cat available_events</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="built_in">echo</span> do_sys_open &gt; set_graph_function</span><br><span class="line"><span class="built_in">echo</span> function_graph &gt; current_tracer</span><br><span class="line"><span class="built_in">echo</span> funcgraph-proc &gt; trace_options</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable trace</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; tracing_on</span><br><span class="line">ls</span><br><span class="line"><span class="comment"># disable trace</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; tracing_on</span><br><span class="line"></span><br><span class="line">cat trace</span><br><span class="line"><span class="comment"># tracer: function_graph</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># CPU  TASK/PID         DURATION                  FUNCTION CALLS</span></span><br><span class="line"><span class="comment"># |     |    |           |   |                     |   |   |   |</span></span><br><span class="line"> 0)    ls-12276    |               |  <span class="function"><span class="title">do_sys_open</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |    <span class="function"><span class="title">getname</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |      <span class="function"><span class="title">getname_flags</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |        <span class="function"><span class="title">kmem_cache_alloc</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |          <span class="function">_cond_resched</span>() &#123;</span><br><span class="line"> 0)    ls-12276    |   0.049 us    |            rcu_all_qs();</span><br><span class="line"> 0)    ls-12276    |   0.791 us    |          &#125;</span><br><span class="line"> 0)    ls-12276    |   0.041 us    |          should_failslab();</span><br><span class="line"> 0)    ls-12276    |   0.040 us    |          prefetch_freepointer();</span><br><span class="line"> 0)    ls-12276    |   0.039 us    |          memcg_kmem_put_cache();</span><br><span class="line"> 0)    ls-12276    |   2.895 us    |        &#125;</span><br><span class="line"> 0)    ls-12276    |               |        <span class="function">__check_object_size</span>() &#123;</span><br><span class="line"> 0)    ls-12276    |   0.067 us    |          __virt_addr_valid();</span><br><span class="line"> 0)    ls-12276    |   0.044 us    |          __check_heap_object();</span><br><span class="line"> 0)    ls-12276    |   0.039 us    |          check_stack_object();</span><br><span class="line"> 0)    ls-12276    |   1.570 us    |        &#125;</span><br><span class="line"> 0)    ls-12276    |   5.790 us    |      &#125;</span><br><span class="line"> 0)    ls-12276    |   6.325 us    |    &#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install trace-cmd</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install trace-cmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># above 5 step simplify to follow 1 step</span></span><br><span class="line">trace-cmd record -p function_graph -g do_sys_open -O funcgraph-proc ls</span><br><span class="line">$ trace-cmd report</span><br><span class="line">...</span><br><span class="line">  ls-12418 [000] 85558.075341: funcgraph_entry:                   |  <span class="function"><span class="title">do_sys_open</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075363: funcgraph_entry:                   |    <span class="function"><span class="title">getname</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075364: funcgraph_entry:                   |      <span class="function"><span class="title">getname_flags</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075364: funcgraph_entry:                   |        <span class="function"><span class="title">kmem_cache_alloc</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075365: funcgraph_entry:                   |          <span class="function">_cond_resched</span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075365: funcgraph_entry:        0.074 us   |            rcu_all_qs();</span><br><span class="line">  ls-12418 [000] 85558.075366: funcgraph_exit:         1.143 us   |          &#125;</span><br><span class="line">  ls-12418 [000] 85558.075366: funcgraph_entry:        0.064 us   |          should_failslab();</span><br><span class="line">  ls-12418 [000] 85558.075367: funcgraph_entry:        0.075 us   |          prefetch_freepointer();</span><br><span class="line">  ls-12418 [000] 85558.075368: funcgraph_entry:        0.085 us   |          memcg_kmem_put_cache();</span><br><span class="line">  ls-12418 [000] 85558.075369: funcgraph_exit:         4.447 us   |        &#125;</span><br><span class="line">  ls-12418 [000] 85558.075369: funcgraph_entry:                   |        <span class="function">__check_object_size</span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075370: funcgraph_entry:        0.132 us   |          __virt_addr_valid();</span><br><span class="line">  ls-12418 [000] 85558.075370: funcgraph_entry:        0.093 us   |          __check_heap_object();</span><br><span class="line">  ls-12418 [000] 85558.075371: funcgraph_entry:        0.059 us   |          check_stack_object();</span><br><span class="line">  ls-12418 [000] 85558.075372: funcgraph_exit:         2.323 us   |        &#125;</span><br><span class="line">  ls-12418 [000] 85558.075372: funcgraph_exit:         8.411 us   |      &#125;</span><br><span class="line">  ls-12418 [000] 85558.075373: funcgraph_exit:         9.195 us   |    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">perf probe --add do_sys_open</span><br><span class="line">Added new event:</span><br><span class="line">  probe:do_sys_open    (on do_sys_open)</span><br><span class="line">You can now use it <span class="keyword">in</span> all perf tools, such as:</span><br><span class="line">    perf record -e probe:do_sys_open -aR sleep 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perf probe -V do_sys_open</span><br><span class="line">Available variables at do_sys_open</span><br><span class="line">        @&lt;do_sys_open+0&gt;</span><br><span class="line">                char*   filename</span><br><span class="line">                int     dfd</span><br><span class="line">                int     flags</span><br><span class="line">                struct open_flags     op</span><br><span class="line">                umode_t mode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete probe</span></span><br><span class="line">perf probe --del probe:do_sys_open</span><br><span class="line"></span><br><span class="line">perf probe --add <span class="string">'do_sys_open filename:string'</span></span><br><span class="line">Added new event:</span><br><span class="line">  probe:do_sys_open    (on do_sys_open with filename:string)</span><br><span class="line">You can now use it <span class="keyword">in</span> all perf tools, such as:</span><br><span class="line">    perf record -e probe:do_sys_open -aR sleep 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># run</span></span><br><span class="line">perf record -e probe:do_sys_open -aR ls</span><br><span class="line"><span class="comment"># result</span></span><br><span class="line">perf script</span><br><span class="line">   perf 13593 [000] 91846.053622: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/proc/13596/status"</span></span><br><span class="line">   ls 13596 [000] 91846.053995: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/etc/ld.so.cache"</span></span><br><span class="line">   ls 13596 [000] 91846.054011: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/lib/x86_64-linux-gnu/libselinux.so.1"</span></span><br><span class="line">   ls 13596 [000] 91846.054066: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/lib/x86_64-linux-gnu/libc.so.6”</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># delete probe before leave</span></span><br><span class="line">perf probe --del probe:do_sys_open</span><br><span class="line"></span><br><span class="line"><span class="comment"># starce is based on ptrace</span></span><br><span class="line">strace ls</span><br><span class="line">...</span><br><span class="line">access(<span class="string">"/etc/ld.so.nohwcap"</span>, F_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">access(<span class="string">"/etc/ld.so.preload"</span>, R_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">"/etc/ld.so.cache"</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">...</span><br><span class="line">access(<span class="string">"/etc/ld.so.nohwcap"</span>, F_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">"/lib/x86_64-linux-gnu/libselinux.so.1"</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf trace is light</span></span><br><span class="line">perf trace ls</span><br><span class="line">         ? (         ): ls/14234  ... [continued]: execve()) = 0</span><br><span class="line">     0.177 ( 0.013 ms): ls/14234 brk(                                                                  ) = 0x555d96be7000</span><br><span class="line">     0.224 ( 0.014 ms): ls/14234 access(filename: 0xad98082                                            ) = -1 ENOENT No such file or directory</span><br><span class="line">     0.248 ( 0.009 ms): ls/14234 access(filename: 0xad9add0, mode: R                                   ) = -1 ENOENT No such file or directory</span><br><span class="line">     0.267 ( 0.012 ms): ls/14234 openat(dfd: CWD, filename: 0xad98428, flags: CLOEXEC                  ) = 3</span><br><span class="line">     0.288 ( 0.009 ms): ls/14234 fstat(fd: 3&lt;/usr/lib/locale/C.UTF-8/LC_NAME&gt;, statbuf: 0x7ffd2015f230 ) = 0</span><br><span class="line">     0.305 ( 0.011 ms): ls/14234 mmap(len: 45560, prot: READ, flags: PRIVATE, fd: 3                    ) = 0x7efe0af92000</span><br><span class="line">     0.324 Dockerfile  test.sh</span><br><span class="line">( 0.008 ms): ls/14234 close(fd: 3&lt;/usr/lib/locale/C.UTF-8/LC_NAME&gt;                          ) = 0</span><br><span class="line">     ...</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101221820.png" alt></p><h2 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">netstat -s | grep socket</span><br><span class="line">    73 resets received <span class="keyword">for</span> embryonic SYN_RECV sockets</span><br><span class="line">    308582 TCP sockets finished time <span class="built_in">wait</span> <span class="keyword">in</span> fast timer</span><br><span class="line">    8 delayed acks further delayed because of locked socket</span><br><span class="line">    290566 <span class="built_in">times</span> the listen queue of a socket overflowed</span><br><span class="line">    290566 SYNs to LISTEN sockets dropped</span><br><span class="line"></span><br><span class="line">ss -ltnp</span><br><span class="line">State     Recv-Q     Send-Q            Local Address:Port            Peer Address:Port</span><br><span class="line">LISTEN    10         10                      0.0.0.0:80                   0.0.0.0:*         users:((<span class="string">"nginx"</span>,pid=10491,fd=6),(<span class="string">"nginx"</span>,pid=10490,fd=6),(<span class="string">"nginx"</span>,pid=10487,fd=6))</span><br><span class="line">LISTEN    7          10                            *:9000                       *:*         users:((<span class="string">"php-fpm"</span>,pid=11084,fd=9),...,(<span class="string">"php-fpm"</span>,pid=10529,fd=7))</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.ip_local_port_range</span><br><span class="line">net.ipv4.ip_local_port_range=20000 20050</span><br><span class="line"></span><br><span class="line">sysctl -w net.ipv4.ip_local_port_range=<span class="string">"10000 65535"</span></span><br><span class="line">net.ipv4.ip_local_port_range = 10000 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># timewait is still use port, can decrase timewait time or port reuse</span></span><br><span class="line">ss -s</span><br><span class="line">TCP:   32775 (estab 1, closed 32768, orphaned 0, synrecv 0, timewait 32768/0), ports 0</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_tw_reuse</span><br><span class="line">net.ipv4.tcp_tw_reuse = 0</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="monitor"><a href="#monitor" class="headerlink" title="monitor"></a>monitor</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222832.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222835.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222947.png" alt></p><h2 id="learn-kernel"><a href="#learn-kernel" class="headerlink" title="learn kernel"></a>learn kernel</h2><ol><li><a href="https://elixir.bootlin.com/linux/latest/source" target="_blank" rel="noopener">kernel</a></li><li><a href="https://github.com/iovisor/bcc" target="_blank" rel="noopener">eBPF</a><h1 id="Additions"><a href="#Additions" class="headerlink" title="Additions"></a>Additions</h1><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224237.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224240.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224243.png" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224245.png" alt></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This blog record some useful tools for linux.&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="tools" scheme="http://feiyang233.club/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>大数据学习笔记</title>
    <link href="http://feiyang233.club/post/bigdata/"/>
    <id>http://feiyang233.club/post/bigdata/</id>
    <published>2019-12-12T15:37:11.000Z</published>
    <updated>2019-12-12T15:41:23.961Z</updated>
    
    <content type="html"><![CDATA[<p>大数据技术主要是要解决大规模数据的计算处理问题，但是我们要想对数据进行计算，首先要解决的其实是大规模数据的存储问题。</p><a id="more"></a><h1 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h1><p>大规模数据存储都需要解决 3 个核心问题: 1.数据存储容量的问题 2.数据读写速度的问题 3.数据可靠性的问题  </p><p>RAID（独立磁盘冗余阵列）技术是将多块普通磁盘组成一个阵列，共同对外提供服务。主要是为了改善磁盘的存储容量、读写速度，增强磁盘的可用性和容错能力。目前服务器级别的计算机都支持插入多块磁盘（8 块或者更多），通过使用 RAID 技术，实现数据在多块磁盘上的并发读写和数据备份。<br>首先，我们先假设服务器有 N 块磁盘，RAID 0是数据在从内存缓冲区写入磁盘时，根据磁盘数量将数据分成 N 份，这些数据同时并发写入 N 块磁盘，使得数据整体写入速度是一块磁盘的 N 倍；读取的时候也一样，因此 RAID 0 具有极快的数据读写速度。但是 RAID 0 不做数据备份，N 块磁盘中只要有一块损坏，数据完整性就被破坏，其他磁盘的数据也都无法使用了。</p><p>RAID 1是数据在写入磁盘时，将一份数据同时写入两块磁盘，这样任何一块磁盘损坏都不会导致数据丢失，插入一块新磁盘就可以通过复制数据的方式自动修复，具有极高的可靠性。</p><p>结合 RAID 0 和 RAID 1 两种方案构成了RAID 10，它是将所有磁盘 N 平均分成两份，数据同时在两份磁盘写入，相当于 RAID 1；但是平分成两份，在每一份磁盘（也就是 N/2 块磁盘）里面，利用 RAID 0 技术并发读写，这样既提高可靠性又改善性能。不过 RAID 10 的磁盘利用率较低，有一半的磁盘用来写备份数据。</p><p>一般情况下，一台服务器上很少出现同时损坏两块磁盘的情况，在只损坏一块磁盘的情况下，如果能利用其他磁盘的数据恢复损坏磁盘的数据，这样在保证可靠性和性能的同时，磁盘利用率也得到大幅提升。</p><p>顺着这个思路，RAID 3可以在数据写入磁盘的时候，将数据分成 N-1 份，并发写入 N-1 块磁盘，并在第 N 块磁盘记录校验数据，这样任何一块磁盘损坏（包括校验数据磁盘），都可以利用其他 N-1 块磁盘的数据修复。</p><p>但是在数据修改较多的场景中，任何磁盘数据的修改，都会导致第 N 块磁盘重写校验数据。频繁写入的后果是第 N 块磁盘比其他磁盘更容易损坏，需要频繁更换，所以 RAID 3 很少在实践中使用，因此在上面图中也就没有单独列出。</p><p>相比 RAID 3，RAID 5是使用更多的方案。RAID 5 和 RAID 3 很相似，但是校验数据不是写入第 N 块磁盘，而是螺旋式地写入所有磁盘中。这样校验数据的修改也被平均到所有磁盘上，避免 RAID 3 频繁写坏一块磁盘的情况。</p><p>如果数据需要很高的可靠性，在出现同时损坏两块磁盘的情况下（或者运维管理水平比较落后，坏了一块磁盘但是迟迟没有更换，导致又坏了一块磁盘），仍然需要修复数据，这时候可以使用RAID 6。</p><p>RAID 6 和 RAID 5 类似，但是数据只写入 N-2 块磁盘，并螺旋式地在两块磁盘中写入校验信息（使用不同算法生成）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大数据技术主要是要解决大规模数据的计算处理问题，但是我们要想对数据进行计算，首先要解决的其实是大规模数据的存储问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="bigdata" scheme="http://feiyang233.club/tags/bigdata/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm</title>
    <link href="http://feiyang233.club/post/algo/"/>
    <id>http://feiyang233.club/post/algo/</id>
    <published>2019-12-01T15:07:37.000Z</published>
    <updated>2020-02-27T09:49:34.204Z</updated>
    
    <content type="html"><![CDATA[<p>Record the learning algorithm experience.<br><a id="more"></a><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141136.jpeg" alt></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/FQ0LCROtEQu3iBZiJb0VBw" target="_blank" rel="noopener">背包问题</a></li></ol><h1 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h1><ol><li>Reverse Integer</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">//math.MinInt32 = -2147483648</span></span><br><span class="line">    <span class="comment">//math.MaxInt32 = 2147483647</span></span><br><span class="line">    <span class="keyword">var</span> result <span class="keyword">int</span></span><br><span class="line">    <span class="keyword">for</span> x!=<span class="number">0</span>&#123;</span><br><span class="line">        result=result*<span class="number">10</span>+x%<span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> result &gt; <span class="number">2147483647</span>  || result &lt; <span class="number">-2147483648</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        x/=<span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="quickSort"><a href="#quickSort" class="headerlink" title="quickSort"></a>quickSort</h1><ol><li>Based on recursive</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span></span>  &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> startIndex &gt;= endIndex &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">pivotIndex:= partition(arr,startIndex,endIndex)</span><br><span class="line">quickSort(arr,startIndex,pivotIndex<span class="number">-1</span>)</span><br><span class="line">quickSort(arr,pivotIndex+<span class="number">1</span>,endIndex)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span>  <span class="title">int</span></span> &#123;</span><br><span class="line"></span><br><span class="line">pivot:=arr[startIndex]</span><br><span class="line">mark:=startIndex</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=startIndex+<span class="number">1</span>; i&lt;= endIndex; i++&#123;</span><br><span class="line"><span class="keyword">if</span> arr[i]&lt;pivot &#123;</span><br><span class="line">mark++    <span class="comment">//  numbers that smaller pivot ++</span></span><br><span class="line">arr[i],arr[mark] = arr[mark], arr[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[startIndex] = arr [mark]</span><br><span class="line">arr[mark] = pivot</span><br><span class="line"><span class="keyword">return</span> mark</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = []<span class="keyword">int</span>&#123;<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">1</span>&#125;</span><br><span class="line">quickSort(arr,<span class="number">0</span>, <span class="built_in">len</span>(arr)<span class="number">-1</span>)</span><br><span class="line">fmt.Print(arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Use stack</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"github.com/golang-collections/collections/stack"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span></span>  &#123;</span><br><span class="line"></span><br><span class="line">quickSortStack := stack.New()</span><br><span class="line">rootParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">rootParam[<span class="string">"startIndex"</span>] = startIndex</span><br><span class="line">rootParam[<span class="string">"endIndex"</span>] = endIndex</span><br><span class="line">quickSortStack.Push(rootParam)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> quickSortStack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line"></span><br><span class="line">param := quickSortStack.Pop().(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">pivotIndex := partition(arr, param[<span class="string">"startIndex"</span>], param[<span class="string">"endIndex"</span>] )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> param[<span class="string">"startIndex"</span>] &lt; pivotIndex<span class="number">-1</span> &#123;</span><br><span class="line">leftParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">leftParam[<span class="string">"startIndex"</span>] = param[<span class="string">"startIndex"</span>]</span><br><span class="line">leftParam[<span class="string">"endIndex"</span>] = pivotIndex<span class="number">-1</span></span><br><span class="line">quickSortStack.Push(leftParam)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> pivotIndex+<span class="number">1</span> &lt; param[<span class="string">"endIndex"</span>] &#123;</span><br><span class="line"></span><br><span class="line">rightParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">rightParam[<span class="string">"startIndex"</span>] = pivotIndex+<span class="number">1</span></span><br><span class="line">rightParam[<span class="string">"endIndex"</span>] = param[<span class="string">"endIndex"</span>]</span><br><span class="line">quickSortStack.Push(rightParam)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span>  <span class="title">int</span></span> &#123;</span><br><span class="line"></span><br><span class="line">pivot:=arr[startIndex]</span><br><span class="line">mark:=startIndex</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=startIndex+<span class="number">1</span>; i&lt;= endIndex; i++&#123;</span><br><span class="line"><span class="keyword">if</span> arr[i]&lt;pivot &#123;</span><br><span class="line">mark++    <span class="comment">//  smaller pivot numbers ++</span></span><br><span class="line">arr[i],arr[mark] = arr[mark], arr[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[startIndex] = arr [mark]</span><br><span class="line">arr[mark] = pivot</span><br><span class="line"><span class="keyword">return</span> mark</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = []<span class="keyword">int</span>&#123;<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">1</span>&#125;</span><br><span class="line">quickSort(arr,<span class="number">0</span>, <span class="built_in">len</span>(arr)<span class="number">-1</span>)</span><br><span class="line">fmt.Print(arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Hash-Table"><a href="#Hash-Table" class="headerlink" title="Hash Table"></a>Hash Table</h1><ol><li><p>Two Sum</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(nums []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    </span><br><span class="line">    dic := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">int</span>)</span><br><span class="line">    <span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">        </span><br><span class="line">        k,ok := dic[target-v]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ok &#123;</span><br><span class="line">            <span class="keyword">return</span> []<span class="keyword">int</span>&#123;k, i&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dic[v]=i     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>least recently used</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Record the learning algorithm experience.&lt;br&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://feiyang233.club/categories/algorithm/"/>
    
    
      <category term="go" scheme="http://feiyang233.club/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go 学习笔记</title>
    <link href="http://feiyang233.club/post/golang/"/>
    <id>http://feiyang233.club/post/golang/</id>
    <published>2019-11-10T18:12:12.000Z</published>
    <updated>2020-02-27T09:50:41.071Z</updated>
    
    <content type="html"><![CDATA[<p>本文初始化于 2019-11-11 02:12:12，深夜开启学习 golang 的道路。<br><a id="more"></a><br>go 是静态类型的语言，入门推荐<a href="https://tour.go-zh.org/list" target="_blank" rel="noopener">Go 编程语言指南</a><br>还有一个极客时间的课程<a href="https://github.com/hyper0x/Golang_Puzzlers/blob/master/mapping_table.md" target="_blank" rel="noopener">示例代码</a></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/rthJS8M5_6ttQ-O2Av2UIQ" target="_blank" rel="noopener">runtime</a></li><li><a href="https://mp.weixin.qq.com/s/A_g6X7kdoPSx7MX0fxTYzw" target="_blank" rel="noopener">Go并发编程-runtime包</a></li><li><a href="https://mp.weixin.qq.com/s/DPHGRK1Cq7iIDOnqzoNueQ" target="_blank" rel="noopener">Go 语言 50 个技巧</a></li><li><a href="https://mp.weixin.qq.com/s/fNMXfpBhBC3UWTbYCnwIMg" target="_blank" rel="noopener">Go Modules 终极入门</a></li><li><a href="https://mp.weixin.qq.com/s/RkuWRSn27PS3WwHWKrIi3Q" target="_blank" rel="noopener">并发与并行</a></li></ol><h1 id="GOROOT-GOPATH"><a href="#GOROOT-GOPATH" class="headerlink" title="GOROOT GOPATH"></a>GOROOT GOPATH</h1><ol><li>GOROOT：Go 语言安装根目录的路径，也就是 GO 语言的安装路径。</li><li>GOPATH：若干工作区目录的路径。是我们自己定义的工作空间。 <a href="https://golang.org/doc/code.html#GOPATH" target="_blank" rel="noopener">官方解释</a></li><li>GOBIN：GO 程序生成的可执行文件（executable file）的路径。</li></ol><h1 id="命令源码文件"><a href="#命令源码文件" class="headerlink" title="命令源码文件"></a>命令源码文件</h1><p>命令源码文件的用途是什么，怎样编写它？<br>命令源码文件是程序的运行入口，是每个可独立运行的程序必须拥有的。我们可以通过构建或安装，生成与其对应的可执行文件，后者一般会与该命令源码文件的直接父目录同名。<br>如果一个源码文件声明属于main包，并且包含一个无参数声明且无结果声明的main函数，那么它就是命令源码文件。<br>在同一个目录下的源码文件都需要被声明为属于同一个代码包。源码文件声明的包名可以与其所在目录的名称不同，只要这些文件声明的包名一致就可以。</p><h1 id="库源码文件"><a href="#库源码文件" class="headerlink" title="库源码文件"></a>库源码文件</h1><p>库源码文件是不能被直接运行的源码文件，它仅用于存放程序实体，这些程序实体可以被其他代码使用（只要遵从 Go 语言规范的话）。<br>第一条规则，同目录下的源码文件的代码包声明语句要一致。也就是说，它们要同属于一个代码包。这对于所有源码文件都是适用的。如果目录中有命令源码文件，那么其他种类的源码文件也应该声明属于main包。这也是我们能够成功构建和运行它们的前提。<br>第二条规则，源码文件声明的代码包的名称可以与其所在的目录的名称不同。在针对代码包进行构建时，生成的结果文件的主名称与其父目录的名称一致。对于命令源码文件而言，构建生成的可执行文件的主名称会与其父目录的名称相同。</p><h1 id="数组-array"><a href="#数组-array" class="headerlink" title="数组 array"></a>数组 array</h1><p>数组是连续存储在内存中的，每一个切片的底层实现都是绑定着一个数组。当切面的值改变时，底层数组也会跟着改变。当切片的 capacity 增大超过当前数组长度时，go 会自动产生一个新的底层数组，长度为以前的 2 倍，然后再绑定到切片上。当切片 capacity 大于 1000 时，底层数组的增长因子就会有 2 变为 1.25。数组的容量永远等于其长度，都是不可变的。</p><h1 id="切片-slice"><a href="#切片-slice" class="headerlink" title="切片 slice"></a>切片 slice</h1><p>Go 语言的切片类型属于引用类型，同属引用类型的还有字典类型、通道类型、函数类型等；而 Go 语言的数组类型则属于值类型，同属值类型的有基础数据类型以及结构体类型。<br>注意，Go 语言里不存在像 Java 等编程语言中令人困惑的“传值或传引用”问题。在 Go 语言中，我们判断所谓的“传值”或者“传引用”只要看被传递的值的类型就好了。<br>如果传递的值是引用类型的，那么就是“传引用”。如果传递的值是值类型的，那么就是“传值”。从传递成本的角度讲，引用类型的值往往要比值类型的值低很多。<br>我们在数组和切片之上都可以应用索引表达式，得到的都会是某个元素。我们在它们之上也都可以应用切片表达式，也都会得到一个新的切片。切片的容量却不是这样，并且它的变化是有规律可寻的。用make函数初始化切片时，如果不指明其容量，那么它就会和长度一致。如果在初始化时指明了容量，那么切片的实际容量也就是它了。 切片代表的窗口是无法向左扩展的。<br>slice := make([]int, len, cap)</p><p>Go 语言经典知识总结<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">基于混合线程的并发编程模型自然不必多说。</span><br><span class="line"></span><br><span class="line">在数据类型方面有：</span><br><span class="line">基于底层数组的切片；</span><br><span class="line">用来传递数据的通道；</span><br><span class="line">作为一等类型的函数；</span><br><span class="line">可实现面向对象的结构体；</span><br><span class="line">能无侵入实现的接口等。</span><br><span class="line"></span><br><span class="line">在语法方面有：</span><br><span class="line">异步编程神器go语句；</span><br><span class="line">函数的最后关卡defer语句；</span><br><span class="line">可做类型判断的switch语句；</span><br><span class="line">多通道操作利器select语句；</span><br><span class="line">非常有特色的异常处理函数panic和recover。</span><br><span class="line"></span><br><span class="line">测试 Go 程序的主要方式。这涉及了 Go 语言自带的程序测试套件，相关的概念和工具包括：</span><br><span class="line">独立的测试源码文件；</span><br><span class="line">三种功用不同的测试函数；</span><br><span class="line">专用的testing代码包；</span><br><span class="line">功能强大的go test命令。</span><br><span class="line"></span><br><span class="line">Go 语言提供的那些同步工具。它们也是 Go 语言并发编程工具箱中不可或缺的一部分。这包括了：</span><br><span class="line">经典的互斥锁；</span><br><span class="line">读写锁；</span><br><span class="line">条件变量；</span><br><span class="line">原子操作。</span><br><span class="line"></span><br><span class="line">以及Go 语言特有的一些数据类型，即：</span><br><span class="line">单次执行小助手sync.Once；</span><br><span class="line">临时对象池sync.Pool；</span><br><span class="line">帮助我们实现多 goroutine 协作流程的sync.WaitGroup、context.Context；</span><br><span class="line">一种高效的并发安全字典sync.Map。</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文初始化于 2019-11-11 02:12:12，深夜开启学习 golang 的道路。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="go" scheme="http://feiyang233.club/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>那些年在新加坡吃过的店</title>
    <link href="http://feiyang233.club/post/SG-food/"/>
    <id>http://feiyang233.club/post/SG-food/</id>
    <published>2019-10-20T08:45:49.000Z</published>
    <updated>2020-03-09T02:18:45.141Z</updated>
    
    <content type="html"><![CDATA[<p>民以食为天<br>作为一个在新加坡搬砖的四川吃货，唯有美食不可辜负。坡县虽小，但各式各样的菜系都可以吃到。由于在四川长大，比较喜欢川菜火锅串串香锅烤鱼等。偶尔也跟着朋友们尝试一下其他的菜系。<br><a id="more"></a></p><h1 id="川菜"><a href="#川菜" class="headerlink" title="川菜"></a>川菜</h1><h2 id="NTU-Canteen-11-川菜"><a href="#NTU-Canteen-11-川菜" class="headerlink" title="NTU Canteen 11 川菜"></a>NTU Canteen 11 川菜</h2><ul><li><a href="https://www.google.com/maps/place/NTU+Hall+of+Residence+11/@1.3550279,103.6842518,17z/data=!3m1!4b1!4m5!3m4!1s0x31da0fa624c5025d:0xff3b2e9bae59d6c4!8m2!3d1.3550279!4d103.6864405" target="_blank" rel="noopener">地址</a>：20 Nanyang Ave, Singapore 639809</li><li>点评：目前吃过的新加坡性价比最高的川菜，味道好，价格最便宜，随便点还没有踩雷过。唯一的缺点就是地理位置太偏远了。</li><li>上图:  <img src="/img/food/ntu1.jpg" alt="ntu1">  <img src="/img/food/ntu2.jpg" alt="ntu2">  <img src="/img/food/ntu3.jpg" alt="ntu3"> <h2 id="牛车水食阁-川味园"><a href="#牛车水食阁-川味园" class="headerlink" title="牛车水食阁 川味园"></a>牛车水食阁 川味园</h2></li><li><a href="https://www.google.com/maps/place/%E5%B7%9D%E5%91%B3%E5%9B%AD/@1.2847801,103.8424824,15z/data=!4m5!3m4!1s0x0:0x1775b362155b0f51!8m2!3d1.2847801!4d103.8424824" target="_blank" rel="noopener">地址</a>：32 New Market Rd, Singapore 050032</li><li>点评：德阳大叔开的店，味道非常的四川，价格实惠，分量也很足。只是在食阁里比较吵杂，还有点热。<del>沸腾鱼</del>我觉得很一般，不是很入味。据说旁边那家日日红麻辣香锅很不错，还没去吃过。</li><li>上图:  <img src="/img/food/cwy.jpg" alt="cwy"><h2 id="厦门街-成都"><a href="#厦门街-成都" class="headerlink" title="厦门街 成都"></a>厦门街 成都</h2></li><li><a href="https://www.google.com/maps/place/%E6%88%90%E9%83%BDChengdu+%C2%B7+%E6%96%B0%E5%8A%A0%E5%9D%A1%E6%9C%80%E8%B5%B0%E5%BF%83%E5%B7%9D%E8%8F%9C/@1.2803505,103.8445213,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19515828ce5b:0xd28a3b9a3b6ee1db!8m2!3d1.2803451!4d103.84671" target="_blank" rel="noopener">地址</a>：74 Amoy St, Singapore 069893</li><li>点评：新加坡的四川同学安利的，<code>水煮鱼，牛蛙</code>强推，干锅肥肠也不错(但我觉得老成都的干锅肥肠更好吃)。<del>辣子鸡</del>不要点，辣鸡。</li><li>上图:  <img src="/img/food/cd1.jpg" alt="cd1">  <img src="/img/food/cd2.jpg" alt="cd2">  <img src="/img/food/cd3.jpg" alt="cd3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720135949.png" alt></li></ul><h2 id="牛车水-老成都"><a href="#牛车水-老成都" class="headerlink" title="牛车水 老成都"></a>牛车水 老成都</h2><ul><li><a href="https://www.google.com/maps/place/Old+Chengdu+Sichuan+Cuisine+Restaurant+%E8%80%81%E6%88%90%E9%83%BD%E5%B7%9D%E8%8F%9C%E9%A6%86/@1.2838636,103.841519,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19735c9a4b71:0xb1aca33c8f02c76e!8m2!3d1.2838582!4d103.8437077" target="_blank" rel="noopener">地址</a>：80 Pagoda St, Singapore 059239</li><li>点评：曾经我以为这家是热门景点宰客的店，虽然价格是贵，但人家的味道对得起老成都这个名字。目前吃过干锅肥肠，豆花牛肉，炒时蔬，nice！</li><li>无图：吃的时候没有拍照，O(∩_∩)O哈哈~</li></ul><h2 id="金文泰食阁-四川厨子"><a href="#金文泰食阁-四川厨子" class="headerlink" title="金文泰食阁 四川厨子"></a>金文泰食阁 四川厨子</h2><ul><li><a href="https://www.google.com/maps/place/Kopitiam+@+Clementi+Ave+3/@1.3139883,103.7652978,21z/data=!4m5!3m4!1s0x31da1a8e771fa3fd:0x57a3d8c0d2918f32!8m2!3d1.3138849!4d103.7652542" target="_blank" rel="noopener">地址</a>：450 Clementi Ave 3, #01-271, Singapore 120450</li><li>点评：窗口那个姐姐是四川邛崃的，目前只吃过她家的烧鸡公一次，味道不错。川菜水煮鱼不错，孜然排骨太干了，不行。</li><li>上图:  <img src="/img/food/clementi1.jpg" alt="clementi1">  <img src="/img/food/clementi2.jpg" alt="clementi2">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144937.jpg" alt></li></ul><h2 id="NUS-PGP食堂-川菜"><a href="#NUS-PGP食堂-川菜" class="headerlink" title="NUS PGP食堂 川菜"></a>NUS PGP食堂 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.290806,103.7804248,19.17z/data=!4m12!1m6!3m5!1s0x31da1a53630ee451:0x69e2d2ba3d0d6ce1!2sbluPort+-+NUS+Prince+George&#39;s+Park!8m2!3d1.290875!4d103.78079!3m4!1s0x31da1a536b93fffb:0xea3041dd973bf902!8m2!3d1.2909419!4d103.7822132" target="_blank" rel="noopener">地址</a>：23 Prince George’s Park, Singapore 118422</li><li>点评：四川厨师，在蜀香吃过一次干煸肥肠，有点干煸过头。2019-03-27 吃了一次水煮肉片，味道很棒。有空调那家卖面条的姐姐是四川大邑的(好像又换人了)，没有空调卖面条的那个锅锅是四川泸州的。没有空调最里面那家我也吃过川菜，味道还行吧。</li><li>上图:  <img src="/img/food/pgp.jpg" alt="pgp"> <img src="/img/food/pgp1.jpg" alt="pgp1">  <img src="/img/food/pgp2.jpg" alt="pgp2">  <img src="/img/food/pgp3.jpg" alt="pgp3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144957.jpg" alt></li></ul><h2 id="NUS-Utown-川菜"><a href="#NUS-Utown-川菜" class="headerlink" title="NUS Utown 川菜"></a>NUS Utown 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.3046434,103.772702,21z/data=!4m8!1m2!2m1!1snus+utown!3m4!1s0x31da1af5cc70dc97:0x7b392d9d676befeb!8m2!3d1.3047189!4d103.7727249" target="_blank" rel="noopener">地址</a>：2 College Ave West, Level 2 Stephen Riady Centre, Singapore 138607</li><li>点评：东北厨师，配菜是德阳小姐姐。分量是真的足，但味道就很一般了，学校食堂比较便宜。小炒肉、夫妻肺片还不错吧，<del>水煮鱼 鱼香茄子 宫保鸡丁</del>打扰了。</li><li>上图:  <img src="/img/food/nus.jpg" alt="nus">  <img src="/img/food/nus1.jpg" alt="nus1">   </li></ul><h2 id="蜀香添一点"><a href="#蜀香添一点" class="headerlink" title="蜀香添一点"></a>蜀香添一点</h2><ul><li><a href="https://www.google.com/maps/place/%E8%9C%80%E9%A6%99/@1.3022539,103.7639279,21z/data=!4m5!3m4!1s0x31da1af1dc3529bb:0xe41c8a6372b436d4!8m2!3d1.3022576!4d103.764117" target="_blank" rel="noopener">地址</a>：721 Clementi West Street 2, Singapore 120721</li><li>点评：以前读书的时候住在附近，经常和学长去这家吃饭。价格还行，有的菜味道还可以。口水鸡，夫妻肺片凉菜不错。小炒肉，鱼香肉丝也行。<del>大盘鸡 辣子鸡 水煮肉片</del> 再见！</li><li>上图:  <img src="/img/food/shuxiang.jpg" alt="shuxiang">  <img src="/img/food/shuxiang1.jpg" alt="shuxiang1">   </li></ul><h2 id="天府川菜"><a href="#天府川菜" class="headerlink" title="天府川菜"></a>天府川菜</h2><ul><li><a href="https://www.google.com/maps/place/Tianfu+Szechuan+Cuisine+%E5%A4%A9%E5%BA%9C%E5%B7%9D%E8%8F%9C/@1.314338,103.7628628,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1a8e40c040fb:0x9f8f60278dda8354!8m2!3d1.314338!4d103.7650515" target="_blank" rel="noopener">地址</a>：3151 Commonwealth Ave W, #01-17/18, Singapore 129581</li><li>点评：去吃过一次，我觉得酸菜鱼很一般，那个<del>炒莲白</del>更是不行啊。感觉辣椒没有几个，味道非常辣，像是放了辣椒素的感觉。</li><li>上图:  <img src="/img/food/tianfu1.jpg" alt="tianfu1">  <img src="/img/food/tianfu2.jpg" alt="tianfu2"> </li></ul><h2 id="四川豆花饭庄"><a href="#四川豆花饭庄" class="headerlink" title="四川豆花饭庄"></a>四川豆花饭庄</h2><ul><li><a href="https://www.google.com/maps/place/Si+Chuan+Dou+Hua+Restaurant/@1.2996314,103.8600612,18.37z/data=!4m5!3m4!1s0x31da19b19801b335:0x5acf3141ce4c893a!8m2!3d1.2999542!4d103.860291" target="_blank" rel="noopener">地址</a>：7500 Beach Rd, Singapore 199591</li><li>点评：某次志愿者活动结束后去吃过一次。饭店的环境不错，豆花可以但分量超级小，其余的菜就很一般啦，我一点印象都没得咯。</li><li>上图:  <img src="/img/food/douhua.jpg" alt="douhua"> </li></ul><h2 id="老四川"><a href="#老四川" class="headerlink" title="老四川"></a>老四川</h2><ul><li><a href="https://www.youtube.com/watch?v=7Wui4qfJdXo" target="_blank" rel="noopener">看网红博主的测评视频</a></li></ul><h2 id="思味冒菜"><a href="#思味冒菜" class="headerlink" title="思味冒菜"></a>思味冒菜</h2><ul><li><a href="https://www.google.com/maps/place/Si+Wei+Mao+Cai/@1.2835709,103.8452381,20.84z/data=!4m5!3m4!1s0x31da190cb17025ed:0xc245fc39a322492d!8m2!3d1.2836133!4d103.8452759" target="_blank" rel="noopener">地址</a>: 33 Mosque St, Singapore 059511</li><li>点评： 我真的佛了，就成都gai上随便吃个冒菜，都比他家的好吃。真的太淡了，除了油，不辣不香，吃了想打人。泡椒牛蛙反而还不错的。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114732.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114734.jpg" alt></li></ul><h2 id="A-ONE"><a href="#A-ONE" class="headerlink" title="A ONE"></a>A ONE</h2><ul><li><a href="https://www.google.com/maps/place/A-ONE+Claypot+House/@1.3506575,103.8698616,17z/data=!3m2!4b1!5s0x31da17a6c9cbff89:0xd57ea669903a76d8!4m5!3m4!1s0x31da17a6c6a5ad07:0xd1f33bcbb66ddf5f!8m2!3d1.3506521!4d103.8720503" target="_blank" rel="noopener">地址</a>：23 Serangoon Central, #B1-73/74, Singapore 556083 serangoon 地铁站旁</li><li>点评：其实是一家本地的店，居然也有麻辣系列。但分量较小，味道还行。水煮鱼的鱼肉不行，肉质差。水煮肉片的淀粉少了，不够嫩。人均 30 新吧</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162540.jpeg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155332.jpg" alt></li></ul><h2 id="Birds-of-a-Feather"><a href="#Birds-of-a-Feather" class="headerlink" title="Birds of a Feather"></a>Birds of a Feather</h2><ul><li><a href="https://www.google.com/maps/place/Birds+of+a+Feather/@1.282141,103.8455223,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190c54bb3971:0x9eefa2ec6018112a!8m2!3d1.282141!4d103.847711" target="_blank" rel="noopener">地址</a>: 115 Amoy St, #01-01, Singapore 069935</li><li>点评：一家精致的川菜，分量超级小，有点西式料理的味道。人少的话可以来试一试。就在 <a href="#厦门街-成都">厦门街 成都</a> 那一条街上。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141702.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141658.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141707.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141710.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141713.jpg" alt></li></ul><h2 id="小渔村柴火鸡"><a href="#小渔村柴火鸡" class="headerlink" title="小渔村柴火鸡"></a>小渔村柴火鸡</h2><ul><li><a href="https://www.google.com/maps/place/Xiao+Yu+Cun+Seafood+Restaurant+%E5%B0%8F%E6%B8%94%E6%9D%91%E6%9F%B4%E7%81%AB%E9%B8%A1/@1.3404171,103.8825676,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1796ad421f09:0xa8336dc955c257bb!8m2!3d1.3404171!4d103.8847563" target="_blank" rel="noopener">地址</a>: 201 Upper Paya Lebar Rd, Singapore 534876</li><li>点评：柴火鸡的味道非常不错，还可以往锅里面加菜，越到后面味道越浓。老板还是一位马拉松爱好者，店里面全是马拉松的奖牌。人均 20+ 新币，地理位置稍微偏了一点点，其他的挺不错的。 <a href="https://www.shicheng.news/show/658725" target="_blank" rel="noopener">软文</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200112223455.jpg" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200112223458.jpg" alt></li></ul><h1 id="火锅"><a href="#火锅" class="headerlink" title="火锅"></a>火锅</h1><h2 id="小龙坎"><a href="#小龙坎" class="headerlink" title="小龙坎"></a>小龙坎</h2><ul><li>地址：牛车水或者武吉士</li><li>点评： 每年愚人节的那个周末，全球的小龙坎全场半价，抓住机会。平时人均 60 新，味道不错。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162948.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162952.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162955.jpg" alt><h2 id="大龙燚"><a href="#大龙燚" class="headerlink" title="大龙燚"></a>大龙燚</h2></li><li>地址：乌节路，somerset 楼上 181 Orchard Rd, #08-08, Singapore 238896</li><li>点评：也是又贵又好吃的那种火锅。贫穷限制了我吃火锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163645.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163648.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163652.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163655.jpg" alt><h2 id="同心如意火锅"><a href="#同心如意火锅" class="headerlink" title="同心如意火锅"></a>同心如意火锅</h2></li><li><a href="https://www.google.com/maps/place/%E5%90%8C%E5%BF%83%E5%A6%82%E6%84%8F%E4%BC%A0%E7%BB%9F%E9%93%9C%E7%81%AB%E9%94%85/@1.2869932,103.8465049,17z/data=!4m8!1m2!2m1!1z5ZCM5b-D5aaC5oSP54Gr6ZSF!3m4!1s0x31da190a4cc3d849:0x5c55c99089e27a1e!8m2!3d1.2869783!4d103.8486978" target="_blank" rel="noopener">地址</a>：克拉码头 6 Lor Telok, Singapore 049019</li><li>点评：强烈安利了，真的好吃又不贵，环境还优雅，免费的西瓜深受吃瓜群众的喜爱。人均 30-40 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164043.jpeg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155506.jpeg" alt></li></ul><h2 id="海底捞"><a href="#海底捞" class="headerlink" title="海底捞"></a>海底捞</h2><ul><li><a href="https://www.haidilao.com/sg/fwzx/mdss/index.html" target="_blank" rel="noopener">地址</a>: 全岛分店太多了，我去的是 vivo city 那家</li><li>点评：服务好，价格贵。食材新鲜，就是有时候排队很长。人均 60+，一不小心吃上到了人均 80 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190926171753.jpeg" alt><h2 id="重庆小木凳火锅"><a href="#重庆小木凳火锅" class="headerlink" title="重庆小木凳火锅"></a>重庆小木凳火锅</h2></li><li><a href="https://www.google.com/maps/place/XIAO+MU+DENG+HOT+POT+%E9%87%8D%E6%85%B6%E5%B0%8F%E6%9C%A8%E5%87%B3%E6%87%B7%E8%88%8A%E7%81%AB%E9%8D%8B/@1.2822806,103.8399297,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1992938246bb:0x7d60e3de7635057b!8m2!3d1.2822752!4d103.8421184" target="_blank" rel="noopener">地址</a>： 牛车水 279 New Bridge Rd, Singapore 088752</li><li>点评： 小组聚餐吃过一次，人均 30-35 新，味道还是非常的不错，环境也还是可以的。</li><li>上图： 居然无图，忘了拍照。。。。<h2 id="食间火锅"><a href="#食间火锅" class="headerlink" title="食间火锅"></a>食间火锅</h2></li><li>地址：jurong east 和 Suntec City</li><li>点评：老板小武哥哥是 MIT 毕业的重庆大佬，食材新鲜，味道不错。Suntec City 还有自助火锅，人均在 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164825.jpeg" alt>  <h2 id="优品火锅"><a href="#优品火锅" class="headerlink" title="优品火锅"></a>优品火锅</h2></li><li><a href="https://www.google.com/maps/place/Upin+Hot+Pot+West+Coast+Plaza/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x315bc1bb345ca3af!8m2!3d1.303843!4d103.7662919" target="_blank" rel="noopener">地址</a>： 全岛有几家，我吃的是 west coast plaza 那一家 154 West Coast Rd, #01-02, Singapore 127371</li><li>点评： 出乎意料的火锅，以为是一家不知名的小店，结果味道很不错。人均 40+ 新</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709165414.jpeg" alt><h2 id="食立方火锅"><a href="#食立方火锅" class="headerlink" title="食立方火锅"></a>食立方火锅</h2></li><li><a href="https://www.google.com/maps/place/Shi+Li+Fang/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x3cfc2dfce4934166!8m2!3d1.3036439!4d103.7658919" target="_blank" rel="noopener">地址</a>：全岛连锁,我吃的是 west coast plaza 那一家 154 West Coast Road 127371, 02-24 West Coast Rd, Singapore 127447</li><li>点评：吃火锅送公仔娃娃是这家店最大的特色。味道不辣，适合口味淡的朋友们。人均 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170029.jpg" alt><h2 id="潮汕牛肉火锅"><a href="#潮汕牛肉火锅" class="headerlink" title="潮汕牛肉火锅"></a>潮汕牛肉火锅</h2></li><li><a href="https://www.google.com/maps/place/Chaoniu+Hot+Pot/@1.3070113,103.9059824,19.48z/data=!4m5!3m4!1s0x31da199265a5105d:0x53660da2d7d633fe!8m2!3d1.3071205!4d103.9065289" target="_blank" rel="noopener">地址</a>: 195 E Coast Rd, Singapore 428900</li><li>点评：地理位置有点偏，但味道还不错，一共吃了三次。他家的牛肉粉真是一绝，但我们在吃第三次的时候，有的牛肉居然是冷冻拿出来的，反应给老板。老板态度良好，道歉还打了8折。希望他们越办越好吧。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114717.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114723.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113642.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114726.jpg" alt><h2 id="满族火锅"><a href="#满族火锅" class="headerlink" title="满族火锅"></a>满族火锅</h2></li><li><a href="https://www.google.com/maps/place/Man+Zhu+Steamboat+Restaurant/@1.3209719,103.7588833,13z/data=!4m8!1m2!2m1!1z5ruh5peP54Gr6ZSF!3m4!1s0x0:0xebd740cbf2973c8e!8m2!3d1.3440604!4d103.7312257" target="_blank" rel="noopener">地址</a>: 350 Jurong East Ave 1, #01-1231 Singapore Singapore Region, Singapore 600350</li><li>点评：裕华园地铁出来，食阁附近的一家小店。那一排的店家都是这个风格，可能是地理位置偏远，价格非常便宜，味道还行。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113012.jpeg" alt><h2 id="锦门大院火锅"><a href="#锦门大院火锅" class="headerlink" title="锦门大院火锅"></a>锦门大院火锅</h2></li><li><a href="https://www.google.com/maps/place/Jin+Men+Da+Yuan+Steamboat+%E9%94%A6%E9%97%A8%E5%A4%A7%E9%99%A2%E7%81%AB%E9%94%85/@1.2836704,103.8425432,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1953fe55c0f7:0xeb7df7b0ac8abcb0!8m2!3d1.283665!4d103.8447319" target="_blank" rel="noopener">地址</a>: 22 Mosque St, Singapore 059502</li><li>点评：一家新开的自助火锅店，装修还行。但这个铁锅，不敢恭维。味道还不错，也算便宜，地理位置也方便，安利一下。 新加坡眼的<a href="https://mp.weixin.qq.com/s/JSjfQUBtyXhW9Bgg_9n3tw" target="_blank" rel="noopener">软文</a>, 我觉得夸张了，哈哈</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190718171733.jpeg" alt></li></ul><h1 id="串串"><a href="#串串" class="headerlink" title="串串"></a>串串</h1><h2 id="嘿串串"><a href="#嘿串串" class="headerlink" title="嘿串串"></a>嘿串串</h2><ul><li><a href="https://www.google.com/maps/place/%E5%98%BF%E4%B8%B2%E4%B8%B2+Hi!+Chuan+Chuan+Steamboat/@1.2815342,103.8428024,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190d2d763cf9:0xbc3e02b9133f566e!8m2!3d1.2815288!4d103.8449911" target="_blank" rel="noopener">地址</a>： 291 South Bridge Rd, Singapore 058836</li><li>点评： 可以做游戏打折，比如立定跳远。还有自助串串，我觉得一般般。感觉好像味道下降了？</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170649.jpg" alt><h2 id="重庆李记串串"><a href="#重庆李记串串" class="headerlink" title="重庆李记串串"></a>重庆李记串串</h2></li><li><a href="https://www.google.com/maps/place/Li+Ji+Chuan+Chuan+Xiang/@1.2814591,103.8442259,19.55z/data=!4m5!3m4!1s0x31da190d33000029:0xd2d2d3005dc64da!8m2!3d1.2813333!4d103.8449943" target="_blank" rel="noopener">地址</a>： 295 South Bridge Rd, Singapore 058838 South Bridge Rd, Singapore 058838，巧了就在嘿串串旁边</li><li>点评： 一年前吃过一次，味道还不错，感觉性价比 比嘿串串高，但店面环境没有嘿串串好。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170652.jpg" alt></li></ul><h1 id="香锅"><a href="#香锅" class="headerlink" title="香锅"></a>香锅</h1><h2 id="Timbre大海麻辣香锅"><a href="#Timbre大海麻辣香锅" class="headerlink" title="Timbre大海麻辣香锅"></a>Timbre大海麻辣香锅</h2><ul><li><a href="https://www.google.com/maps/place/Timbre%2B/@1.2974743,103.7872491,21z/data=!4m12!1m6!3m5!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!2sMellben+Signature!8m2!3d1.2770306!4d103.842881!3m4!1s0x31da1a4fdcdcb793:0x212cfcf8b61862cd!8m2!3d1.2974124!4d103.7875038" target="_blank" rel="noopener">地址</a>：73A Ayer Rajah Crescent, JTC Launchpad, Singapore 139957 one north 地铁站出来 Timbre+  食阁里</li><li>点评：非常温和的一家香锅，记得喊老板多放油。毛肚不错哦，还可以送外卖的。人均 8-15 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171446.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190814174051.jpeg" alt><h2 id="OneNorth口福麻辣香锅"><a href="#OneNorth口福麻辣香锅" class="headerlink" title="OneNorth口福麻辣香锅"></a>OneNorth口福麻辣香锅</h2></li><li><a href="https://www.google.com/maps/place/Koufu+Food+Court/@1.2989013,103.787071,19z/data=!3m1!4b1!4m5!3m4!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!8m2!3d1.2989!4d103.7876182" target="_blank" rel="noopener">地址</a>：1 Fusionopolis Way, Singapore 138577 One North 口福</li><li>点评：他们家放的芝麻可是真的比较多，真香！</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171833.jpeg" alt><h2 id="Galaxis二楼麻辣香锅"><a href="#Galaxis二楼麻辣香锅" class="headerlink" title="Galaxis二楼麻辣香锅"></a>Galaxis二楼麻辣香锅</h2></li><li><a href="https://www.google.com/maps/place/Foodmaster/@1.2995888,103.7880186,21z/data=!3m1!5s0x31da1a454101b3dd:0xe60bb1bc39017b65!4m12!1m6!3m5!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!2sKoufu+Food+Court!8m2!3d1.2989!4d103.7876182!3m4!1s0x0:0xfc2120aaf6811cb1!8m2!3d1.2994549!4d103.7882856" target="_blank" rel="noopener">地址</a>： 1 Fusionopolis Pl, Singapore 138522 Galaxis 二楼食阁 </li><li>点评： 有一个绵阳的哥哥在这里，是我看到过的第一家荤素菜不分开计算重量的麻辣香锅。所以也就是最便宜的麻辣香锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171452.jpg" alt><h2 id="宽宽干锅"><a href="#宽宽干锅" class="headerlink" title="宽宽干锅"></a>宽宽干锅</h2></li><li><a href="https://www.google.com/maps/place/%E5%AE%BD%E5%AE%BD%E5%B9%B2%E9%94%85/@1.2837616,103.842831,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19388e8da14f:0x3cfa02d42abb448d!8m2!3d1.2837562!4d103.8450197" target="_blank" rel="noopener">地址</a>：38 Mosque St, Singapore 059516</li><li>点评：是伟翔锅锅请我这个小弟吃的，味道不错，和国内的干锅比较相似。鸭掌还不够糯，比起成都的销魂掌还是有点差距的。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144004.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144008.jpg" alt></li></ul><h1 id="美蛙烤鱼"><a href="#美蛙烤鱼" class="headerlink" title="美蛙烤鱼"></a>美蛙烤鱼</h1><h2 id="探鱼"><a href="#探鱼" class="headerlink" title="探鱼"></a>探鱼</h2><ul><li><a href="https://www.google.com/maps/place/TAN+YU/@1.3008112,103.8361644,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1991290f596b:0x74129219b25d6b6c!8m2!3d1.3008112!4d103.8383531" target="_blank" rel="noopener">地址</a>：313 Orchard Rd, Singapore 238895</li><li>点评：新加坡吃过最好吃的烤鱼，肉质不是油炸的那种烤鱼。推荐鲜青椒烤鱼，重庆豆花烤鱼。人均 30-40 新</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161227.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161215.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161231.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161234.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161218.jpg" alt><h2 id="蛙功夫"><a href="#蛙功夫" class="headerlink" title="蛙功夫"></a>蛙功夫</h2></li><li><a href="https://www.google.com/maps/place/Wah+Kungfu+%E8%9B%99%E5%8A%9F%E5%A4%AB/@1.2983175,103.8535244,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19d2da538a59:0x5bea180644018458!8m2!3d1.2983121!4d103.8557131" target="_blank" rel="noopener">地址</a>: 牛车水店 470 North Bridge Rd, Singapore 188735</li><li>点评：微信提前预定打九折。新加坡第一蛙了，怪椒味和姜辣味真的好辣啊，四川人都遭不住了。 人均 30-40 新，最新发现蛙功夫在 <a href="https://eatigo.com/sg/singapore/en?vrt=n&amp;utm_expid=.b1OLVdG4Q824z64aUUlGBQ.2&amp;utm_referrer=" target="_blank" rel="noopener">eatigo</a> 上有打折，最低有半价哦。注册时可填写我的邀请码【 <strong>eati1avcj</strong> 】</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155308.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155347.jpeg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161949.jpg" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161954.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162001.jpg" alt><h2 id="齐来丰酸菜鱼"><a href="#齐来丰酸菜鱼" class="headerlink" title="齐来丰酸菜鱼"></a>齐来丰酸菜鱼</h2></li><li><a href="https://www.google.com/maps/place/ChinaTown+Point/@1.2853438,103.8448685,21z/data=!3m1!5s0x31da190b4c7c2e15:0x7a6a12c763ec149d!4m13!1m7!3m6!1s0x31da190b360d5a13:0x1300f7ac70f7f252!2sSingapore+059413!3b1!8m2!3d1.285202!4d103.8449399!3m4!1s0x31da19b37498c26f:0x47a7fd4ac1de6523!8m2!3d1.2854062!4d103.8450509" target="_blank" rel="noopener">地址</a>: 133 New Bridge Road B1-14/15 Chinatown Point S059413</li><li>点评： <a href="https://mp.weixin.qq.com/s/OGA9k6zP0D1hPTjcIzBsCA" target="_blank" rel="noopener">新加坡眼推荐</a> 味道还不错，价格还可以接受，可以试一试。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114402.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114405.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114408.jpg" alt><h2 id="尝相思-重庆烤鱼"><a href="#尝相思-重庆烤鱼" class="headerlink" title="尝相思 重庆烤鱼"></a>尝相思 重庆烤鱼</h2></li><li><a href="https://www.google.com/maps/place/Singapore+419779/data=!4m2!3m1!1s0x31da1805c6b3a221:0x2fac1d0a92c28b6f?sa=X&amp;ved=2ahUKEwi44fzsm5bkAhVBfH0KHSk_CGsQ8gEwE3oECAoQBA" target="_blank" rel="noopener">地址</a>: Singapore 419779</li><li>点评：地理位置有点偏僻，在 eunos 地铁站出来步行 12 分钟左右。老板是本地人，老板娘是重庆人。他们家的烤鱼是油炸的，算是在新加坡油炸的烤鱼中非常不错的了。而且价格比较的实惠。推荐麻辣味道</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175630.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175636.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175639.jpg" alt><h2 id="午阳烤鱼-NUS-YIH"><a href="#午阳烤鱼-NUS-YIH" class="headerlink" title="午阳烤鱼 NUS YIH"></a>午阳烤鱼 NUS YIH</h2></li><li><a href="https://www.google.com/search?tbm=lcl&amp;ei=3wGeXY2vOov39QOfsajIBQ&amp;q=nus+yih+food&amp;oq=nus+yih+&amp;gs_l=psy-ab.1.1.0l10.7866.7866.0.8973.1.1.0.0.0.0.69.69.1.1.0....0...1c.1.64.psy-ab..0.1.68....0.trHv8wA6ueM#rlfi=hd:;si:13376272886801035322,l,CgxudXMgeWloIGZvb2QiA4gBAVoQCgAiDG51cyB5aWggZm9vZA;mv:[[1.3055455,103.7867909],[1.2901151,103.77164789999999]]" target="_blank" rel="noopener">地址</a>: 31 Lower Kent Ridge Rd, Singapore 119078</li><li>点评： NUS YIH 学校食堂的烤鱼，一份才 12 新币。油炸的鱼，再配以佐料，油汤煮一下即可。味道还不错，油放的超级多（四川人表示很赞），辣度适中，这个价格性价比很高。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191009234939.jpeg" alt><h1 id="螃蟹"><a href="#螃蟹" class="headerlink" title="螃蟹"></a>螃蟹</h1><h2 id="Long-Seafood"><a href="#Long-Seafood" class="headerlink" title="Long Seafood"></a>Long Seafood</h2></li><li><a href="https://www.google.com/maps/place/Long+Seafood/@1.3670972,103.8321013,15.81z/data=!4m5!3m4!1s0x31da16d966bf9c5d:0xb8a5924677080786!8m2!3d1.3682784!4d103.8371577" target="_blank" rel="noopener">地址</a>： Ang Mo Kio Avenue 3, #01-1222,Block 232, Singapore 560232 龙海鲜螃蟹王宏茂桥店</li><li>点评： 在一个食阁的一楼，店面很大。米粉螃蟹不错，人均 70 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172701.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172705.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172709.jpg" alt><h2 id="Mellben-Signature"><a href="#Mellben-Signature" class="headerlink" title="Mellben Signature"></a>Mellben Signature</h2></li><li><a href="https://www.google.com/maps/place/Mellben+Signature/@1.2771411,103.839687,16.48z/data=!4m5!3m4!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!8m2!3d1.2770306!4d103.842881" target="_blank" rel="noopener">地址</a>：7 Tanjong Pagar Plaza, #01-105, Singapore 081007</li><li>点评： 人均 60 新币，感觉螃蟹小一点点，没有宏茂桥那家好吃，米粉螃蟹的话。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173222.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173227.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173230.jpg" alt><h2 id="Por-Kee-Eating-House-1996"><a href="#Por-Kee-Eating-House-1996" class="headerlink" title="Por Kee Eating House 1996"></a>Por Kee Eating House 1996</h2></li><li><a href="https://www.google.com/maps/place/Por+Kee+Eating+House+1996/@1.2842764,103.8297145,17.59z/data=!4m5!3m4!1s0x31da197a03941b03:0x52f6df3241826f4e!8m2!3d1.2842166!4d103.8327882" target="_blank" rel="noopener">地址</a>: 69 Seng Poh Ln, #01-02, Singapore 160069</li><li>点评: 非常 local 的一家本地菜系, 需要提前打电话预定，味道还不错，人均 50 左右</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162015.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162017.jpg" alt><h1 id="烤肉烤串"><a href="#烤肉烤串" class="headerlink" title="烤肉烤串"></a>烤肉烤串</h1><h2 id="Supulae"><a href="#Supulae" class="headerlink" title="Supulae"></a>Supulae</h2></li><li>李加绒同学倾情推荐，还没有来得及去吃。<h2 id="Super-Star-K"><a href="#Super-Star-K" class="headerlink" title="Super Star K"></a>Super Star K</h2></li><li><a href="https://www.google.com/maps/place/Super+Star+K/@1.2779864,103.8416363,17z/data=!3m1!4b1!4m5!3m4!1s0x31da196d3b353d13:0xa2254940717b1324!8m2!3d1.277981!4d103.843825" target="_blank" rel="noopener">地址</a>: 75 Tg Pagar Rd, Singapore 088496</li><li>点评：吃过3次了，那一条街大部分店面都是晚上营业，他家是少有的中午也开门。味道不错，分量也很足。服务员还会帮忙烤肉，态度也很好的。人均 40 新左右，推荐。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120216.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120210.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120206.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120222.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122223.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122227.jpg" alt><h2 id="GO-K-BBQ"><a href="#GO-K-BBQ" class="headerlink" title="GO! K - BBQ"></a>GO! K - BBQ</h2></li><li><a href="https://www.google.com/maps/place/GO!+K+-+BBQ+%28%EA%B3%A0%EC%BC%80%EC%9D%B4+%EB%B9%84%EB%B9%84%ED%81%90%29/@1.2805141,103.8444605,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190d6ec97b63:0x8df5f639962a0c51!8m2!3d1.2805087!4d103.8466492" target="_blank" rel="noopener">地址</a>: 76 Amoy St, Singapore 069895 就在川菜《成都》店旁边，都在厦门街</li><li>点评：晚上才开，人很多，最好提前预定。他家的肉是腌制过后的肉，味道更加的美味。但感觉服务员少了，有点忙不过来。肉的分量稍微小点，价格也就偏贵。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120227.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120232.jpg" alt><h2 id="烧肉王子"><a href="#烧肉王子" class="headerlink" title="烧肉王子"></a>烧肉王子</h2></li><li><a href="https://www.google.com/maps/place/YAKINIKU+OHJI/@1.3115275,103.7647342,19.12z/data=!4m8!1m2!2m1!1z54On6IKJ546L5a2Q!3m4!1s0x0:0xfe0d932f72c53d41!8m2!3d1.3119171!4d103.7651466" target="_blank" rel="noopener">地址</a>: 321 Clementi Ave 3, #01-01, Singapore 129905</li><li>点评： 日式的自助烤肉，分为三个等级：只有鸡肉，有猪肉牛肉，顶级和牛。我们当时吃的是中间那个档次，人均 32 新币。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120241.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120235.jpg" alt><h2 id="大胡子烧烤"><a href="#大胡子烧烤" class="headerlink" title="大胡子烧烤"></a>大胡子烧烤</h2></li><li><a href="https://www.google.com/maps/place/%E5%A4%A7%E8%83%A1%E5%AD%90%E7%83%A7%E7%83%A4+Moustache+BBQ/@1.3156963,103.8827708,19z/data=!3m1!4b1!4m5!3m4!1s0x31da183b17be1ecf:0x72a7719ac6298795!8m2!3d1.315695!4d103.883318" target="_blank" rel="noopener">地址</a>: 70 Lor 25A Geylang, Singapore 388255</li><li>点评： 就在 Aljunied 地铁站出来，烤串是非常不错。干锅肥肠还需要煎的更焦一点。 店里有点炒闹，吃饭时感觉回到了国内小城市的街边小店。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112206.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112210.jpg" alt><h2 id="香港小厨"><a href="#香港小厨" class="headerlink" title="香港小厨"></a>香港小厨</h2></li><li><a href="https://www.google.com/maps/place/Hong+Kong+Kitchen/@1.2930018,103.7688243,20.15z/data=!4m5!3m4!1s0x31da1afc3d91620f:0x1005559cd93f32a6!8m2!3d1.2930409!4d103.7687545" target="_blank" rel="noopener">地址</a>: 24 Clementi Rd, Singapore 129753</li><li>点评：就在 NUS 后街，烤串还是不错的，烤羊排不行，少的太真实了。烤韭菜，一定要让老板少放点盐啊！</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112215.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112218.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112220.jpg" alt><h2 id="王大爷烧烤"><a href="#王大爷烧烤" class="headerlink" title="王大爷烧烤"></a>王大爷烧烤</h2></li><li><a href="https://www.google.com/maps/place/Grandpa&#39;s+BBQ/@1.2838619,103.8441928,19.72z/data=!4m5!3m4!1s0x31da19735213b637:0x3ab7d78c61a477e5!8m2!3d1.2838905!4d103.8445477" target="_blank" rel="noopener">地址</a>: 16 Mosque St, Singapore 059496</li><li>点评：在牛车水摩士街，有点小贵。店面环境还不错，味道一般般，那个柴火鸡一定不要点，比起成都的差太多了，吃了想打人。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113639.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113636.jpg" alt><h2 id="HANSSIK"><a href="#HANSSIK" class="headerlink" title="HANSSIK"></a>HANSSIK</h2></li><li>地址: 3155 Commonwealth Ave W, #05-17/18, Singapore 129588</li><li>点评： 金文泰商场 5 楼，一家自助烤肉，味道还行吧，人均 33 新。吃到最后有点闷了。。。。</li><li>上图：   <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113732.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113735.jpg" alt></li></ul><h2 id="gyu-kaku"><a href="#gyu-kaku" class="headerlink" title="gyu-kaku"></a>gyu-kaku</h2><ul><li><a href="https://www.google.com/maps?q=gyu-kaku+@the+star+vista&amp;um=1&amp;ie=UTF-8&amp;sa=X&amp;ved=2ahUKEwiTqsPd6ufnAhVDyDgGHTu_AK0Q_AUoAXoECBwQAw" target="_blank" rel="noopener">地址</a>: 1 Vista Exchange Green #02-17, The Star Vista</li><li>点评：一家不错的日式烧肉连锁店，详情看<a href="https://www.gyu-kaku.com.sg/" target="_blank" rel="noopener">官网</a>，有自助烤肉，也有单点的。自助限时 90 分钟，味道还不错。感觉这件店人均都是 60+ ， 比 tanjong pagar 那条街的韩国烤肉还贵。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215643.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215646.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215651.jpg" alt></li></ul><h1 id="鸡饭"><a href="#鸡饭" class="headerlink" title="鸡饭"></a>鸡饭</h1><h2 id="了凡香港油鸡饭"><a href="#了凡香港油鸡饭" class="headerlink" title="了凡香港油鸡饭"></a>了凡香港油鸡饭</h2><ul><li><a href="https://www.google.com/maps/place/%E9%A6%99%E6%B8%AF%E6%B2%B9%E9%B6%8F%E9%A3%AF%E9%BA%BA/@1.2830062,103.8420419,18z/data=!4m12!1m6!3m5!1s0x31da197318313879:0x32fdfa545f34d128!2z6aaZ5riv5rK56bih6aWt6Z2iMi9G!8m2!3d1.2826067!4d103.8432113!3m4!1s0x0:0x9ac9da435638ad56!8m2!3d1.2831614!4d103.8429974" target="_blank" rel="noopener">地址</a>：78 Smith St, Singapore 058972</li><li>点评： 米其林一星的鸡饭，我觉得可以。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170032.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144001.jpg" alt><h2 id="天天海南鸡饭"><a href="#天天海南鸡饭" class="headerlink" title="天天海南鸡饭"></a>天天海南鸡饭</h2>待吃<h2 id="荣亮阁"><a href="#荣亮阁" class="headerlink" title="荣亮阁"></a>荣亮阁</h2></li><li><a href="https://www.google.com/maps/place/Rong+Liang+Restaurant+%E6%A6%AE%E4%BA%AE%E9%96%A3/@1.3037029,103.7631718,19.84z/data=!4m5!3m4!1s0x31da1aedff402c6b:0xd6e2974e3a8ca8f2!8m2!3d1.303813!4d103.7636313" target="_blank" rel="noopener">地址</a>: #01-192, 725 Clementi West Street 2, Block 725, Singapore 120725</li><li>点评：家附近的一家鸡饭店，本地人经常去吃，物美价廉。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150141.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150146.jpg" alt></li></ul><h1 id="面食"><a href="#面食" class="headerlink" title="面食"></a>面食</h1><h2 id="大华猪肉裸条面"><a href="#大华猪肉裸条面" class="headerlink" title="大华猪肉裸条面"></a>大华猪肉裸条面</h2><ul><li><a href="https://www.google.com/maps/place/Hill+Street+Tai+Hwa+Pork+Noodle/@1.305169,103.8603009,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19b42ad981b9:0x99e64da5de0603b8!8m2!3d1.305169!4d103.8624896" target="_blank" rel="noopener">地址</a>: 466 Crawford Ln, #01-12, Singapore 190466</li><li>点评: 就在 ICA 移民局背后的组屋群，一楼的食阁窗口，号称米其林一星。味道还不错，料很足的。但是价格也比一般的店铺贵一点，还是值得一吃。</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140435.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140442.jpg" alt><h2 id="舌尖尖兰州拉面"><a href="#舌尖尖兰州拉面" class="headerlink" title="舌尖尖兰州拉面"></a>舌尖尖兰州拉面</h2></li><li><a href="https://mp.weixin.qq.com/s/SFz9PiGVADIdEChbJeNCmg" target="_blank" rel="noopener">地址</a>：有几家分店 302 Tiong Bahru Road, Tiong Bahru Plaza,#02-107</li><li>点评：在新加坡非常火的一家兰州拉面，味道还是不错的。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg" alt></li></ul><h2 id="jurong-east-食阁"><a href="#jurong-east-食阁" class="headerlink" title="jurong east 食阁"></a>jurong east 食阁</h2><ul><li><a href="https://www.google.com/maps/place/Kopitiam+@+Jurong+East/@1.3327955,103.7425054,20z/data=!4m5!3m4!1s0x31da100f3cf9d46f:0xa65718371b2dd883!8m2!3d1.3327955!4d103.7425051" target="_blank" rel="noopener">地址</a>：10 Jurong East Street 12, Singapore 609690</li><li>点评：在 jurong east 地铁出来，下一层电梯。 1 楼的食阁里，有一家西安的面食，四合一，油泼面都非常不错，价格也实惠，唯一就是没有空调有点热。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142838.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142833.jpg" alt></li></ul><h2 id="O-BBa-Jjajang"><a href="#O-BBa-Jjajang" class="headerlink" title="O.BBa Jjajang"></a>O.BBa Jjajang</h2><ul><li><a href="https://www.google.com/maps/place/O.BBa+Jjajang/@1.277942,103.84381,21z/data=!4m5!3m4!1s0x31da196d24b78dd5:0x6966f7d8ce0bda08!8m2!3d1.2779418!4d103.8438101" target="_blank" rel="noopener">地址</a>: 77 Tg Pagar Rd, Singapore 088498</li><li>点评： 他家的炸酱面不错，大猪蹄子也还可以。每次都需要排队一小会，中午也开门，旁边就是那家 <a href="#Super-Star-K">Super Star K</a> </li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162011.jpg" alt></li></ul><h1 id="甜品"><a href="#甜品" class="headerlink" title="甜品"></a>甜品</h1><h2 id="Gram-Cafe-amp-Pancakes-Singapore"><a href="#Gram-Cafe-amp-Pancakes-Singapore" class="headerlink" title="Gram Café &amp; Pancakes Singapore"></a>Gram Café &amp; Pancakes Singapore</h2><ul><li><a href="https://www.google.com/maps/place/Gram+Caf%C3%A9+%26+Pancakes+Singapore/@1.2980014,103.7598895,13z/data=!4m8!1m2!2m1!1sgram!3m4!1s0x0:0x986c1a8d200bf1bb!8m2!3d1.2635613!4d103.8227105" target="_blank" rel="noopener">地址</a>： 1 Harbourfront Walk, #02-110 VivoCity, Singapore 098585</li><li>点评： 我本人不喜欢吃甜品，妹子喜欢吃，还不错。三个甜品 58 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101631.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101636.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101640.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101643.jpg" alt></li></ul><h1 id="其他美食"><a href="#其他美食" class="headerlink" title="其他美食"></a>其他美食</h1><h2 id="莆田"><a href="#莆田" class="headerlink" title="莆田"></a>莆田</h2><ul><li><a href="https://www.putien.com/outlet/vivocity/" target="_blank" rel="noopener">地址</a>: 1 HarbourFront Walk #02-131/132</li><li>点评： 一家非常不错的福建菜。空调有点冷，九转粉肠非常的好吃，虾苗拌紫菜也好吃，蛏子也很大只的。百秒黄花鱼也是很嫩。扁肉汤的馄饨好吃，汤一般般。蔬菜豆腐汤不错，很好喝推荐。脆皮蒜香鸡不行，不推荐。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233354.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233358.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233401.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233405.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233408.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190904114704.jpeg" alt></li></ul><h2 id="汕头海鲜"><a href="#汕头海鲜" class="headerlink" title="汕头海鲜"></a>汕头海鲜</h2><ul><li><a href="https://swatow.com.sg/home.php" target="_blank" rel="noopener">地址</a>: Blk 181 Lorong 4 Toa Payoh #02-602 有两家店</li><li>点评：我们当时是去吃的自助下午茶，会有阿姨推车过，然后选择需要的茶点。环境还不错，菜品也丰富。可以早点去 2:30 到店里。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142958.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143005.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143009.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143012.jpg" alt><h2 id="Sushi-Tei"><a href="#Sushi-Tei" class="headerlink" title="Sushi Tei"></a>Sushi Tei</h2></li><li><a href="https://www.sushitei.com/outlets/outlets.aspx" target="_blank" rel="noopener">地址</a>: 新加坡全岛有 13 家分店，我是在家附近 Raffles Holland V 吃的</li><li>点评：猪肉饭非常的不错，鳗鱼寿司也可以。金针菇牛肉卷感觉一般，刺身拼盘也可以。<a href="https://www.sushitei.com/menu/menu.aspx" target="_blank" rel="noopener">官网菜单</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144810.jpg" alt>  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144813.jpg" alt><h2 id="蟹老宋"><a href="#蟹老宋" class="headerlink" title="蟹老宋"></a>蟹老宋</h2></li><li><a href="https://www.google.com.sg/maps/place/Crab+Song+Seafood+Restaurant/@1.2820955,103.8423314,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19732a617c17:0x7a7c31f97d06d8d0!8m2!3d1.2820901!4d103.8445201" target="_blank" rel="noopener">地址</a>: 16 Smith St, Singapore 058930</li><li>点评：本来去是想吃大闸蟹的，结果只剩大个头的蟹蟹，48 新币一只，打扰了。然后就吃了他家的其他一些菜，小龙虾和烤鸭都还不错的，酸辣鸡杂也不错。</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112534.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112539.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112543.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112547.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112551.jpg" alt> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112554.jpg" alt></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;民以食为天&lt;br&gt;作为一个在新加坡搬砖的四川吃货，唯有美食不可辜负。坡县虽小，但各式各样的菜系都可以吃到。由于在四川长大，比较喜欢川菜火锅串串香锅烤鱼等。偶尔也跟着朋友们尝试一下其他的菜系。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="美食" scheme="http://feiyang233.club/tags/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 指南</title>
    <link href="http://feiyang233.club/post/prometheus/"/>
    <id>http://feiyang233.club/post/prometheus/</id>
    <published>2019-10-03T07:08:40.000Z</published>
    <updated>2019-10-04T10:55:26.551Z</updated>
    
    <content type="html"><![CDATA[<p>Prometheus 作为业务级监控告警工具，再配合上可视化工具 Grafana，运维人员能方便的监控所需的指标。本文记录了小白入门学习的过程<br><a id="more"></a>  </p><h1 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h1><ol><li><a href="https://ryanyang.gitbook.io/prometheus/" target="_blank" rel="noopener">Prometheus 中文文档</a> </li><li><a href="https://prometheus.io/docs/introduction/overview/" target="_blank" rel="noopener">官方文档地址</a></li></ol><h1 id="入门体验区"><a href="#入门体验区" class="headerlink" title="入门体验区"></a>入门体验区</h1><h2 id="快速安装"><a href="#快速安装" class="headerlink" title="快速安装"></a>快速安装</h2><p>快速安装应用首选 docker 方式，不需要配置复杂的环境。当我们已经非常熟悉如何使用 prometheus 的时候，再返回来使用普通安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只监听在本地</span></span><br><span class="line">docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将配置文件挂载到容器中，方便修改</span></span><br><span class="line">docker run -p 9090:9090 -v /tmp/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用额外的数据卷挂载配置文件：</span></span><br><span class="line">docker run -p 9090:9090 -v /prometheus-data prom/prometheus --config.file=/prometheus-data/prometheus.yml</span><br></pre></td></tr></table></figure><p>安装完成后，即可访问 <a href="http://localhost:9090" target="_blank" rel="noopener">http://localhost:9090</a> 可以在 Graph 查询监控项，在 Status 查看监控了哪些机器，配置文件等。</p><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>[配置介绍官方文档]<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/" target="_blank" rel="noopener">https://prometheus.io/docs/prometheus/latest/configuration/configuration/</a>)<br>我是在 Mac 电脑上 docker 安装 prometheus。由于我没有把配置文件挂载出来，只能进入容器去修改。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -u root -it 51ae3954e880 sh</span><br><span class="line"></span><br><span class="line">vi /etc/prometheus/prometheus.yml</span><br></pre></td></tr></table></figure></p><p>配置文件如下所示<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line"><span class="attr">  scrape_interval:</span>     <span class="number">15</span><span class="string">s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line"><span class="attr">  evaluation_interval:</span> <span class="number">15</span><span class="string">s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line"><span class="attr">  alertmanagers:</span></span><br><span class="line"><span class="attr">  - static_configs:</span></span><br><span class="line"><span class="attr">    - targets:</span></span><br><span class="line">      <span class="comment"># - alertmanager:9093</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - "first_rules.yml"</span></span><br><span class="line">  <span class="comment"># - "second_rules.yml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it's Prometheus itself.</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to '/metrics'</span></span><br><span class="line">    <span class="comment"># scheme defaults to 'http'.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">    - targets:</span> <span class="string">['localhost:9090']</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'feiy'</span></span><br><span class="line"><span class="attr">    scrape_interval:</span> <span class="number">5</span><span class="string">s</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['host.docker.internal:8000']</span></span><br><span class="line"><span class="attr">        labels:</span></span><br><span class="line"><span class="attr">          group:</span> <span class="string">'production'</span></span><br></pre></td></tr></table></figure></p><p>完整的配置例子，请点击<a href="https://github.com/prometheus/prometheus/blob/master/config/testdata/conf.good.yml" target="_blank" rel="noopener">这里</a></p><h2 id="检查结果"><a href="#检查结果" class="headerlink" title="检查结果"></a>检查结果</h2><p>打开 <a href="http://localhost:9090/targets" target="_blank" rel="noopener">http://localhost:9090/targets</a> 我们可以看到如下的结果  </p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191003155435.png" alt></p><p>图中两个 target，第一个 feiy 是我自己写的一个 django 小程序，暴露出来了我关心的指标，用了<a href="https://github.com/prometheus/client_python" target="_blank" rel="noopener">Prometheus Python Client</a>。第二个则是 Prometheus 服务器自带的监控数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># feiy 暴露出来的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HELP python_gc_objects_collected_total Objects collected during gc</span></span><br><span class="line"><span class="comment"># TYPE python_gc_objects_collected_total counter</span></span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">"0"</span>&#125; 17999.0</span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">"1"</span>&#125; 2384.0</span><br><span class="line">python_gc_objects_collected_total&#123;generation=<span class="string">"2"</span>&#125; 833.0</span><br><span class="line"><span class="comment"># HELP python_gc_objects_uncollectable_total Uncollectable object found during GC</span></span><br><span class="line"><span class="comment"># TYPE python_gc_objects_uncollectable_total counter</span></span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">"0"</span>&#125; 0.0</span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">"1"</span>&#125; 0.0</span><br><span class="line">python_gc_objects_uncollectable_total&#123;generation=<span class="string">"2"</span>&#125; 0.0</span><br><span class="line"><span class="comment"># HELP python_gc_collections_total Number of times this generation was collected</span></span><br><span class="line"><span class="comment"># TYPE python_gc_collections_total counter</span></span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">"0"</span>&#125; 255.0</span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">"1"</span>&#125; 23.0</span><br><span class="line">python_gc_collections_total&#123;generation=<span class="string">"2"</span>&#125; 2.0</span><br><span class="line"><span class="comment"># HELP python_info Python platform information</span></span><br><span class="line"><span class="comment"># TYPE python_info gauge</span></span><br><span class="line">python_info&#123;implementation=<span class="string">"CPython"</span>,major=<span class="string">"3"</span>,minor=<span class="string">"7"</span>,patchlevel=<span class="string">"1"</span>,version=<span class="string">"3.7.1"</span>&#125; 1.0</span><br><span class="line"><span class="comment"># HELP request_processing_seconds Time spent processing request</span></span><br><span class="line"><span class="comment"># TYPE request_processing_seconds summary</span></span><br><span class="line">request_processing_seconds_count&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 3.0</span><br><span class="line">request_processing_seconds_sum&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 0.0</span><br><span class="line"><span class="comment"># TYPE request_processing_seconds_created gauge</span></span><br><span class="line">request_processing_seconds_created&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 1.570089497964517e+09</span><br><span class="line"><span class="comment"># HELP request_byte_sum_total Total request byte sum</span></span><br><span class="line"><span class="comment"># TYPE request_byte_sum_total counter</span></span><br><span class="line">request_byte_sum_total&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 0.0</span><br><span class="line"><span class="comment"># TYPE request_byte_sum_created gauge</span></span><br><span class="line">request_byte_sum_created&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 1.570089497964633e+09</span><br><span class="line"><span class="comment"># HELP response_byte_sum_total Total response byte sum</span></span><br><span class="line"><span class="comment"># TYPE response_byte_sum_total counter</span></span><br><span class="line">response_byte_sum_total&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 5533.0</span><br><span class="line"><span class="comment"># TYPE response_byte_sum_created gauge</span></span><br><span class="line">response_byte_sum_created&#123;endpoint=<span class="string">"/metrics/"</span>,method=<span class="string">"GET"</span>,status_code=<span class="string">"200"</span>&#125; 1.5700894979645782e+09</span><br></pre></td></tr></table></figure><p>我们可以在 Graph 查询结果，比如查询 python_info{implementation=”CPython”,major=”3”,minor=”7”,patchlevel=”1”,version=”3.7.1”} 1.0<br>得到了如下的结果</p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191003160311.png" alt></p><h1 id="进阶区"><a href="#进阶区" class="headerlink" title="进阶区"></a>进阶区</h1><h2 id="暴露数据-node-exporter"><a href="#暴露数据-node-exporter" class="headerlink" title="暴露数据 node exporter"></a>暴露数据 node exporter</h2><ol><li><a href="https://prometheus.io/docs/guides/node-exporter/" target="_blank" rel="noopener">监控 Linux 机器</a></li><li><a href="https://prometheus.io/docs/guides/cadvisor/" target="_blank" rel="noopener">监控容器</a></li></ol><h2 id="metric"><a href="#metric" class="headerlink" title="metric"></a>metric</h2><ol><li><a href="https://prometheus.io/docs/concepts/metric_types/" target="_blank" rel="noopener">官方文档</a></li><li><a href="https://mp.weixin.qq.com/s/1EuTeQKeCX7-B2Ihj85dCA" target="_blank" rel="noopener">详细解读 Prometheus 的指标类型</a></li><li><a href="https://mp.weixin.qq.com/s/WJM-DTUrdl8KFpLD5kabZg" target="_blank" rel="noopener">一文搞懂 Prometheus 的直方图</a></li></ol><h2 id="rules"><a href="#rules" class="headerlink" title="rules"></a>rules</h2><ol><li><a href="https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/" target="_blank" rel="noopener">官方文档</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果有错的话，则那一条规则不会更新。</span></span><br><span class="line">go get github.com/prometheus/prometheus/cmd/promtool</span><br><span class="line">promtool check rules /path/to/example.rules.yml</span><br></pre></td></tr></table></figure></li></ol><h1 id="采坑区"><a href="#采坑区" class="headerlink" title="采坑区"></a>采坑区</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Prometheus 作为业务级监控告警工具，再配合上可视化工具 Grafana，运维人员能方便的监控所需的指标。本文记录了小白入门学习的过程&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="prometheus" scheme="http://feiyang233.club/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Mac 小技巧</title>
    <link href="http://feiyang233.club/post/mac/"/>
    <id>http://feiyang233.club/post/mac/</id>
    <published>2019-09-11T02:51:35.000Z</published>
    <updated>2019-09-11T07:27:34.059Z</updated>
    
    <content type="html"><![CDATA[<p>苹果电脑小技巧。<br><a id="more"></a></p><h1 id="命令行技巧"><a href="#命令行技巧" class="headerlink" title="命令行技巧"></a>命令行技巧</h1><ul><li>移动到行首 <strong>ctrl+A</strong></li><li>移动当行尾 <strong>ctrl+E</strong></li><li>往左移一个单词 <strong>esc+B</strong></li><li>往右移一个单词 <strong>esc+F</strong></li><li>删除光标前一个单词 <strong>ctrl+W</strong></li><li>删除光标前所有 <strong>ctrl+U</strong></li></ul><h1 id="上传rz-下载sz"><a href="#上传rz-下载sz" class="headerlink" title="上传rz 下载sz"></a>上传rz 下载sz</h1><ul><li>首先下载 <a href="https://www.iterm2.com/" target="_blank" rel="noopener">iTerm2</a> 因为自带的 terminal 不行啊</li><li>安装 lrzsz <strong>brew install lrzsz</strong></li><li>下载两个脚本 send-zmodem.sh  recv-zmodem.sh<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin </span><br><span class="line">sudo wget https://gist.githubusercontent.com/sy-records/1b3010b566af42f57fa6fa38138dd22a/raw/2bfe590665d3b0e6c8223623922474361058920c/iterm2-send-zmodem.sh </span><br><span class="line">sudo wget https://gist.githubusercontent.com/sy-records/40f4ba22e3fbdeedf58463b067798962/raw/b32d2f7ac3fa54acca81be3664797cebb724690f/iterm2-recv-zmodem.sh</span><br><span class="line">sudo chmod 755 /usr/<span class="built_in">local</span>/bin/iterm2-*</span><br></pre></td></tr></table></figure></li></ul><p>如果链接失败，可以复制以下文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vim /usr/local/bin/iterm2-send-zmodem.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/sz <span class="string">"<span class="variable">$FILE</span>"</span> -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Received $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#vim /usr/local/bin/iterm2-recv-zmodem.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">"<span class="variable">$FILE</span>"</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/rz -E -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Sent \-\&gt; $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><ul><li>iTerm2 的配置<br>点击 iTerm2 的设置界面 Perference -&gt; Profiles -&gt; Default -&gt; Advanced -&gt; Triggers 的 Edit 按钮<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190911151439.png" alt><br>点击+号，添加如下的参数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Regular expression: \*\*B0100</span><br><span class="line">            Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-send-zmodem.sh</span><br><span class="line">           Instant: checked</span><br><span class="line"></span><br><span class="line">Regular expression: \*\*B00000000000000</span><br><span class="line">            Action: Run Silent Coprocess</span><br><span class="line">        Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-recv-zmodem.sh</span><br><span class="line">           Instant: checked</span><br></pre></td></tr></table></figure></li></ul><p>添加完成如下图所示<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190911151446.png" alt><br>简单的用法，当 ssh 登录后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 下载一个文件： </span><br><span class="line">sz filename </span><br><span class="line"># 下载多个文件： </span><br><span class="line">sz filename1 filename2</span><br><span class="line"># 下载dir目录下的所有文件，不包含dir下的文件夹： </span><br><span class="line">sz dir/*</span><br><span class="line"></span><br><span class="line"># 直接键入rz命令即可</span><br><span class="line">rz</span><br><span class="line"># 在弹出的文件窗口，选择需要上传的文件</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;苹果电脑小技巧。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="mac" scheme="http://feiyang233.club/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Google Script 学习</title>
    <link href="http://feiyang233.club/post/google-script/"/>
    <id>http://feiyang233.club/post/google-script/</id>
    <published>2019-08-15T07:04:49.000Z</published>
    <updated>2019-08-15T09:22:25.274Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录用<a href="https://developers.google.com/apps-script/guides/sheets" target="_blank" rel="noopener">Google Script</a> 处理数据，发送每日邮件的过程。<br><a id="more"></a></p><h1 id="创建-Sheet-和-Script"><a href="#创建-Sheet-和-Script" class="headerlink" title="创建 Sheet 和 Script"></a>创建 Sheet 和 Script</h1><p>首先用自己的谷歌账号创建一个新的 Google Sheet, 然后点击菜单栏的 Tools &gt; Script editor 就可以创建脚本。其语法和 JavaScript 相似的。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sends emails with data from the current spreadsheet.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 首先添加一个发送按钮名称为 Action，绑定到函数 SendEmail</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onOpen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  SpreadsheetApp.getUi()</span><br><span class="line">      .createMenu(<span class="string">'Action'</span>)</span><br><span class="line">      .addItem(<span class="string">'Send Daily Report'</span>, <span class="string">'SendEmail'</span>)</span><br><span class="line">      .addToUi();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="学会-debug"><a href="#学会-debug" class="headerlink" title="学会 debug"></a>学会 debug</h1><p>可以调用函数 Logger.log(); 打印结果到后台，然后在 View &gt; Logs 查看结果。举一个简单的例子：<br>markdown 语法注意，使用时发现，表格的语句上一行必须为空行，不然表格不生效。比如你的表是这个样子的  </p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A1</td><td style="text-align:center">B1</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">A2</td><td style="text-align:center">B2</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">A3</td><td style="text-align:center">B3</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">A4</td><td style="text-align:center">B4</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logProductInfo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sheet = SpreadsheetApp.getActiveSheet();</span><br><span class="line">  <span class="keyword">var</span> data = sheet.getDataRange().getValues();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">    Logger.log(<span class="string">'Product name: '</span> + data[i][<span class="number">0</span>]);</span><br><span class="line">    Logger.log(<span class="string">'Product number: '</span> + data[i][<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在 script editor 界面点击 Run &gt; Run function &gt; logProductInfo, 运行结束后，可以点击 View &gt; Logs 查看结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[19-08-15 01:16:37:475 PDT] Product name: A1</span><br><span class="line">[19-08-15 01:16:37:475 PDT] Product number: B1</span><br><span class="line">[19-08-15 01:16:37:476 PDT] Product name: A2</span><br><span class="line">[19-08-15 01:16:37:476 PDT] Product number: B2</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product name: A3</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product number: B3</span><br><span class="line">[19-08-15 01:16:37:477 PDT] Product name: A4</span><br><span class="line">[19-08-15 01:16:37:478 PDT] Product number: B4</span><br></pre></td></tr></table></figure></p><h1 id="Code-gs"><a href="#Code-gs" class="headerlink" title="Code.gs"></a>Code.gs</h1><p>直接放上代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Sends emails with data from the current spreadsheet.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onOpen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  SpreadsheetApp.getUi()</span><br><span class="line">      .createMenu(<span class="string">'Action'</span>)</span><br><span class="line">      .addItem(<span class="string">'Send Daily Report'</span>, <span class="string">'SendEmail'</span>)</span><br><span class="line">      .addToUi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> scriptProperties = PropertiesService.getScriptProperties();</span><br><span class="line">  <span class="keyword">var</span> nickname = scriptProperties.getProperty(<span class="string">'Project'</span>);</span><br><span class="line">  Logger.log(nickname)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SendEmail</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> client = PropertiesService.getScriptProperties().getProperty(<span class="string">'Project'</span>);</span><br><span class="line">  <span class="comment">// Property 可以在 File &gt; Project Properties &gt; Script properties 里面设置</span></span><br><span class="line">  <span class="keyword">var</span> monitor_vn = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(<span class="string">"VN"</span>).getDataRange().getValues();</span><br><span class="line">  <span class="comment">// 获取表单名称为 VN 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> monitor_th = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(<span class="string">"TH"</span>).getDataRange().getValues();</span><br><span class="line">  <span class="comment">// 获取表单名称为 TH 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> sendlist = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(<span class="string">"email"</span>).getDataRange().getValues();</span><br><span class="line">  <span class="comment">// 获取表单名称为 email 的表内容</span></span><br><span class="line">  <span class="keyword">var</span> sendto = []</span><br><span class="line">  <span class="keyword">var</span> sendcc = []</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 将发送和 cc 分开存储</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;sendlist.length;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (sendlist[i][<span class="number">0</span>]!=<span class="string">''</span>) sendto.push(sendlist[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> (sendlist[i][<span class="number">1</span>]!=<span class="string">''</span>) sendcc.push(sendlist[i][<span class="number">1</span>])</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  sendto = sendto.join(<span class="string">','</span>)</span><br><span class="line">  sendcc = sendcc.join(<span class="string">','</span>)</span><br><span class="line">  </span><br><span class="line"> <span class="comment">// Email Template 连接绑定文件 index.html</span></span><br><span class="line">  <span class="keyword">var</span> template = HtmlService.createTemplateFromFile(<span class="string">'index'</span>);</span><br><span class="line">  <span class="comment">// 传参到 template</span></span><br><span class="line">  template.monitor_vn = monitor_vn;</span><br><span class="line">  template.monitor_th = monitor_th;</span><br><span class="line">  template.client = client;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 自定义一个数组，将数字月份映射为英文</span></span><br><span class="line">  <span class="keyword">const</span> monthNames = [<span class="string">"January"</span>, <span class="string">"February"</span>, <span class="string">"March"</span>, <span class="string">"April"</span>, <span class="string">"May"</span>, <span class="string">"June"</span>,</span><br><span class="line">  <span class="string">"July"</span>, <span class="string">"August"</span>, <span class="string">"September"</span>, <span class="string">"October"</span>, <span class="string">"November"</span>, <span class="string">"December"</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="comment">// 获取当前的日期</span></span><br><span class="line">  <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 发送邮件</span></span><br><span class="line">  MailApp.sendEmail(&#123;</span><br><span class="line">    to: sendto,</span><br><span class="line">    cc: sendcc,</span><br><span class="line">    subject: client+<span class="string">' Monitoring Daily Report ('</span>+d.getDate()+<span class="string">'-'</span>+monthNames[d.getMonth()]+<span class="string">'-'</span>+d.getYear()+<span class="string">')'</span>,</span><br><span class="line">    htmlBody: template.evaluate().getContent()&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h1><p>这个是邮件的主体模板，可以看一下<a href="https://developers.google.com/apps-script/guides/html/templates" target="_blank" rel="noopener">官网介绍</a><br>条件语句嵌套&lt;? … ?&gt;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_top"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &lt;? if (true) &#123; ?&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>This will always be served!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>This will never be served.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;? &#125; ?&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>赋值语句&lt;?= … ?&gt; 是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base target=&quot;_top&quot;&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;?= &apos;My favorite Google products:&apos; ?&gt;</span><br><span class="line">    &lt;? var data = [&apos;Gmail&apos;, &apos;Docs&apos;, &apos;Android&apos;];</span><br><span class="line">      for (var i = 0; i &lt; data.length; i++) &#123; ?&gt;</span><br><span class="line">        &lt;b&gt;&lt;?= data[i] ?&gt;&lt;/b&gt;</span><br><span class="line">    &lt;? &#125; ?&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_top"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hi,<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span>Below is daily ops report for &lt;?=client?&gt;:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">"font-size: 15px;"</span>&gt;</span>Monitoring_VN:<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"border-collapse: collapse; margin-left:20px;border: 1px solid black"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? for (var j=1;j&lt;7;j++) &#123; ?&gt;  <span class="comment">&lt;!-- 因为只读取1-6列的数据 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: grey; color: white; width:15%"</span>&gt;</span>&lt;?= monitor_vn[0][j] ?&gt;<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--monitor_vn.length 是行数--&gt;</span></span><br><span class="line">     &lt;? for(var i=1;i&lt;monitor_vn.length;i++) &#123; ?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       &lt;? for(var j=1;j&lt;7;j++) &#123; ?&gt;</span><br><span class="line">         &lt;? if ( j&gt;2 &amp;&amp; j&lt; 6  ) &#123; ?&gt;</span><br><span class="line">          &lt;? if (monitor_vn[i][j] &gt; 0.7) &#123;?&gt; <span class="comment">&lt;!-- 值大于0.7 底色红色--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black; background-color: red;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;   <span class="comment">&lt;!--toFixed(2) 保留两位小数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">            &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">        &lt;? if ( j==6 &amp;&amp; monitor_vn[i][j] &gt; 100) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: red;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_vn[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">     </span><br><span class="line">         &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">"font-size: 15px;"</span>&gt;</span>Monitoring_TH:<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"border-collapse: collapse; margin-left:20px;border: 1px solid black"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? for (var j=1;j&lt;7;j++)&#123; ?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: grey; color: white; width:15%"</span>&gt;</span>&lt;?= monitor_th[0][j] ?&gt;<span class="tag">&lt;/<span class="name">th</span>&gt;</span>  </span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     &lt;? for(var i=1;i&lt;monitor_th.length;i++)&#123;?&gt;</span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       &lt;? for(var j=1;j&lt;7;j++)&#123;?&gt;</span><br><span class="line">         &lt;? if ( j&gt;2 &amp;&amp; j&lt; 6  ) &#123; ?&gt;</span><br><span class="line">           &lt;? if (monitor_th[i][j] &gt; 0.7) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black; background-color: red;"</span>&gt;</span>&lt;?= (monitor_th[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_th[i][j]*100).toFixed(2)?&gt;%<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">         &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">           &lt;? if ( j==6 &amp;&amp; monitor_th[i][j] &gt; 100) &#123;?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;background-color: red;"</span>&gt;</span>&lt;?= (monitor_th[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           &lt;? &#125; else  &#123; ?&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;"</span>&gt;</span>&lt;?= (monitor_th[i][j]) ?&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                   &lt;? &#125; ?&gt;</span><br><span class="line">         &lt;? &#125; ?&gt;</span><br><span class="line">       &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     &lt;? &#125; ?&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="未完"><a href="#未完" class="headerlink" title="未完"></a>未完</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录用&lt;a href=&quot;https://developers.google.com/apps-script/guides/sheets&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google Script&lt;/a&gt; 处理数据，发送每日邮件的过程。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="google" scheme="http://feiyang233.club/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>docker 学习笔记</title>
    <link href="http://feiyang233.club/post/docker/"/>
    <id>http://feiyang233.club/post/docker/</id>
    <published>2019-07-31T16:00:00.000Z</published>
    <updated>2020-03-05T03:27:43.383Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录了一些基础的 docker 知识。<br><a id="more"></a> </p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/wNCfYERWU3GOBHI2juTpmg" target="_blank" rel="noopener">你确定你会写 Dockerfile 吗</a></li><li><a href="https://mp.weixin.qq.com/s/eZCi73pOFq0sSoMYSVujZw" target="_blank" rel="noopener">Docker stop或者Docker kill为何不能停止容器</a></li><li><a href="https://mp.weixin.qq.com/s/HwmBNPaWBmD3-VW5V04MLg" target="_blank" rel="noopener">P2P镜像分发Dragonfly使用</a></li><li><a href="https://mp.weixin.qq.com/s/5Nu9fnH7K-Y6a_pA2z2haA" target="_blank" rel="noopener">Docker 数据持久化的三种方案</a></li><li><a href="https://yeasy.gitbooks.io/docker_practice/content/" target="_blank" rel="noopener">Docker — 从入门到实践</a></li><li><a href="https://mp.weixin.qq.com/s/S4aMdmQW50HR7Lj2z2-VZQ" target="_blank" rel="noopener">docker-proxy 存在合理性分析</a></li><li><a href="https://mp.weixin.qq.com/s/F8dFqdMBI0pfXJWow5dHhQ" target="_blank" rel="noopener">Docker 的原理</a></li><li><a href="https://mp.weixin.qq.com/s/bRQUrpSbZyZ5kUg7vfvc1A" target="_blank" rel="noopener">Docker 存储驱动与磁盘文件系统</a> 内含格式化磁盘，挂载磁盘</li></ol><h1 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h1><p>分享一篇<a href="https://mp.weixin.qq.com/s/BCzL57RmJja2gfZ67a2Z9Q" target="_blank" rel="noopener">CentOS 7 下 yum 方式安装 Docker 环境</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></p><p>一个“容器”，实际上是一个由 Linux Namespace、Linux Cgroups 和 rootfs 三种技术构建出来的进程的隔离环境。<br>这三种技术介绍？<br>Namespace 的作用是“隔离”，它让应用进程只能看到该 Namespace 内的“世界”；而 Cgroups 的作用是“限制”</p><p>rootfs 只是一个操作系统所包含的文件、配置和目录，并不包括操作系统内核。在 Linux 操作系统中，这两部分是分开存放的，操作系统只有在开机启动时才会加载指定版本的内核镜像。正是由于 rootfs 的存在，容器才有了一个被反复宣传至今的重要特性：一致性。</p><p>docker commit，实际上就是在容器运行起来后，把最上层的“可读写层”，加上原先容器镜像的只读层，打包组成了一个新的镜像。当然，下面这些只读层在宿主机上是共享的，不会占用额外的空间。</p><h1 id="docker-volume"><a href="#docker-volume" class="headerlink" title="docker volume"></a>docker volume</h1><p>镜像的各个层，保存在 /var/lib/docker/aufs/diff 目录下，在容器进程启动后，它们会被联合挂载在 /var/lib/docker/aufs/mnt/ 目录中，这样容器所需的 rootfs 就准备好了。<br>volume /test 挂载出来之后，文件会出现在了宿主机上对应的临时目录里，但是如果你在宿主机上查看该容器的可读写层，虽然可以看到这个 /test 目录，但其内容是空的。<br>而由于使用了联合文件系统，你在容器里对镜像 rootfs 所做的任何修改，都会被操作系统先复制到这个可读写层，然后再修改。这就是所谓的：Copy-on-Write。<br>有些时候，会由于配置文件的出错导致容器运行失败，这个时候不能进入容器修改文件，只能去 /var/lib/docker/overlay2/ID/diff 下面，找到对应的配置文件进行修改。</p><h1 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 docker 服务 </span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前系统 Docker 信息 </span></span><br><span class="line">docker info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取 docker 镜像 </span></span><br><span class="line">docker pull image_name</span><br><span class="line"><span class="comment"># 从 Docker hub 上下载某个镜像 </span></span><br><span class="line">docker pull centos:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看宿主机上的镜像，Docker 镜像保存在 / var/lib/docker 目录下:</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line">REPOSITORY                      TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mysql                           5.7                 1b30b36ae96a        8 days ago          372MB</span><br><span class="line">zabbix/zabbix-web-nginx-mysql   centos-4.0-latest   8be5f91b2fa1        3 weeks ago         415MB</span><br><span class="line">zabbix/zabbix-server-mysql      centos-4.0-latest   8e5becf45c4e        3 weeks ago         326MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像 </span></span><br><span class="line">docker rmi image_name/image_id</span><br><span class="line">docker rmi zabbix/zabbix-web-nginx-mysql:centos-4.0-latest 或者 docker rmi 8be5f91b2fa1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前有哪些容器正在运行 </span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 查看所有容器 </span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">CONTAINER ID        IMAGE                                             COMMAND                  CREATED             STATUS                       PORTS                           NAMES</span><br><span class="line">b30307ad65be        zabbix/zabbix-web-nginx-mysql:centos-4.0-latest   <span class="string">"docker-entrypoint.sh"</span>   7 days ago          Exited (255) 8 minutes ago   443/tcp, 0.0.0.0:8080-&gt;80/tcp   zabbix-web-nginx-mysql</span><br><span class="line">0ad822cd52b7        zabbix/zabbix-server-mysql:centos-4.0-latest      <span class="string">"docker-entrypoint.sh"</span>   7 days ago          Exited (255) 8 minutes ago   0.0.0.0:10051-&gt;10051/tcp        zabbix-server-mysql</span><br><span class="line">d01c89a112f7        mysql:5.7                                         <span class="string">"docker-entrypoint.s…"</span>   7 days ago          Exited (255) 8 minutes ago   3306/tcp, 33060/tcp             mysql-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动、停止、重启容器命令：</span></span><br><span class="line">docker start container_name/container_id</span><br><span class="line">docker stop container_name/container_id</span><br><span class="line">docker restart container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动一个容器后，如果想进入到这个容器，可以使用 attach</span></span><br><span class="line">docker attach container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除容器 </span></span><br><span class="line">docker rm container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器日志 </span></span><br><span class="line">docker logs -f container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器 IP 地址 </span></span><br><span class="line">docker inspect container_name/container_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器 </span></span><br><span class="line">docker <span class="built_in">exec</span> -it container_name/container_id bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 Docker 容器与宿主机相互传输文件 </span></span><br><span class="line">[root@localhost tmp]<span class="comment"># docker cp --help</span></span><br><span class="line"></span><br><span class="line">Usage:docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class="line">docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br><span class="line"></span><br><span class="line">Copy files/folders between a container and the <span class="built_in">local</span> filesystem</span><br><span class="line"></span><br><span class="line">docker cp zabbix_config.sql mysql-server:/tmp</span><br><span class="line">docker cp mysql-server:/tmp/zabbix_config.sql /tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量删除所有已经退出的容器 </span></span><br><span class="line">docker rm -v $(docker ps -aq -f status=exited)</span><br><span class="line"><span class="comment"># 批量删除所有仅创建并未成功运行的容器 </span></span><br><span class="line">docker rm -v $(docker ps -aq -f status=created)</span><br></pre></td></tr></table></figure><h1 id="docker-logs"><a href="#docker-logs" class="headerlink" title="docker logs"></a>docker logs</h1><p><a href="https://blog.csdn.net/yjk13703623757/article/details/80283729" target="_blank" rel="noopener">删除 logs</a> 设置 logs <a href="https://docs.docker.com/engine/reference/commandline/dockerd/" target="_blank" rel="noopener">Daemon configuration file</a></p><h1 id="docker-iptables"><a href="#docker-iptables" class="headerlink" title="docker iptables"></a>docker iptables</h1><p>docker 默认会修改 iptables，但有时候会造成 iptables ip 限制失效的问题。如果对 iptables 比较了解的同学，可以 <a href="https://docs.docker.com/network/iptables/" target="_blank" rel="noopener">Prevent Docker from manipulating iptables</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"iptables"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"log-driver"</span>:<span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;<span class="string">"max-size"</span>:<span class="string">"500m"</span>, <span class="string">"max-file"</span>:<span class="string">"3"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">max-size=500m，意味着一个容器日志大小上限是500M，</span><br><span class="line">max-file=3，意味着一个容器有三个日志，分别是id+.json、id+1.json、id+2.json。</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>还有一种办法就是添加 <a href="https://docs.docker.com/network/iptables/" target="_blank" rel="noopener">DOCKER-USER</a>  If you need to add rules which load before Docker’s rules, add them to the DOCKER-USER chain. These rules are loaded before any rules Docker creates automatically.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line">:DOCKER-USER - [0:0]</span><br><span class="line">-A FORWARD -j DOCKER-USER</span><br><span class="line">-A DOCKER-USER -s x.x.x.x -p tcp --dport 80 -j RETURN</span><br><span class="line">-A DOCKER-USER -p tcp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -p udp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -j RETURN</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure></p><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><p>首先，安利一下 <a href="https://mp.weixin.qq.com/s/wNCfYERWU3GOBHI2juTpmg" target="_blank" rel="noopener">Dockerfile 优化指南</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.7</span><br><span class="line"></span><br><span class="line">RUN apt-get update \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line">WORKDIR /usr/src/app</span><br><span class="line">COPY requirements.txt ./</span><br><span class="line">RUN pip install -r requirements.txt</span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line">EXPOSE 8000</span><br><span class="line">CMD [&quot;python&quot;, &quot;manage.py&quot;, &quot;runserver&quot;, &quot;0.0.0.0:8000&quot;]</span><br></pre></td></tr></table></figure><h1 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h1><p>docker 镜像有许多的版本，不同版本间差异需要注意。举个例子，我遇到因为版本不同，ip route get 结尾多了一个 uid 0<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#执行这个命令，在不同 tag 版本的 Python 镜像里，结果会不一样。</span></span><br><span class="line">ip -4 route get 8.8.8.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果多了一个 uid 会导致提取 IP 时出错。</span></span><br><span class="line">8.8.8.8 via 192.168.0.1 dev eth0 src 192.168.0.105 uid 0 </span><br><span class="line"></span><br><span class="line">8.8.8.8 via 192.168.0.1 dev eth0 src 192.168.0.105 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 两者之间的差异是因为 iproute2 版本不一样</span></span><br><span class="line"></span><br><span class="line">root@feiy:/etc/apt<span class="comment"># apt-cache policy iproute2</span></span><br><span class="line">iproute2:</span><br><span class="line">  Installed: 4.9.0-1+deb9u1</span><br><span class="line">  Candidate: 4.9.0-1+deb9u1</span><br><span class="line">  Version table:</span><br><span class="line"> *** 4.9.0-1+deb9u1 500</span><br><span class="line">        500 http://deb.debian.org/debian stretch/main amd64 Packages</span><br><span class="line">        100 /var/lib/dpkg/status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@feiy:/etc/apt<span class="comment"># apt-cache policy iproute2</span></span><br><span class="line">iproute2:</span><br><span class="line">  Installed: 4.20.0-2</span><br><span class="line">  Candidate: 4.20.0-2</span><br><span class="line">  Version table:</span><br><span class="line"> *** 4.20.0-2 500</span><br><span class="line">        500 http://deb.debian.org/debian buster/main amd64 Packages</span><br><span class="line">        100 /var/lib/dpkg/status</span><br></pre></td></tr></table></figure></p><h1 id="network"><a href="#network" class="headerlink" title="network"></a>network</h1><p>docker 是基于 iptables 进行流量的转发，添加了一个虚拟的网卡 docker0 。 如果想从容器内部访问宿主机的 IP，比如从 172.17.0.3 访问宿主机的内网地址 192.168.1.10 ， 我们从 tcpdump 在网卡 docker0  抓包可以看到流量。 但是在内网网卡抓包没有结果。猜测原因是：当数据包从网卡 docker0 转发后，直接在内核进入 INPUT 链。所以，如果想访问宿主机的 IP， 需要在 INPUT 添加相关规则，允许访问。  iptables -A INPUT -i docker0 -j ACCEPT</p><h1 id="mac-上使用-docker"><a href="#mac-上使用-docker" class="headerlink" title="mac 上使用 docker"></a>mac 上使用 docker</h1><ol><li>volume 的位置和 linux 不同，解决办法如下</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Library/Containers/com.docker.docker/Data/vms/0/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接进入 tty</span></span><br><span class="line">screen tty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 tty 可以就可以找到 docker container volume</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker/volumes/</span><br></pre></td></tr></table></figure><ol start="2"><li>如果想从容器内部访问 mac，也和 Linux 不同。详情可以看官网<a href="https://docs.docker.com/docker-for-mac/networking/" target="_blank" rel="noopener">docker mac network</a> 在容器内部可以使用 host.docker.internal 就可以访问到 Mac 宿主机啦。 而在 Linux 机器上, 容器可以直接使用宿主机的 IP 来访问宿主机</li></ol><h1 id="docker-proxy"><a href="#docker-proxy" class="headerlink" title="docker-proxy"></a>docker-proxy</h1><p>can refer this (article)[<a href="https://mp.weixin.qq.com/s/S4aMdmQW50HR7Lj2z2-VZQ]" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/S4aMdmQW50HR7Lj2z2-VZQ]</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/docker/daemon.json</span></span><br><span class="line"><span class="comment"># disable docker-proxy</span></span><br><span class="line">“userland-proxy”:<span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h1 id="find-process"><a href="#find-process" class="headerlink" title="find process"></a>find process</h1><p>In one hosts, if we have many dockers, sometimes we need find some proceess belong to which docker.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pstree -laps [pid]</span><br><span class="line"></span><br><span class="line">pstree -laps 38564</span><br><span class="line">systemd,1</span><br><span class="line">  `-dockerd,171350</span><br><span class="line">      `-docker-containe,171362 --config /var/run/docker/containerd/containerd.toml</span><br><span class="line">          `-docker-containe,332151 -namespace moby -workdir /var/lib/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/38dfefa95c1f8b4827e0a95834119b3756775d389820ea90d95878d3518eed67 -address /var/run/docker/containerd/docker-containerd.sock -containerd-binary /usr/bin/docker-containerd -runtime-root /var/run/docker/runtime-runc</span><br><span class="line">              `-smb,332174 /usr/<span class="built_in">local</span>/bin/smb run -e live -c id -i sg</span><br><span class="line">                  `-sh,332221 -c gunicorn webapi.wsgi -c webapi/gunicorn_config.py</span><br><span class="line">                      `-gunicorn: maste,332306                                                  </span><br><span class="line">                          `-gunicorn: worke,38564                                                  </span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,38613</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83641</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83642</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83643</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83644</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83645</span><br><span class="line">                              |-&#123;gunicorn: worke&#125;,83646</span><br><span class="line">                              `-&#123;gunicorn: worke&#125;,83647</span><br><span class="line"></span><br><span class="line"><span class="comment"># 38dfefa95c1f8b4827e0a95834119b3756775d389820ea90d95878d3518eed67 is container ID</span></span><br></pre></td></tr></table></figure></p><h1 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h1><p><a href="https://wiki.jikexueyuan.com/project/docker-technology-and-combat/commands.html" target="_blank" rel="noopener">https://wiki.jikexueyuan.com/project/docker-technology-and-combat/commands.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录了一些基础的 docker 知识。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="kubernetes" scheme="http://feiyang233.club/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>singtel 路由器踩坑经历</title>
    <link href="http://feiyang233.club/post/singtel/"/>
    <id>http://feiyang233.club/post/singtel/</id>
    <published>2019-07-27T02:00:55.000Z</published>
    <updated>2019-07-27T06:24:31.315Z</updated>
    
    <content type="html"><![CDATA[<p>2019-07-26 搬新家后贫困山区终于通网了。然而当我打算修改路由器的名称(SSID)和密码的时候，却发现被坑了。<br><a id="more"></a></p><h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>singtel 光纤宽带，有一个光模转换器，还有一个 WiFi 路由器。如下图所示：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100707.jpg" alt><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100704.jpg" alt>  </p><h1 id="踩坑过程"><a href="#踩坑过程" class="headerlink" title="踩坑过程"></a>踩坑过程</h1><p>当家里有网后，我想修改一下 WiFi 名称和密码，谷歌一下，<a href="https://www.singtel.com/personal/support/broadband/routers-ont/arcadyan-ac-plus-guide/change-wireless-settings" target="_blank" rel="noopener">答案如下</a>。<br>Step 1<br>Visit <a href="http://192.168.1.254" target="_blank" rel="noopener">http://192.168.1.254</a> to view your router configuration page.  </p><p>Step 2<br>Scroll down to Device Info and Internet Connection to find the information.   </p><p>Step 3<br>By default, you will see the 2.4GHz and 5GHz wireless settings, Band Steering and WPS feature..  </p><p>Step 4<br>To apply any changes made to your Wireless settings, click on the Apply button or cancel to disregard the changes.  </p><p>我按照以上说明操作一下，结果碰到的却是如下的画面：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727101742.png" alt><br>当时就懵逼了，账号和密码都不知道。结果看到右上角有一个型号 hg8244h, 谷歌一下 hg8244h default password. 结果如下<br>The default network address is 192.168.1.254 and so within a browser connect to <a href="http://192.168.1.254" target="_blank" rel="noopener">http://192.168.1.254</a>. The root user login’s default password is admin and should be changed.</p><p>登录进去之后，画面如下:<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100710.png" alt><br>我仔仔细细找了一圈，都没有发现修改 SSID 的地方。当我点开 Lan devices, 列表里发现了一个 Singtel-ACPlus, 我才意识到我登录到光模装换器的控制台了。在这里我看到了 Singtel-ACPlus 的 mac 地址。我在自己的苹果电脑命令行查询一下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp -a</span><br></pre></td></tr></table></figure></p><p>得到的网关 192.168.1.254 mac 地址与 Singtel-ACPlus 的 mac 地址不符合</p><p>我的电脑连接的是 WiFi 路由器，结果网关却是光模路由器。其中必有蹊跷！</p><h1 id="解决的办法"><a href="#解决的办法" class="headerlink" title="解决的办法"></a>解决的办法</h1><p>先将光模路由器和 WiFi 路由器之间的网线断开，（一定要）再重启WiFi 路由器。等待一段时间连上 WiFi, 再次访问 <a href="http://192.168.1.254" target="_blank" rel="noopener">http://192.168.1.254</a>. 这次终于大功告成！<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190727100713.png" alt><br>猜测根本原因是：两个路由器之间是桥接模（也许有错）。 WiFi 路由器连上光模路由器了，都没有自己的 IP。 真是卑微，就像我这种菜菜子，不配拥有姓名。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019-07-26 搬新家后贫困山区终于通网了。然而当我打算修改路由器的名称(SSID)和密码的时候，却发现被坑了。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="network" scheme="http://feiyang233.club/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>运维中踩过的坑</title>
    <link href="http://feiyang233.club/post/ops-bug/"/>
    <id>http://feiyang233.club/post/ops-bug/</id>
    <published>2019-07-05T02:58:36.000Z</published>
    <updated>2020-02-08T01:50:11.569Z</updated>
    
    <content type="html"><![CDATA[<p>仅以本文记录那些年弟弟背过的锅！<br><a id="more"></a>  </p><h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><ol><li>大部分时候，iptables 只存了 filter 表。 对于 nat 表，我们一旦 restart iptables， nat 表的规则就会被刷新。建议用 reload</li><li>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT 这一条 iptables 的规则也非常重要。Packets in a RELATED or ESTABLISHED state are those ones which belong to an already opened connection; you’ll generally want to accept them, otherwise connections will get established correctly but nothing will be able to flow after the initial handshake. 如果没有这一条，会遇到 DNS 解析失败， curl 失败。 凡是 iptables 没有允许的 IP, 都不能正常的工作。 例如 DNS 查询发包后，三次握手建立。回包收到了，却会被 iptables 阻挡，上层应用无法拿到解析的结果，导致 hang 住。</li><li>tcpdump 抓包分析时， 进入的包都可以抓到，不会受到 iptables, 发出的包会受到 iptables 影响，可能被 iptables 阻挡导致抓包失败。</li><li>如果是命令行添加的规则，例如 iptables -t nat -A OUTPUT -s 172.17.0.3 -p tcp –dport 10050 -j ACCEPT  在使用 reload 后，其规则一样会被刷掉。但 docker 的规则不会被 reload 刷掉，会被 restart 刷掉。这一点有疑问，期待大神给弟弟解惑。</li><li>docker iptables filter 表 input 链规则失效，原因是：从 NAT 表 prerouting 链匹配到 DOCKER 链，直接与容器沟通，跳过了 input 链。感谢智凯哥哥的解决办法如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line">:DOCKER-USER - [0:0]</span><br><span class="line">-A FORWARD -j DOCKER-USER</span><br><span class="line">-A DOCKER-USER -s x.x.x.x -p tcp --dport 80 -j RETURN</span><br><span class="line">-A DOCKER-USER -p tcp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -p udp --dport 80 -j DROP</span><br><span class="line">-A DOCKER-USER -j RETURN</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure></li></ol><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><ol><li>tab 键与空格不能混用</li><li>函数不要嵌套，例如 result=A(B(C())) 这样不利于 debug，检查每个函数的返回值</li><li>在 multiprocessing 多进程中 apply_async()  报错不容易定位，最好使用 try catch 把报错写成 log</li></ol><h1 id="jenkins"><a href="#jenkins" class="headerlink" title="jenkins"></a>jenkins</h1><ol><li>在部署的时候，ansible 一直在 gathering facts 卡住了，直到 timeout。 <a href="https://serverfault.com/questions/630253/ansible-stuck-on-gathering-facts" target="_blank" rel="noopener">网友解答</a> 我遇到的是 <a href="https://docs.ansible.com/ansible/2.4/intro_configuration.html#control-path" target="_blank" rel="noopener">control_path</a> 文件太多了，导致了 jenkins deploy node 卡住，任务无法进行。 需要删除该部署节点下面的 control_path_dir 的文件，清空。</li></ol><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><ol><li>docker container IP default  is 172.17.0.0/16  检查 iptables 是否阻挡</li><li>docker -v 挂载出来的时候，要注意文件夹权限问题。</li><li>docker logs 日志文件很大的时候，记得删除。<a href="https://blog.csdn.net/yjk13703623757/article/details/80283729" target="_blank" rel="noopener">Docker容器日志查看与清理</a> 也可以在 /etc/docker/daemon 里<a href="https://feiyang233.club/post/docker/#docker-iptables">设置 log 的大小</a>。</li></ol><h1 id="NetworkManager"><a href="#NetworkManager" class="headerlink" title="NetworkManager"></a>NetworkManager</h1><ol><li>报错 bus-manager: could not create org.freedesktop.DBus proxy 直接 stop NetworkManager 就行了。</li></ol><h1 id="文件权限问题"><a href="#文件权限问题" class="headerlink" title="文件权限问题"></a>文件权限问题</h1><ol><li>/tmp permission 又搞我 drwxrwxrwt.</li><li>对于目录文件来说，可读表示能够读取目录内的文件列表；可写表示能够在目录内新增、删除、重命名文件；可执行表示能够进入该目录。</li><li>file and directory <a href="https://blog.csdn.net/NOT_GUY/article/details/63685650" target="_blank" rel="noopener">permission</a></li><li><a href="https://www.unixtutorial.org/atime-ctime-mtime-in-unix-filesystems" target="_blank" rel="noopener">atime, ctime and mtime in Unix filesystems</a></li></ol><h1 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h1><ol><li>/etc/resolv.conf 有两个默认的值至关重要，一个是超时的 timeout，一个是重试的 attempts，默认情况下，前者是 5s 后者是 2 次。对于日常的应用来说，包括 web server、mail client、db 以及各种 app server 等等，任何使用 glibc resolver 都需要经过 resolv.conf 文件。对于 libresolv 来说，只认 resolv.conf 的前三个 nameserver，所以写的再多也没什么意义。正常情况下，resolver 会从上至下进行解析，每个 nameserver 等待 timeout 的时间，如果一直到第三个都没结果，resolver 会重复上面的步骤 (attempts – 1) 次。</li></ol><h1 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h1><ol><li>user 模块，密码必须要加密。需要用到 <a href="https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module" target="_blank" rel="noopener">Ansible ad-hoc command</a></li></ol><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><ol><li>Markdown链接括号的问题: %28 代替(, %29代替) 主要是后者会歧义链接部分的结束. 这是使用url符号码去代替ascii的符号. 能够解决这个问题</li></ol><h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h1><ol><li>文件名第一个字符为空格，设置 static 时，多了一个空格 %20 ，导致资源路径出出错。</li><li>Mac Django 连接 MySQL, <a href="https://docs.djangoproject.com/en/2.2/ref/databases/#mysql-notes" target="_blank" rel="noopener">官网</a>上提供了两种方法。第一种 mysqlclient 在 Mac 上有遇到错误。 <a href="https://pypi.org/project/mysqlclient/" target="_blank" rel="noopener">mysqlclient 官网</a>也有说明, <a href="https://ruddra.com/posts/install-mysqlclient-macos/" target="_blank" rel="noopener">Google一下</a>后发现是因为我的 Mac 没有安装 clang，安装完 xcode-select –install 再 pip install mysqlclient 就可以了。<br>第二种，安装<a href="https://dev.mysql.com/downloads/connector/python/" target="_blank" rel="noopener">Connector</a> 在 setting.py 里添加<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'user_data'</span>,</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'mysql.connector.django'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'mysql_user'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'password'</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">          <span class="string">'autocommit'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><ol><li>内存泄漏指由于疏忽或错误造成程序未能释放已经不再使用的内存。内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，导致在释放该段内存之前就失去了对该段内存的控制，从而造成了内存的浪费。 有一个服务跑在容器里面，当连接的时候总是 time out， 查看日志 是 stream is closed，还有一个错误是 No such file or directory: u’/var/run/tmp/summary_398320.db’  当我们进入 /var/run/tmp 发现有太多的文件，每一个进程都会有一个 pid 命名的文件。说明 worker 进程不断被 kill 然后又被 master 拉起，当我们到宿主机上看 docker stats ， 发现该容器的内存已经满了，导致了 worker 进程不断被杀。需要增大容器的 memory 初始值。补充（gunicorn 会启动一组 worker进程，所有worker进程公用一组listener，在每个worker中为每个listener建立一个wsgi server。每当有HTTP链接到来时，wsgi server创建一个协程来处理该链接，协程处理该链接的时候，先初始化WSGI环境，然后调用用户提供的app对象去处理HTTP请求。）</li><li><a href="https://www.cnblogs.com/wangqiguo/p/6464234.html" target="_blank" rel="noopener">xargs与管道的区别</a> 其实基本上linux的命令中很多的命令的设计是先从命令行参数中获取参数，然后从标准输入中读取。另外很多程序是不处理标准输入的，例如 kill , rm 这些程序如果命令行参数中没有指定要处理的内容则不会默认从标准输入中读取。所以 xargs 可以用来传递参数</li></ol><h1 id="读取超大日志文件"><a href="#读取超大日志文件" class="headerlink" title="读取超大日志文件"></a>读取超大日志文件</h1><p>如果日志没有做切割，有可能会导致生成一个超大的日志，这个时候对应我们查看日志文件非常的不方便。这个时候有一个方法就是用 <code>split</code> 将大日志均分为小日志<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#按行数均分</span></span><br><span class="line">split -l 10000 test.log -d -a 4 test_</span><br><span class="line"></span><br><span class="line"><span class="comment">#-l, --lines=NUMBER：对file进行切分，每个文件有NUMBER行。</span></span><br><span class="line"><span class="comment">#每个文件10000行(-l 10000)</span></span><br><span class="line"><span class="comment">#文件名称后缀系数不是字母而是数字（-d）</span></span><br><span class="line"><span class="comment">#后缀系数为四位数（-a 4）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以按文件大小均分</span></span><br><span class="line">split -b test.log -d -a 4 test_</span><br><span class="line"></span><br><span class="line"><span class="comment">#-b, --bytes=SIZE：对file进行切分，每个小文件大小为SIZE。可以指定单位b,k,m,g。</span></span><br></pre></td></tr></table></figure></p><h1 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h1><ol><li>kafka listen all interfaces<br>In order to listen all the interfaces, comment  #host.name in /etc/kafka/server.properties<br>This action can make Kafka listen in all interfaces, but it will change hostname to localhost, then Kafka cannot communicate with each other.<br>Error is the connection with node -1 failed.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Info <span class="keyword">in</span> zookeeper: <span class="string">"PLAINTEXT://localhost:29092"</span>],<span class="string">"jmx_port"</span>:9093,<span class="string">"host"</span>:<span class="string">"localhost"</span>,</span><br></pre></td></tr></table></figure></li></ol><p>solution: Kafka can listen in all interfaces and connection with each other.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listeners=PLAINTEXT://0.0.0.0:29092</span><br><span class="line">advertised.host.name=10.66.236.43</span><br><span class="line">host.name=10.66.236.43</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅以本文记录那些年弟弟背过的锅！&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="elk" scheme="http://feiyang233.club/tags/elk/"/>
    
      <category term="jenkins" scheme="http://feiyang233.club/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>zabbix 从入门到放弃</title>
    <link href="http://feiyang233.club/post/zabbix/"/>
    <id>http://feiyang233.club/post/zabbix/</id>
    <published>2019-06-06T03:00:56.000Z</published>
    <updated>2019-09-05T09:44:40.255Z</updated>
    
    <content type="html"><![CDATA[<p>docker 安装 zabbix, 添加主机，设置报警，性能调优。<br><a id="more"></a></p><h1 id="监控模式"><a href="#监控模式" class="headerlink" title="监控模式"></a>监控模式</h1><p>zabbix 有两种监控模式，主动和被动。在客户端与服务端之间还可以加一个 proxy，入下图所示<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190823152533.png" alt></p><p><strong>需要注意 iptables问题</strong>: 跨地区监控的时候， proxy 必须监听在所有网卡上。内网是为了和客户端通信，外网是为了和服务端通信。我曾试过 proxy 只监听在内网，因为是主动模式，层层上报信息，在 zabbix server 还是能发现 proxy 的存活。但是当我打算添加一台 host 时，却一直报错。原因就是 proxy 和 服务端是外网通信的，proxy 发包查询 host 的信息（监控项等），因为只监听内网，服务端的回包 proxy 无法获取，导致通信失败。</p><h1 id="LAMP-架构安装"><a href="#LAMP-架构安装" class="headerlink" title="LAMP 架构安装"></a>LAMP 架构安装</h1><p>基于官方的 LAMP 架构，按照最简单的原生方式来部署，不做任何多余优化。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"># 安装必要依赖包 </span><br><span class="line">yum install -y httpd mariadb-server mariadb php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mhash</span><br><span class="line"></span><br><span class="line"># 修改 apache 配置 </span><br><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName 192.168.1.10:8080</span><br><span class="line">Listen 192.168.1.10:8080</span><br><span class="line">DirectoryIndex index.html index.php</span><br><span class="line"></span><br><span class="line"># 修改 php 时区 </span><br><span class="line">vim /etc/php.ini</span><br><span class="line">date.timezone = Asia/Singapore</span><br><span class="line"></span><br><span class="line"># 启动 httpd 服务 </span><br><span class="line">systemctl start httpd.service</span><br><span class="line"></span><br><span class="line"># 修改数据库存储的位置 /data</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">bind-address = 127.0.0.1</span><br><span class="line">max_connections = 1000</span><br><span class="line"></span><br><span class="line"># 最大连接数很关键，如果 zabbix-server StartPollers= 设置过大</span><br><span class="line"># 则很容易出现，connection to database &apos;zabbix&apos; failed: [1040] Too many connections</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"># 启动 mariadb 服务 </span><br><span class="line">systemctl start mariadb.service</span><br><span class="line"></span><br><span class="line"># 初始化 mysql 数据库，并配置 root 用户密码 </span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line"># 万一新版本忘记随机密码可以通过日志获取 </span><br><span class="line">grep &apos;temporary password&apos; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line"># 创建一个测试页，测试 LAMP 是否搭建成功 </span><br><span class="line">cat &gt; /var/www/html/index.php &lt;&lt; EOF</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 创建 zabbix 数据库 </span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &apos;zabbix&apos;;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"># 部署 zabbix</span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/4.2/rhel/7/x86_64/zabbix-release-4.2-2.el7.noarch.rpm</span><br><span class="line">yum clean all</span><br><span class="line">yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br><span class="line"># 输入密码 zabbix</span><br><span class="line"></span><br><span class="line"># 配置数据库用户及密码 </span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">DBSocket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"># 修改时区 </span><br><span class="line">vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value date.timezone Asia/Singapore</span><br><span class="line"></span><br><span class="line"># 启动 zabbix 并设置自启动服务 </span><br><span class="line">systemctl restart zabbix-server zabbix-agent httpd</span><br><span class="line">systemctl enable zabbix-server zabbix-agent httpd mariadb</span><br></pre></td></tr></table></figure></p><p>一切就绪，打开浏览器，输入 <a href="http://ServerName:port/zabbix" target="_blank" rel="noopener">http://ServerName:port/zabbix</a></p><h1 id="zabbix-server-conf-参数调优"><a href="#zabbix-server-conf-参数调优" class="headerlink" title="zabbix_server.conf 参数调优"></a>zabbix_server.conf 参数调优</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CacheSize=8G               # Host 过多时，需要增大 CacheSize</span><br><span class="line">TrendCacheSize=2G          # __zbx_mem_realloc(): out of memory (requested 108424 bytes) </span><br><span class="line">Timeout=30                 # __zbx_mem_realloc(): please increase CacheSize configuration parameter</span><br><span class="line">StartPollers=500           # Poller 会导致连接数增大。需要调大数据库的最大连接数</span><br><span class="line">StartPollersUnreachable=100</span><br><span class="line">HousekeepingFrequency=0</span><br></pre></td></tr></table></figure><h1 id="docker-搭建"><a href="#docker-搭建" class="headerlink" title="docker 搭建"></a>docker 搭建</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install docker-ce</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 做数据映射后的方案 </span></span><br><span class="line">mkdir -p /data/docker/mysql/zabbix/data</span><br><span class="line">mkdir -p /data/docker/zabbix/alertscripts</span><br><span class="line">mkdir -p /data/docker/zabbix/externalscripts</span><br></pre></td></tr></table></figure><p>然后是安装 zabbix 前端，后端，数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库。</span></span><br><span class="line">docker run --name mysql-server -t \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-v /data/zabbix_data:/var/lib/mysql  \</span><br><span class="line">-d mysql:5.7  \</span><br><span class="line">--character-set-server=utf8 --collation-server=utf8_bin</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后端 参数已经调优</span></span><br><span class="line">docker run --name zabbix-server-mysql  \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">"mysql-server"</span>  \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span>  \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span>  \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"feiyang@2019+"</span>  \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"feiyang@2019+"</span>  \</span><br><span class="line">-e ZBX_TIMEOUT=30   \</span><br><span class="line">-e ZBX_CACHESIZE=8G  \</span><br><span class="line">-e ZBX_TRENDCACHESIZE=2G  \</span><br><span class="line">-e ZBX_STARTPOLLERS=500   \</span><br><span class="line">-e ZBX_STARTPOLLERSUNREACHABLE=100  \</span><br><span class="line">-e ZBX_HOUSEKEEPINGFREQUENCY=0  \</span><br><span class="line">-v /data/zabbix/alertscripts:/usr/lib/zabbix/alertscripts  \</span><br><span class="line">-v /data/zabbix/externalscripts:/usr/lib/zabbix/externalscripts  \</span><br><span class="line">-v /data/zabbix/conf:/etc/zabbix  \</span><br><span class="line">--link mysql-server:mysql  \</span><br><span class="line">-p 10051:10051  \</span><br><span class="line">-d zabbix/zabbix-server-mysql:centos-4.2-latest</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前端</span></span><br><span class="line">docker run --name zabbix-web-nginx-mysql \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">"mysql-server"</span> \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"feiyang@2019+"</span> \</span><br><span class="line">-e PHP_TZ=<span class="string">"Asia/Singapore"</span> \</span><br><span class="line">--link mysql-server:mysql \</span><br><span class="line">--link zabbix-server-mysql:zabbix-server \</span><br><span class="line">-p 8080:80 \</span><br><span class="line">-d zabbix/zabbix-web-nginx-mysql:centos-4.2-latest</span><br></pre></td></tr></table></figure><p>安装完成后，在浏览器打开 <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a>  默认的账户是 <code>Admin</code>  密码是 <code>zabbix</code></p><h1 id="ansible-批量添加主机"><a href="#ansible-批量添加主机" class="headerlink" title="ansible 批量添加主机"></a>ansible 批量添加主机</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">add</span> <span class="string">zabbix</span> <span class="string">hosts</span></span><br><span class="line"><span class="attr">    local_action:</span></span><br><span class="line"><span class="attr">      module:</span> <span class="string">zabbix_host</span></span><br><span class="line"><span class="attr">      server_url:</span> <span class="string">"<span class="template-variable">&#123;&#123; var_server_url &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      login_user:</span> <span class="string">"<span class="template-variable">&#123;&#123; var_login_user &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      login_password:</span> <span class="string">"<span class="template-variable">&#123;&#123; var_login_password &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      host_name:</span> <span class="string">"<span class="template-variable">&#123;&#123; inventory_hostname &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      visible_name:</span> <span class="string">"<span class="template-variable">&#123;&#123; inventory_hostname &#125;&#125;</span>-<span class="template-variable">&#123;&#123;function&#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      host_groups:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">"<span class="template-variable">&#123;&#123; var_host_group &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">      link_templates:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">Template</span> <span class="string">Sea</span> <span class="string">Ops</span> <span class="string">OS</span> <span class="string">Linux</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">Template</span> <span class="string">Sea</span> <span class="string">Ops</span> <span class="string">Disk</span> <span class="string">IO</span> <span class="string">Linux</span></span><br><span class="line">      <span class="comment">#status: disabled</span></span><br><span class="line"><span class="attr">      status:</span> <span class="string">enabled</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">present</span></span><br><span class="line"><span class="attr">      interfaces:</span></span><br><span class="line"><span class="attr">      - type:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">        main:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">        useip:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">        ip:</span> <span class="string">"<span class="template-variable">&#123;&#123;  var_lanip | default(inventory_hostname) &#125;&#125;</span>"</span></span><br><span class="line"><span class="attr">        dns:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">        port:</span> <span class="number">10050</span></span><br></pre></td></tr></table></figure><h1 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h1><p>设置触发警告的 Action 时，当 Step 设置为从 1 到 0 时，会一直发送告警信息，直到事件状态变成 OK，当 Step 设置为从 1 到 1 时，则只会发送一次告警，后面不会继续发送告警信息。</p><h1 id="Zabbix-监控"><a href="#Zabbix-监控" class="headerlink" title="Zabbix 监控"></a>Zabbix 监控</h1><h2 id="监控网页状态"><a href="#监控网页状态" class="headerlink" title="监控网页状态"></a>监控网页状态</h2><p>zabbix 自带的 Web monitoring 就可以进行简单的网页监控。目前官方的 zabbix 版本是 4.2 此时日期 2019-07-09<br>首先是找到一台机器 Go to Configuration → Hosts, pick a host and click on Web in the row of that host. Then click on Create web scenario. 详情请看<a href="https://www.zabbix.com/documentation/4.2/manual/web_monitoring/example" target="_blank" rel="noopener">官方文档</a>，然后是添加报警，<a href="https://www.zabbix.com/documentation/4.2/manual/web_monitoring/items" target="_blank" rel="noopener">网页监控的官方文档</a>也是介绍的非常详细。<br>具体的监控图表信息，可以在 zabbix 主页的 Monitoring -&gt; Web 可以看到网页监控的详细信息。</p><h2 id="监控-DNS"><a href="#监控-DNS" class="headerlink" title="监控 DNS"></a>监控 DNS</h2><p><a href="https://www.zabbix.com/documentation/4.2/manual/config/items/itemtypes/zabbix_agent?s[]=net&amp;s[]=dns&amp;s[]=record" target="_blank" rel="noopener">官方文档 4.2 版本</a><br>zabbix默认支持检查解析成功与否和具体的解析结果。对应内置的KEY<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net.dns[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">net.dns.record[&lt;ip&gt;,zone,&lt;type&gt;,&lt;timeout&gt;,&lt;count&gt;]</span><br><span class="line">ip 指DNS服务器地址。</span><br><span class="line">zone 指要解析的域名</span><br><span class="line">type 指解析的记录类型</span><br><span class="line">timeout 指超时时间 默认1 秒</span><br><span class="line">count 指解析失败重试的次数 默认 2次</span><br><span class="line"></span><br><span class="line">trigger &#123;host:net.dns[dns_server,domain,A,1,2].count(#3)&#125;=0</span><br></pre></td></tr></table></figure></p><h1 id="数据库表优化"><a href="#数据库表优化" class="headerlink" title="数据库表优化"></a>数据库表优化</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_create`</span>(SCHEMANAME <span class="built_in">varchar</span>(<span class="number">64</span>), TABLENAME <span class="built_in">varchar</span>(<span class="number">64</span>), PARTITIONNAME <span class="built_in">varchar</span>(<span class="number">64</span>), CLOCK <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           PARTITIONNAME = The name of the partition to create</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Verify that the partition does not already exist</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="built_in">INT</span>;</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> partition_description &gt;= CLOCK;</span><br><span class="line"></span><br><span class="line">        IF RETROWS = 0 THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Print a message indicating that a partition was created.</span></span><br><span class="line"><span class="comment">                   2. Create the SQL to create the partition.</span></span><br><span class="line"><span class="comment">                   3. Execute the SQL from #2.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>( <span class="string">"partition_create("</span>, SCHEMANAME, <span class="string">","</span>, TABLENAME, <span class="string">","</span>, PARTITIONNAME, <span class="string">","</span>, CLOCK, <span class="string">")"</span> ) <span class="keyword">AS</span> msg;</span><br><span class="line">                <span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="keyword">CONCAT</span>( <span class="string">'ALTER TABLE '</span>, SCHEMANAME, <span class="string">'.'</span>, TABLENAME, <span class="string">' ADD PARTITION (PARTITION '</span>, PARTITIONNAME, <span class="string">' VALUES LESS THAN ('</span>, CLOCK, <span class="string">'));'</span> );</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @<span class="keyword">sql</span>;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_drop`</span>(SCHEMANAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), DELETE_BELOW_PARTITION_DATE <span class="built_in">BIGINT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           DELETE_BELOW_PARTITION_DATE = Delete any partitions with names that are dates older than this one (yyyy-mm-dd)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> done <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> drop_part_name <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Get a list of all the partitions that are older than the date</span></span><br><span class="line"><span class="comment">           in DELETE_BELOW_PARTITION_DATE.  All partitions are prefixed with</span></span><br><span class="line"><span class="comment">           a "p", so use SUBSTRING TO get rid of that character.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> myCursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">                <span class="keyword">SELECT</span> partition_name</span><br><span class="line">                <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">                <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> <span class="keyword">CAST</span>(<span class="keyword">SUBSTRING</span>(partition_name <span class="keyword">FROM</span> <span class="number">2</span>) <span class="keyword">AS</span> <span class="keyword">UNSIGNED</span>) &lt; DELETE_BELOW_PARTITION_DATE;</span><br><span class="line">        <span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="keyword">FOUND</span> <span class="keyword">SET</span> done = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Create the basics for when we need to drop the partition.  Also, create</span></span><br><span class="line"><span class="comment">           @drop_partitions to hold a comma-delimited list of all partitions that</span></span><br><span class="line"><span class="comment">           should be deleted.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">SET</span> @alter_header = <span class="keyword">CONCAT</span>(<span class="string">"ALTER TABLE "</span>, SCHEMANAME, <span class="string">"."</span>, TABLENAME, <span class="string">" DROP PARTITION "</span>);</span><br><span class="line">        <span class="keyword">SET</span> @drop_partitions = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Start looping through all the partitions that are too old.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        OPEN myCursor;</span><br><span class="line">        read_loop: LOOP</span><br><span class="line">                FETCH myCursor INTO drop_part_name;</span><br><span class="line">                IF done THEN</span><br><span class="line">                        LEAVE read_loop;</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">                <span class="keyword">SET</span> @drop_partitions = <span class="keyword">IF</span>(@drop_partitions = <span class="string">""</span>, drop_part_name, <span class="keyword">CONCAT</span>(@drop_partitions, <span class="string">","</span>, drop_part_name));</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">        IF @drop_partitions != "" THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Build the SQL to drop all the necessary partitions.</span></span><br><span class="line"><span class="comment">                   2. Run the SQL to drop the partitions.</span></span><br><span class="line"><span class="comment">                   3. Print out the table partitions that were deleted.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SET</span> @full_sql = <span class="keyword">CONCAT</span>(@alter_header, @drop_partitions, <span class="string">";"</span>);</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @full_sql;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(SCHEMANAME, <span class="string">"."</span>, TABLENAME) <span class="keyword">AS</span> <span class="string">`table`</span>, @drop_partitions <span class="keyword">AS</span> <span class="string">`partitions_deleted`</span>;</span><br><span class="line">        ELSE</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   No partitions are being deleted, so print out "N/A" (Not applicable) to indicate</span></span><br><span class="line"><span class="comment">                   that no changes were made.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(SCHEMANAME, <span class="string">"."</span>, TABLENAME) <span class="keyword">AS</span> <span class="string">`table`</span>, <span class="string">"N/A"</span> <span class="keyword">AS</span> <span class="string">`partitions_deleted`</span>;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_maintenance`</span>(SCHEMA_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>), TABLE_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>), KEEP_DATA_DAYS <span class="built_in">INT</span>, HOURLY_INTERVAL <span class="built_in">INT</span>, CREATE_NEXT_INTERVALS <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> OLDER_THAN_PARTITION_DATE <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> OLD_PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> LESS_THAN_TIMESTAMP <span class="built_in">INT</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> CUR_TIME <span class="built_in">INT</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">CALL</span> partition_verify(SCHEMA_NAME, TABLE_NAME, HOURLY_INTERVAL);</span><br><span class="line">        <span class="keyword">SET</span> CUR_TIME = <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(), <span class="string">'%Y-%m-%d 00:00:00'</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> @__interval = <span class="number">1</span>;</span><br><span class="line">        create_loop: LOOP</span><br><span class="line">                IF @__interval &gt; CREATE_NEXT_INTERVALS THEN</span><br><span class="line">                        LEAVE create_loop;</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SET</span> LESS_THAN_TIMESTAMP = CUR_TIME + (HOURLY_INTERVAL * @__interval * <span class="number">3600</span>);</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME = FROM_UNIXTIME(CUR_TIME + HOURLY_INTERVAL * (@__interval - <span class="number">1</span>) * <span class="number">3600</span>, <span class="string">'p%Y%m%d%H00'</span>);</span><br><span class="line">                IF(PARTITION_NAME != OLD_PARTITION_NAME) THEN</span><br><span class="line">                        <span class="keyword">CALL</span> partition_create(SCHEMA_NAME, TABLE_NAME, PARTITION_NAME, LESS_THAN_TIMESTAMP);</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">                <span class="keyword">SET</span> @__interval=@__interval+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">SET</span> OLD_PARTITION_NAME = PARTITION_NAME;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> OLDER_THAN_PARTITION_DATE=<span class="keyword">DATE_FORMAT</span>(<span class="keyword">DATE_SUB</span>(<span class="keyword">NOW</span>(), <span class="built_in">INTERVAL</span> KEEP_DATA_DAYS <span class="keyword">DAY</span>), <span class="string">'%Y%m%d0000'</span>);</span><br><span class="line">        <span class="keyword">CALL</span> partition_drop(SCHEMA_NAME, TABLE_NAME, OLDER_THAN_PARTITION_DATE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_verify`</span>(SCHEMANAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), HOURLYINTERVAL <span class="built_in">INT</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="built_in">INT</span>(<span class="number">11</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> FUTURE_TIMESTAMP <span class="built_in">TIMESTAMP</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Check if any partitions exist for the given SCHEMANAME.TABLENAME.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> partition_name <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * If partitions do not exist, go ahead and partition the table</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        IF RETROWS = 1 THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * Take the current date at 00:00:00 and add HOURLYINTERVAL to it.  This is the timestamp below which we will store values.</span></span><br><span class="line"><span class="comment">                 * We begin partitioning based on the beginning of a day.  This is because we don't want to generate a random partition</span></span><br><span class="line"><span class="comment">                 * that won't necessarily fall in line with the desired partition naming (ie: if the hour interval is 24 hours, we could</span></span><br><span class="line"><span class="comment">                 * end up creating a partition now named "p201403270600" when all other partitions will be like "p201403280000").</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">SET</span> FUTURE_TIMESTAMP = <span class="keyword">TIMESTAMPADD</span>(<span class="keyword">HOUR</span>, HOURLYINTERVAL, <span class="keyword">CONCAT</span>(<span class="keyword">CURDATE</span>(), <span class="string">" "</span>, <span class="string">'00:00:00'</span>));</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME = <span class="keyword">DATE_FORMAT</span>(<span class="keyword">CURDATE</span>(), <span class="string">'p%Y%m%d%H00'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Create the partitioning query</span></span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL = <span class="keyword">CONCAT</span>(<span class="string">"ALTER TABLE "</span>, SCHEMANAME, <span class="string">"."</span>, TABLENAME, <span class="string">" PARTITION BY RANGE(`clock`)"</span>);</span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL = <span class="keyword">CONCAT</span>(@__PARTITION_SQL, <span class="string">"(PARTITION "</span>, PARTITION_NAME, <span class="string">" VALUES LESS THAN ("</span>, <span class="keyword">UNIX_TIMESTAMP</span>(FUTURE_TIMESTAMP), <span class="string">"));"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Run the partitioning query</span></span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @__PARTITION_SQL;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span><span class="string">`partition_maintenance_all`</span>(SCHEMA_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_log'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_str'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_text'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_uint'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'trends'</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'trends_uint'</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><p>Trends 120,(‘history’, 30, 24, 14), 最多保存 30 天的数据，每隔 24 小时生成一个分区，每次生成 14 个分区   </p><p>首先进入容器内部，将上面这个  partition.sql 导入数据库 mysql<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql  -uzabbix  -pfeiyang@2019+  zabbix  &lt; partition.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 mysql 容器内部 vim /opt/mysql.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!bin/bash</span></span><br><span class="line">mysql  -uzabbix -pfeiyang@2019+ zabbix -e<span class="string">"CALL partition_maintenance_all('zabbix')"</span> </span><br><span class="line"></span><br><span class="line">chmod 755 /opt/mysql.sh</span><br></pre></td></tr></table></figure></p><p>退出容器，在宿主机上，建立定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/crontab</span></span><br><span class="line"></span><br><span class="line">23 03  * * * root /bin/docker <span class="built_in">exec</span> [mysql 容器 ID] bash -c  <span class="string">"cd /opt &amp;&amp; bash mysql.sh"</span> </span><br><span class="line"></span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure><h1 id="Zabbix-api"><a href="#Zabbix-api" class="headerlink" title="Zabbix api"></a>Zabbix api</h1><p><a href="https://www.zabbix.com/documentation/current/manual/api" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># auth_zabbix</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span>  <span class="comment">#docker 方式</span></span><br><span class="line"><span class="comment"># 非 docker 方式为 "http://IP:port/zabbix/api_jsonrpc.php"</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"user.login"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"user"</span>: <span class="string">"xxx"</span>,</span><br><span class="line">        <span class="string">"password"</span>: <span class="string">"xxx"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span>,  </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(ret)</span></span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> zabbix_ret.has_key(<span class="string">'result'</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'login error'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> zabbix_ret.get(<span class="string">'result'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get hostid</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span></span><br><span class="line"></span><br><span class="line">server_list=[<span class="string">"1.1.1.1"</span>,<span class="string">"233.233.233.233"</span>]</span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"host.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">    <span class="string">"filter"</span>: &#123;</span><br><span class="line">            <span class="string">"host"</span>: server_list</span><br><span class="line">        &#125;,</span><br><span class="line">    <span class="string">"sortfield"</span>: <span class="string">"host"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"由上文中的 auth_zabbix.py 得出"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> zabbix_ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> zabbix_ret.has_key(<span class="string">'result'</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'login error'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> zabbix_ret.get(<span class="string">'result'</span>)</span><br><span class="line">    </span><br><span class="line">hostid_list=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> zabbix_ret.get(<span class="string">'result'</span>):</span><br><span class="line">hostid_list.append(str(i[<span class="string">'hostid'</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> hostid_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get hist_data</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = datetime.date.today()</span><br><span class="line">today_unix = int(time.mktime(today.timetuple()))</span><br><span class="line">tomorrow = today+datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">tomorrow_unix = int(time.mktime(tomorrow.timetuple()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> today_unix</span><br><span class="line"><span class="keyword">print</span> tomorrow_unix</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"history.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"output"</span>: <span class="string">"extend"</span>,</span><br><span class="line">        <span class="string">"history"</span>: <span class="number">3</span>, <span class="comment"># 0,1,2,3,4 History object types</span></span><br><span class="line">        <span class="string">"itemids"</span>: <span class="string">"31023"</span>,</span><br><span class="line">        <span class="string">"sortfield"</span>: <span class="string">"clock"</span>,</span><br><span class="line">        <span class="string">"sortorder"</span>: <span class="string">"DESC"</span>,</span><br><span class="line">        <span class="string">"time_from"</span>: <span class="string">"today_unix"</span>,</span><br><span class="line">        <span class="string">"time_till"</span>: <span class="string">"tomorrow_unix"</span></span><br><span class="line">       </span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"由上文中的 auth_zabbix.py 得出"</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> zabbix_ret.get(<span class="string">'result'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get trend_data</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = datetime.date.today()</span><br><span class="line">today_unix = int(time.mktime(today.timetuple()))</span><br><span class="line">tomorrow = today+datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">tomorrow_unix = int(time.mktime(tomorrow.timetuple()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://IP:port/api_jsonrpc.php'</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"trend.get"</span>,</span><br><span class="line">    <span class="string">"params"</span>: &#123;</span><br><span class="line">        <span class="string">"output"</span>: [  <span class="comment"># 定义 output 格式</span></span><br><span class="line">            <span class="string">"itemid"</span>,</span><br><span class="line">            <span class="string">"clock"</span>, <span class="comment"># 当前时间</span></span><br><span class="line">            <span class="string">"num"</span>,   <span class="comment"># trend 一小时采集次数</span></span><br><span class="line">            <span class="string">"value_min"</span>,</span><br><span class="line">            <span class="string">"value_avg"</span>,</span><br><span class="line">            <span class="string">"value_max"</span></span><br><span class="line">        ],</span><br><span class="line">        </span><br><span class="line">        <span class="string">"itemids"</span>: [</span><br><span class="line">            <span class="string">"28959"</span>,</span><br><span class="line">            <span class="string">"28972"</span></span><br><span class="line">            </span><br><span class="line">        ],</span><br><span class="line">        </span><br><span class="line">        <span class="string">"time_from"</span>: today_unix,</span><br><span class="line">        <span class="string">"time_till"</span>: tomorrow_unix</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="string">"由上文中的 auth_zabbix.py 得出"</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post_header = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line"></span><br><span class="line">ret = requests.post(url, data=json.dumps(post_data), headers=post_header)</span><br><span class="line"></span><br><span class="line">zabbix_ret = json.loads(ret.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (zabbix_ret.get(<span class="string">'result'</span>))</span><br></pre></td></tr></table></figure><h1 id="zabbix-get"><a href="#zabbix-get" class="headerlink" title="zabbix_get"></a>zabbix_get</h1><p>从 server 端检测到 client 端的网络是否通畅，可能是 iptables 或者 server host 白名单造成的问题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix_get -s 10.10.1.1 -k system.uname</span><br></pre></td></tr></table></figure></p><h1 id="zabbix-proxy"><a href="#zabbix-proxy" class="headerlink" title="zabbix proxy"></a>zabbix proxy</h1><p>如果 server cluster 规模不大，则我们可以采用被动模式（对 client 而言是被动的，被 zabbix server来拉取数据）。如果集群规模大，那么 zabbix server 的压力就很大了，如果要去抓取的客户端数量过于庞大。 还有一种建议用 proxy 模式的情况是跨地区监控，集中到一台中心 zabbix， 方便管理。<br>本次演示，我们用了三台机器，client: 10.66.236.98 , proxy: 10.66.236.99 , zabbix_server: 10.66.236.100 （可用上文的 docker 方式安装），非 docker 方式可用参考 <a href="https://wsgzao.github.io/post/zabbix/" target="_blank" rel="noopener">奥哥博客</a></p><ol><li>首先是安装 zabbix proxy 在 10.66.236.99 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zabbix proxy 的依赖就只有数据库了，用于存储配置信息 </span></span><br><span class="line">yum install -y mariadb-server mariadb</span><br><span class="line"><span class="comment"># 启动 mariadb 服务 </span></span><br><span class="line">systemctl start mariadb.service</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb.service</span><br><span class="line"><span class="comment"># 初始化 mysql 数据库，并配置 root 用户密码 </span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"><span class="comment"># 初始化，然后输入密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 zabbix_proxy 数据库 </span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix_proxy character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix_proxy.* to zabbix@localhost identified by <span class="string">'zabbix'</span>;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署 zabbix_proxy 4.2 版本的</span></span><br><span class="line">rpm -Uvh  https://repo.zabbix.com/zabbix/4.2/rhel/7/x86_64/zabbix-release-4.2-2.el7.noarch.rpm</span><br><span class="line">yum install -y zabbix-proxy-mysql</span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql*/schema.sql.gz | mysql -uzabbix -p zabbix_proxy</span><br><span class="line"><span class="comment">#输入密码: zabbix</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库用户及密码 </span></span><br><span class="line">vim /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">Server=10.66.236.100   <span class="comment">#填写 zabbix server 的IP</span></span><br><span class="line">Hostname=zabbix_proxy</span><br><span class="line">DBName=zabbix_proxy</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网页上配置 Zabbix Server Proxy</span></span><br><span class="line">Administration -&gt; Proxies -&gt; Create proxy</span><br><span class="line">Proxy name: zabbix_proxy</span><br><span class="line">Proxy mode: Active</span><br><span class="line">Proxy address: 10.66.236.99</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 zabbix_proxy</span></span><br><span class="line">systemctl restart zabbix-proxy</span><br></pre></td></tr></table></figure></li></ol><p>如果是 Active 模式，这里不需要填写 IP， Passive 被动模式才一定要填写 IP<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822173033.png" alt></p><ol start="2"><li><p>修改 client 端的配置 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 zabbix_agent 配置指向 zabbix_proxy</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">ServerActive=10.66.236.99  <span class="comment">#proxy 的 IP</span></span><br><span class="line">Hostname=10.66.236.98  <span class="comment">#本机的 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 zabbix_agent</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure></li><li><p>在网页上添加 host</p></li></ol><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822173036.png" alt><br>一定要选择 proxy，IP 就填写 0.0.0.0  还有一个非常重要的就是 template 所有的 item 需要采用 Zabbix agent (active)</p><h1 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h1><ol><li>在测试 proxy 时，host name 不匹配造成的，我最开始随便填了一个 hostname ， 然后发现和 agent config 不一致，又在zabbix 网页上更新为 10.66.236.98 ，感觉数据库并没有更新，所以导致 host name 匹配不了，一直报错 no active checks on server no active checks on server [10.66.236.99:10051]: host [10.66.236.98] not found<br>解决的办法是：重新删除了 host , 再添加上 ，一次性填对了 host name 10.66.236.98 就可以了</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker 安装 zabbix, 添加主机，设置报警，性能调优。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="zabbix" scheme="http://feiyang233.club/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络相关</title>
    <link href="http://feiyang233.club/post/network/"/>
    <id>http://feiyang233.club/post/network/</id>
    <published>2019-05-30T03:21:34.000Z</published>
    <updated>2020-03-02T03:55:11.899Z</updated>
    
    <content type="html"><![CDATA[<p>记录网络相关知识与 Linux 网络相关的命令。<br><a id="more"></a></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/TxcX8Xlp62Rpqo9NEsoLqA" target="_blank" rel="noopener">TCP/IP 三次握手与四次挥手</a></li><li><a href="https://mp.weixin.qq.com/s/yuwZ24gMMZsLta3psgYuPg" target="_blank" rel="noopener">HTTPS 原理分析</a></li><li><a href="https://mp.weixin.qq.com/s/XmCMkgT_F5-bfHzxYQYsJQ" target="_blank" rel="noopener">Iptables其底层架构 Netfilter</a></li><li><a href="https://mp.weixin.qq.com/s/TLeKpbHMLZ4hBFcz3vjbsg" target="_blank" rel="noopener">面对 DDoS，实现在 1 秒内丢弃掉 1000 万个网络数据包攻击</a></li><li><a href="https://mp.weixin.qq.com/s/HDHK_U6aTspzXMUgNyQ91g" target="_blank" rel="noopener">3 个 Linux 中快速检测端口的小技巧</a></li></ol><h1 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h1><ol><li><a href="http://www.cnblogs.com/peida/archive/2013/03/05/2943698.html" target="_blank" rel="noopener">route</a> 某些 IP 段故障</li><li><a href="https://blog.einverne.info/post/2017/11/mtr-usage.html" target="_blank" rel="noopener">mtr</a> 连通性测试</li><li><a href="http://cn.linux.vbird.org/linux_server/0140networkcommand_1.php" target="_blank" rel="noopener">Linux 常用网络指令</a></li><li><a href="https://wsgzao.github.io/post/iptables/" target="_blank" rel="noopener">iptables 奥哥篇</a></li><li><a href="http://cn.linux.vbird.org/linux_server/0250simple_firewall_5.php" target="_blank" rel="noopener">iptables-NAT</a></li><li><a href="http://man.linuxde.net/iperf" target="_blank" rel="noopener">iperf</a> <a href="https://docs.azure.cn/zh-cn/articles/azure-operations-guide/virtual-network/aog-virtual-network-iperf-bandwidth-test" target="_blank" rel="noopener">测试网速</a>的工具</li><li>删除网卡 ip link delete  [网卡名称]</li><li>检查未被正确关闭的文件 <a href="https://www.cnblogs.com/276815076/p/3503923.html" target="_blank" rel="noopener">lsof</a> 或者 <a href="https://mp.weixin.qq.com/s/o3Q-aiOWbn8s4jrwpf-4Qg" target="_blank" rel="noopener">linux中如何解决文件已删除但空间不释放的案例</a></li><li>磁盘监控命令<a href="https://www.cnblogs.com/peida/archive/2012/12/28/2837345.html" target="_blank" rel="noopener">iostat</a></li><li>高 disk IO 检查: <strong>iotop -oP</strong>  看哪个进程占用大量的 disk IO</li><li><p>查看链接状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">netstat -n | awk <span class="string">'/^tcp/ &#123;++state[$NF]&#125; END &#123;for(key in state) print key,"\t",state[key]&#125;'</span></span><br><span class="line"><span class="comment"># 如下结果</span></span><br><span class="line">FIN_WAIT2  5683</span><br><span class="line">SYN_RECV  311</span><br><span class="line">CLOSE_WAIT  3</span><br><span class="line">TIME_WAIT  127952</span><br><span class="line">ESTABLISHED  52032</span><br><span class="line">FIN_WAIT1  22345</span><br></pre></td></tr></table></figure></li><li><p>What is a TCP Reset <a href="https://www.corvil.com/kb/what-is-a-tcp-reset-rst" target="_blank" rel="noopener">RST</a>  </p></li></ol><h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">iptables -t  nat  -nL   # 查看 nat 表</span><br><span class="line">iptables -t 表名 -N 自定义链名 # 创建一个链</span><br><span class="line">iptables -t 表名 -L  default filter</span><br><span class="line">iptables -t 表名 -L 链名</span><br><span class="line">iptables -t 表名 -nL --line</span><br><span class="line">iptables -t 表名 -D 链名 要删除的序号</span><br><span class="line">iptables -t 表名 -P 链名 动作    修改默认规则 DROP</span><br><span class="line">-A INPUT -m iprange --src-range x.x.x.x-x.x.x.x  -p tcp --dport 11211 -j ACCEPT #多 IP</span><br><span class="line">-A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT  #多端口</span><br><span class="line">类型匹配 -p tcp udp udplite icmp icmpv6 esp ah sctp mh</span><br><span class="line">转发功能 cat /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><h1 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h1><h2 id="Public-IP"><a href="#Public-IP" class="headerlink" title="Public IP"></a>Public IP</h2><ul><li>Class A: 0.x.x.x ~ 127.x.x.x</li><li>Class B: 128.x.x.x ~ 191.x.x.x</li><li>Class C: 192.x.x.x ~ 223.x.x.x</li><li>Class D: 224.x.x.x ~ 239.x.x.x  #multicast</li><li>Class E: 240.x.x.x ~ 255.x.x.x  #保留</li></ul><h2 id="Private-IP"><a href="#Private-IP" class="headerlink" title="Private IP"></a>Private IP</h2><ul><li>Class A: 10.0.0.0 ~ 10.255.255.255</li><li>Class B: 172.16.0.0 ~ 172.31.255.255</li><li><p>Class C: 192.168.0.0 ~ 192.168.255.255 </p></li><li><p>169.254.x.x  临时 IP DHCP is full. 就用这个 IP </p><h2 id="Loopback-IP"><a href="#Loopback-IP" class="headerlink" title="Loopback IP"></a>Loopback IP</h2></li><li>Class A: 127.0.0.1/8</li></ul><h1 id="设置-NAT-server"><a href="#设置-NAT-server" class="headerlink" title="设置 NAT server"></a>设置 NAT server</h1><p>开启转发功能<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward=1 <span class="comment"># 添加此行，开启转发功能</span></span><br><span class="line"></span><br><span class="line">sysctl -p    <span class="comment"># 执行生效</span></span><br></pre></td></tr></table></figure></p><p>还需要在 iptable 里设置转发规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line">*nat</span><br><span class="line">:PREROUTING ACCEPT [0:0]</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">:POSTROUTING ACCEPT [0:0]</span><br><span class="line">-A POSTROUTING -o em2 -j MASQUERADE</span><br><span class="line">COMMIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># em2 是公网网卡，当其他内网机器设置 NAT 机器的内网 IP 为网关时。 </span></span><br><span class="line"><span class="comment"># 内网机器发包给 NAT 机器， NAT 机器根据路由规则，将会由 em2 公网网卡转发出去。</span></span><br><span class="line"><span class="comment"># 转发时，会将包的源 IP 替换为自己公网的 IP</span></span><br></pre></td></tr></table></figure></p><h1 id="网络扫描"><a href="#网络扫描" class="headerlink" title="网络扫描"></a>网络扫描</h1><p>安装 <a href="https://nmap.org/download.html" target="_blank" rel="noopener">nmap 官网</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">rpm -vhU https://nmap.org/dist/nmap-7.80-1.x86_64.rpm</span><br><span class="line"><span class="comment"># yum install nmap 版本比较老</span></span><br><span class="line"><span class="comment">#主机发现 ICMP ARP 两种方式</span></span><br><span class="line">nmap -v -n -sn -PE 192.168.21.0/24</span><br><span class="line"><span class="comment"># -v 指定详细输出</span></span><br><span class="line"><span class="comment"># -n 不进行 DNS 解析</span></span><br><span class="line"><span class="comment"># -sn 使用 ping 扫描，禁用端口扫描</span></span><br><span class="line"><span class="comment"># -PE 指定使用 ICMP Echo Request 发现主机</span></span><br><span class="line"><span class="comment"># 192.168.21.0/24 为目标网段</span></span><br><span class="line"><span class="comment"># -PR 指定使用 ARP Request 发现主机</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP Connect 端口扫描</span></span><br><span class="line">nmap  -v -n -sT --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"></span><br><span class="line"><span class="comment"># -sT 使用 TCP Connect </span></span><br><span class="line"><span class="comment"># --max-retries 每个端口最多重试的次数</span></span><br><span class="line"><span class="comment"># -p1-65535 指定端口的扫描范围</span></span><br><span class="line"><span class="comment"># 192.168.21.19 为被扫描主机的 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP SYN 端口扫描,导致服务器出现大量的半连接</span></span><br><span class="line">nmap  -v -n -sS --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"></span><br><span class="line"><span class="comment"># -sS 使用 TCP SYN </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># UDP 扫描</span></span><br><span class="line">nmap  -v -n -sU --max-retries 1 -p1-65535 192.168.21.19</span><br><span class="line"><span class="comment"># -sU 使用 UDP 进行扫描</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 识别指定端口应用</span></span><br><span class="line">nmap  -v -n -sV -p2333 192.168.21.19</span><br><span class="line"><span class="comment"># -sV 指定识别该端口上的应用</span></span><br></pre></td></tr></table></figure></p><h1 id="tcpdump-抓包分析"><a href="#tcpdump-抓包分析" class="headerlink" title="tcpdump 抓包分析"></a>tcpdump 抓包分析</h1><ul><li>进入 INPUT 的流量不会被 iptable 影响</li><li>出口 OUTPIT 流量会受到 iptable 影响</li></ul><h1 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h1><ul><li>ping 默认发 4、5 个包</li><li>traceroute 显示的是不同 AS 之间的跳数。其实一个 AS 内部可能有很多路由器，TTL 与实际跳数是不符合的。</li></ul><h1 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h1><ul><li>三次握手建立连接</li><li>四次分手，等待 2 MSL</li><li>只走一条路径</li><li><a href="https://mp.weixin.qq.com/s/TxcX8Xlp62Rpqo9NEsoLqA" target="_blank" rel="noopener">详细介绍</a></li></ul><h1 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h1><ul><li>更轻更快</li><li>多条路径同时发送</li></ul><h1 id="DDos-攻击"><a href="#DDos-攻击" class="headerlink" title="DDos 攻击"></a>DDos 攻击</h1><p>DDOS 攻击，它在短时间内发起大量请求，耗尽服务器的资源，无法响应正常的访问，造成网站实质下线。DDOS 里面的 DOS 是 denial of service（停止服务）的缩写，表示这种攻击的目的，就是使得服务中断。最前面的那个 D 是 distributed （分布式），表示攻击不是来自一个地方，而是来自四面八方，因此更难防。</p><ol><li>比较常见的一种攻击是 cc 攻击。它就是简单粗暴地送来大量正常的请求，超出服务器的最大承受量，导致宕机。</li><li>SYN攻击属于DoS攻击的一种，它利用TCP协议缺陷，通过发送大量的半连接请求，耗费CPU和内存资源。SYN攻击除了能影响主机外，还可以危害路由器、防火墙等网络系统，事实上SYN攻击并不管目标是什么系统，只要这些系统打开TCP服务就可以实施。服务器接收到连接请求（syn= j），将此信息加入未连接队列，并发送请求包给客户（syn=k,ack=j+1），此时进入SYN_RECV状态。当服务器未收到客户端的确认包时，重发请求包，一直到超时，才将此条目从未连接队列删除。配合IP欺骗，SYN攻击能达到很好的效果，通常，客户端在短时间内伪造大量不存在的IP地址，向服务器不断地发送syn包，服务器回复确认包，并等待客户的确认，由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，目标系统运行缓慢，严重者引起网络堵塞甚至系统瘫痪。</li></ol><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><ol><li>docker container IP default  is 172.17.0.0/16  检查 iptables 是否阻挡</li><li>-A INPUT -m state –state RELATED,ESTABLISHED -j ACCEPT 这一条 iptables 的规则也非常重要。Packets in a RELATED or ESTABLISHED state are those ones which belong to an already opened connection; you’ll generally want to accept them, otherwise connections will get established correctly but nothing will be able to flow after the initial handshake. 如果没有这一条，会遇到 DNS 解析失败， curl 失败。 凡是 iptables 没有允许的 IP, 都不能正常的工作。 例如 DNS 查询发包后，三次握手建立。回包收到了，却会被 iptables 阻挡，上层应用无法拿到解析的结果，导致 hang 住。</li><li>抓包分析时， 进入的包都可以抓到，不会受到 iptables, 发出的包会受到 iptables 影响，可能被 iptables 阻挡导致抓包失败。</li><li>在此衷心的感谢，皇族后裔，八旗子弟，爱新觉罗·高Li，提供的帮助！</li><li>IP 冲突，导致服务不稳定。需要使用 arping -c 3  -I em2 192.168.1.1</li><li>docker 服务失败导致 telnet 不通，抓包表现为 宿主机收到了 telnet 的包，但不会转发给容器内部。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost feiyang]<span class="comment"># tcpdump -i any port 9200  -nnn</span></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">21:44:12.657584 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [S], seq 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657654 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [S], seq 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657658 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [S], seq 2957511281, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657711 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [S.], seq 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657711 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [S.], seq 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657727 IP 192.168.1.89.9200 &gt; 192.168.1.78.12118: Flags [S.], seq 3836648310, ack 2957511282, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">21:44:12.657913 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:44:12.657921 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:44:12.657922 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 1, win 229, length 0</span><br><span class="line">21:45:31.315560 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [F.], seq 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315596 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [F.], seq 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315598 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [F.], seq 1, ack 1, win 229, length 0</span><br><span class="line">21:45:31.315985 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [F.], seq 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.315985 IP 172.17.0.2.9200 &gt; 192.168.1.78.12118: Flags [F.], seq 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.316012 IP 192.168.1.89.9200 &gt; 192.168.1.78.12118: Flags [F.], seq 1, ack 2, win 229, length 0</span><br><span class="line">21:45:31.316225 IP 192.168.1.78.12118 &gt; 192.168.1.89.9200: Flags [.], ack 2, win 229, length 0</span><br><span class="line">21:45:31.316277 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 2, win 229, length 0</span><br><span class="line">21:45:31.316279 IP 192.168.1.78.12118 &gt; 172.17.0.2.9200: Flags [.], ack 2, win 229, length 0</span><br></pre></td></tr></table></figure></li></ol><h1 id="ubuntu-network-config"><a href="#ubuntu-network-config" class="headerlink" title="ubuntu network config"></a>ubuntu network config</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># /etc/network/interfaces</span><br><span class="line"></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eno1</span><br><span class="line">iface eno1 inet manual</span><br><span class="line">    bond-master bond0</span><br><span class="line"></span><br><span class="line">auto eno2</span><br><span class="line">iface eno2 inet manual</span><br><span class="line">    bond-master bond0</span><br><span class="line"></span><br><span class="line">auto bond0</span><br><span class="line">iface bond0 inet manual</span><br><span class="line">    bond-slaves eno1 eno2</span><br><span class="line">    bond-mode 4</span><br><span class="line">    bond-miimon 100</span><br><span class="line">    bond-lacp-rate 1</span><br><span class="line">    bond-xmit_hash_policy layer3+4</span><br><span class="line"></span><br><span class="line">auto bond0.1000</span><br><span class="line">iface bond0.1000 inet static</span><br><span class="line">    address 10.1.1.10</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 10.1.1.254</span><br><span class="line">    vlan-raw-device bond0</span><br><span class="line"></span><br><span class="line">#----------------------------------</span><br><span class="line">#ubuntu default</span><br><span class="line"># The loopback network interface</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"># The primary network interface</span><br><span class="line">auto ens33</span><br><span class="line">iface ens33 inet dhcp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录网络相关知识与 Linux 网络相关的命令。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="network" scheme="http://feiyang233.club/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>Google Sheet API 学习</title>
    <link href="http://feiyang233.club/post/google-api/"/>
    <id>http://feiyang233.club/post/google-api/</id>
    <published>2019-05-24T06:47:34.000Z</published>
    <updated>2019-08-15T07:04:30.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-修改-Google-sheet"><a href="#Python-修改-Google-sheet" class="headerlink" title="Python 修改 Google sheet"></a>Python 修改 Google sheet</h1><p><a href="https://developers.google.com/sheets/api/quickstart/python" target="_blank" rel="noopener">官方文档</a><br>记录一下自己调用 Google Api 的方法。<br><a id="more"></a></p><h1 id="几个重要的概念"><a href="#几个重要的概念" class="headerlink" title="几个重要的概念"></a>几个重要的概念</h1><ol><li>spreadsheetId 整个总表的 ID 是很长的一串字符 </li><li>sheetId 单页的 ID 是纯数字</li></ol><h1 id="Get"><a href="#Get" class="headerlink" title="Get"></a>Get</h1><p>获取数据<a href="https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/get" target="_blank" rel="noopener">get 方法</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SAMPLE_SPREADSHEET_ID = spreadsheetId</span><br><span class="line">SAMPLE_RANGE_NAME = <span class="string">'feiyang!G1:G4'</span></span><br><span class="line"></span><br><span class="line">sheet = service.spreadsheets()</span><br><span class="line">result = sheet.values().get(spreadsheetId=SAMPLE_SPREADSHEET_ID,</span><br><span class="line">                            range=SAMPLE_RANGE_NAME).execute()</span><br><span class="line">values = result.get(<span class="string">'values'</span>, [])</span><br></pre></td></tr></table></figure><h1 id="Append-Data"><a href="#Append-Data" class="headerlink" title="Append Data"></a>Append Data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">range_ = <span class="string">'capacity-raw!A:E'</span>  <span class="comment"># 表内的页名称 ! 范围</span></span><br><span class="line">value_input_option = <span class="string">'USER_ENTERED'</span>  </span><br><span class="line">insert_data_option = <span class="string">'INSERT_ROWS'</span>  </span><br><span class="line"></span><br><span class="line">value_range_body = &#123;</span><br><span class="line">    <span class="string">"range"</span>: <span class="string">"capacity-raw!A:E"</span>,</span><br><span class="line"><span class="string">"values"</span>: getdata.get_data(today,product),</span><br><span class="line"><span class="string">"majorDimension"</span>: <span class="string">"ROWS"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request = service.spreadsheets().values().append(spreadsheetId=spreadsheet_id, range=range_, valueInputOption=value_input_option, insertDataOption=insert_data_option, body=value_range_body)</span><br><span class="line">response = request.execute()</span><br></pre></td></tr></table></figure><h1 id="Update-Data"><a href="#Update-Data" class="headerlink" title="Update Data"></a>Update Data</h1><p>举个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SAMPLE_SPREADSHEET_ID = <span class="string">'xxxxxxxxx'</span></span><br><span class="line">SAMPLE_RANGE_NAME = <span class="string">'daily_report!A9:D9'</span></span><br><span class="line">value_input_option = <span class="string">"RAW"</span>  <span class="comment"># 还有其他的方式</span></span><br><span class="line">value_body = &#123;</span><br><span class="line">    <span class="string">"majorDimension"</span>: <span class="string">"ROWS"</span>,</span><br><span class="line">    <span class="string">"range"</span>: <span class="string">"daily_report!A9:D9"</span>,</span><br><span class="line">    <span class="string">"values"</span>: [[<span class="string">"test"</span>,<span class="string">"123"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>]],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sheet = service.spreadsheets()</span><br><span class="line">result = sheet.values().update(spreadsheetId=SAMPLE_SPREADSHEET_ID,</span><br><span class="line">                            range=SAMPLE_RANGE_NAME, valueInputOption=value_input_option,body=value_body)</span><br><span class="line"></span><br><span class="line">response = result.execute()</span><br><span class="line">pprint(response)</span><br></pre></td></tr></table></figure><h1 id="Sheet-Operation"><a href="#Sheet-Operation" class="headerlink" title="Sheet Operation"></a>Sheet Operation</h1><p>删除行，插入行，复制一行，最重要的是 post body 格式。 官方文档写得不够详细。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">delete_body =&#123;</span><br><span class="line">   "requests": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"deleteDimension"</span>: &#123;</span><br><span class="line">        <span class="attr">"range"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">233333333</span>,</span><br><span class="line">          <span class="attr">"dimension"</span>: <span class="string">"ROWS"</span>,</span><br><span class="line">          <span class="attr">"startIndex"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"endIndex"</span>: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">insert_body =&#123;</span><br><span class="line">   "requests": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"insertDimension"</span>: &#123;</span><br><span class="line">        <span class="attr">"range"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">233333333</span>,</span><br><span class="line">          <span class="attr">"dimension"</span>: <span class="string">"ROWS"</span>,</span><br><span class="line">          <span class="attr">"startIndex"</span>: <span class="number">8</span>,</span><br><span class="line">          <span class="attr">"endIndex"</span>: <span class="number">9</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">copy_body =&#123;</span><br><span class="line">  "requests": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"copyPaste"</span>: &#123;</span><br><span class="line">        <span class="attr">"source"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">233333333</span>,</span><br><span class="line">          <span class="attr">"startRowIndex"</span>: <span class="number">6</span>,</span><br><span class="line">          <span class="attr">"endRowIndex"</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="attr">"startColumnIndex"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"endColumnIndex"</span>: <span class="number">5</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"destination"</span>: &#123;</span><br><span class="line">          <span class="attr">"sheetId"</span>: <span class="number">1172952310</span>,</span><br><span class="line">          <span class="attr">"startRowIndex"</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="attr">"endRowIndex"</span>: <span class="number">8</span>,</span><br><span class="line">          <span class="attr">"startColumnIndex"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"endColumnIndex"</span>: <span class="number">5</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"pasteType"</span>: <span class="string">"PASTE_NORMAL"</span>,</span><br><span class="line">        <span class="attr">"pasteOrientation"</span>: <span class="string">"NORMAL"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是 Python post 部分<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request = sheet.batchUpdate(spreadsheetId=SAMPLE_SPREADSHEET_ID, body=body_item)</span><br><span class="line">response = request.execute()</span><br><span class="line">pprint(response)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-修改-Google-sheet&quot;&gt;&lt;a href=&quot;#Python-修改-Google-sheet&quot; class=&quot;headerlink&quot; title=&quot;Python 修改 Google sheet&quot;&gt;&lt;/a&gt;Python 修改 Google sheet&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://developers.google.com/sheets/api/quickstart/python&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;记录一下自己调用 Google Api 的方法。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="google" scheme="http://feiyang233.club/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 监控 memcached</title>
    <link href="http://feiyang233.club/post/memcached/"/>
    <id>http://feiyang233.club/post/memcached/</id>
    <published>2019-04-12T02:28:32.000Z</published>
    <updated>2019-04-12T09:33:49.799Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录如何用安装 memcached_exporter 来收集 memcached 信息并且暴露给 Prometheus 监听程序，Prometheus 将收集的信息传递给 grafana 进行信息可视化。<br><a id="more"></a></p><h1 id="安装-Memcached-Exporter"><a href="#安装-Memcached-Exporter" class="headerlink" title="安装 Memcached Exporter"></a>安装 Memcached Exporter</h1><p>prometheus 官方的 memcached_exporter <a href="https://github.com/prometheus/memcached_exporter" target="_blank" rel="noopener">文档</a>  </p><h2 id="bridge-桥接方式"><a href="#bridge-桥接方式" class="headerlink" title="bridge 桥接方式"></a>bridge 桥接方式</h2><p>在 192.168.21.16 服务器上运行了三个 memcached 端口分别为 11211:11213 目前官方的这个版本还不支持多个地址，社区的解决方案<a href="https://github.com/prometheus/memcached_exporter/issues/48" target="_blank" rel="noopener">点这里</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9211:9150  --name=memcached_11211  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11211</span><br><span class="line"></span><br><span class="line">docker run -d -p 9212:9150  --name=memcached_11212  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11212</span><br><span class="line"></span><br><span class="line">docker run -d -p 9213:9150  --name=memcached_11213  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=192.168.21.16:11213</span><br></pre></td></tr></table></figure></p><p>在这里我们启动了三个 docker container 用的是 bridge 网络方式来分别监听 11211–11213 需要注意的是 memcached.address 默认监听的是 localhost:11211 如果是 bridge 方式的话，用默认的方法 localhost 只能监听到容器内部。  </p><h2 id="host-网络方式"><a href="#host-网络方式" class="headerlink" title="host 网络方式"></a>host 网络方式</h2><p>如果服务器只有一个 memcached 进程的话，那么我们可以用 host 网络的方式。 容器和服务器共享网络，优点是网络高性能，缺点就是需要注意端口冲突。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --network=host  --name=memcached_11211  quay.io/prometheus/memcached-exporter:v0.5.0 --memcached.address=localhost:11211</span><br></pre></td></tr></table></figure></p><h2 id="注意-iptable"><a href="#注意-iptable" class="headerlink" title="注意 iptable"></a>注意 iptable</h2><p>一旦使用了 docker 我们需要特别注意的就是 <strong>iptable</strong> </p><ol><li><del>-A INPUT -s 172.16.0.0/12 -j DROP</del>  #检查iptables filter 表 INPUT 链是否阻止了docker container IP，因为 docker 默认 IP 是 172.17.0.0/24，</li><li>-A INPUT -s 172.17.0.0/24 -p tcp –dport 11211:11213 -j ACCEPT  #若采用 bridge 桥接方式， 需要允许容器连接到 memcached</li><li>-A INPUT -s <em>Prometheus_IP</em> -p tcp –dport 9211:9213 -j ACCEPT  #给 Prometheus 开放监听的白名单  </li></ol><h2 id="检查-memcached-exporter-结果"><a href="#检查-memcached-exporter-结果" class="headerlink" title="检查 memcached_exporter 结果"></a>检查 memcached_exporter 结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">curl 172.17.0.2:9150/metrics <span class="comment">#直接访问容器内部</span></span><br><span class="line">curl localhost:9211/metrics <span class="comment"># 从docker暴露出来的端口访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果中的字段在 grafana 设置图表时，相关的图表就要用对应的字段</span></span><br><span class="line"><span class="comment"># 比如当前连接上 (memcached_current_connections&#123;instance=~"$node"&#125;) </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TYPE memcached_connections_listener_disabled_total counter</span></span><br><span class="line">memcached_connections_listener_disabled_total 0</span><br><span class="line"><span class="comment"># HELP memcached_connections_total Total number of connections opened since the server started running.</span></span><br><span class="line"><span class="comment"># TYPE memcached_connections_total counter</span></span><br><span class="line">memcached_connections_total 255174</span><br><span class="line"><span class="comment"># HELP memcached_connections_yielded_total Total number of connections yielded running due to hitting the memcached's -R limit.</span></span><br><span class="line"><span class="comment"># TYPE memcached_connections_yielded_total counter</span></span><br><span class="line">memcached_connections_yielded_total 0</span><br><span class="line"><span class="comment"># HELP memcached_current_bytes Current number of bytes used to store items.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_bytes gauge</span></span><br><span class="line">memcached_current_bytes 2.57801625e+08</span><br><span class="line"><span class="comment"># HELP memcached_current_connections Current number of open connections.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_connections gauge</span></span><br><span class="line">memcached_current_connections 663</span><br><span class="line"><span class="comment"># HELP memcached_current_items Current number of items stored by this instance.</span></span><br><span class="line"><span class="comment"># TYPE memcached_current_items gauge</span></span><br><span class="line">memcached_current_items 1.117251e+06</span><br><span class="line"><span class="comment"># HELP memcached_items_evicted_total Total number of valid items removed from cache to free memory for new items.</span></span><br><span class="line"><span class="comment"># TYPE memcached_items_evicted_total counter</span></span><br><span class="line">memcached_items_evicted_total 0</span><br></pre></td></tr></table></figure><p>如果看到输出的结果，那说明 memcached_exporter 已经收集到 memcached 的信息并将此暴露出来了。<br><a href="http://www.runoob.com/memcached/memcached-stats.html" target="_blank" rel="noopener">memcached</a> 一些字段的含义</p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ol><li>配置错误 connection failed，注意地址 –memcached.address=192.168.21.16:11212 </li><li>启动新的容器失败，地址端口占用，需要重启一下docker</li><li>iptables 一般 reload， restart 会刷新 NAT 表，导致 docker 路由失败。这种情况需要重启 docker， docker 会在 NAT 表添加路由</li></ol><h1 id="Grafana-数据可视化"><a href="#Grafana-数据可视化" class="headerlink" title="Grafana 数据可视化"></a>Grafana 数据可视化</h1><p><a href="https://grafana.com/docs/v3.1/datasources/prometheus/" target="_blank" rel="noopener">grafana</a>  官方文档，添加数据源，模板。<br><a href="https://prometheus.io/docs/prometheus/latest/querying/functions/" target="_blank" rel="noopener">prometheus function</a> 函数在画图时非常重要<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每分钟 command 的数量  </span></span><br><span class="line">sum(rate(memcached_commands_total&#123;instance=~<span class="string">"<span class="variable">$node</span>"</span>&#125;[1m])) by (<span class="built_in">command</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录如何用安装 memcached_exporter 来收集 memcached 信息并且暴露给 Prometheus 监听程序，Prometheus 将收集的信息传递给 grafana 进行信息可视化。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="prometheus" scheme="http://feiyang233.club/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>ELK 日志收集系统快速搭建</title>
    <link href="http://feiyang233.club/post/elk/"/>
    <id>http://feiyang233.club/post/elk/</id>
    <published>2019-03-25T10:35:07.000Z</published>
    <updated>2020-03-02T03:55:14.923Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.elastic.co/guide/index.html" target="_blank" rel="noopener">ELK 官方文档</a> 是一个分布式、可扩展、实时的搜索与数据分析引擎。目前我在工作中只用来收集 server 的 log, 开发锅锅们 debug 的好助手。<br><a id="more"></a>  </p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol><li><a href="https://cloud.tencent.com/developer/column/4008" target="_blank" rel="noopener">腾讯云Elasticsearch Service</a> 这个腾讯云的专栏非常的不错，请您一定要点开看一眼，总有你想要的。  </li><li><a href="https://www.cnblogs.com/along21/p/8613115.html" target="_blank" rel="noopener">ELK重难点总结和整体优化配置</a></li><li><a href="https://mp.weixin.qq.com/s/KMiLRBrTxTafrq7I7PIWgA" target="_blank" rel="noopener">腾讯万亿级 Elasticsearch 技术实战</a></li></ol><h1 id="安装设置单节点-ELK"><a href="#安装设置单节点-ELK" class="headerlink" title="安装设置单节点 ELK"></a>安装设置单节点 ELK</h1><p>如果你想快速的搭建单节点 ELK, 那么使用 docker 方式肯定是你的最佳选择。使用三合一的镜像，<a href="https://elk-docker.readthedocs.io/" target="_blank" rel="noopener">文档详情</a><br>注意：安装完 docker, 记得设置 <code>mmap counts</code> 大小至少 262144<br><a href="https://nieyong.github.io/wiki_cpu/mmap%E8%AF%A6%E8%A7%A3.html" target="_blank" rel="noopener">什么是 mmap</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 mmap 命令 二选一</span></span><br><span class="line"><span class="comment"># 一临时添加法</span></span><br><span class="line">sysctl -w vm.max_map_count=262144  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 二永久写入文件</span></span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line">vm.max_map_count=262144  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存好文件执行以下命令查看</span></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 docker 基于centos</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></p><p>单节点的机器，不必暴露 9200(Elasticsearch JSON interface) 和 9300(Elasticsearch transport interface) 端口。<br>如果想在 docker 上暴露端口，用 -p 如果没有填写监听的地址，默认是 0.0.0.0 所有的网卡。建议还是写明确监听的地址，安全性更好。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-p 监听的IP:宿主机端口:容器内的端口</span><br><span class="line">-p 192.168.10.10:9300:9300</span><br></pre></td></tr></table></figure></p><h2 id="命令行启动一个-ELK"><a href="#命令行启动一个-ELK" class="headerlink" title="命令行启动一个 ELK"></a>命令行启动一个 ELK</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -p 5601:5601 -p 5044:5044 \</span><br><span class="line">-v /data/elk-data:/var/lib/elasticsearch  \</span><br><span class="line">-v /data/elk/logstash:/etc/logstash/conf.d  \</span><br><span class="line">-it -e TZ=<span class="string">"Asia/Singapore"</span> -e ES_HEAP_SIZE=<span class="string">"20g"</span>  \</span><br><span class="line">-e LS_HEAP_SIZE=<span class="string">"10g"</span> --name elk-ubuntu sebp/elk</span><br></pre></td></tr></table></figure><p>将配置和数据挂载出来，即使 docker container 出现了问题。可以立即销毁再重启一个，服务受影响的时间很短。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意挂载出来的文件夹的权限问题</span></span><br><span class="line">chmod 755 /data/elk-data </span><br><span class="line">chmod 755 /data/elk/logstash</span><br><span class="line">chown -R root:root /data </span><br><span class="line">-v /data/elk-data:/var/lib/elasticsearch   <span class="comment"># 将 elasticsearch 存储的数据挂载出来，数据持久化。</span></span><br><span class="line">-v /data/elk/logstash:/etc/logstash/conf.d <span class="comment"># 将 logstash 的配置文件挂载出来，方便在宿主机上修改。</span></span><br></pre></td></tr></table></figure></p><h2 id="elasticsearch-重要的参数调优"><a href="#elasticsearch-重要的参数调优" class="headerlink" title="elasticsearch 重要的参数调优"></a>elasticsearch 重要的参数调优</h2><ol><li>ES_HEAP_SIZE Elasticsearch will assign the entire heap specified in jvm.options via the Xms (minimum heap size) and Xmx (maximum heap size) settings. You should set these two settings to be equal to each other. Set Xmx and Xms to no more than 50% of your physical RAM.the exact threshold varies but is near 32 GB. the exact threshold varies but 26 GB is safe on most systems, but can be as large as 30 GB on some systems.<br>利弊关系: The more heap available to Elasticsearch, the more memory it can use for its internal caches, but the less memory it leaves available for the operating system to use for the filesystem cache. Also, larger heaps can cause longer garbage collection pauses.</li><li>LS_HEAP_SIZE 如果 heap size 过低，会导致 CPU 利用率到达瓶颈，造成 JVM 不断的回收垃圾。 不能设置 heap size 超过物理内存。 至少留 1G 给操作系统和其他的进程。</li><li>若是采用上述这个三合一的 docker 镜像，<a href="https://elk-docker.readthedocs.io/#troubleshooting" target="_blank" rel="noopener">官方文档</a>, 对于 ELK 的日志，处理的方式为 Note that ELK’s logs are rotated daily and are deleted after a week, using logrotate. You can change this behaviour by overwriting the elasticsearch, logstash and kibana files in /etc/logrotate.d  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每天的 6:25 会对日志进行分割压缩处理，此时对机器的 disk 有大量的 IO 工作，会导致 system load 上升。 </span></span><br><span class="line">25 6 * * *  root  <span class="built_in">test</span> -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily )</span><br></pre></td></tr></table></figure></li></ol><p>这里的解决办法请看下文的自定义部分。</p><ol start="4"><li>使用Elasticsearch的REST Client的An HTTP line is larger than 4096 bytes<br>{“type”:”too_long_frame_exception”,”reason”:”An HTTP line is larger than 4096 bytes.”}，默认情况下ES对请求参数设置为4K，如果遇到请求参数长度限制可以在elasticsearch.yml中修改如下参数： 请参考<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-http.html" target="_blank" rel="noopener">官方文档</a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http.max_initial_line_length:</span> <span class="number">8</span><span class="string">k</span></span><br><span class="line"><span class="string">http.max_header_size:</span> <span class="number">16</span><span class="string">k</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="elasticsearch-普通方式安装"><a href="#elasticsearch-普通方式安装" class="headerlink" title="elasticsearch 普通方式安装"></a>elasticsearch 普通方式安装</h2><p>也是非常的简单，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html" target="_blank" rel="noopener">官方文档</a>，或者是<a href="https://linuxize.com/post/how-to-install-elasticsearch-on-centos-7/" target="_blank" rel="noopener">民间文档</a>，其实也就是安装一个 JDK， 然后添加一个 repo 仓库。</p><h2 id="filebeat-配置"><a href="#filebeat-配置" class="headerlink" title="filebeat 配置"></a>filebeat 配置</h2><p>在 client 端，我们需要安装并且配置 filebeat <a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-installation.html" target="_blank" rel="noopener">请参考</a><br><a href="https://www.imooc.com/article/70007" target="_blank" rel="noopener">Filebeat 模块与配置</a><br>配置文件 filebeat.yml<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">filebeat.inputs:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">log</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  paths:</span> <span class="comment"># 需要收集的日志</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">/var/log/app/**</span>  <span class="comment">## ** need high versiob filebeat can support recursive</span></span><br><span class="line"><span class="attr">  exclude_files:</span> <span class="string">['^/var/log/ocha/no_need_foler/']</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  fields:</span> <span class="comment">#需要添加的字段</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">"<span class="template-variable">&#123;&#123;inventory_hostname&#125;&#125;</span>"</span> </span><br><span class="line"><span class="attr">    function:</span> <span class="string">"xxx"</span></span><br><span class="line"><span class="attr">  multiline:</span>  <span class="comment"># 多行匹配</span></span><br><span class="line"><span class="attr">    match:</span> <span class="string">after</span></span><br><span class="line"><span class="attr">    negate:</span> <span class="literal">true</span>  <span class="comment"># pay attention the format</span></span><br><span class="line"><span class="attr">    pattern:</span> <span class="string">'^\[[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;'</span>   <span class="comment">#\[</span></span><br><span class="line"><span class="attr">  ignore_older:</span> <span class="number">24</span><span class="string">h</span></span><br><span class="line"><span class="attr">  clean_inactive:</span> <span class="number">72</span><span class="string">h</span></span><br><span class="line"></span><br><span class="line"><span class="string">output.logstash:</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">["&#123;&#123;elk_server&#125;&#125;:25044"]</span></span><br><span class="line">  <span class="comment"># ssl:</span></span><br><span class="line">  <span class="comment">#   certificate_authorities: ["/etc/filebeat/logstash.crt"]</span></span><br></pre></td></tr></table></figure></p><p>批量部署 filebeat.yml 最好使用 ansible<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">stop</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    service:</span> </span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">stopped</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">yes</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">  - name:</span> <span class="string">upload</span> <span class="string">filebeat.yml</span> </span><br><span class="line"><span class="attr">    template:</span></span><br><span class="line"><span class="attr">     src:</span> <span class="string">filebeat.yml</span></span><br><span class="line"><span class="attr">     dest:</span> <span class="string">/etc/filebeat/filebeat.yml</span></span><br><span class="line"><span class="attr">     owner:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     mode:</span> <span class="number">0644</span>      </span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">remove</span></span><br><span class="line"><span class="attr">    file:</span> <span class="comment">#delete all files in this directory</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/var/lib/filebeat/registry</span>    </span><br><span class="line"><span class="attr">      state:</span> <span class="string">absent</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">restart</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    service:</span> </span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">restarted</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure></p><h2 id="查看-filebeat-output"><a href="#查看-filebeat-output" class="headerlink" title="查看 filebeat output"></a>查看 filebeat output</h2><p>首先需要修改配置，将 filebeat 输出到本地的文件，输出的格式为 json.<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">filebeat.inputs:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">log</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  paths:</span></span><br><span class="line"><span class="bullet">     -</span> <span class="string">/var/log/app/**</span></span><br><span class="line"><span class="attr">  fields:</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">"x.x.x.x"</span></span><br><span class="line"><span class="attr">    region:</span> <span class="string">"sg"</span></span><br><span class="line"><span class="attr">  multiline:</span></span><br><span class="line"><span class="attr">    match:</span> <span class="string">after</span></span><br><span class="line"><span class="attr">    negate:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    pattern:</span> <span class="string">'^[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;'</span></span><br><span class="line"><span class="attr">  ignore_older:</span> <span class="number">24</span><span class="string">h</span></span><br><span class="line"><span class="attr">  clean_inactive:</span> <span class="number">72</span><span class="string">h</span></span><br><span class="line"></span><br><span class="line"><span class="string">output.file:</span></span><br><span class="line"><span class="attr"> path:</span> <span class="string">"/home/feiyang"</span></span><br><span class="line"><span class="attr">  filename:</span> <span class="string">feiyang.json</span></span><br></pre></td></tr></table></figure></p><p>通过上述的配置，我们就可以在路径 /home/feiyang 下得到输出结果文件 feiyang.json 在这里需要注意的是，不同版本的 filebeat 输出结果的格式会有所不同，这会给 logstash 解析过滤造成一点点困难。下面举例说明 6.x 和 7.x filebeat 输出结果的不同</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 这是 6.4.2 的 filebeat</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"@timestamp"</span>: <span class="string">"2019-06-27T15:53:27.682Z"</span>,</span><br><span class="line">  <span class="attr">"@metadata"</span>: &#123;</span><br><span class="line">    <span class="attr">"beat"</span>: <span class="string">"filebeat"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"doc"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"6.4.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"fields"</span>: &#123;</span><br><span class="line">    <span class="attr">"host"</span>: <span class="string">"x.x.x.x"</span>,</span><br><span class="line">    <span class="attr">"region"</span>: <span class="string">"sg"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"host"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"x.x.x.x"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"beat"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"x.x.x.x"</span>,</span><br><span class="line">    <span class="attr">"hostname"</span>: <span class="string">"feiyang-localhost"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"6.4.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"offset"</span>: <span class="number">1567983499</span>,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"[2019-06-27T22:53:25.756327232][Info][@http.go.177] [48552188]request"</span>,</span><br><span class="line">  <span class="attr">"source"</span>: <span class="string">"/var/log/feiyang/scripts/all.log"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.4 与 7.2 还是有很大的差异，在结构上。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># 这是 7.2.0 的 filebeat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"@timestamp"</span>: <span class="string">"2019-06-27T15:41:42.991Z"</span>,</span><br><span class="line">  <span class="attr">"@metadata"</span>: &#123;</span><br><span class="line">    <span class="attr">"beat"</span>: <span class="string">"filebeat"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"7.2.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"agent"</span>: &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="string">"3a38567b-e6c3-4b5a-a420-f0dee3a3bec8"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"7.2.0"</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"filebeat"</span>,</span><br><span class="line">    <span class="attr">"ephemeral_id"</span>: <span class="string">"b7e3c0b7-b460-4e43-a9af-6d36c25eece7"</span>,</span><br><span class="line">    <span class="attr">"hostname"</span>: <span class="string">"feiyang-localhost"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"log"</span>: &#123;</span><br><span class="line">    <span class="attr">"offset"</span>: <span class="number">69132192</span>,</span><br><span class="line">    <span class="attr">"file"</span>: &#123;</span><br><span class="line">      <span class="attr">"path"</span>: <span class="string">"/var/log/app/feiyang/scripts/info.log"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"message"</span>: <span class="string">"2019-06-27 22:41:25.312|WARNING|14186|Option|data|unrecognized|fields=set([u'id'])"</span>,</span><br><span class="line">  <span class="attr">"input"</span>: &#123;</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"log"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"fields"</span>: &#123;</span><br><span class="line">    <span class="attr">"region"</span>: <span class="string">"sg"</span>,</span><br><span class="line">    <span class="attr">"host"</span>: <span class="string">"x.x.x.x"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"ecs"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"host"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"feiyang-localhost"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="只需要配置logstash"><a href="#只需要配置logstash" class="headerlink" title="只需要配置logstash"></a>只需要配置logstash</h2><p>接下来，我们再来看一看 logstash.conf 记得看注释<br>参考链接:</p><ol><li><a href="https://www.elastic.co/guide/en/beats/filebeat/current/configuration-ssl.html" target="_blank" rel="noopener">SSL详情可参考</a></li><li><a href="https://doc.yonyoucloud.com/doc/logstash-best-practice-cn/filter/grok.html" target="_blank" rel="noopener">grok 正则捕获</a></li><li><a href="https://blog.csdn.net/qq_34021712/article/details/79746413" target="_blank" rel="noopener">grok插件语法介绍</a></li><li><a href="http://www.ttlsa.com/elk/elk-logstash-configuration-syntax/" target="_blank" rel="noopener">logstash 配置语法</a></li><li><a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns" target="_blank" rel="noopener">grok 内置 pattern</a>  </li><li><a href="http://www.51niux.com/?id=205" target="_blank" rel="noopener">Logstash详细记录</a></li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; <span class="number">5044</span></span><br><span class="line">    <span class="comment">#host =&gt; "192.168.1.1" 监听内网</span></span><br><span class="line">    <span class="comment">#ssl =&gt; true</span></span><br><span class="line">    <span class="comment">#ssl_certificate =&gt; "/etc/logstash/logstash.crt"</span></span><br><span class="line">    <span class="comment">#ssl_key =&gt; "/etc/logstash/logstash.key"</span></span><br><span class="line"><span class="comment"># 1. SSL详情可参考 </span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># filter 模块主要是数据预处理，提取一些信息，方便 elasticsearch 好归类存储。</span></span><br><span class="line"><span class="comment"># 2. grok 正则捕获</span></span><br><span class="line"><span class="comment"># 3. grok插件语法介绍 </span></span><br><span class="line"><span class="comment"># 4. logstash 配置语法 </span></span><br><span class="line"><span class="comment"># 5. grok 内置 pattern </span></span><br><span class="line">filter &#123;</span><br><span class="line">    grok &#123;  </span><br><span class="line">      match =&gt; &#123;<span class="string">"message"</span> =&gt; <span class="string">"%&#123;EXIM_DATE:timestamp&#125;\|%&#123;LOGLEVEL:log_level&#125;\|%&#123;INT:pid&#125;\|%&#123;GREEDYDATA&#125;"</span>&#125;</span><br><span class="line"><span class="comment"># message 字段是 log 的内容，例如 2018-12-11 23:46:47.051|DEBUG|3491|helper.py:85|helper._save_to_cache|shop_session</span></span><br><span class="line"><span class="comment"># 在这里我们提取出了 timestamp log_level pid，grok 有内置定义好的patterns: EXIM_DATE, EXIM_DATE, INT</span></span><br><span class="line"><span class="comment"># GREEDYDATA 贪婪数据，代表任意字符都可以匹配 </span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 我们在 filebeat 里面添加了这个字段[fields][function]的话，那就会执行对应的 match 规则去匹配 path</span></span><br><span class="line"><span class="comment"># source 字段就是 log 的来源路径，例如 /var/log/nginx/feiyang233.club.access.log</span></span><br><span class="line"><span class="comment"># match 后我们就可以得到 path=feiyang233.club.access</span></span><br><span class="line">    <span class="keyword">if</span> [fields][function]==<span class="string">"nginx"</span> &#123;</span><br><span class="line">        grok &#123;         </span><br><span class="line">        match =&gt; &#123;<span class="string">"source"</span> =&gt; <span class="string">"/var/log/nginx/%&#123;GREEDYDATA:path&#125;.log%&#123;GREEDYDATA&#125;"</span>&#125;  </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment"># 例如 ims 日志来源是 /var/log/ims_logic/debug.log</span></span><br><span class="line"><span class="comment"># match 后我们就可以得到 path=ims_logic</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> [fields][function]==<span class="string">"ims"</span> &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">        match =&gt; &#123;<span class="string">"source"</span> =&gt; <span class="string">"/var/log/%&#123;GREEDYDATA:path&#125;/%&#123;GREEDYDATA&#125;"</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">        match =&gt; &#123;<span class="string">"source"</span> =&gt; <span class="string">"/var/log/app/%&#123;GREEDYDATA:path&#125;/%&#123;GREEDYDATA&#125;"</span>&#125;</span><br><span class="line">            &#125;         </span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># filebeat 有定义 [fields][function] 时，我们就添加上这个字段，例如 QA</span></span><br><span class="line">    <span class="keyword">if</span> [fields][function] &#123;</span><br><span class="line">          mutate &#123;</span><br><span class="line">              add_field =&gt; &#123;</span><br><span class="line">                  <span class="string">"function"</span> =&gt; <span class="string">"%&#123;[fields][function]&#125;"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment"># 因为线上的机器更多，线上的我默认不在 filebeat 添加 function，所以 else 我就添加上 live  </span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">          mutate &#123;</span><br><span class="line">              add_field =&gt; &#123;</span><br><span class="line">                  <span class="string">"function"</span> =&gt; <span class="string">"live"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># 在之前 filter message 时，我们得到了 timestamp，这里我们修改一下格式，添加上时区。</span></span><br><span class="line">    date &#123;</span><br><span class="line">      match =&gt; [<span class="string">"timestamp"</span> , <span class="string">"yyyy-MM-dd HH:mm:ss Z"</span>]</span><br><span class="line">      target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">      timezone =&gt; <span class="string">"Asia/Singapore"</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 将之前获得的 path 替换其中的 / 替换为 - , 因为 elasticsearch index name 有要求</span></span><br><span class="line"><span class="comment"># 例如 feiyang/test  feiyang_test </span></span><br><span class="line">    mutate &#123;</span><br><span class="line">     gsub =&gt; [<span class="string">"path"</span>,<span class="string">"/"</span>,<span class="string">"-"</span>]</span><br><span class="line">      add_field =&gt; &#123;<span class="string">"host_ip"</span> =&gt; <span class="string">"%&#123;[fields][host]&#125;"</span>&#125;</span><br><span class="line">      remove_field =&gt; [<span class="string">"tags"</span>,<span class="string">"@version"</span>,<span class="string">"offset"</span>,<span class="string">"beat"</span>,<span class="string">"fields"</span>,<span class="string">"exim_year"</span>,<span class="string">"exim_month"</span>,<span class="string">"exim_day"</span>,<span class="string">"exim_time"</span>,<span class="string">"timestamp"</span>]</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># remove_field 去掉一些多余的字段</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 单节点 output 就在本机，也不需要 SSL, 但 index 的命名规则还是需要非常的注意</span></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">"localhost:9200"</span>]</span><br><span class="line">    index =&gt; <span class="string">"sg-%&#123;function&#125;-%&#123;path&#125;-%&#123;+xxxx.ww&#125;"</span></span><br><span class="line"><span class="comment"># sg-nginx-feiyang233.club.access-2019.13  ww代表周数</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的流程图如下所示<br><img src="/img/elk/log.png" alt="log"><br>index 的规则 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.4/indices-create-index.html" target="_blank" rel="noopener">参考链接</a></p><ul><li>Lowercase only</li><li>Cannot include \, /, *, ?, “, &lt;, &gt;, |, ` ` (space character), ,, #</li><li>Indices prior to 7.0 could contain a colon (:), but that’s been deprecated and won’t be supported in 7.0+</li><li>Cannot start with -, _, +</li><li>Cannot be . or ..</li><li>Cannot be longer than 255 bytes (note it is bytes, so multi-byte characters will count towards the 255 limit faster)</li></ul><h2 id="Kibana-简单的使用"><a href="#Kibana-简单的使用" class="headerlink" title="Kibana 简单的使用"></a>Kibana 简单的使用</h2><p>在搭建 ELK 时，暴露出来的 5601 端口就是 Kibana 的服务。<br>访问 <a href="http://your_elk_ip:5601" target="_blank" rel="noopener">http://your_elk_ip:5601</a><br><img src="/img/elk/kibana.png" alt="kibana"></p><h1 id="安装设置集群-ELK-版本-6-7"><a href="#安装设置集群-ELK-版本-6-7" class="headerlink" title="安装设置集群 ELK 版本 6.7"></a>安装设置集群 ELK 版本 6.7</h1><p><a href="https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html" target="_blank" rel="noopener">ELK 安装文档</a>集群主要是高可用，多节点的 Elasticsearch 还可以扩容。本文中用的官方镜像 The base image is <a href="https://hub.docker.com/_/centos/" target="_blank" rel="noopener">centos:7</a></p><h2 id="Elasticsearch-多节点搭建"><a href="#Elasticsearch-多节点搭建" class="headerlink" title="Elasticsearch 多节点搭建"></a>Elasticsearch 多节点搭建</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/docker.html" target="_blank" rel="noopener">官方安装文档 Elasticsearch</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载出来的文件夹权限非常的重要</span></span><br><span class="line">mkdir -p /data/elk-data &amp;&amp; chmod 755 /data/elk-data</span><br><span class="line">chown -R root:root /data </span><br><span class="line">docker run -p WAN_IP:9200:9200 -p 10.66.236.116:9300:9300 \</span><br><span class="line">-v /data/elk-data:/usr/share/elasticsearch/data \</span><br><span class="line">--name feiy_elk \</span><br><span class="line">docker.elastic.co/elasticsearch/elasticsearch:6.7.0</span><br></pre></td></tr></table></figure></p><p>接下来是修改配置文件 elasticsearch.yml<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Master 节点 node-1</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># docker exec -it 70ada825aae1 bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="string">cluster.name:</span> <span class="string">"feiy_elk"</span></span><br><span class="line"><span class="string">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="string">node.master:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">node-1</span></span><br><span class="line"><span class="string">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.116</span></span><br><span class="line"><span class="string">discovery.zen.ping.unicast.hosts:</span> <span class="string">["10.66.236.116:9300","10.66.236.118:9300","10.66.236.115:9300"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slave 节点 node-2</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="string">cluster.name:</span> <span class="string">"feiy_elk"</span></span><br><span class="line"><span class="string">network.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">node-2</span></span><br><span class="line"><span class="string">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.118</span></span><br><span class="line"><span class="string">discovery.zen.ping.unicast.hosts:</span> <span class="string">["10.66.236.116:9300","10.66.236.118:9300","10.66.236.115:9300"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slave 节点 node-3</span></span><br><span class="line"><span class="comment"># 进入容器 docker exec -it [container_id] bash</span></span><br><span class="line"><span class="comment"># vi /usr/share/elasticsearch/config/elasticsearch.yml</span></span><br><span class="line"><span class="string">cluster.name:</span> <span class="string">"feiy_elk"</span></span><br><span class="line"><span class="string">network.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">node-3</span></span><br><span class="line"><span class="string">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">network.publish_host:</span> <span class="number">10.66</span><span class="number">.236</span><span class="number">.115</span></span><br><span class="line"><span class="string">discovery.zen.ping.unicast.hosts:</span> <span class="string">["10.66.236.116:9300","10.66.236.118:9300","10.66.236.115:9300"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line"><span class="comment"># docker restart  70ada825aae1</span></span><br></pre></td></tr></table></figure><p>检查集群节点个数，状态等 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html" target="_blank" rel="noopener">Cluster get settings API</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl http://127.0.0.1:9200/_cluster/health?pretty</span><br><span class="line"><span class="comment"># curl http://wan_ip:9200/_cluster/health?pretty</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"feiy_elk"</span>,</span><br><span class="line">  <span class="string">"status"</span> : <span class="string">"green"</span>,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"number_of_nodes"</span> : 3,</span><br><span class="line">  <span class="string">"number_of_data_nodes"</span> : 3,</span><br><span class="line">  <span class="string">"active_primary_shards"</span> : 9,</span><br><span class="line">  <span class="string">"active_shards"</span> : 18,</span><br><span class="line">  <span class="string">"relocating_shards"</span> : 0,</span><br><span class="line">  <span class="string">"initializing_shards"</span> : 0,</span><br><span class="line">  <span class="string">"unassigned_shards"</span> : 0,</span><br><span class="line">  <span class="string">"delayed_unassigned_shards"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_pending_tasks"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_in_flight_fetch"</span> : 0,</span><br><span class="line">  <span class="string">"task_max_waiting_in_queue_millis"</span> : 0,</span><br><span class="line">  <span class="string">"active_shards_percent_as_number"</span> : 100.0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">curl -X GET <span class="string">"localhost:9200/_cluster/health?wait_for_status=yellow&amp;timeout=50s&amp;pretty"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># in console</span></span><br><span class="line">GET /_cluster/health?wait_for_status=yellow&amp;timeout=50s</span><br></pre></td></tr></table></figure></p><p>最终结果图在 kibana 上可以看到集群状态<br><img src="/img/elk/elk.png" alt="elk"></p><h2 id="Kibana-搭建"><a href="#Kibana-搭建" class="headerlink" title="Kibana 搭建"></a>Kibana 搭建</h2><p><a href="https://www.elastic.co/guide/en/kibana/6.7/docker.html" target="_blank" rel="noopener">官方安装文档  Kibana</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker run --link YOUR_ELASTICSEARCH_CONTAINER_NAME_OR_ID:elasticsearch -p 5601:5601 &#123;docker-repo&#125;:&#123;version&#125;</span></span><br><span class="line">docker run -p 外网IP:5601:5601 --link elasticsearch容器的ID:elasticsearch docker.elastic.co/kibana/kibana:6.7.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意的是 --link 官方其实并不推荐的，推荐的是 use user-defined networks https://docs.docker.com/network/links/</span></span><br><span class="line"><span class="comment"># 测试不用 --link 也可以通。直接用容器的 IP</span></span><br><span class="line">docker run -p 外网IP:5601:5601  docker.elastic.co/kibana/kibana:6.7.0</span><br></pre></td></tr></table></figure></p><p>we recommend that you use user-defined networks to facilitate communication between two containers instead of using –<a href="https://docs.docker.com/network/links/" target="_blank" rel="noopener">link</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/kibana/config/kibana.yml</span></span><br><span class="line"><span class="comment"># 需要把 hosts IP 改为 elasticsearch 容器的 IP</span></span><br><span class="line"><span class="comment"># 我这里 elasticsearch 容器的 IP 是 172.17.0.2</span></span><br><span class="line"><span class="comment"># 如何查看 docker inspect elasticsearch_ID</span></span><br><span class="line"><span class="string">server.name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="string">server.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">elasticsearch.hosts:</span> <span class="string">[</span> <span class="string">"http://172.17.0.2:9200"</span> <span class="string">]</span></span><br><span class="line"><span class="string">xpack.monitoring.ui.container.elasticsearch.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出容器并重启</span></span><br><span class="line"><span class="string">docker</span> <span class="string">restart</span> <span class="string">[container_ID]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非容器安装</span></span><br><span class="line"><span class="string">xpack.monitoring.enabled:</span> <span class="string">enable</span></span><br><span class="line"><span class="string">xpack.monitoring.elasticsearch:</span> <span class="string">["http://127.0.0.1:9200"]</span></span><br></pre></td></tr></table></figure><h2 id="Logstash-搭建"><a href="#Logstash-搭建" class="headerlink" title="Logstash 搭建"></a>Logstash 搭建</h2><p>官方安装文档 <a href="https://www.elastic.co/guide/en/logstash/6.7/docker.html" target="_blank" rel="noopener">Logstash</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker -d 以后台的方式启动容器  --name 参数显式地为容器命名</span></span><br><span class="line">docker run -p 5044:5044 -d --name test_logstash  docker.elastic.co/logstash/logstash:6.7.0</span><br><span class="line"><span class="comment"># 也可以指定网卡，监听在内网或者外网 监听在内网 192.168.1.2</span></span><br><span class="line">docker run -p 192.168.1.2:5044:5044 -d --name test_logstash  docker.elastic.co/logstash/logstash:6.7.0</span><br></pre></td></tr></table></figure></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/logstash/pipeline/logstash.conf</span></span><br><span class="line"><span class="comment"># 配置详情请参考下面的链接,记得 output hosts IP 指向 Elasticsearch 的 IP</span></span><br><span class="line"><span class="comment"># Elasticsearch 的默认端口是9200，在下面的配置中可以省略。</span></span><br><span class="line">hosts =&gt; [<span class="string">"IP Address 1:port1"</span>, <span class="string">"IP Address 2:port2"</span>, <span class="string">"IP Address 3"</span>]</span><br></pre></td></tr></table></figure><p><a href="#只需要配置logstash">logstash 过滤规则</a> 见上文的配置和 grok 语法规则<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/share/logstash/config/logstash.yml</span></span><br><span class="line"><span class="comment"># 需要把 url 改为 elasticsearch master 节点的 IP</span></span><br><span class="line"><span class="string">http.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="string">xpack.monitoring.elasticsearch.url:</span> <span class="attr">http://elasticsearch_master_IP:9200</span></span><br><span class="line"><span class="string">node.name:</span> <span class="string">"feiy"</span></span><br><span class="line"><span class="string">pipeline.workers:</span> <span class="number">24</span> <span class="comment"># same with cores</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非容器安装</span></span><br><span class="line"><span class="string">xpack.monitoring.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">xpack.monitoring.elasticsearch.hosts:</span> <span class="string">["http://127.0.0.1:9200"]</span></span><br><span class="line"><span class="string">xpack.monitoring.collection.pipeline.details.enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>改完配置 exit 从容器里退出到宿主机，然后重启这个容器。更多配置详情，参见<a href="https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html" target="_blank" rel="noopener">官方文档</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如何查看 container_ID</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">docker restart [container_ID]</span><br></pre></td></tr></table></figure></p><h2 id="容灾测试"><a href="#容灾测试" class="headerlink" title="容灾测试"></a>容灾测试</h2><p>我们把当前的 master 节点 node-1 关机，通过 kibana 看看集群的状态是怎样变化的。<br><img src="/img/elk/elk1.png" alt="elk1"><br>当前集群的状态变成了黄色，因为还有 3 个 Unassigned Shards。颜色含义请参考<a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/_cluster_health.html" target="_blank" rel="noopener">官方文档</a>，再过一会发现集群状态变成了绿色。<br><img src="/img/elk/elk2.png" alt="elk2"> </p><h1 id="kibana-控制台-Console"><a href="#kibana-控制台-Console" class="headerlink" title="kibana 控制台 Console"></a>kibana 控制台 Console</h1><p><strong>Quick intro to the UI</strong><br>The Console UI is split into two panes: an editor pane (left) and a response pane (right). Use the editor to type requests and submit them to Elasticsearch. The results will be displayed in the response pane on the right side.  </p><p>Console understands requests in a compact format, similar to cURL:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index a doc</span></span><br><span class="line">PUT index/type/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"body"</span>: <span class="string">"here"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># and get it ...</span></span><br><span class="line">GET index/type/<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>While typing a request, Console will make suggestions which you can then accept by hitting Enter/Tab. These suggestions are made based on the request structure as well as your indices and types.  </p><p><strong>A few quick tips, while I have your attention</strong>   </p><ul><li>Submit requests to ES using the green triangle button.</li><li>Use the wrench menu for other useful things.</li><li>You can paste requests in cURL format and they will be translated to the Console syntax.</li><li>You can resize the editor and output panes by dragging the separator between them.</li><li>Study the keyboard shortcuts under the Help button. Good stuff in there!  </li></ul><h2 id="Console-常用的命令"><a href="#Console-常用的命令" class="headerlink" title="Console 常用的命令"></a>Console 常用的命令</h2><p><a href="https://www.elastic.co/guide/cn/kibana/current/console-kibana.html" target="_blank" rel="noopener">Kibana 控制台</a><br><a href="https://segmentfault.com/a/1190000015654154" target="_blank" rel="noopener">ELK技术栈中的那些查询语法</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">"https://user:passwd@IP:9200/_cat/indices?v"</span></span><br><span class="line"></span><br><span class="line">GET _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_cat/health?v</span><br><span class="line"></span><br><span class="line">GET /_cat/nodes?v</span><br><span class="line"></span><br><span class="line">GET /_cluster/allocation/explain</span><br><span class="line"></span><br><span class="line">GET /_cluster/state</span><br><span class="line"></span><br><span class="line">GET /_cat/thread_pool?v</span><br><span class="line"></span><br><span class="line">GET /_cat/indices?health=red&amp;v</span><br><span class="line"></span><br><span class="line">GET /_cat/indices?v</span><br><span class="line"></span><br><span class="line"><span class="comment">#将当前所有的 index 的 replicas 设置为 0</span></span><br><span class="line"></span><br><span class="line">PUT /*/_settings</span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">"index"</span> : &#123;</span><br><span class="line">       <span class="string">"number_of_replicas"</span> : 0,</span><br><span class="line">       <span class="string">"refresh_interval"</span>: <span class="string">"30s"</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_template</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在单节点的时候，不需要备份，所以将 replicas 设置为 0</span></span><br><span class="line">PUT _template/app-logstash</span><br><span class="line">&#123;</span><br><span class="line"> <span class="string">"index_patterns"</span>: [<span class="string">"app-*"</span>],</span><br><span class="line"> <span class="string">"settings"</span>: &#123;</span><br><span class="line">   <span class="string">"number_of_shards"</span>: 3,</span><br><span class="line">   <span class="string">"number_of_replicas"</span>: 0,</span><br><span class="line">   <span class="string">"refresh_interval"</span>: <span class="string">"30s"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Delete all indices in your Elastic Search cluster</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl <span class="string">'localhost:9200/_cat/indices?v'</span> | tail -n +2 | awk <span class="string">'&#123;print $3&#125;'</span>`; <span class="keyword">do</span> curl -XDELETE <span class="string">"http://127.0.0.1:9200/<span class="variable">$i</span>"</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim delete_elk.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `curl <span class="string">'localhost:9200/_cat/indices?v'</span> | tail -n +2 | awk <span class="string">'&#123;print $3&#125;'</span>`; <span class="keyword">do</span></span><br><span class="line"> curl -XDELETE <span class="string">"http://127.0.0.1:9200/<span class="variable">$i</span>"</span>; </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">sleep 5s</span><br><span class="line">systemctl restart elasticsearch</span><br></pre></td></tr></table></figure><h1 id="Elasticsearch-数据迁移"><a href="#Elasticsearch-数据迁移" class="headerlink" title="Elasticsearch 数据迁移"></a>Elasticsearch 数据迁移</h1><p><a href="https://www.elastic.co/guide/en/cloud/current/ec-migrate-data.html" target="_blank" rel="noopener">Elasticsearch 数据迁移官方文档</a>感觉不是很详细。容器化的数据迁移，我太菜用 reindex 失败了，snapshot 也凉凉。<br>最后是用一个开源工具 <a href="https://github.com/medcl/esm-abandoned" target="_blank" rel="noopener">An Elasticsearch Migration Tool</a> 进行数据迁移的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/medcl/esm-abandoned/releases/download/v0.4.2/linux64.tar.gz</span><br><span class="line">tar -xzvf linux64.tar.gz</span><br><span class="line">./esm  -s http://127.0.0.1:9200   -d http://192.168.21.55:9200 -x index_name  -w=5 -b=10 -c 10000 --copy_settings --copy_mappings --force  --refresh</span><br></pre></td></tr></table></figure><h1 id="Nginx-代理转发"><a href="#Nginx-代理转发" class="headerlink" title="Nginx 代理转发"></a>Nginx 代理转发</h1><p>因为有时候 docker 重启，iptables restart 也会刷新，所以导致了我们的限制规则会被更改，出现安全问题。这是由于 docker 的网络隔离基于 iptable 实现造成的问题。为了避免这个安全问题，我们可以在启动 docker 时，就只监听在内网，或者本地 127.0.0.1 然后通过 nginx 转发。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># cat kibana.conf</span><br><span class="line">upstream kibana &#123;</span><br><span class="line">    server 127.0.0.1:5601;</span><br><span class="line">    keepalive 15;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 25601;</span><br><span class="line">    server_name x.x.x.x;</span><br><span class="line">    access_log /var/log/nginx/kibana.access.log;</span><br><span class="line">    error_log /var/log/nginx/kibana.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        allow x.x.x.x;</span><br><span class="line">        allow x.x.x.x;</span><br><span class="line">        deny all;</span><br><span class="line"></span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_buffer_size 64k;</span><br><span class="line">        proxy_buffers   32 32k;</span><br><span class="line">        proxy_busy_buffers_size 128k;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Connection &quot;Keep-Alive&quot;;</span><br><span class="line">        proxy_set_header Proxy-Connection &quot;Keep-Alive&quot;;</span><br><span class="line">        </span><br><span class="line">        proxy_pass    http://kibana;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>! 这里需要注意的是， iptable filter 表 INPUT 链 有没有阻挡 172.17.0.0/16  docker 默认的网段。是否阻挡了 25601 这个端口。</p><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><h2 id="iptables-防不住"><a href="#iptables-防不住" class="headerlink" title="iptables 防不住"></a>iptables 防不住</h2><p>需要看<a href="/post/network/">上一篇博客</a>里的 iptable 问题。或者监听在内网，用 Nginx 代理转发。</p><h2 id="elk-网络问题"><a href="#elk-网络问题" class="headerlink" title="elk 网络问题"></a>elk <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html" target="_blank" rel="noopener">网络问题</a></h2><h2 id="elk-node"><a href="#elk-node" class="headerlink" title="elk node"></a>elk <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/modules-node.html" target="_blank" rel="noopener">node</a></h2><h2 id="单节点"><a href="#单节点" class="headerlink" title="单节点"></a>单节点</h2><p><code>discovery.type=single-node</code><br>在测试单点时可用，搭建集群时不能设置这个环境变量，详情见<a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.7/bootstrap-checks.html#single-node-discovery" target="_blank" rel="noopener">官方文档</a></p><h2 id="ELK的一次吞吐量优化"><a href="#ELK的一次吞吐量优化" class="headerlink" title="ELK的一次吞吐量优化"></a>ELK的一次<a href="https://www.leiyawu.com/2018/04/03/elk/" target="_blank" rel="noopener">吞吐量优化</a></h2><h2 id="filebeat-版本"><a href="#filebeat-版本" class="headerlink" title="filebeat 版本"></a>filebeat 版本</h2><p>版本过低导致 recursive glob patterns <a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-log.html#recursive_glob" target="_blank" rel="noopener">**</a> 不可用<br>用 ansible 升级 filebeat<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">upload</span> <span class="string">filebeat.repo</span> </span><br><span class="line"><span class="attr">    copy:</span></span><br><span class="line"><span class="attr">     src:</span> <span class="string">elasticsearch.repo</span></span><br><span class="line"><span class="attr">     dest:</span> <span class="string">/etc/yum.repos.d/elasticsearch.repo</span></span><br><span class="line"><span class="attr">     owner:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">     mode:</span> <span class="number">0644</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">install</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span> <span class="string">of</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    yum:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">latest</span> <span class="comment">#6.x.1-1 7.x.1-1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">restart</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">    service:</span> </span><br><span class="line"><span class="attr">      name:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">      state:</span> <span class="string">restarted</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">yes</span></span><br><span class="line">      </span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/elasticsearch.repo</span></span><br><span class="line"><span class="string">[elasticsearch-6.x]</span></span><br><span class="line"><span class="string">name=Elasticsearch</span> <span class="string">repository</span> <span class="string">for</span> <span class="number">6.</span><span class="string">x</span> <span class="string">packages</span></span><br><span class="line"><span class="string">baseurl=https://artifacts.elastic.co/packages/6.x/yum</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">autorefresh=1</span></span><br><span class="line"><span class="string">type=rpm-md</span></span><br><span class="line"></span><br><span class="line"><span class="string">[elasticsearch-7.x]</span></span><br><span class="line"><span class="string">name=Elasticsearch</span> <span class="string">repository</span> <span class="string">for</span> <span class="number">7.</span><span class="string">x</span> <span class="string">packages</span></span><br><span class="line"><span class="string">baseurl=https://artifacts.elastic.co/packages/7.x/yum</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">autorefresh=1</span></span><br><span class="line"><span class="string">type=rpm-md</span></span><br></pre></td></tr></table></figure></p><h2 id="filebeat-兼容性"><a href="#filebeat-兼容性" class="headerlink" title="filebeat 兼容性"></a>filebeat 兼容性</h2><p>7.x 与 6.x 不兼容问题. 关键字变化很大, 比如说 “sorce” 变为了 [log][file][path]</p><h2 id="kibana报错"><a href="#kibana报错" class="headerlink" title="kibana报错"></a>kibana报错</h2><p>“message”:”Alias [.kibana] has more than one indices associated with it [[.kibana_1, .kibana_2]] 这是因为 kibana 连接了一台机器，如果我们把这台 host 和 kibana 删除，但 kibana 的数据还会在另外两台 host上。当重新创建 host 加入时，会自动同步 .kibana，kibana 就会报错</p><h2 id="7-4版本日志位置"><a href="#7-4版本日志位置" class="headerlink" title="7.4版本日志位置"></a>7.4版本日志位置</h2><p>没有写在 /var/log/ 对应的文件夹，而是 sttout , 在 /var/log/messages 下。 或者可以用命令 journalctl -fu logstash 查看最新的日志。</p><h2 id="logstash-7-4-启动错误"><a href="#logstash-7-4-启动错误" class="headerlink" title="logstash-7.4 启动错误"></a>logstash-7.4 启动错误</h2><p>CentOS 添加好 repo 后， 用 yum install logstash 安装好了以后。正在启动，但没有看到有进程监听 5044 端口， journalctl -fu logstash 查看日志发现报错如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[2019-11-21T19:18:21,800][FATAL][logstash.runner] An unexpected error occurred! </span><br><span class="line">&#123;:error=&gt;&lt;ArgumentError: Path <span class="string">"/var/lib/logstash/dead_letter_queue"</span> </span><br><span class="line">must be a writable directory. It is not writable.</span><br><span class="line"></span><br><span class="line"><span class="comment">#然后我们修改权限</span></span><br><span class="line">chmod 777 /var/lib/logstash/dead_letter_queue</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新的报错为 Access Denied </span></span><br><span class="line"></span><br><span class="line">&#123;:error=&gt;java.nio.file.AccessDeniedException: /var/lib/logstash/.lock</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次修改权限，终于成功了</span></span><br><span class="line">chmod 777 /var/lib/logstash/.lock</span><br></pre></td></tr></table></figure></p><h2 id="disk-full"><a href="#disk-full" class="headerlink" title="disk full"></a>disk full</h2><p>once disk usage more than 95%, elasticseach will stop store new data to index, and will add lock for these index. Even you release the disk, the lock is still enable. elk cannot store new data to read-only index. you will see the error log in logstash<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[logstash.outputs.elasticsearch] retrying failed action with response code: 403 </span><br><span class="line">(&#123;&quot;type&quot;=&gt;ggq&quot;cluster_block_exception&quot;, &quot;reason&quot;=&gt;&quot;blocked by: [FORBIDDEN/12/index read-only / allow delete (api)];&quot;&#125;)</span><br></pre></td></tr></table></figure></p><p>The solution is <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.5/disk-allocator.html" target="_blank" rel="noopener">resetting the read-only index</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># In consloe </span></span><br><span class="line">PUT /index_name/_settings</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"index.blocks.read_only_allow_delete"</span>: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line">curl -X PUT <span class="string">"localhost:9200/index_name/_settings?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  "index.blocks.read_only_allow_delete": null</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'</span></span><br></pre></td></tr></table></figure></p><h2 id="kibana-cannot-create-index"><a href="#kibana-cannot-create-index" class="headerlink" title="kibana cannot create index"></a>kibana cannot create index</h2><p>In elasticsearch log, about <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/fielddata.html#fielddata" target="_blank" rel="noopener">Fielddata</a></p><p>The <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-index.html" target="_blank" rel="noopener">index</a>  option controls whether field values are indexed. It accepts true or false and defaults to true. Fields that are not indexed are not queryable.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[2020-02-03T00:00:12,211][DEBUG][o.e.a.s.TransportSearchAction] [localhost.localdomain] All shards failed for phase: [query]</span><br><span class="line">org.elasticsearch.ElasticsearchException$1: Fielddata is disabled on text fields by default. Set fielddata=true on [type] in order to load fielddata in memory by uninverting the inverted index. Note that this can however use significant memory. Alternatively use a keyword field instead.</span><br><span class="line">        at org.elasticsearch.ElasticsearchException.guessRootCauses(ElasticsearchException.java:639) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:137) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:273) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.InitialSearchPhase.onShardFailure(InitialSearchPhase.java:105) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.InitialSearchPhase.access$200(InitialSearchPhase.java:50) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.InitialSearchPhase$2.onFailure(InitialSearchPhase.java:273) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.search.SearchTransportService$ConnectionCountingHandler.handleException(SearchTransportService.java:424) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:1120) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:1229) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:1203) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.transport.TaskTransportChannel.sendResponse(TaskTransportChannel.java:60) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.support.ChannelActionListener.onFailure(ChannelActionListener.java:56) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener$1.onFailure(ActionListener.java:70) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:64) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.lambda$rewriteShardRequest$7(SearchService.java:1043) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionRunnable$1.doRun(ActionRunnable.java:45) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:773) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]</span><br><span class="line">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]</span><br><span class="line">        at java.lang.Thread.run(Thread.java:830) [?:?]</span><br><span class="line">Caused by: java.lang.IllegalArgumentException: Fielddata is disabled on text fields by default. Set fielddata=true on [type] in order to load fielddata in memory by uninverting the inverted index. Note that this can however use significant memory. Alternatively use a keyword field instead.</span><br><span class="line">        at org.elasticsearch.index.mapper.TextFieldMapper$TextFieldType.fielddataBuilder(TextFieldMapper.java:759) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.index.fielddata.IndexFieldDataService.getForField(IndexFieldDataService.java:116) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.index.query.QueryShardContext.getForField(QueryShardContext.java:191) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceConfig.resolve(ValuesSourceConfig.java:112) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder.resolveConfig(ValuesSourceAggregationBuilder.java:350) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder.doBuild(ValuesSourceAggregationBuilder.java:322) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder.doBuild(ValuesSourceAggregationBuilder.java:39) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.AbstractAggregationBuilder.build(AbstractAggregationBuilder.java:139) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.aggregations.AggregatorFactories$Builder.build(AggregatorFactories.java:332) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.parseSource(SearchService.java:784) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.createContext(SearchService.java:586) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:545) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:348) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.search.SearchService.lambda$executeQueryPhase$1(SearchService.java:340) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener.lambda$map$2(ActionListener.java:145) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        at org.elasticsearch.action.ActionListener$1.onResponse(ActionListener.java:62) ~[elasticsearch-7.4.2.jar:7.4.2]</span><br><span class="line">        ... 9 more</span><br></pre></td></tr></table></figure></p><h2 id="es-cluster"><a href="#es-cluster" class="headerlink" title="es cluster"></a>es cluster</h2><p>If we use domain for es cluster node load balance, we must specify the port, because kibana will use default port is 9200. But nginx load balance port is 80 or 443. If we use wrong port, the error is kibana Request Timeout after 3000ms</p><h1 id="自定义部分"><a href="#自定义部分" class="headerlink" title="自定义部分"></a>自定义部分</h1><h2 id="自动删除-index"><a href="#自动删除-index" class="headerlink" title="自动删除 index"></a>自动删除 index</h2><p>因为我是按周数来 %{+xxxx.ww} 存 index，由于我们的存储机器硬盘有限，最多能存放两个周的日志，所以需要删除两周之前的 index<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /opt/delete.sh</span></span><br><span class="line"><span class="comment"># 这个是放在容器内的脚本。</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">week=$(date -d <span class="string">"-2 week "</span> +%V)</span><br><span class="line">year=$(date +%Y)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$year</span><span class="string">"-"</span><span class="variable">$week</span></span><br><span class="line">curl -XDELETE <span class="string">'http://127.0.0.1:9200/*-'</span><span class="variable">$year</span><span class="string">'.'</span><span class="variable">$week</span><span class="string">''</span></span><br></pre></td></tr></table></figure></p><p>宿主机上跑 cronjob<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/crontab</span></span><br><span class="line"></span><br><span class="line">0 03  * * 1 root /bin/docker <span class="built_in">exec</span> [mysql 容器 ID] bash -c  <span class="string">"cd /opt &amp;&amp; bash delete.sh"</span> </span><br><span class="line"></span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure></p><h2 id="内部log过大"><a href="#内部log过大" class="headerlink" title="内部log过大"></a>内部log过大</h2><p>因为默认的 log level 的 INFO, 所以 logstash 的日志特别大。导致在做 logrotate 日志切割时 disk I/O 特别的大。<br>解决的办法就是修改 log.level 在  /opt/logstash/config/log4j2.properties 里修改 log.level， 还有修改 /opt/logstash/config/logstash.yml  然后重启 logstash<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ------------ Debugging Settings --------------</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Options for log.level:</span></span><br><span class="line"><span class="comment">#   * fatal</span></span><br><span class="line"><span class="comment">#   * error</span></span><br><span class="line"><span class="comment">#   * warn</span></span><br><span class="line"><span class="comment">#   * info (default)</span></span><br><span class="line"><span class="comment">#   * debug</span></span><br><span class="line"><span class="comment">#   * trace</span></span><br><span class="line"><span class="comment">#日志输出的等级</span></span><br><span class="line"><span class="comment"># Trace:是追踪，就是程序推进一下.</span></span><br><span class="line"><span class="comment"># Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.</span></span><br><span class="line"><span class="comment"># Info:消息在粗粒度级别上突出强调应用程序的运行过程.</span></span><br><span class="line"><span class="comment"># Warn:输出警告及warn以下级别的日志.</span></span><br><span class="line"><span class="comment"># Error:输出错误信息日志.</span></span><br><span class="line"><span class="comment"># Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.</span></span><br><span class="line"> <span class="string">log.level:</span> <span class="string">info</span></span><br></pre></td></tr></table></figure></p><p>修改日志保留的日期，默认是一周，可以修改 /etc/logrotate.d/logstash  rotate 天数</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ELK 官方文档&lt;/a&gt; 是一个分布式、可扩展、实时的搜索与数据分析引擎。目前我在工作中只用来收集 server 的 log, 开发锅锅们 debug 的好助手。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="elk" scheme="http://feiyang233.club/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>GitHub-Hexo-NexT 免费搭建自己的博客</title>
    <link href="http://feiyang233.club/post/hexo-blog/"/>
    <id>http://feiyang233.club/post/hexo-blog/</id>
    <published>2019-03-15T03:05:30.000Z</published>
    <updated>2019-07-11T07:29:40.709Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于写博客"><a href="#关于写博客" class="headerlink" title="关于写博客"></a>关于写博客</h2><p>2018 年我在 GitHub 上看到<a href="http://blog.dploop.org/" target="_blank" rel="noopener">强哥的博客</a>，当时为之心动然后 Fork 了那个 repository。后来搬砖沦为社会人就断更了，在工作之后看到<a href="https://wsgzao.github.io/" target="_blank" rel="noopener">奥哥的博客</a>，在他的安利之下，把之前的 Jekyll 的博客换成如今的 Hexo-NexT，打算记录下工作的点滴，学习的心得。一是分享，二是方便自己回顾和查阅。<a id="more"></a>  </p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>如果没有 GitHub 账号，需要去官网 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 注册一个账号。账号注册好之后，需要创建一个 repository，名称格式为 xxx.github.io  例如我的 GitHub 名称为 fainyang, 浏览器显示的 URL 为 <a href="https://github.com/fainyang" target="_blank" rel="noopener">https://github.com/fainyang</a> 那么我新建的 repository 就是 fainyang.github.io    </p><p><img src="/img/2019/github.png" alt="github">  </p><p>申请完账号，创建了 repository 之后，下一步就是在自己的电脑上安装 Hexo。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo——快速、简洁且高效的博客框架。官网 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a> 文档还有视频讲解如何安装  </p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>在安装 Hexo 之前，需要安装 Git 与 Node.js 请参考 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">这里</a>   </p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g  </span><br><span class="line">npm install hexo --save</span><br><span class="line">hexo init &lt;folder&gt;   # &lt;folder&gt; 自己取个文件夹名字</span><br><span class="line">cd &lt;folder&gt;          # 移动到 &lt;folder&gt; 文件夹，不清楚当前路径，可以执行 Mac:pwd  Windows: chdir</span><br><span class="line">npm install          #feiy-mac:Coding feiy$ pwd    /Users/feiy/Coding</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml    #站点配置文件,主要就是修改这个文件</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds      #模板文件夹</span><br><span class="line">├── source         #存放文章，图片的文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes         #主题文件夹，等会下载 NexT 主题</span><br></pre></td></tr></table></figure></p><h3 id="这是我的-config-yml-配置"><a href="#这是我的-config-yml-配置" class="headerlink" title="这是我的 _config.yml 配置"></a>这是我的 _config.yml 配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">feiyang's</span> <span class="string">blog</span>  </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">费洋的博客</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">佛系咸鱼</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">feiyang</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>     <span class="comment">#网址的显示语言</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://fainyang.github.io</span>      <span class="comment">#需要修改为自己的网址</span></span><br><span class="line"><span class="attr">enforce_ssl:</span> <span class="string">fainyang.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">post/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> </span><br><span class="line"> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tab_replace:</span> </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span> </span><br><span class="line"><span class="attr">tag_map:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/fainyang/fainyang.github.io.git</span>  <span class="comment">#部署上传的地址，需要修改为自己的</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  message:</span> <span class="string">new</span> <span class="string">hexo_blog</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Others</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  yearly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  monthly:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h3><p>官网详细的介绍 <a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令缩写</span><br><span class="line">hexo n "文章标题" == hexo new "文章标题" #新建文章</span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server   #启动服务预览</span><br><span class="line">hexo d == hexo deploy   #部署</span><br></pre></td></tr></table></figure><h3 id="本地运行网站"><a href="#本地运行网站" class="headerlink" title="本地运行网站"></a>本地运行网站</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s  # 当前路径要在之前创建的 hexo init &lt;folder&gt;  这个 &lt;folder&gt; 下</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>在浏览器输入 <code>http://localhost:4000</code> 就可以看到初始的网站 </p><h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><p>Elegant Theme for Hexo——精于心，简于形。 官网 <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p><h3 id="安装-Next"><a href="#安装-Next" class="headerlink" title="安装 Next"></a>安装 Next</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 当前路径要在之前创建的 hexo init &lt;folder&gt;  这个 &lt;folder&gt; 下 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前路径 Mac:<span class="built_in">pwd</span>  Windows: <span class="built_in">chdir</span></span></span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>git clone 完成后，指定文件夹的目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml    #站点配置文件，主要就是修改这个文件</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds      #模板文件夹</span><br><span class="line">├── source         #存放文章，图片的文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes         #主题文件夹，等会下载 NexT 主题</span><br><span class="line">    ├── landscape</span><br><span class="line">    └── next</span><br><span class="line">        └── _config.yml  #主题配置文件，修改博客主题样式等</span><br></pre></td></tr></table></figure></p><h3 id="主题配置文件-config-yml"><a href="#主题配置文件-config-yml" class="headerlink" title="主题配置文件 _config.yml"></a>主题配置文件 _config.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  菜单显示项</span></span><br><span class="line"><span class="attr">menu:</span> </span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes 主题选择，我用的是 Gemini</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure><p>此时可以在本地预览一下运行命令 <code>hexo s</code></p><h3 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h3><p>部署前，需要修改配置文件里面的 git 地址<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/yourname/yourname.github.io.git</span>  <span class="comment">#部署上传的地址，需要修改为自己的</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  message:</span> <span class="string">new</span> <span class="string">hexo_blog</span></span><br></pre></td></tr></table></figure></p><p>修改好 _config.yml 里的 deploy 模块后，就可以开始进行部署，上传到 GitHub<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><p>第一次部署需要输入自己的 GitHub 账号和密码。后面更新部署时就不需要再次输入密码了。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line">feiy-mac:fainyang.github.io feiy$ hexo clean     #清除缓存</span><br><span class="line">INFO  Deleted database.</span><br><span class="line">INFO  Deleted public folder.</span><br><span class="line">feiy-mac:fainyang.github.io feiy$ hexo generate  #生成文件</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 902 ms</span><br><span class="line">INFO  Generated: sitemap.xml</span><br><span class="line">INFO  Generated: atom.xml</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: tags/index.html</span><br><span class="line">INFO  Generated: categories/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: about/index.html</span><br><span class="line">INFO  Generated: img/combination1.png</span><br><span class="line">INFO  Generated: images/algolia_logo.svg</span><br><span class="line">INFO  Generated: img/combination2.png</span><br><span class="line">INFO  Generated: img/404-southpark.jpg</span><br><span class="line">INFO  Generated: img/favicon.ico</span><br><span class="line">INFO  Generated: img/gay.jpeg</span><br><span class="line">INFO  Generated: images/apple-touch-icon-next.png</span><br><span class="line">INFO  Generated: img/old_driver.jpg</span><br><span class="line">INFO  Generated: img/qq-qrcode.png</span><br><span class="line">INFO  Generated: img/zjxc.jpg</span><br><span class="line">INFO  Generated: images/cc-by-nc-nd.svg</span><br><span class="line">INFO  Generated: images/avatar.gif</span><br><span class="line">INFO  Generated: images/cc-by-nc-sa.svg</span><br><span class="line">INFO  Generated: images/cc-by-nc.svg</span><br><span class="line">INFO  Generated: images/cc-by-sa.svg</span><br><span class="line">INFO  Generated: images/cc-by-nd.svg</span><br><span class="line">INFO  Generated: images/cc-by.svg</span><br><span class="line">INFO  Generated: images/favicon.ico</span><br><span class="line">INFO  Generated: images/quote-l.svg</span><br><span class="line">INFO  Generated: images/cc-zero.svg</span><br><span class="line">INFO  Generated: images/loading.gif</span><br><span class="line">INFO  Generated: images/logo.svg</span><br><span class="line">INFO  Generated: images/searchicon.png</span><br><span class="line">INFO  Generated: images/favicon-16x16-next.png</span><br><span class="line">INFO  Generated: images/placeholder.gif</span><br><span class="line">INFO  Generated: images/favicon-32x32-next.png</span><br><span class="line">INFO  Generated: images/quote-r.svg</span><br><span class="line">INFO  Generated: images/feiy.gif</span><br><span class="line">INFO  Generated: archives/2019/03/index.html</span><br><span class="line">INFO  Generated: archives/2018/02/index.html</span><br><span class="line">INFO  Generated: post/hexo-blog/index.html</span><br><span class="line">INFO  Generated: img/work/6.jpg</span><br><span class="line">INFO  Generated: archives/2018/08/index.html</span><br><span class="line">INFO  Generated: categories/学习/index.html</span><br><span class="line">INFO  Generated: archives/2018/11/index.html</span><br><span class="line">INFO  Generated: archives/2018/07/index.html</span><br><span class="line">INFO  Generated: img/robot/run.png</span><br><span class="line">INFO  Generated: tags/python/index.html</span><br><span class="line">INFO  Generated: categories/生活/index.html</span><br><span class="line">INFO  Generated: tags/hexo/index.html</span><br><span class="line">INFO  Generated: tags/工作/index.html</span><br><span class="line">INFO  Generated: archives/2018/04/index.html</span><br><span class="line">INFO  Generated: archives/2018/03/index.html</span><br><span class="line">INFO  Generated: tags/links/index.html</span><br><span class="line">INFO  Generated: post/Canteen/index.html</span><br><span class="line">INFO  Generated: tags/NUS/index.html</span><br><span class="line">INFO  Generated: img/2019/github.png</span><br><span class="line">INFO  Generated: post/Onboarding/index.html</span><br><span class="line">INFO  Generated: post/Combination/index.html</span><br><span class="line">INFO  Generated: post/Robot/index.html</span><br><span class="line">INFO  Generated: post/blog/index.html</span><br><span class="line">INFO  Generated: post/Master/index.html</span><br><span class="line">INFO  Generated: post/links/index.html</span><br><span class="line">INFO  Generated: post/timestampdiff/index.html</span><br><span class="line">INFO  Generated: img/time3.png</span><br><span class="line">INFO  Generated: img/start.jpg</span><br><span class="line">INFO  Generated: img/robot/tencent.png</span><br><span class="line">INFO  Generated: img/work/8.JPG</span><br><span class="line">INFO  Generated: img/work/7.JPG</span><br><span class="line">INFO  Generated: img/avatar-icon.jpg</span><br><span class="line">INFO  Generated: img/time1.png</span><br><span class="line">INFO  Generated: img/wx-qrcode.png</span><br><span class="line">INFO  Generated: archives/2018/index.html</span><br><span class="line">INFO  Generated: archives/2019/index.html</span><br><span class="line">INFO  Generated: img/146228364162795.jpg</span><br><span class="line">INFO  Generated: lib/font-awesome/HELP-US-OUT.txt</span><br><span class="line">INFO  Generated: css/main.css</span><br><span class="line">INFO  Generated: img/canteen/bird.jpg</span><br><span class="line">INFO  Generated: img/combination3.png</span><br><span class="line">INFO  Generated: img/time4.png</span><br><span class="line">INFO  Generated: img/path.jpg</span><br><span class="line">INFO  Generated: img/time2.png</span><br><span class="line">INFO  Generated: img/work/10.JPG</span><br><span class="line">INFO  Generated: img/work/5.JPG</span><br><span class="line">INFO  Generated: img/work/13.JPG</span><br><span class="line">INFO  Generated: img/work/2.JPG</span><br><span class="line">INFO  Generated: img/work/1.JPG</span><br><span class="line">INFO  Generated: lib/font-awesome/bower.json</span><br><span class="line">INFO  Generated: img/robot/ditou.jpg</span><br><span class="line">INFO  Generated: img/canteen/contact.png</span><br><span class="line">INFO  Generated: img/robot/happy.jpg</span><br><span class="line">INFO  Generated: img/robot/poor.jpeg</span><br><span class="line">INFO  Generated: img/robot/miaohui.jpg</span><br><span class="line">INFO  Generated: img/robot/qidai.jpeg</span><br><span class="line">INFO  Generated: img/robot/python.png</span><br><span class="line">INFO  Generated: img/robot/tuling.png</span><br><span class="line">INFO  Generated: img/canteen/B.png</span><br><span class="line">INFO  Generated: img/robot/dalao.png</span><br><span class="line">INFO  Generated: lib/velocity/velocity.ui.min.js</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.woff2</span><br><span class="line">INFO  Generated: img/robot/result3.jpeg</span><br><span class="line">INFO  Generated: img/canteen/F-319.png</span><br><span class="line">INFO  Generated: img/canteen/F-320.png</span><br><span class="line">INFO  Generated: img/robot/result1.jpeg</span><br><span class="line">INFO  Generated: img/work/9.JPG</span><br><span class="line">INFO  Generated: img/canteen/wen.png</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.woff</span><br><span class="line">INFO  Generated: img/canteen/E1.png</span><br><span class="line">INFO  Generated: lib/velocity/velocity.ui.js</span><br><span class="line">INFO  Generated: lib/velocity/velocity.min.js</span><br><span class="line">INFO  Generated: img/canteen/E-322.png</span><br><span class="line">INFO  Generated: img/canteen/F-321.png</span><br><span class="line">INFO  Generated: img/canteen/F-322.png</span><br><span class="line">INFO  Generated: img/canteen/F-323.png</span><br><span class="line">INFO  Generated: img/canteen/Y-320.png</span><br><span class="line">INFO  Generated: img/canteen/Y-321.png</span><br><span class="line">INFO  Generated: img/canteen/Y-322.png</span><br><span class="line">INFO  Generated: img/work/12.JPG</span><br><span class="line">INFO  Generated: img/robot/result2.jpeg</span><br><span class="line">INFO  Generated: img/work/4.JPG</span><br><span class="line">INFO  Generated: img/canteen/E-319.png</span><br><span class="line">INFO  Generated: js/src/algolia-search.js</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.css.map</span><br><span class="line">INFO  Generated: img/issue.png</span><br><span class="line">INFO  Generated: img/combination4.png</span><br><span class="line">INFO  Generated: img/canteen/E-323.png</span><br><span class="line">INFO  Generated: img/work/3.JPG</span><br><span class="line">INFO  Generated: img/canteen/Y-319.png</span><br><span class="line">INFO  Generated: img/canteen/table.png</span><br><span class="line">INFO  Generated: img/work/11.JPG</span><br><span class="line">INFO  Generated: img/work/15.JPG</span><br><span class="line">INFO  Generated: js/src/affix.js</span><br><span class="line">INFO  Generated: js/src/exturl.js</span><br><span class="line">INFO  Generated: js/src/next-boot.js</span><br><span class="line">INFO  Generated: js/src/scrollspy.js</span><br><span class="line">INFO  Generated: js/src/js.cookie.js</span><br><span class="line">INFO  Generated: js/src/post-details.js</span><br><span class="line">INFO  Generated: js/src/scroll-cookie.js</span><br><span class="line">INFO  Generated: lib/font-awesome/fonts/fontawesome-webfont.eot</span><br><span class="line">INFO  Generated: img/canteen/Y-323.png</span><br><span class="line">INFO  Generated: img/canteen/E-321.png</span><br><span class="line">INFO  Generated: img/canteen/E-320.png</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.min.css</span><br><span class="line">INFO  Generated: lib/font-awesome/css/font-awesome.css</span><br><span class="line">INFO  Generated: js/src/motion.js</span><br><span class="line">INFO  Generated: js/src/utils.js</span><br><span class="line">INFO  Generated: js/src/schemes/pisces.js</span><br><span class="line">INFO  Generated: img/work/16.JPG</span><br><span class="line">INFO  Generated: js/src/schemes/muse.js</span><br><span class="line">INFO  Generated: img/work/14.JPG</span><br><span class="line">INFO  Generated: lib/jquery/index.js</span><br><span class="line">INFO  Generated: img/install-steps.gif</span><br><span class="line">INFO  Generated: lib/velocity/velocity.js</span><br><span class="line">INFO  Generated: img/work/17.JPG</span><br><span class="line">INFO  Generated: img/work/18.jpg</span><br><span class="line">INFO  152 files generated in 1.86 s</span><br><span class="line">feiy-mac:fainyang.github.io feiy$ hexo deploy     #部署到 GitHub</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">[master f55c4d1] new hexo_blog</span><br><span class="line"> 34 files changed, 8859 insertions(+), 150 deletions(-)</span><br><span class="line"> create mode 100644 archives/2019/03/index.html</span><br><span class="line"> create mode 100644 archives/2019/index.html</span><br><span class="line"> create mode 100644 categories/index.html</span><br><span class="line"> create mode 100644 categories/学习/index.html</span><br><span class="line"> create mode 100644 categories/生活/index.html</span><br><span class="line"> create mode 100644 img/2019/github.png</span><br><span class="line"> create mode 100644 post/hexo-blog/index.html</span><br><span class="line"> create mode 100644 tags/NUS/index.html</span><br><span class="line"> create mode 100644 tags/hexo/index.html</span><br><span class="line"> rename tags/&#123;life =&gt; links&#125;/index.html (87%)</span><br><span class="line"> create mode 100644 tags/工作/index.html</span><br><span class="line">Enumerating objects: 114, done.</span><br><span class="line">Counting objects: 100% (114/114), done.</span><br><span class="line">Delta compression using up to 4 threads</span><br><span class="line">Compressing objects: 100% (43/43), done.</span><br><span class="line">Writing objects: 100% (69/69), 97.73 KiB | 3.62 MiB/s, done.</span><br><span class="line">Total 69 (delta 33), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (33/33), completed with 17 local objects.</span><br><span class="line">To https://github.com/fainyang/fainyang.github.io.git</span><br><span class="line">   2b7a9ca..f55c4d1  HEAD -&gt; master</span><br><span class="line">Branch 'master' set up to track remote branch 'master' from 'https://github.com/fainyang/fainyang.github.io.git'.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure></p><p>在浏览器输入: yourname.github.io 如果看到博客页面那就大功告成。如果有错误的话，在 GitHub repository Setting 里的 GitHub Pages 可以看到错误信息。  </p><p><img src="/img/2019/publish.png" alt="publish"> </p><h2 id="图片管理"><a href="#图片管理" class="headerlink" title="图片管理"></a>图片管理</h2><p><a href="https://wsgzao.github.io/" target="_blank" rel="noopener">奥哥</a>推荐的一个非常好用的图片管理工具 <a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a> 图片上传+管理新体验。</p><h2 id="踩过的一些坑"><a href="#踩过的一些坑" class="headerlink" title="踩过的一些坑"></a>踩过的一些坑</h2><ol><li>在添加标签和分类的时候，当在source下面创建了文件夹的 index.md 这个文件一定要添加相关的 type. 例如 type: “categories”, type: “tags”.</li><li>添加<a href="https://theme-next.iissnan.com/third-party-services.html#local-search" target="_blank" rel="noopener">搜索功能</a>时，一直转圈加载不出来。是因为自己写的文章中存在不可见字符：一个backspace的字符。 详情可以参考： <a href="http://luffy.studio/2018/04/11/Hexo%E4%B8%ADLocalSearch%E5%8D%A1%E6%AD%BB%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">一</a>&nbsp; <a href="https://www.sqlsec.com/2017/12/hexosearch.html" target="_blank" rel="noopener">二</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于写博客&quot;&gt;&lt;a href=&quot;#关于写博客&quot; class=&quot;headerlink&quot; title=&quot;关于写博客&quot;&gt;&lt;/a&gt;关于写博客&lt;/h2&gt;&lt;p&gt;2018 年我在 GitHub 上看到&lt;a href=&quot;http://blog.dploop.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;强哥的博客&lt;/a&gt;，当时为之心动然后 Fork 了那个 repository。后来搬砖沦为社会人就断更了，在工作之后看到&lt;a href=&quot;https://wsgzao.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;奥哥的博客&lt;/a&gt;，在他的安利之下，把之前的 Jekyll 的博客换成如今的 Hexo-NexT，打算记录下工作的点滴，学习的心得。一是分享，二是方便自己回顾和查阅。
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="hexo" scheme="http://feiyang233.club/tags/hexo/"/>
    
  </entry>
  
</feed>
