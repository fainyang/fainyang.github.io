<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>feiyang&#39;s blog</title>
  
  <subtitle>费洋的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://feiyang233.club/"/>
  <updated>2021-07-07T00:30:34.477Z</updated>
  <id>http://feiyang233.club/</id>
  
  <author>
    <name>feiyang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新加坡吃过的店 (SG FOOD)</title>
    <link href="http://feiyang233.club/post/SG-food/"/>
    <id>http://feiyang233.club/post/SG-food/</id>
    <published>2021-06-30T16:00:00.000Z</published>
    <updated>2021-07-07T00:30:34.477Z</updated>
    
    <content type="html"><![CDATA[<p>民以食为天<br>作为一个在新加坡搬砖的四川吃货，唯有美食不可辜负。坡县虽小，但各式各样的菜系都可以吃到。由于在四川长大，比较喜欢川菜火锅串串香锅烤鱼等。偶尔也跟着朋友们尝试一下其他的菜系。<br><a id="more"></a></p><h1 id="Eating-App"><a href="#Eating-App" class="headerlink" title="Eating App"></a>Eating App</h1><ul><li>eatigo <a href="https://eatigo.com/" target="_blank" rel="noopener">https://eatigo.com/</a> 蛙功夫，成都，太古里火锅，麻省理功深海烤鱼 半价</li><li>chope <a href="https://www.chope.co/singapore-restaurants" target="_blank" rel="noopener">https://www.chope.co/singapore-restaurants</a> 提前预定，比如预定 gyu-kaku</li><li>shopback <a href="https://www.shopback.sg/" target="_blank" rel="noopener">https://www.shopback.sg/</a> 吃货返利</li></ul><h1 id="川菜"><a href="#川菜" class="headerlink" title="川菜"></a>川菜</h1><h2 id="NTU-Canteen-11-川菜"><a href="#NTU-Canteen-11-川菜" class="headerlink" title="NTU Canteen 11 川菜"></a>NTU Canteen 11 川菜</h2><ul><li><a href="https://www.google.com/maps/place/NTU+Hall+of+Residence+11/@1.3550279,103.6842518,17z/data=!3m1!4b1!4m5!3m4!1s0x31da0fa624c5025d:0xff3b2e9bae59d6c4!8m2!3d1.3550279!4d103.6864405" target="_blank" rel="noopener">地址</a>：20 Nanyang Ave, Singapore 639809</li><li>点评：目前吃过的新加坡性价比最高的川菜，味道好，价格最便宜，随便点还没有踩雷过。唯一的缺点就是地理位置太偏远了。</li><li>上图:  <img src="/img/food/ntu1.jpg" alt="ntu1">  <img src="/img/food/ntu2.jpg" alt="ntu2">  <img src="/img/food/ntu3.jpg" alt="ntu3"> <h2 id="牛车水食阁-川味园"><a href="#牛车水食阁-川味园" class="headerlink" title="牛车水食阁 川味园"></a>牛车水食阁 川味园</h2></li><li><a href="https://www.google.com/maps/place/%E5%B7%9D%E5%91%B3%E5%9B%AD/@1.2847801,103.8424824,15z/data=!4m5!3m4!1s0x0:0x1775b362155b0f51!8m2!3d1.2847801!4d103.8424824" target="_blank" rel="noopener">地址</a>：32 New Market Rd, Singapore 050032</li><li>点评：德阳大叔开的店，味道非常的四川，价格实惠，分量也很足。只是在食阁里比较吵杂，还有点热。<del>沸腾鱼</del>我觉得很一般，不是很入味，回锅肉，干煸四季豆，手抓排骨都很不错。据说旁边那家日日红麻辣香锅很不错，还没去吃过。旁边有一家卖甘蔗汁的，非常好喝</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202525.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202605.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202611.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201021202559.jpg" alt=""> <img src="/img/food/cwy.jpg" alt="cwy"><h2 id="厦门街-成都"><a href="#厦门街-成都" class="headerlink" title="厦门街 成都"></a>厦门街 成都</h2></li><li><a href="https://www.google.com/maps/place/%E6%88%90%E9%83%BDChengdu+%C2%B7+%E6%96%B0%E5%8A%A0%E5%9D%A1%E6%9C%80%E8%B5%B0%E5%BF%83%E5%B7%9D%E8%8F%9C/@1.2803505,103.8445213,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19515828ce5b:0xd28a3b9a3b6ee1db!8m2!3d1.2803451!4d103.84671" target="_blank" rel="noopener">地址</a>：74 Amoy St, Singapore 069893</li><li>点评：新加坡的四川同学安利的，<code>水煮鱼，牛蛙</code>强推，干锅肥肠也不错(但我觉得老成都的干锅肥肠更好吃)。<del>辣子鸡</del>不要点，辣鸡。 2020-7-31 我又去吃了一次， 麻辣水煮鱼，夫妻肺片，干煸肥肠，椒麻排骨，小煎跑山鸡，茄子煲，手撕包菜，回锅肉 都很可以的。</li><li>上图:  <img src="/img/food/cd1.jpg" alt="cd1">  <img src="/img/food/cd2.jpg" alt="cd2">  <img src="/img/food/cd3.jpg" alt="cd3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720135949.png" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200731154306.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200731154301.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200731154256.jpg" alt=""></li></ul><h2 id="牛车水-老成都"><a href="#牛车水-老成都" class="headerlink" title="牛车水 老成都"></a>牛车水 老成都</h2><ul><li><a href="https://www.google.com/maps/place/Old+Chengdu+Sichuan+Cuisine+Restaurant+%E8%80%81%E6%88%90%E9%83%BD%E5%B7%9D%E8%8F%9C%E9%A6%86/@1.2838636,103.841519,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19735c9a4b71:0xb1aca33c8f02c76e!8m2!3d1.2838582!4d103.8437077" target="_blank" rel="noopener">地址</a>：80 Pagoda St, Singapore 059239</li><li>点评：曾经我以为这家是热门景点宰客的店，虽然价格是贵，但人家的味道对得起老成都这个名字。目前吃过干锅肥肠，豆花牛肉，炒时蔬，nice！ 点过外卖</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234527.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201122164733.jpg" alt=""></li></ul><h2 id="牛车水-川苑酒家-熊猫撸串"><a href="#牛车水-川苑酒家-熊猫撸串" class="headerlink" title="牛车水 川苑酒家 熊猫撸串"></a>牛车水 川苑酒家 熊猫撸串</h2><ul><li>地址: 273 New Bridge Road Singapore 088749  搬家了，这是新地址。</li><li>点评： 非常正宗的川菜，厨子是四川泸州来的。水煮乌鱼片，手抓相思骨，酸辣鸡杂豆花非常不错。强烈推荐，我心目中新加坡第一川菜。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200628210346.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200628210351.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210502102504.jpg" alt=""></li></ul><h2 id="金文泰食阁-四川厨子"><a href="#金文泰食阁-四川厨子" class="headerlink" title="金文泰食阁 四川厨子"></a>金文泰食阁 四川厨子</h2><ul><li><a href="https://www.google.com/maps/place/Kopitiam+@+Clementi+Ave+3/@1.3139883,103.7652978,21z/data=!4m5!3m4!1s0x31da1a8e771fa3fd:0x57a3d8c0d2918f32!8m2!3d1.3138849!4d103.7652542" target="_blank" rel="noopener">地址</a>：450 Clementi Ave 3, #01-271, Singapore 120450</li><li>点评：窗口那个姐姐是四川邛崃的，目前只吃过她家的烧鸡公一次，味道不错。川菜水煮鱼不错，孜然排骨太干了，不行。</li><li>上图:  <img src="/img/food/clementi1.jpg" alt="clementi1">  <img src="/img/food/clementi2.jpg" alt="clementi2">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144937.jpg" alt=""></li></ul><h2 id="NUS-PGP食堂-川菜"><a href="#NUS-PGP食堂-川菜" class="headerlink" title="NUS PGP食堂 川菜"></a>NUS PGP食堂 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.290806,103.7804248,19.17z/data=!4m12!1m6!3m5!1s0x31da1a53630ee451:0x69e2d2ba3d0d6ce1!2sbluPort+-+NUS+Prince+George&#39;s+Park!8m2!3d1.290875!4d103.78079!3m4!1s0x31da1a536b93fffb:0xea3041dd973bf902!8m2!3d1.2909419!4d103.7822132" target="_blank" rel="noopener">地址</a>：23 Prince George’s Park, Singapore 118422</li><li>点评：四川厨师，在蜀香吃过一次干煸肥肠，有点干煸过头。2019-03-27 吃了一次水煮肉片，味道很棒。有空调那家卖面条的姐姐是四川大邑的(好像又换人了)，没有空调卖面条的那个锅锅是四川泸州的。没有空调最里面那家我也吃过川菜，味道还行吧。</li><li>上图:  <img src="/img/food/pgp.jpg" alt="pgp"> <img src="/img/food/pgp1.jpg" alt="pgp1">  <img src="/img/food/pgp2.jpg" alt="pgp2">  <img src="/img/food/pgp3.jpg" alt="pgp3">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144957.jpg" alt=""></li></ul><h2 id="NUS-Utown-川菜"><a href="#NUS-Utown-川菜" class="headerlink" title="NUS Utown 川菜"></a>NUS Utown 川菜</h2><ul><li><a href="https://www.google.com/maps/place/Foodclique/@1.3046434,103.772702,21z/data=!4m8!1m2!2m1!1snus+utown!3m4!1s0x31da1af5cc70dc97:0x7b392d9d676befeb!8m2!3d1.3047189!4d103.7727249" target="_blank" rel="noopener">地址</a>：2 College Ave West, Level 2 Stephen Riady Centre, Singapore 138607</li><li>点评：东北厨师，配菜是德阳小姐姐。分量是真的足，但味道就很一般了，学校食堂比较便宜。小炒肉、夫妻肺片还不错吧，<del>水煮鱼 鱼香茄子 宫保鸡丁</del>打扰了。</li><li>上图:  <img src="/img/food/nus.jpg" alt="nus">  <img src="/img/food/nus1.jpg" alt="nus1">   </li></ul><h2 id="蜀香添一点"><a href="#蜀香添一点" class="headerlink" title="蜀香添一点"></a>蜀香添一点</h2><ul><li><a href="https://www.google.com/maps/place/%E8%9C%80%E9%A6%99/@1.3022539,103.7639279,21z/data=!4m5!3m4!1s0x31da1af1dc3529bb:0xe41c8a6372b436d4!8m2!3d1.3022576!4d103.764117" target="_blank" rel="noopener">地址</a>：721 Clementi West Street 2, Singapore 120721</li><li>点评：以前读书的时候住在附近，经常和学长去这家吃饭。价格还行，有的菜味道还可以。口水鸡，夫妻肺片凉菜不错。小炒肉，鱼香肉丝也行。<del>大盘鸡 辣子鸡 水煮肉片</del> 再见！</li><li>上图:  <img src="/img/food/shuxiang.jpg" alt="shuxiang">  <img src="/img/food/shuxiang1.jpg" alt="shuxiang1">   </li></ul><h2 id="天府川菜"><a href="#天府川菜" class="headerlink" title="天府川菜"></a>天府川菜</h2><ul><li><a href="https://www.google.com/maps/place/Tianfu+Szechuan+Cuisine+%E5%A4%A9%E5%BA%9C%E5%B7%9D%E8%8F%9C/@1.314338,103.7628628,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1a8e40c040fb:0x9f8f60278dda8354!8m2!3d1.314338!4d103.7650515" target="_blank" rel="noopener">地址</a>：3151 Commonwealth Ave W, #01-17/18, Singapore 129581</li><li>点评：去吃过一次，我觉得酸菜鱼很一般，那个<del>炒莲白</del>更是不行啊。感觉辣椒没有几个，味道非常辣，像是放了辣椒素的感觉。</li><li>上图:  <img src="/img/food/tianfu1.jpg" alt="tianfu1">  <img src="/img/food/tianfu2.jpg" alt="tianfu2"> </li></ul><h2 id="四川豆花饭庄"><a href="#四川豆花饭庄" class="headerlink" title="四川豆花饭庄"></a>四川豆花饭庄</h2><ul><li><a href="https://www.google.com/maps/place/Si+Chuan+Dou+Hua+Restaurant/@1.2996314,103.8600612,18.37z/data=!4m5!3m4!1s0x31da19b19801b335:0x5acf3141ce4c893a!8m2!3d1.2999542!4d103.860291" target="_blank" rel="noopener">地址</a>：7500 Beach Rd, Singapore 199591</li><li>点评：某次志愿者活动结束后去吃过一次。饭店的环境不错，豆花可以但分量超级小，其余的菜就很一般啦，我一点印象都没得咯。</li><li>上图:  <img src="/img/food/douhua.jpg" alt="douhua"> </li></ul><h2 id="思味冒菜"><a href="#思味冒菜" class="headerlink" title="思味冒菜"></a>思味冒菜</h2><ul><li><a href="https://www.google.com/maps/place/Si+Wei+Mao+Cai/@1.2835709,103.8452381,20.84z/data=!4m5!3m4!1s0x31da190cb17025ed:0xc245fc39a322492d!8m2!3d1.2836133!4d103.8452759" target="_blank" rel="noopener">地址</a>: 33 Mosque St, Singapore 059511</li><li>点评： 我真的佛了，就成都gai上随便吃个冒菜，都比他家的好吃。真的太淡了，除了油，不辣不香，吃了想打人。泡椒牛蛙反而还不错的。2021 年又去了一次，还是觉得很一般，小红书那些乱安利，拉胯。 不是很推荐， 真要去，记得 eatigo 定位会有优惠。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114732.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114734.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233601.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233604.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233553.jpg" alt=""></li></ul><h2 id="A-ONE"><a href="#A-ONE" class="headerlink" title="A ONE"></a>A ONE</h2><ul><li><a href="https://www.google.com/maps/place/A-ONE+Claypot+House/@1.3506575,103.8698616,17z/data=!3m2!4b1!5s0x31da17a6c9cbff89:0xd57ea669903a76d8!4m5!3m4!1s0x31da17a6c6a5ad07:0xd1f33bcbb66ddf5f!8m2!3d1.3506521!4d103.8720503" target="_blank" rel="noopener">地址</a>：23 Serangoon Central, #B1-73/74, Singapore 556083 serangoon 地铁站旁</li><li>点评：其实是一家本地的店，居然也有麻辣系列。但分量较小，味道还行。水煮鱼的鱼肉不行，肉质差。水煮肉片的淀粉少了，不够嫩。人均 30 新吧</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162540.jpeg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155332.jpg" alt=""></li></ul><h2 id="Birds-of-a-Feather"><a href="#Birds-of-a-Feather" class="headerlink" title="Birds of a Feather"></a>Birds of a Feather</h2><ul><li><a href="https://www.google.com/maps/place/Birds+of+a+Feather/@1.282141,103.8455223,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190c54bb3971:0x9eefa2ec6018112a!8m2!3d1.282141!4d103.847711" target="_blank" rel="noopener">地址</a>: 115 Amoy St, #01-01, Singapore 069935</li><li>点评：一家精致的川菜，分量超级小，有点西式料理的味道。人少的话可以来试一试。就在 <a href="#厦门街-成都">厦门街 成都</a> 那一条街上。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141702.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141658.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141707.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141710.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141713.jpg" alt=""></li></ul><h2 id="小渔村柴火鸡"><a href="#小渔村柴火鸡" class="headerlink" title="小渔村柴火鸡"></a>小渔村柴火鸡</h2><ul><li><a href="https://www.google.com/maps/place/Xiao+Yu+Cun+Seafood+Restaurant+%E5%B0%8F%E6%B8%94%E6%9D%91%E6%9F%B4%E7%81%AB%E9%B8%A1/@1.3404171,103.8825676,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1796ad421f09:0xa8336dc955c257bb!8m2!3d1.3404171!4d103.8847563" target="_blank" rel="noopener">地址</a>: 201 Upper Paya Lebar Rd, Singapore 534876</li><li>点评：柴火鸡的味道非常不错，还可以往锅里面加菜，越到后面味道越浓。老板还是一位马拉松爱好者，店里面全是马拉松的奖牌。人均 20+ 新币，地理位置稍微偏了一点点，其他的挺不错的。 <a href="https://www.shicheng.news/show/658725" target="_blank" rel="noopener">软文</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200112223455.jpg" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200112223458.jpg" alt=""></li></ul><h2 id="Kim-San-Leng-Coffeeshop"><a href="#Kim-San-Leng-Coffeeshop" class="headerlink" title="Kim San Leng Coffeeshop"></a>Kim San Leng Coffeeshop</h2><ul><li>地址：116 Bukit Merah View, Singapore 151116</li><li>点评：这家的回锅肉是非常不错的，水煮鱼不行，据说田鸡也一般。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221115.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221125.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221131.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221147.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108221154.jpg" alt=""></li></ul><h2 id="老四川"><a href="#老四川" class="headerlink" title="老四川"></a>老四川</h2><ul><li>地址：9 Selegie Rd, #01-31, Singapore 180009 或 50 Tiong Bahru Rd, Singapore 168733</li><li>点评：我们这次去的是 Selegie 这家店，辣子鸡， 香辣排骨不错，泡豇豆炒肉下饭. <a href="https://www.youtube.com/watch?v=7Wui4qfJdXo" target="_blank" rel="noopener">看网红博主的测评视频</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116094329.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116094338.jpg" alt=""></li></ul><h2 id="Thye-Guan-Fragrant-HotPot"><a href="#Thye-Guan-Fragrant-HotPot" class="headerlink" title="Thye Guan Fragrant HotPot"></a>Thye Guan Fragrant HotPot</h2><ul><li>地址：我是在 grabfood 上面点的外卖 <a href="https://food.grab.com/sg/en/restaurant/thye-guan-fragrant-hot-pot-commonwealth-view-delivery/4-CZD1GNBGCACCLJ" target="_blank" rel="noopener">Thye Guan Fragrant Hot Pot - Commonwealth View</a></li><li>点评：已经吃过他家的好几次外卖了，推荐的菜有香辣肉丝，水煮牛肉，回国肉，干煸四季豆，土豆丝， 鱼香茄子。 不推荐青椒肉丝，小炒肉。水煮肥肠味道有点大，看个人喜好 </li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210611090623.jpg" alt=""> <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210611090628.jpg" alt=""><h1 id="火锅"><a href="#火锅" class="headerlink" title="火锅"></a>火锅</h1><h2 id="小龙坎"><a href="#小龙坎" class="headerlink" title="小龙坎"></a>小龙坎</h2></li><li>地址：牛车水或者武吉士</li><li>点评： 每年愚人节的那个周末，全球的小龙坎全场半价，抓住机会。平时人均 60 新 +，味道不错，我觉得比海底捞好吃多了，最爱它家的麻辣牛肉（不能吃辣的慎点），毛肚，黄喉。锅底也是老油，很浓郁</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162948.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162952.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162955.jpg" alt=""><h2 id="大龙燚"><a href="#大龙燚" class="headerlink" title="大龙燚"></a>大龙燚</h2></li><li>地址：乌节路，somerset 楼上 181 Orchard Rd, #08-08, Singapore 238896</li><li>点评：也是又贵又好吃的那种火锅。贫穷限制了我吃火锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163645.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163648.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163652.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709163655.jpg" alt=""><h2 id="同心如意火锅"><a href="#同心如意火锅" class="headerlink" title="同心如意火锅"></a>同心如意火锅</h2></li><li><a href="https://www.google.com/maps/place/%E5%90%8C%E5%BF%83%E5%A6%82%E6%84%8F%E4%BC%A0%E7%BB%9F%E9%93%9C%E7%81%AB%E9%94%85/@1.2869932,103.8465049,17z/data=!4m8!1m2!2m1!1z5ZCM5b-D5aaC5oSP54Gr6ZSF!3m4!1s0x31da190a4cc3d849:0x5c55c99089e27a1e!8m2!3d1.2869783!4d103.8486978" target="_blank" rel="noopener">地址</a>：克拉码头 6 Lor Telok, Singapore 049019</li><li>点评：强烈安利了，真的好吃又不贵，环境还优雅，免费的西瓜深受吃瓜群众的喜爱。人均 30-40 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164043.jpeg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155506.jpeg" alt=""></li></ul><h2 id="海底捞"><a href="#海底捞" class="headerlink" title="海底捞"></a>海底捞</h2><ul><li><a href="https://www.haidilao.com/sg/fwzx/mdss/index.html" target="_blank" rel="noopener">地址</a>: 全岛分店太多了，我去过 vivo city 那家， IMM 那家也吃过， 乌节路那家店人少点, marina square 最佳，有机器人送餐，自定义锅底。</li><li>点评：众所周知服务好，价格贵，免费小菜，水果，豆花，冰淇淋。食材新鲜，就是有时候排队很长，如果能加到店员的微信，就能走内部订餐，只需要提前一天，任何时间段都可以预定。人均 60+，和牛不推荐点，吃和牛要去烤肉店。 因为最后还有 10% 服务费， 7% 税，所以在点餐的时候，建议 ipad 上，人均 50 就行了，多了真的吃不完。 用 UOB 能有优惠券，满 150， 减免 10 新币。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190926171753.jpeg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234907.jpg" alt=""><h2 id="重庆小木凳火锅"><a href="#重庆小木凳火锅" class="headerlink" title="重庆小木凳火锅"></a>重庆小木凳火锅</h2></li><li><a href="https://www.google.com/maps/place/XIAO+MU+DENG+HOT+POT+%E9%87%8D%E6%85%B6%E5%B0%8F%E6%9C%A8%E5%87%B3%E6%87%B7%E8%88%8A%E7%81%AB%E9%8D%8B/@1.2822806,103.8399297,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1992938246bb:0x7d60e3de7635057b!8m2!3d1.2822752!4d103.8421184" target="_blank" rel="noopener">地址</a>： 牛车水 279 New Bridge Rd, Singapore 088752</li><li>点评： 小组聚餐吃过一次，人均 30-35 新，味道还是非常的不错，环境也还是可以的。2021 年又吃了一次，这次是自助了，我觉得很一般了。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210516104327.jpg" alt=""><h2 id="食间火锅"><a href="#食间火锅" class="headerlink" title="食间火锅"></a>食间火锅</h2></li><li>地址：Jcube 和 Suntec City</li><li>点评：老板小武哥哥是 MIT 毕业的重庆大佬，食材新鲜，味道不错，算是味道正宗且价格最低的火锅了，强烈推荐，我心中的 No.1。Suntec City 还有自助火锅，人均在 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709164825.jpeg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234537.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234532.jpg" alt=""><h2 id="优品火锅"><a href="#优品火锅" class="headerlink" title="优品火锅"></a>优品火锅</h2></li><li><a href="https://www.google.com/maps/place/Upin+Hot+Pot+West+Coast+Plaza/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x315bc1bb345ca3af!8m2!3d1.303843!4d103.7662919" target="_blank" rel="noopener">地址</a>： 全岛有几家，我吃的是 west coast plaza 那一家 154 West Coast Rd, #01-02, Singapore 127371</li><li>点评： 出乎意料的火锅，以为是一家不知名的小店，结果味道很不错。人均 40+ 新</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709165414.jpeg" alt=""><h2 id="食立方火锅"><a href="#食立方火锅" class="headerlink" title="食立方火锅"></a>食立方火锅</h2></li><li><a href="https://www.google.com/maps/place/Shi+Li+Fang/@1.3034709,103.7649244,18z/data=!4m8!1m2!2m1!1shotpot!3m4!1s0x0:0x3cfc2dfce4934166!8m2!3d1.3036439!4d103.7658919" target="_blank" rel="noopener">地址</a>：全岛连锁,我吃的是 west coast plaza 那一家 154 West Coast Road 127371, 02-24 West Coast Rd, Singapore 127447</li><li>点评：吃火锅送公仔娃娃是这家店最大的特色。味道不辣，适合口味淡的朋友们。人均 30 新左右。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170029.jpg" alt=""><h2 id="潮汕牛肉火锅"><a href="#潮汕牛肉火锅" class="headerlink" title="潮汕牛肉火锅"></a>潮汕牛肉火锅</h2></li><li><a href="https://www.google.com/maps/place/Chaoniu+Hot+Pot/@1.3070113,103.9059824,19.48z/data=!4m5!3m4!1s0x31da199265a5105d:0x53660da2d7d633fe!8m2!3d1.3071205!4d103.9065289" target="_blank" rel="noopener">地址</a>: 195 E Coast Rd, Singapore 428900</li><li>点评：地理位置有点偏，但味道还不错，一共吃了三次。他家的牛肉粉真是一绝，但我们在吃第三次的时候，有的牛肉居然是冷冻拿出来的，反应给老板。老板态度良好，道歉还打了8折。希望他们越办越好吧。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114717.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114723.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113642.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711114726.jpg" alt=""><h2 id="满族火锅"><a href="#满族火锅" class="headerlink" title="满族火锅"></a>满族火锅</h2></li><li><a href="https://www.google.com/maps/place/Man+Zhu+Steamboat+Restaurant/@1.3209719,103.7588833,13z/data=!4m8!1m2!2m1!1z5ruh5peP54Gr6ZSF!3m4!1s0x0:0xebd740cbf2973c8e!8m2!3d1.3440604!4d103.7312257" target="_blank" rel="noopener">地址</a>: 350 Jurong East Ave 1, #01-1231 Singapore Singapore Region, Singapore 600350</li><li>点评：裕华园地铁出来，食阁附近的一家小店。那一排的店家都是这个风格，可能是地理位置偏远，价格非常便宜，味道还行。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113012.jpeg" alt=""></li></ul><h2 id="川羊记"><a href="#川羊记" class="headerlink" title="川羊记"></a>川羊记</h2><ul><li>地址：官网几家分店，我吃的是牛车水那一家 211 South Bridge Road Singapore 058760 <a href="http://chuanyangji.com/" target="_blank" rel="noopener">http://chuanyangji.com/</a></li><li>点评：味道还不错，羊排那些很棒。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230641.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230631.jpg" alt=""></li></ul><h1 id="串串"><a href="#串串" class="headerlink" title="串串"></a>串串</h1><h2 id="串食代"><a href="#串食代" class="headerlink" title="串食代"></a>串食代</h2><ul><li>地址：74 Prinsep St, Singapore 188669</li><li>点评：citizen 绵阳老板开的店，第一次去我们点的最辣，把我辣安逸了，味道还可以。就是空调有点冷，电话偶尔打不通，可以加老板娘微信 WeChat ID: jngyanaaa</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210401152543.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210401152539.jpg" alt=""></li></ul><h2 id="嘿串串"><a href="#嘿串串" class="headerlink" title="嘿串串"></a>嘿串串</h2><ul><li><a href="https://www.google.com/maps/place/%E5%98%BF%E4%B8%B2%E4%B8%B2+Hi!+Chuan+Chuan+Steamboat/@1.2815342,103.8428024,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190d2d763cf9:0xbc3e02b9133f566e!8m2!3d1.2815288!4d103.8449911" target="_blank" rel="noopener">地址</a>： 291 South Bridge Rd, Singapore 058836</li><li>点评： 可以做游戏打折，比如立定跳远。还有自助串串，我觉得一般般。感觉好像味道下降了？</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170649.jpg" alt=""><h2 id="重庆李记串串"><a href="#重庆李记串串" class="headerlink" title="重庆李记串串"></a>重庆李记串串</h2></li><li><a href="https://www.google.com/maps/place/Li+Ji+Chuan+Chuan+Xiang/@1.2814591,103.8442259,19.55z/data=!4m5!3m4!1s0x31da190d33000029:0xd2d2d3005dc64da!8m2!3d1.2813333!4d103.8449943" target="_blank" rel="noopener">地址</a>： 295 South Bridge Rd, Singapore 058838 South Bridge Rd, Singapore 058838，巧了就在嘿串串旁边</li><li>点评： 一年前吃过一次，味道还不错，感觉性价比 比嘿串串高，但店面环境没有嘿串串好。shopee 聚餐吃了第二次</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170652.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230552.jpg" alt=""></li></ul><h1 id="香锅"><a href="#香锅" class="headerlink" title="香锅"></a>香锅</h1><h2 id="Timbre大海麻辣香锅"><a href="#Timbre大海麻辣香锅" class="headerlink" title="Timbre大海麻辣香锅"></a>Timbre大海麻辣香锅</h2><ul><li><a href="https://www.google.com/maps/place/Timbre%2B/@1.2974743,103.7872491,21z/data=!4m12!1m6!3m5!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!2sMellben+Signature!8m2!3d1.2770306!4d103.842881!3m4!1s0x31da1a4fdcdcb793:0x212cfcf8b61862cd!8m2!3d1.2974124!4d103.7875038" target="_blank" rel="noopener">地址</a>：73A Ayer Rajah Crescent, JTC Launchpad, Singapore 139957 one north 地铁站出来 Timbre+  食阁里</li><li>点评：非常温和的一家香锅，记得喊老板多放油。毛肚不错哦，还可以送外卖的。人均 8-15 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171446.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190814174051.jpeg" alt=""><h2 id="OneNorth口福麻辣香锅"><a href="#OneNorth口福麻辣香锅" class="headerlink" title="OneNorth口福麻辣香锅"></a>OneNorth口福麻辣香锅</h2></li><li><a href="https://www.google.com/maps/place/Koufu+Food+Court/@1.2989013,103.787071,19z/data=!3m1!4b1!4m5!3m4!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!8m2!3d1.2989!4d103.7876182" target="_blank" rel="noopener">地址</a>：1 Fusionopolis Way, Singapore 138577 One North 口福</li><li>点评：他们家放的芝麻可是真的比较多，真香！</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171833.jpeg" alt=""><h2 id="Galaxis二楼麻辣香锅"><a href="#Galaxis二楼麻辣香锅" class="headerlink" title="Galaxis二楼麻辣香锅"></a>Galaxis二楼麻辣香锅</h2></li><li><a href="https://www.google.com/maps/place/Foodmaster/@1.2995888,103.7880186,21z/data=!3m1!5s0x31da1a454101b3dd:0xe60bb1bc39017b65!4m12!1m6!3m5!1s0x31da1a4ff7e61805:0xfb97b20ed542d918!2sKoufu+Food+Court!8m2!3d1.2989!4d103.7876182!3m4!1s0x0:0xfc2120aaf6811cb1!8m2!3d1.2994549!4d103.7882856" target="_blank" rel="noopener">地址</a>： 1 Fusionopolis Pl, Singapore 138522 Galaxis 二楼食阁 </li><li>点评： 有一个绵阳的哥哥在这里，是我看到过的第一家荤素菜不分开计算重量的麻辣香锅。所以也就是最便宜的麻辣香锅。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709171452.jpg" alt=""><h2 id="宽宽干锅"><a href="#宽宽干锅" class="headerlink" title="宽宽干锅"></a>宽宽干锅</h2></li><li><a href="https://www.google.com/maps/place/%E5%AE%BD%E5%AE%BD%E5%B9%B2%E9%94%85/@1.2837616,103.842831,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19388e8da14f:0x3cfa02d42abb448d!8m2!3d1.2837562!4d103.8450197" target="_blank" rel="noopener">地址</a>：38 Mosque St, Singapore 059516</li><li>点评：是伟翔锅锅请我这个小弟吃的，味道不错，和国内的干锅比较相似。鸭掌还不够糯，比起成都的销魂掌还是有点差距的。第二次去吃了排骨虾干锅还可以，肥肠鸡不行，仔姜牛蛙也还行。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144004.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144008.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201218160443.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201218160450.jpg" alt=""></li></ul><h2 id="千椒百味"><a href="#千椒百味" class="headerlink" title="千椒百味"></a>千椒百味</h2><ul><li>地址：荷兰村食阁 1 Lor Mambong, Singapore 277700 #01-31</li><li>点评： 麻辣烫味道不错，价格实惠，但就是排队的人有点多。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727234545.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223219.jpg" alt=""></li></ul><h2 id="小满麻辣烫"><a href="#小满麻辣烫" class="headerlink" title="小满麻辣烫"></a>小满麻辣烫</h2><ul><li>地址：1 Fusionopolis Pl, #01-26 Galaxis, Singapore 138522</li><li>点评： 店面很小，但很干净。 番茄锅和麻辣锅是最好吃的，价格比食阁贵一点点。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200909185730.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200909185746.jpg" alt=""></li></ul><h2 id="中华锅王"><a href="#中华锅王" class="headerlink" title="中华锅王"></a>中华锅王</h2><ul><li><a href="https://www.google.com/maps/place/Spa+9+@+Holland/@1.3075198,103.7931053,18.96z/data=!4m5!3m4!1s0x31da1a41e53dea59:0x6e11bf7bca23974f!8m2!3d1.3076055!4d103.793457" target="_blank" rel="noopener">地址</a>: Block 43, 43 Holland Dr, Singapore 270043</li><li>点评： 干锅的味道还不错，可以点外卖。除了干锅，他家还有炒菜。但是炒菜味道一般般，不推荐。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200429114707.jpeg" alt=""></li></ul><h1 id="美蛙烤鱼"><a href="#美蛙烤鱼" class="headerlink" title="美蛙烤鱼"></a>美蛙烤鱼</h1><h2 id="探鱼"><a href="#探鱼" class="headerlink" title="探鱼"></a>探鱼</h2><ul><li><a href="https://www.google.com/maps/place/TAN+YU/@1.3008112,103.8361644,17z/data=!3m1!4b1!4m5!3m4!1s0x31da1991290f596b:0x74129219b25d6b6c!8m2!3d1.3008112!4d103.8383531" target="_blank" rel="noopener">地址</a>：313 Orchard Rd, Singapore 238895</li><li>点评：新加坡吃过最好吃的烤鱼，肉质不是油炸的那种烤鱼。推荐鲜青椒烤鱼，重庆豆花烤鱼。人均 30-40 新</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161227.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161215.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161231.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161234.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161218.jpg" alt=""><h2 id="蛙功夫"><a href="#蛙功夫" class="headerlink" title="蛙功夫"></a>蛙功夫</h2></li><li><a href="https://www.google.com/maps/place/Wah+Kungfu+%E8%9B%99%E5%8A%9F%E5%A4%AB/@1.2983175,103.8535244,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19d2da538a59:0x5bea180644018458!8m2!3d1.2983121!4d103.8557131" target="_blank" rel="noopener">地址</a>: 牛车水店 470 North Bridge Rd, Singapore 188735</li><li>点评：微信提前预定打九折。新加坡第一蛙了，怪椒味和姜辣味真的好辣啊，四川人都遭不住了。 人均 30-40 新，最新发现蛙功夫在 <a href="https://eatigo.com/sg/singapore/en?vrt=n&amp;utm_expid=.b1OLVdG4Q824z64aUUlGBQ.2&amp;utm_referrer=" target="_blank" rel="noopener">eatigo</a> 上有打折，最低有半价哦。注册时可填写我的邀请码【 <strong>eati1avcj</strong> 】</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155308.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709155347.jpeg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161949.jpg" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709161954.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709162001.jpg" alt=""><h2 id="齐来丰鱼庄"><a href="#齐来丰鱼庄" class="headerlink" title="齐来丰鱼庄"></a>齐来丰鱼庄</h2></li><li>地址: 198 Geyland road</li><li>点评： <a href="https://mp.weixin.qq.com/s/OGA9k6zP0D1hPTjcIzBsCA" target="_blank" rel="noopener">新加坡眼推荐</a> 味道还不错，价格还可以接受，可以试一试。牛车水那一家已经关闭了，亚龙还有一家</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114402.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114405.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712114408.jpg" alt=""><h2 id="尝相思-重庆烤鱼"><a href="#尝相思-重庆烤鱼" class="headerlink" title="尝相思 重庆烤鱼"></a>尝相思 重庆烤鱼</h2></li><li><a href="https://www.google.com/maps/place/Singapore+419779/data=!4m2!3m1!1s0x31da1805c6b3a221:0x2fac1d0a92c28b6f?sa=X&amp;ved=2ahUKEwi44fzsm5bkAhVBfH0KHSk_CGsQ8gEwE3oECAoQBA" target="_blank" rel="noopener">地址</a>: Singapore 419779</li><li>点评：地理位置有点偏僻，在 eunos 地铁站出来步行 12 分钟左右。老板是本地人，老板娘是重庆人。他们家的烤鱼是油炸的，算是在新加坡油炸的烤鱼中非常不错的了。而且价格比较的实惠。推荐麻辣味道</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175630.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175636.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190822175639.jpg" alt=""><h2 id="午阳烤鱼-NUS-YIH"><a href="#午阳烤鱼-NUS-YIH" class="headerlink" title="午阳烤鱼 NUS YIH"></a>午阳烤鱼 NUS YIH</h2></li><li><a href="https://www.google.com/search?tbm=lcl&amp;ei=3wGeXY2vOov39QOfsajIBQ&amp;q=nus+yih+food&amp;oq=nus+yih+&amp;gs_l=psy-ab.1.1.0l10.7866.7866.0.8973.1.1.0.0.0.0.69.69.1.1.0....0...1c.1.64.psy-ab..0.1.68....0.trHv8wA6ueM#rlfi=hd:;si:13376272886801035322,l,CgxudXMgeWloIGZvb2QiA4gBAVoQCgAiDG51cyB5aWggZm9vZA;mv:[[1.3055455,103.7867909],[1.2901151,103.77164789999999]]" target="_blank" rel="noopener">地址</a>: 31 Lower Kent Ridge Rd, Singapore 119078</li><li>点评： NUS YIH 学校食堂的烤鱼，一份才 12 新币。油炸的鱼，再配以佐料，油汤煮一下即可。味道还不错，油放的超级多（四川人表示很赞），辣度适中，这个价格性价比很高。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191009234939.jpeg" alt=""><h1 id="螃蟹"><a href="#螃蟹" class="headerlink" title="螃蟹"></a>螃蟹</h1><h2 id="珍宝-jumbo-seafood"><a href="#珍宝-jumbo-seafood" class="headerlink" title="珍宝 jumbo seafood"></a>珍宝 jumbo seafood</h2></li><li>地址：新加坡有几家，看<a href="https://www.jumboseafood.com.sg/en/our-outlets" target="_blank" rel="noopener">官网</a></li><li>点评：环境非常好，螃蟹不错，鱼也还行，炒饭好吃，麦片虾推荐</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215152.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215159.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215204.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200913215209.jpg" alt=""></li></ul><h2 id="Long-Seafood"><a href="#Long-Seafood" class="headerlink" title="Long Seafood"></a>Long Seafood</h2><ul><li><a href="https://www.google.com/maps/place/Long+Seafood/@1.3670972,103.8321013,15.81z/data=!4m5!3m4!1s0x31da16d966bf9c5d:0xb8a5924677080786!8m2!3d1.3682784!4d103.8371577" target="_blank" rel="noopener">地址</a>： Ang Mo Kio Avenue 3, #01-1222,Block 232, Singapore 560232 龙海鲜螃蟹王宏茂桥店</li><li>点评： 在一个食阁的一楼，店面很大。米粉螃蟹不错，人均 70 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172701.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172705.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709172709.jpg" alt=""><h2 id="Mellben-Signature"><a href="#Mellben-Signature" class="headerlink" title="Mellben Signature"></a>Mellben Signature</h2></li><li><a href="https://www.google.com/maps/place/Mellben+Signature/@1.2771411,103.839687,16.48z/data=!4m5!3m4!1s0x31da196ce44276cf:0x7b594c2219ee3e4b!8m2!3d1.2770306!4d103.842881" target="_blank" rel="noopener">地址</a>：7 Tanjong Pagar Plaza, #01-105, Singapore 081007</li><li>点评： 人均 60 新币，感觉螃蟹小一点点，没有宏茂桥那家好吃，米粉螃蟹的话。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173222.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173227.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709173230.jpg" alt=""><h2 id="Por-Kee-Eating-House-1996"><a href="#Por-Kee-Eating-House-1996" class="headerlink" title="Por Kee Eating House 1996"></a>Por Kee Eating House 1996</h2></li><li><a href="https://www.google.com/maps/place/Por+Kee+Eating+House+1996/@1.2842764,103.8297145,17.59z/data=!4m5!3m4!1s0x31da197a03941b03:0x52f6df3241826f4e!8m2!3d1.2842166!4d103.8327882" target="_blank" rel="noopener">地址</a>: 69 Seng Poh Ln, #01-02, Singapore 160069</li><li>点评: 非常 local 的一家本地菜系, 需要提前打电话预定，味道还不错，人均 50 左右</li><li>上图:  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162015.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162017.jpg" alt=""></li></ul><h2 id="The-BOILER-Howard-Road"><a href="#The-BOILER-Howard-Road" class="headerlink" title="The BOILER @ Howard Road"></a>The BOILER @ Howard Road</h2><ul><li>地址：18 Howard Rd, #01-06 Novelty BizCentre, Singapore 369585</li><li>点评：其实这是一家海鲜酒吧，但我还是把它归类到螃蟹这一类。海鲜套餐的味道还不错，人均 60 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210502102514.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210502102510.jpg" alt=""><h1 id="烤肉烤串"><a href="#烤肉烤串" class="headerlink" title="烤肉烤串"></a>烤肉烤串</h1></li></ul><h2 id="WANG-DAE-BAK-BBQ-98-AMOY"><a href="#WANG-DAE-BAK-BBQ-98-AMOY" class="headerlink" title="WANG DAE BAK BBQ@98 AMOY"></a>WANG DAE BAK BBQ@98 AMOY</h2><ul><li>地址：98 Amoy Street Singapore 069918 官网可以预定 <a href="https://www.wangdaebakbbq.sg/" target="_blank" rel="noopener">https://www.wangdaebakbbq.sg/</a> </li><li>点评：味道不错，人均 40 多新币。厚五花肉真的很厚，不推荐。推荐还是吃 2 厘米那个不错， 薄切牛肉 slice beef 不错，一定要试一试。half &amp; half pancake 也不错。它家还有一家分店在 93，Wang Dae Bak Pocha BBQ，Wang Dae Bak Pocha is managed by the Wang Dae Bak Group, except that the concept at Pocha takes on a retro Korean street food vibe inspired by the 70’s and 80’s.<br>The other main difference between Pocha and the other Wang Dae Bak outlets is that Pocha uses Traditional Korean Iron Grill BBQ, as opposed to charcoal BBQ used in other outlets.<br>唯一的区别就是 POCHA 是铁热， WANG DAE BAK  是炭火加热。还是炭火的好吃一点哦</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220125.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220131.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220137.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201108220144.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116145405.jpeg" alt=""></li></ul><h2 id="Supulae"><a href="#Supulae" class="headerlink" title="Supulae"></a>Supulae</h2><ul><li>李加绒同学倾情推荐，还没有来得及去吃。</li></ul><h2 id="Super-Star-K"><a href="#Super-Star-K" class="headerlink" title="Super Star K"></a>Super Star K</h2><ul><li><a href="https://www.google.com/maps/place/Super+Star+K/@1.2779864,103.8416363,17z/data=!3m1!4b1!4m5!3m4!1s0x31da196d3b353d13:0xa2254940717b1324!8m2!3d1.277981!4d103.843825" target="_blank" rel="noopener">地址</a>: 75 Tg Pagar Rd, Singapore 088496</li><li>点评：吃过3次了，那一条街大部分店面都是晚上营业，他家是少有的中午也开门。味道不错，分量也很足。服务员还会帮忙烤肉，态度也很好的。人均 40 新左右，推荐。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120216.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120210.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120206.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120222.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122223.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190716122227.jpg" alt=""></li></ul><h2 id="The-Go-Gi-Jip"><a href="#The-Go-Gi-Jip" class="headerlink" title="The Go Gi Jip"></a>The Go Gi Jip</h2><ul><li>地址：72 Tg Pagar Rd, Singapore 088493 <a href="https://www.thegogijip.com/" target="_blank" rel="noopener">官网</a></li><li>点评：黑猪肉不错，牛肉也还行。但牛肉贵一点点。人均五六十的样子。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200829202439.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200829202446.jpg" alt=""></li></ul><h2 id="GO-K-BBQ"><a href="#GO-K-BBQ" class="headerlink" title="GO! K - BBQ"></a>GO! K - BBQ</h2><ul><li><a href="https://www.google.com/maps/place/GO!+K+-+BBQ+%28%EA%B3%A0%EC%BC%80%EC%9D%B4+%EB%B9%84%EB%B9%84%ED%81%90%29/@1.2805141,103.8444605,17z/data=!3m1!4b1!4m5!3m4!1s0x31da190d6ec97b63:0x8df5f639962a0c51!8m2!3d1.2805087!4d103.8466492" target="_blank" rel="noopener">地址</a>: 76 Amoy St, Singapore 069895 就在川菜《成都》店旁边，都在厦门街</li><li>点评：晚上才开，人很多，最好提前预定。他家的肉是腌制过后的肉，味道更加的美味。但感觉服务员少了，有点忙不过来。肉的分量稍微小点，价格也就偏贵。</li><li>上图：  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120227.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120232.jpg" alt=""><h2 id="烧肉王子"><a href="#烧肉王子" class="headerlink" title="烧肉王子"></a>烧肉王子</h2></li><li><a href="https://www.google.com/maps/place/YAKINIKU+OHJI/@1.3115275,103.7647342,19.12z/data=!4m8!1m2!2m1!1z54On6IKJ546L5a2Q!3m4!1s0x0:0xfe0d932f72c53d41!8m2!3d1.3119171!4d103.7651466" target="_blank" rel="noopener">地址</a>: 321 Clementi Ave 3, #01-01, Singapore 129905</li><li>点评： 日式的自助烤肉，分为三个等级：只有鸡肉，有猪肉牛肉，顶级和牛。我们当时吃的是中间那个档次，人均 32 新币。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120241.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710120235.jpg" alt=""></li></ul><h2 id="大胡子烧烤"><a href="#大胡子烧烤" class="headerlink" title="大胡子烧烤"></a>大胡子烧烤</h2><ul><li><a href="https://www.google.com/maps/place/%E5%A4%A7%E8%83%A1%E5%AD%90%E7%83%A7%E7%83%A4+Moustache+BBQ/@1.3156963,103.8827708,19z/data=!3m1!4b1!4m5!3m4!1s0x31da183b17be1ecf:0x72a7719ac6298795!8m2!3d1.315695!4d103.883318" target="_blank" rel="noopener">地址</a>: 70 Lor 25A Geylang, Singapore 388255</li><li>点评： 就在 Aljunied 地铁站出来，烤串是非常不错。干锅肥肠还需要煎的更焦一点。 店里有点炒闹，吃饭时感觉回到了国内小城市的街边小店。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112206.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112210.jpg" alt=""></li></ul><h2 id="香港小厨"><a href="#香港小厨" class="headerlink" title="香港小厨"></a>香港小厨</h2><ul><li><a href="https://www.google.com/maps/place/Hong+Kong+Kitchen/@1.2930018,103.7688243,20.15z/data=!4m5!3m4!1s0x31da1afc3d91620f:0x1005559cd93f32a6!8m2!3d1.2930409!4d103.7687545" target="_blank" rel="noopener">地址</a>: 24 Clementi Rd, Singapore 129753</li><li>点评：就在 NUS 后街，烤串还是不错的，烤羊排不行，少的太真实了。烤韭菜，一定要让老板少放点盐啊！</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112215.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112218.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711112220.jpg" alt=""></li></ul><h2 id="王大爷烧烤"><a href="#王大爷烧烤" class="headerlink" title="王大爷烧烤"></a>王大爷烧烤</h2><ul><li><a href="https://www.google.com/maps/place/Grandpa&#39;s+BBQ/@1.2838619,103.8441928,19.72z/data=!4m5!3m4!1s0x31da19735213b637:0x3ab7d78c61a477e5!8m2!3d1.2838905!4d103.8445477" target="_blank" rel="noopener">地址</a>: 16 Mosque St, Singapore 059496</li><li>点评：在牛车水摩士街，有点小贵。店面环境还不错，味道一般般，那个柴火鸡一定不要点，比起成都的差太多了，吃了想打人。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113639.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190711113636.jpg" alt=""></li></ul><h2 id="HANSSIK"><a href="#HANSSIK" class="headerlink" title="HANSSIK"></a>HANSSIK</h2><ul><li>地址: 3155 Commonwealth Ave W, #05-17/18, Singapore 129588</li><li>点评： 金文泰商场 5 楼，一家自助烤肉，味道还行吧，人均 33 新。吃到最后有点闷了。。。。</li><li>上图：   <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113732.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190712113735.jpg" alt=""></li></ul><h2 id="gyu-kaku"><a href="#gyu-kaku" class="headerlink" title="gyu-kaku"></a>gyu-kaku</h2><ul><li><a href="https://www.google.com/maps?q=gyu-kaku+@the+star+vista&amp;um=1&amp;ie=UTF-8&amp;sa=X&amp;ved=2ahUKEwiTqsPd6ufnAhVDyDgGHTu_AK0Q_AUoAXoECBwQAw" target="_blank" rel="noopener">地址</a>: 1 Vista Exchange Green #02-17, The Star Vista</li><li>点评：一家不错的日式烧肉连锁店，详情看<a href="https://www.gyu-kaku.com.sg/" target="_blank" rel="noopener">官网</a>，有自助烤肉，也有单点的。自助限时 90 分钟，味道还不错。这家店单点人均都是 60+ ， 比 tanjong pagar 那条街的韩国烤肉还贵。我已经吃了五六次了，从省钱角度上来说，一定要吃自助啊，澳洲和牛那个自助，税后一共人均 78 新币的样子，比较推荐这个。日本和牛那个人均 100 新币，但非常的油腻，不是很安利，吃多了就闷得慌。 </li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215643.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215646.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200223215651.jpg" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170257.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170301.jpg" alt=""></li></ul><h2 id="好张记烧烤"><a href="#好张记烧烤" class="headerlink" title="好张记烧烤"></a>好张记烧烤</h2><ul><li>地址： 530 Geylang Rd, Singapore 389486</li><li>点评：烤肥牛很棒，非常好吃，满满的油脂芬芳。烤鸡肉串，牛肉串也可以，醋花生也不错的。烤生蚝我觉得一般</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093531.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093538.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093546.jpg" alt=""></li></ul><h1 id="鸡饭"><a href="#鸡饭" class="headerlink" title="鸡饭"></a>鸡饭</h1><h2 id="了凡香港油鸡饭"><a href="#了凡香港油鸡饭" class="headerlink" title="了凡香港油鸡饭"></a>了凡香港油鸡饭</h2><ul><li><a href="https://www.google.com/maps/place/%E9%A6%99%E6%B8%AF%E6%B2%B9%E9%B6%8F%E9%A3%AF%E9%BA%BA/@1.2830062,103.8420419,18z/data=!4m12!1m6!3m5!1s0x31da197318313879:0x32fdfa545f34d128!2z6aaZ5riv5rK56bih6aWt6Z2iMi9G!8m2!3d1.2826067!4d103.8432113!3m4!1s0x0:0x9ac9da435638ad56!8m2!3d1.2831614!4d103.8429974" target="_blank" rel="noopener">地址</a>：78 Smith St, Singapore 058972</li><li>点评： 米其林一星的鸡饭，我觉得可以。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190709170032.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710144001.jpg" alt=""><h2 id="天天海南鸡饭"><a href="#天天海南鸡饭" class="headerlink" title="天天海南鸡饭"></a>天天海南鸡饭</h2>待吃<h2 id="荣亮阁"><a href="#荣亮阁" class="headerlink" title="荣亮阁"></a>荣亮阁</h2></li><li><a href="https://www.google.com/maps/place/Rong+Liang+Restaurant+%E6%A6%AE%E4%BA%AE%E9%96%A3/@1.3037029,103.7631718,19.84z/data=!4m5!3m4!1s0x31da1aedff402c6b:0xd6e2974e3a8ca8f2!8m2!3d1.303813!4d103.7636313" target="_blank" rel="noopener">地址</a>: #01-192, 725 Clementi West Street 2, Block 725, Singapore 120725</li><li>点评：家附近的一家鸡饭店，本地人经常去吃，物美价廉。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150141.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190710150146.jpg" alt=""></li></ul><h2 id="良伟腊味饭"><a href="#良伟腊味饭" class="headerlink" title="良伟腊味饭"></a>良伟腊味饭</h2><ul><li><a href="https://www.google.com/maps/place/Leong+Wei+Roasted+Delight/@1.3082051,103.79308,20.77z/data=!4m5!3m4!1s0x31da1a6a042925ed:0x8e651ad3c3dde1c4!8m2!3d1.3081371!4d103.7930037" target="_blank" rel="noopener">地址</a>:  44 Holland Dr, #02-36, Singapore 270044 Holland Drive Market and Food Centre</li><li>点评： 每天 11:30 才开卖，然而 11 点就已经有人排队了。价格便宜，半只鸡才 12 新币，味道非常的不错，特别是它家的辣椒酱，带一点点甜味。每天下午 四五点卖完就收摊了。 每周四休息</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621171112.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621171125.jpg" alt=""></li></ul><h2 id="Wee-Nam-Kee-Hainanese-Chicken-Rice"><a href="#Wee-Nam-Kee-Hainanese-Chicken-Rice" class="headerlink" title="Wee Nam Kee Hainanese Chicken Rice"></a>Wee Nam Kee Hainanese Chicken Rice</h2><ul><li>地址：101 Thomson Rd, #01-08 United Square, Singapore 307591 官网 <a href="http://wnk.com.sg/" target="_blank" rel="noopener">http://wnk.com.sg/</a></li><li>点评：鸡饭非常的不错，咖喱鱼头也是非常的好处。强烈推荐，全岛有好几家分店，大家可以去官网查看。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210508231637.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210508231640.jpg" alt=""></li></ul><h1 id="面食"><a href="#面食" class="headerlink" title="面食"></a>面食</h1><h2 id="柒小面"><a href="#柒小面" class="headerlink" title="柒小面"></a>柒小面</h2><ul><li>地址：Clementi West Street 1, Stall 4 Block 603, Singapore 120603</li><li>点评：一对年轻的重庆夫妻开的店，所有使用的辣椒，花椒，香料全部来自中国重庆。 面条是店主手工自制水面，非常的棒。是我目前在新加坡吃到过最正宗的川渝面了，价格也非常实惠，就是食阁的价格。每周三休息，其余时间都在营业。推荐大家去试一试，肥肠面，豌杂面，牛肉面那些都非常的不错，还没有开吃，香味就扑面而来。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210321005350.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210321005357.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210321005404.jpg" alt=""><h2 id="好滋味鸡公煲"><a href="#好滋味鸡公煲" class="headerlink" title="好滋味鸡公煲"></a>好滋味鸡公煲</h2></li><li>地址：3 Gateway drive B1-28 Westgate，Food Republic，608532 (Jurong East MRT）图片里有 3 家分店</li><li>点评：面非常的不错，就是有点辣（四川人也顶不住，建议小辣） <a href="https://www.yan.sg/renqibaopengdejigongbao/" target="_blank" rel="noopener">https://www.yan.sg/renqibaopengdejigongbao/</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093517.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809100147.jpeg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093511.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093507.jpg" alt=""></li></ul><h2 id="大华猪肉裸条面"><a href="#大华猪肉裸条面" class="headerlink" title="大华猪肉裸条面"></a>大华猪肉裸条面</h2><ul><li><a href="https://www.google.com/maps/place/Hill+Street+Tai+Hwa+Pork+Noodle/@1.305169,103.8603009,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19b42ad981b9:0x99e64da5de0603b8!8m2!3d1.305169!4d103.8624896" target="_blank" rel="noopener">地址</a>: 466 Crawford Ln, #01-12, Singapore 190466</li><li>点评: 就在 ICA 移民局背后的组屋群，一楼的食阁窗口，号称米其林一星。味道还不错，料很足的。但是价格也比一般的店铺贵一点，还是值得一吃。</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140435.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720140442.jpg" alt=""><h2 id="舌尖尖兰州拉面"><a href="#舌尖尖兰州拉面" class="headerlink" title="舌尖尖兰州拉面"></a>舌尖尖兰州拉面</h2></li><li><a href="https://mp.weixin.qq.com/s/SFz9PiGVADIdEChbJeNCmg" target="_blank" rel="noopener">地址</a>：有几家分店 302 Tiong Bahru Road, Tiong Bahru Plaza,#02-107</li><li>点评：在新加坡非常火的一家兰州拉面，味道还是不错的。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190722103847.jpg" alt=""></li></ul><h2 id="jurong-east-食阁"><a href="#jurong-east-食阁" class="headerlink" title="jurong east 食阁"></a>jurong east 食阁</h2><ul><li><a href="https://www.google.com/maps/place/Kopitiam+@+Jurong+East/@1.3327955,103.7425054,20z/data=!4m5!3m4!1s0x31da100f3cf9d46f:0xa65718371b2dd883!8m2!3d1.3327955!4d103.7425051" target="_blank" rel="noopener">地址</a>：10 Jurong East Street 12, Singapore 609690</li><li>点评：在 jurong east 地铁出来，下一层电梯。 1 楼的食阁里，有一家西安的面食，四合一，油泼面都非常不错，价格也实惠，唯一就是没有空调有点热。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142838.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142833.jpg" alt=""></li></ul><h2 id="O-BBa-Jjajang"><a href="#O-BBa-Jjajang" class="headerlink" title="O.BBa Jjajang"></a>O.BBa Jjajang</h2><ul><li><a href="https://www.google.com/maps/place/O.BBa+Jjajang/@1.277942,103.84381,21z/data=!4m5!3m4!1s0x31da196d24b78dd5:0x6966f7d8ce0bda08!8m2!3d1.2779418!4d103.8438101" target="_blank" rel="noopener">地址</a>: 77 Tg Pagar Rd, Singapore 088498</li><li>点评： 他家的炸酱面不错，大猪蹄子也还可以。每次都需要排队一小会，中午也开门，旁边就是那家 <a href="#Super-Star-K">Super Star K</a> </li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191224162011.jpg" alt=""></li></ul><h2 id="川巷米粉"><a href="#川巷米粉" class="headerlink" title="川巷米粉"></a>川巷米粉</h2><ul><li><a href="https://www.google.com/maps/place/Chuan+Hung+The+Noodle+Place/@1.2830203,103.849014,19.3z/data=!4m12!1m6!3m5!1s0x31da198ccb7e3611:0xc7ccac447235071d!2sChuan+Hung+The+Noodle+Place!8m2!3d1.2831443!4d103.8492268!3m4!1s0x31da198ccb7e3611:0xc7ccac447235071d!8m2!3d1.2831443!4d103.8492268" target="_blank" rel="noopener">地址</a>: 51A Telok Ayer St, #01-01, Singapore 048441</li><li>点评：老司机晓蕊带我来吃的这家川巷米粉，味道非常的不错，推荐藤椒味牛舌米粉和牛肉面。冒节子也是非常不错的。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201204141309.jpeg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200406193025.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200406193051.jpg" alt=""></li></ul><h2 id="Le-Shrimp-Ramen"><a href="#Le-Shrimp-Ramen" class="headerlink" title="Le Shrimp Ramen"></a>Le Shrimp Ramen</h2><p>地址：<a href="https://www.paradisegp.com/le-shrimp-ramen/" target="_blank" rel="noopener">https://www.paradisegp.com/le-shrimp-ramen/</a><br>点评：拉面味道还是不错的<br>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230534.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230539.jpg" alt=""></p><h2 id="Mian-Jia"><a href="#Mian-Jia" class="headerlink" title="Mian Jia"></a>Mian Jia</h2><ul><li>地址：19 Lorong Liput，Holland Village Singapore, 277732 <a href="https://mianjianoodlebar.getz.co/" target="_blank" rel="noopener">官网</a></li><li>点评：西班牙黑豚肉汤面不错，手打虾丸麻辣汤面很一般。米粉比幼面好吃</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200911183811.jpg" alt=""></li></ul><h2 id="Chuan-Noooodle"><a href="#Chuan-Noooodle" class="headerlink" title="Chuan Noooodle"></a>Chuan Noooodle</h2><ul><li>地址：5 Straits View, B2-35 详细地图 <a href="http://moments.com.sg/store/chuan-noooodle/" target="_blank" rel="noopener">http://moments.com.sg/store/chuan-noooodle/</a> </li><li>点评：我第一次去只吃了甜水面，味道还可以。 就是位置有点难找， 在 Marina one 负二楼</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210113123408.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210113123413.jpg" alt=""></li></ul><h2 id="Ah-Heng-Curry-Chicken-Bee-Hoon-Mee"><a href="#Ah-Heng-Curry-Chicken-Bee-Hoon-Mee" class="headerlink" title="Ah Heng Curry Chicken Bee Hoon Mee"></a>Ah Heng Curry Chicken Bee Hoon Mee</h2><ul><li>address：531A Upper Cross St, #02-57/58, Singapore 051531</li><li>review：Thanks old driver Alex bring us to the famous curry noodle in Hong Lim Market &amp; Food Centre. The curry is really nice, option size is 5/6/7 SGD. must try it</li><li>photos: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210122143908.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210122143916.jpg" alt=""></li></ul><h2 id="Chilli-Pan-Mee-Batu-Rd"><a href="#Chilli-Pan-Mee-Batu-Rd" class="headerlink" title="Chilli Pan Mee (Batu Rd)"></a>Chilli Pan Mee (Batu Rd)</h2><ul><li>address: 22 China St, Singapore 049564</li><li>review: Thanks Fabian recommendation and brings us to this spicy noodle. I add 3 spoons chilli, it’s too spicy. Best chilli half spoon to 2 spoon.</li><li>photos: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210205224312.jpeg" alt=""><h1 id="日料"><a href="#日料" class="headerlink" title="日料"></a>日料</h1></li></ul><h2 id="Waa-Cow"><a href="#Waa-Cow" class="headerlink" title="Waa Cow"></a>Waa Cow</h2><ul><li>地址：#01-06 College Ave West, Stephen Riady Centre, 138607</li><li>点评：我去的是 NUS 学校里的这家分店，和牛饭非常的好吃。菜单和价格，参考官网 <a href="https://www.waacow.sg/" target="_blank" rel="noopener">https://www.waacow.sg/</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201212095706.jpeg" alt=""></li></ul><h2 id="Sushi-Tei"><a href="#Sushi-Tei" class="headerlink" title="Sushi Tei"></a>Sushi Tei</h2><ul><li><a href="https://www.sushitei.com/outlets/outlets.aspx" target="_blank" rel="noopener">地址</a>: 新加坡全岛有 13 家分店，我是在家附近 Raffles Holland V 吃的</li><li>点评：猪肉饭非常的不错，鳗鱼寿司也可以。金针菇牛肉卷感觉一般，刺身拼盘也可以。<a href="https://www.sushitei.com/menu/menu.aspx" target="_blank" rel="noopener">官网菜单</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144810.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190812144813.jpg" alt=""></li></ul><h2 id="鶏金-Torikin"><a href="#鶏金-Torikin" class="headerlink" title="鶏金 Torikin"></a>鶏金 Torikin</h2><ul><li>地址： 205 River Valley Road #01-75 UE Square, 238274</li><li>点评： 非常的清淡，有很多种锅：白煮鸡，酱油鸡，牛粉肠，肥牛锅等。 需要提前打电话预定</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223348.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223406.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223402.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223358.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223353.jpg" alt=""></li></ul><h2 id="Man-Man-Japanese-Unagi-Restaurant"><a href="#Man-Man-Japanese-Unagi-Restaurant" class="headerlink" title="Man Man Japanese Unagi Restaurant"></a>Man Man Japanese Unagi Restaurant</h2><ul><li>地址：1 Keong Saik Rd., #01-01, Singapore 089109</li><li>点评： 疫情期间，我们在家用 grab 点的外卖，一份 40+ 新币，但味道非常的好吃。物有所值</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223343.jpg" alt=""></li></ul><h2 id="Waa-Cow-1"><a href="#Waa-Cow-1" class="headerlink" title="Waa Cow!"></a>Waa Cow!</h2><ul><li>地址： 官网上有两家店 <a href="https://www.waacow.sg/" target="_blank" rel="noopener">https://www.waacow.sg/</a></li><li>点评：和牛饭非常的好吃，20+ 新币一份。已经吃过四五次了</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727224646.jpg" alt=""></li></ul><h2 id="Imakatsu"><a href="#Imakatsu" class="headerlink" title="Imakatsu"></a>Imakatsu</h2><ul><li>地址：1 Vista Exchange Green, Singapore 138617</li><li>点评：炸猪排味道不错，值得一吃，20 多新币。鳗鱼饭一般般，不推荐啦。</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210707081059.jpeg" alt="">  <img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210627201714.jpeg" alt=""></li></ul><h2 id="SUSHIRO"><a href="#SUSHIRO" class="headerlink" title="SUSHIRO"></a>SUSHIRO</h2><ul><li>地址：302 Tiong Bahru Rd, #02-118, Singapore 168732</li><li>点评：好吃便宜的旋转寿司，性价比高。它家小甜品也不错。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230615.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230557.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230606.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230624.jpg" alt=""></li></ul><h2 id="Goro-Japanese-Cuisine"><a href="#Goro-Japanese-Cuisine" class="headerlink" title="Goro Japanese Cuisine"></a>Goro Japanese Cuisine</h2><ul><li>地址：43 Holland Dr, #01-49, Singapore 270043</li><li>点评：一家非常家常的小店，就在街边上，味道很不错，价格实惠。 最好吃的就是它家的 M1 寿司，还有鳗鱼饭。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200919100023.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200919100017.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200919100011.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200924171904.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200924171909.jpg" alt=""></li></ul><h2 id="Shin-Kushiya-Vivocity"><a href="#Shin-Kushiya-Vivocity" class="headerlink" title="Shin Kushiya Vivocity"></a>Shin Kushiya Vivocity</h2><ul><li>地址：1 HarbourFront Walk, #02-120 Vivocity, Singapore</li><li>点评：人超多，最好是提前预定。寿司我觉得很一般，推荐烤肉串，推荐鸡肉，牛肉，牛肉卷金针菇，猪肉有一点点腻，人均 50 多新币。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201122164739.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201122164746.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201122164754.jpg" alt=""></li></ul><h2 id="Kumo-Japanese-Dining"><a href="#Kumo-Japanese-Dining" class="headerlink" title="Kumo Japanese Dining"></a>Kumo Japanese Dining</h2><ul><li>地址：321 Alexandra Road, Alexandra Central, #01-10, 159971</li><li>点评：在商场的一楼，店面很小。有自助和单点，我是吃的自助， 人均 40 新币。周五周末节假日自助会限时，其他工作日自助不限时。有刺身，寿司，手卷，饭团，面，饭，天妇罗，汤，烧烤。Google map 上评分非常高</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201217235315.jpeg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201217235034.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201217235039.jpg" alt=""></li></ul><h2 id="The-Public-Izakaya"><a href="#The-Public-Izakaya" class="headerlink" title="The Public Izakaya"></a>The Public Izakaya</h2><ul><li>地址：100 Tras St, #01 - 09, Singapore 079027  其实就在 100 AM Mall 后门旁边</li><li>点评：装修风格不错，屋内有榻榻米雅座，需要提前一到两周预定。 烤肉串还可以，它家的酒太贵了，贫穷的打工人我吃不起。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201223161004.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201223161008.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201223161014.jpg" alt=""></li></ul><h2 id="Yakiniku-Don-Don-1st"><a href="#Yakiniku-Don-Don-1st" class="headerlink" title="Yakiniku Don-Don 1st"></a>Yakiniku Don-Don 1st</h2><ul><li>地址：90 Tg Pagar Rd, Singapore 088511</li><li>点评：店很小一个，需要提前预定。这次是坐的 Counter Seat，能看到厨师在旁边准备材料。推荐的菜， 牛舌 OX Tongue with Spring Onion, Tenderest Tenderloin,  和牛 Zabuton，牛肠没有猪大肠的味道，有嚼劲， WakemeS 汤也不错， 冷面也好吃。 我两个人吃了 185 SGD</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000042.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000049.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000054.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000059.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000104.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210308000111.jpg" alt=""></li></ul><h1 id="中餐"><a href="#中餐" class="headerlink" title="中餐"></a>中餐</h1><h2 id="密斯湘菜"><a href="#密斯湘菜" class="headerlink" title="密斯湘菜"></a>密斯湘菜</h2><ul><li>地址：8 Mosque St, Singapore 059488</li><li>点评： 在牛车水的一家湖南菜，里面的炒腊肉不错，那个烤鱿鱼拉胯，炒黄牛肉也下饭，还是值得一试。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233539.jpg" alt=""><h2 id="莆田"><a href="#莆田" class="headerlink" title="莆田"></a>莆田</h2></li><li><a href="https://www.putien.com/outlet/vivocity/" target="_blank" rel="noopener">地址</a>: 1 HarbourFront Walk #02-131/132</li><li>点评： 一家非常不错的福建菜。空调有点冷，九转粉肠非常的好吃，虾苗拌紫菜也好吃，蛏子也很大只的。百秒黄花鱼也是很嫩。扁肉汤的馄饨好吃，汤一般般，很腻。蔬菜豆腐汤不错，很好喝推荐。脆皮蒜香鸡不行，不推荐。铁板鳗鱼一般，普宁豆酱蒜香焗鳗鱼不错。一品海蛎煎非常的好吃。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233354.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233358.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233401.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233405.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190713233408.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190904114704.jpeg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200815151001.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200815151006.jpg" alt=""></li></ul><h2 id="汕头海鲜"><a href="#汕头海鲜" class="headerlink" title="汕头海鲜"></a>汕头海鲜</h2><ul><li><a href="https://swatow.com.sg/home.php" target="_blank" rel="noopener">地址</a>: Blk 181 Lorong 4 Toa Payoh #02-602 有两家店</li><li>点评：我们当时是去吃的自助下午茶，会有阿姨推车过，然后选择需要的茶点。环境还不错，菜品也丰富。可以早点去 2:30 到店里。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720142958.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143005.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143009.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20190720143012.jpg" alt=""></li></ul><h2 id="蟹老宋"><a href="#蟹老宋" class="headerlink" title="蟹老宋"></a>蟹老宋</h2><ul><li><a href="https://www.google.com.sg/maps/place/Crab+Song+Seafood+Restaurant/@1.2820955,103.8423314,17z/data=!3m1!4b1!4m5!3m4!1s0x31da19732a617c17:0x7a7c31f97d06d8d0!8m2!3d1.2820901!4d103.8445201" target="_blank" rel="noopener">地址</a>: 16 Smith St, Singapore 058930</li><li>点评：本来去是想吃大闸蟹的，结果只剩大个头的蟹蟹，48 新币一只，打扰了。然后就吃了他家的其他一些菜，小龙虾和烤鸭都还不错的，酸辣鸡杂也不错。</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112534.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112539.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112543.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112547.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112551.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191021112554.jpg" alt=""></li></ul><h2 id="阿里疆"><a href="#阿里疆" class="headerlink" title="阿里疆"></a>阿里疆</h2><ul><li>地址： HarbourFront Walk, #03-11B VivoCity, Singapore 098585</li><li>点评：西北菜，大盘鸡，杏皮茶，酿皮不错，人均 50+ 新币</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727230545.jpg" alt=""></li></ul><h2 id="手拉手山东菜馆"><a href="#手拉手山东菜馆" class="headerlink" title="手拉手山东菜馆"></a>手拉手山东菜馆</h2><ul><li>地址：69 Boat Quay, Singapore 049857 (Nearest MRT exit: EW14/NS26 – Raffles Place or NE5 – Clarke Quay)</li><li>点评：就在克拉克河边上，风景不错。烤鸭也可以。烤鸭、陈麻婆豆腐、脆皮大肠、豆花牛肉，海虾炒白菜，炸萝卜丸子不错，千万不要点爆炸腰花和手撕包菜腊肉。 官网看菜单 <a href="https://handinhandfood.com/hand-in-hand-shandong-restaurant/" target="_blank" rel="noopener">https://handinhandfood.com/hand-in-hand-shandong-restaurant/</a></li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231215911.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231215920.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210102165806.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210102165800.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210122143903.jpg" alt=""></li></ul><h2 id="云海肴"><a href="#云海肴" class="headerlink" title="云海肴"></a>云海肴</h2><ul><li>地址：3 Gateway Dr, #03-07, Singapore 608532</li><li>点评：一家云南菜，感觉还不错。松板肉有点像四川的水煮肉片，但是不辣，黑三剁非常的下饭, 过桥米线也可以，人均 40+ 新币</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233517.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233523.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233528.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210508231634.jpg" alt=""></li></ul><h2 id="东北饺子王"><a href="#东北饺子王" class="headerlink" title="东北饺子王"></a>东北饺子王</h2><ul><li>地址：372 Geylang Road Singapore 389383</li><li>点评：一家不错的东北菜，分量很足，店里人多很热闹，就是有点嘈杂</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231221024.jpeg" alt=""></li></ul><h1 id="东南亚"><a href="#东南亚" class="headerlink" title="东南亚"></a>东南亚</h1><h2 id="Rong-Hua-Bak-Kut-Teh"><a href="#Rong-Hua-Bak-Kut-Teh" class="headerlink" title="Rong Hua Bak Kut Teh"></a>Rong Hua Bak Kut Teh</h2><ul><li><a href="https://www.google.com.sg/maps/place/Rong+Hua+Bak+Kut+Teh/@1.2989347,103.7872707,19z/data=!3m2!4b1!5s0x31da19a8f35a3147:0xc77b3af93afc0695!4m5!3m4!1s0x31da1a4545e6d565:0xc913ef2de4ce7367!8m2!3d1.2989334!4d103.7878179" target="_blank" rel="noopener">地址</a>: 1 Fusionopolis Way # B1 - 13, 138632</li><li>点评： 胡椒味很重，吃普通的肉骨茶就行，特级龙骨不好吃，肉太柴了。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315170529.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315170532.jpg" alt=""> </li></ul><h2 id="松发肉骨茶"><a href="#松发肉骨茶" class="headerlink" title="松发肉骨茶"></a>松发肉骨茶</h2><ul><li><a href="https://songfa.com.sg/pages/outlets" target="_blank" rel="noopener">地址</a>: 店太多了，谷歌一下</li><li>点评： 松发是最出名的新加坡肉骨茶，味道不错。</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315171451.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200315171454.jpg" alt=""></li></ul><h2 id="哥打正宗肉骨茶"><a href="#哥打正宗肉骨茶" class="headerlink" title="哥打正宗肉骨茶"></a>哥打正宗肉骨茶</h2><ul><li>地址: 15A Lorong Liput Holland Village Singapore 277742</li><li>点评：是中药味的肉骨茶，味道还可以，甘蔗马蹄水好喝。最让人难忘的就是，店里播放的音乐都是 80 90 后爱听的华语音乐 </li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200911183806.jpg" alt=""></li></ul><h2 id="Ah-Loy-Thai"><a href="#Ah-Loy-Thai" class="headerlink" title="Ah Loy Thai"></a>Ah Loy Thai</h2><ul><li>地址：9 #01-04 Tan Quee Lan St, Singapore 188098</li><li>点评：正宗且价格实惠的一家泰国菜，第一次和同学来吃，第二次和同事来吃饭（他们去过泰国，说这家非常 authentic）</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223338.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200902231450.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200902231442.jpg" alt=""></li></ul><h2 id="Aris-Studio23"><a href="#Aris-Studio23" class="headerlink" title="Aris Studio23"></a>Aris Studio23</h2><ul><li>地址：18 Lor Mambong, Singapore 277678</li><li>点评：就在荷兰村酒吧一条街上，店环境不错，味道也可以， eatigo 上面还有优惠</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201231220747.jpeg" alt=""></li></ul><h2 id="One-Mookata"><a href="#One-Mookata" class="headerlink" title="One Mookata"></a>One Mookata</h2><ul><li>地址：40 Holland Drive #01-39, Stall 2, 270040</li><li>点评：在食阁里面的一家泰式小火锅，价格实惠，适合天气凉爽的时候吃。人均 13 新币</li><li>上图： <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233448.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233455.jpg" alt=""></li></ul><h2 id="Enak-Enak-HongKong-Tea-House"><a href="#Enak-Enak-HongKong-Tea-House" class="headerlink" title="Enak Enak HongKong Tea House"></a>Enak Enak HongKong Tea House</h2><ul><li>地址：1202 ECP, Singapore 449881</li><li>点评：每次划水完都来吃的一家东南亚菜系，麦片虾，沙爹都还不错，价格实惠</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233616.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233619.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233622.jpg" alt=""></li></ul><h2 id="香港街珍达记"><a href="#香港街珍达记" class="headerlink" title="香港街珍达记"></a>香港街珍达记</h2><ul><li>地址： 46 Holland Dr, Singapore 270046   46CTK@Seafood Pte Ltd</li><li>点评：租房附近的一个本地煮炒，蒜蓉豆苗和耗油奶白菜都不错，咸蛋黄鸡丁可以，咸蛋黄排骨（其实不是排骨，是肉片）</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210516104331.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210516104334.jpg" alt=""><h1 id="西餐"><a href="#西餐" class="headerlink" title="西餐"></a>西餐</h1></li></ul><h2 id="Panamericana"><a href="#Panamericana" class="headerlink" title="Panamericana"></a>Panamericana</h2><ul><li>地址：27 Bukit Manis Rd, Sentosa Golf Club, 099892 先坐 express 到 beach station，再步行 2 分钟到 Beach Station Bus terminal 坐 shuttle bus B, 坐到 Sentosa Golf Club 这一站下车。</li><li>点评：这家店的风景是目前吃过餐厅中最佳的，Pluma Iberico Pork 非常好吃，那个酱很不错。 Liitle Joe Ribeye 也很不错，配菜不知道是酸菜还是咸菜很好吃。 Colombian Chicken 我觉得一般，Charred Octopus Tentacle 还不错. California salad 也不错， Tacos 也还行， Churros 西班牙油条太甜了。 总体来说，人均 70 - 100 新币，非常的不错，待客的好地方。就是室外的座位需要提前预定。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225518.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225459.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225510.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225420.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210220225408.jpg" alt=""><h2 id="Fosters"><a href="#Fosters" class="headerlink" title="Fosters"></a>Fosters</h2></li><li>地址：277 Holland Ave, Singapore 278994 <a href="https://fosters-restaurant.com/" target="_blank" rel="noopener">https://fosters-restaurant.com/</a></li><li>点评：我吃的是 Fillet Mignon $42.00 味道还不错。这家店在一个隐瞒的角落里，沙拉 Tossed Caesar Salad $16.00 巨坑，不推荐哈。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200809093525.jpg" alt=""></li></ul><h2 id="Cha-Cha-Cha-Mexican-Restaurant"><a href="#Cha-Cha-Cha-Mexican-Restaurant" class="headerlink" title="Cha Cha Cha Mexican Restaurant"></a>Cha Cha Cha Mexican Restaurant</h2><ul><li>地址：32 LORONG MAMBONG, HOLLAND VILLAGE  SINGAPORE 277690  官网：<a href="https://www.chachacha.com.sg/" target="_blank" rel="noopener">https://www.chachacha.com.sg/</a></li><li>点评：很不错的一家墨西哥餐厅，人均 30 新币+，环境也不错。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200811165726.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200811165647.jpg" alt=""></li></ul><h2 id="The-French-Ladle"><a href="#The-French-Ladle" class="headerlink" title="The French Ladle"></a>The French Ladle</h2><ul><li>地址：2 Pandan Valley, Singapore 597626  官网：<a href="https://thefrenchladle.com/" target="_blank" rel="noopener">https://thefrenchladle.com/</a></li><li>点评：第一次吃法国菜，环境很家常，蘑菇汤不错，escargot 蜗牛也不错, 牛脸颊，牛排，鸡腿，油封鸭腿还行吧</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115020.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115025.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115030.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115035.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115039.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115043.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200907115053.jpg" alt=""></li></ul><h2 id="The-English-House-by-Marco-Pierre-White"><a href="#The-English-House-by-Marco-Pierre-White" class="headerlink" title="The English House by Marco Pierre White"></a>The English House by Marco Pierre White</h2><ul><li>地址: 28 Mohamed Sultan Rd, Singapore 238972</li><li>点评: 这家惠灵顿牛排店装修是非常的好, 如果是点 2 人份的 惠灵顿牛排 125 SGD 不需要提前交押金的，没有必要。点四人份以上的话，就需要 pre-order 了。他家的那个生牛肉沙拉强烈推荐，第一次吃生牛肉，但完全没有腥味，反而牛肉很柔软。如果是过生日的话，预定的时候告诉店家，他们还会送一个小蛋糕。惠灵顿牛排怎么说呢，没有给我很惊艳的感觉，只能说是尝个新鲜</li><li>上图: <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233630.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233634.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210217233640.jpg" alt=""></li></ul><h2 id="Saizeriya"><a href="#Saizeriya" class="headerlink" title="Saizeriya"></a>Saizeriya</h2><ul><li>地址：3 Lor Liput, #02-01, Singapore 277725 是一家连锁快餐店 <a href="https://www.saizeriya.com.sg/" target="_blank" rel="noopener">https://www.saizeriya.com.sg/</a></li><li>点评：食阁的价格，带空调的环境。日常消费的好去处，比较喜欢它家的意面</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210511193218.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210511193214.jpg" alt=""> <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210511193209.jpg" alt=""></li></ul><h2 id="morganfields"><a href="#morganfields" class="headerlink" title="morganfields"></a>morganfields</h2><ul><li>地址：1 Vista Exchange Green, #02-23, Singapore 138617 <a href="https://morganfields.com.sg/" target="_blank" rel="noopener">官网</a></li><li>点评：今天吃的是猪排套餐， half &amp;half 59 新币，还喝了一杯 mojito，最后算上 GTS + Service Charge , 一共是 88 新币</li><li>上图：<img src="https://raw.githubusercontent.com/feiyang233/pictures/master/img/20210627134631.jpeg" alt=""></li></ul><h1 id="酒吧"><a href="#酒吧" class="headerlink" title="酒吧"></a>酒吧</h1><h2 id="SQUE"><a href="#SQUE" class="headerlink" title="SQUE"></a>SQUE</h2><ul><li><a href="http://www.sque.com.sg/" target="_blank" rel="noopener">http://www.sque.com.sg/</a></li><li>点评：同事带我去吃的，说这里很受 local 欢迎，河对面的是游客常去的。啤酒和食物也不错，人均 50 新币，🍺喝饱了</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170329.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170339.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200621170309.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223333.jpg" alt=""></li></ul><h2 id="Artichoke"><a href="#Artichoke" class="headerlink" title="Artichoke"></a>Artichoke</h2><ul><li>地址：161 Middle Rd, Singapore 188978 <a href="https://www.bjornshen.com/artichoke" target="_blank" rel="noopener">https://www.bjornshen.com/artichoke</a></li><li>点评：中东菜系，啤酒是英国苏格兰进口。如果喝酒，那么人均 100 新币+， 有两个菜不错，一个是虾，另外一个是最后的甜点。</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223305.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223249.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223245.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200727223321.jpg" alt=""></li></ul><h1 id="甜品"><a href="#甜品" class="headerlink" title="甜品"></a>甜品</h1><h2 id="Gram-Cafe-amp-Pancakes-Singapore"><a href="#Gram-Cafe-amp-Pancakes-Singapore" class="headerlink" title="Gram Café &amp; Pancakes Singapore"></a>Gram Café &amp; Pancakes Singapore</h2><ul><li><a href="https://www.google.com/maps/place/Gram+Caf%C3%A9+%26+Pancakes+Singapore/@1.2980014,103.7598895,13z/data=!4m8!1m2!2m1!1sgram!3m4!1s0x0:0x986c1a8d200bf1bb!8m2!3d1.2635613!4d103.8227105" target="_blank" rel="noopener">地址</a>： 1 Harbourfront Walk, #02-110 VivoCity, Singapore 098585</li><li>点评： 我本人不喜欢吃甜品，妹子喜欢吃，还不错。三个甜品 58 新</li><li>上图：<img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101631.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101636.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101640.jpg" alt="">  <img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200309101643.jpg" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;民以食为天&lt;br&gt;作为一个在新加坡搬砖的四川吃货，唯有美食不可辜负。坡县虽小，但各式各样的菜系都可以吃到。由于在四川长大，比较喜欢川菜火锅串串香锅烤鱼等。偶尔也跟着朋友们尝试一下其他的菜系。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="美食" scheme="http://feiyang233.club/tags/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>tmate 终端共享</title>
    <link href="http://feiyang233.club/post/tmate/"/>
    <id>http://feiyang233.club/post/tmate/</id>
    <published>2021-06-15T07:52:59.000Z</published>
    <updated>2021-06-15T08:29:54.961Z</updated>
    
    <content type="html"><![CDATA[<p>如何将你的 terminal 共享给他人，一起协同工作，结对编程呢？ 在这里安利 <a href="https://tmate.io/" target="_blank" rel="noopener">tmate Instant terminal sharing</a><br><a id="more"></a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://tmate.io/" target="_blank" rel="noopener">官网</a>上有详细的，各种操作系统的安装教程, 同时也安利一篇参考的文章 <a href="https://www.cnblogs.com/idorax/p/12380758.html" target="_blank" rel="noopener">终端共享神器tmate简明教程</a></p><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><p>前提是先安装好 <a href="https://brew.sh/" target="_blank" rel="noopener">brew</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install tmate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查版本，最新的 V2.4.0</span></span><br><span class="line">FEIYANG@MAC ~ % tmate -V</span><br><span class="line">tmate 2.4.0</span><br></pre></td></tr></table></figure></p><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><p>Ubuntu 上面通过 apt 安装的是 tmate 2.2.1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install -y tmate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装最新版本</span></span><br><span class="line">curl -L https://github.com/tmate-io/tmate/releases/download/2.4.0/tmate-2.4.0-static-linux-amd64.tar.xz|tar xJv</span><br><span class="line"></span><br><span class="line">mv tmate-2.4.0-static-linux-amd64/tmate /usr/bin/tmate</span><br></pre></td></tr></table></figure></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>首先要确保自己有 SSH key， 如果没有，必须先生成一个<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure></p><h2 id="结对编程"><a href="#结对编程" class="headerlink" title="结对编程"></a>结对编程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># run tmate</span></span><br><span class="line">tmate</span><br><span class="line"></span><br><span class="line">Tip: <span class="keyword">if</span> you wish to use tmate only <span class="keyword">for</span> remote access, run: tmate -F                                                                                                           [0/0]</span><br><span class="line">To see the following messages again, run <span class="keyword">in</span> a tmate session: tmate show-messages</span><br><span class="line">Press &lt;q&gt; or &lt;ctrl-c&gt; to <span class="built_in">continue</span></span><br><span class="line">---------------------------------------------------------------------</span><br><span class="line">Connecting to ssh.tmate.io...</span><br><span class="line">Note: clear your terminal before sharing <span class="built_in">readonly</span> access</span><br><span class="line">web session <span class="built_in">read</span> only: https://tmate.io/t/ro-86Kbnayp3sU5zm8HZcNUGKxB4</span><br><span class="line">ssh session <span class="built_in">read</span> only: ssh ro-86Kbnayp3sU5zm8HZcNUGKxB4@sgp1.tmate.io</span><br><span class="line">web session: https://tmate.io/t/ZkWhcPLmKA7wDhc7PzUgNCBHs</span><br><span class="line">ssh session: ssh ZkWhcPLmKA7wDhc7PzUgNCBHs@sgp1.tmate.io</span><br><span class="line"><span class="comment"># 以上是四种连接方式 ssh、ssh-ro、web和web-ro。其中，ssh、web支持读写访问，ssh-ro、web-ro支持只读访问。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分享只读</span></span><br><span class="line">ssh ro-86Kbnayp3sU5zm8HZcNUGKxB4@sgp1.tmate.io</span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:~<span class="comment"># w</span></span><br><span class="line"> 16:07:02 up  4:00,  1 user,  load average: 0.00, 0.01, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">feiyang  pts/0    192.168.1.125    12:08    0.00s  0.07s  0.01s sshd: feiyang]</span><br><span class="line">root@ubuntu18-108:~<span class="comment"># ls</span></span><br><span class="line">go  snap  tmate-2.4.0-static-linux-amd64</span><br><span class="line">root@ubuntu18-108:~<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">logout</span>[lost server]</span><br><span class="line">Connection to sgp1.tmate.io closed by remote host.</span><br><span class="line">Connection to sgp1.tmate.io closed.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分享读写</span></span><br><span class="line">ssh session: ssh ZkWhcPLmKA7wDhc7PzUgNCBHs@sgp1.tmate.io</span><br></pre></td></tr></table></figure><p>如果还想查看 To see the following messages again, run in a tmate session: tmate show-messages</p><h2 id="remote-access"><a href="#remote-access" class="headerlink" title="remote access"></a>remote access</h2><p>Tip: if you wish to use tmate only for remote access, run: <code>tmate -F</code><br>如果你想将一台只有内网的机器暴露出来，像 SSH 登录公网 IP  的机器一样, 那你需要 Remote access</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tmate -F</span><br><span class="line"></span><br><span class="line">To connect to the session locally, run: tmate -S /tmp/tmate-0/nhlGjc attach</span><br><span class="line">Connecting to ssh.tmate.io...</span><br><span class="line">web session <span class="built_in">read</span> only: https://tmate.io/t/ro-FNTFCyhhMuE6Vtstm6MZ5gLnR</span><br><span class="line">ssh session <span class="built_in">read</span> only: ssh ro-FNTFCyhhMuE6Vtstm6MZ5gLnR@sgp1.tmate.io</span><br><span class="line">web session: https://tmate.io/t/sEJnrJCjsx87J2PgUyUgbdPY2</span><br><span class="line">ssh session: ssh sEJnrJCjsx87J2PgUyUgbdPY2@sgp1.tmate.io</span><br></pre></td></tr></table></figure><h1 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h1><p>因为每次产生的登录地址都是随机的, 一定程度保证了安全性. 但是想做到万无一失, 特别是使用 remote access 的时候, 长期暴露远程登录的时候, 访问控制是非常有必要的.</p><ul><li>将你所信任的人 B 的公钥加入到 A 你的~/.ssh/authorized_keys文件中，</li><li>启动tmate使用如下命令：当启用 public key 访问控制的时候，web 连接方式就无法使用了。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tmate -a ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># A 添加了 public key 的才能成功访问</span></span><br><span class="line">ssh 8yjGDpk3Vh79xm9rM2QMbKPZj@sgp1.tmate.io</span><br></pre></td></tr></table></figure>如果 C 没有保存公钥到 A 的~/.ssh/authorized_keys文件中，访问就会被拒绝<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh 8yjGDpk3Vh79xm9rM2QMbKPZj@sgp1.tmate.io</span><br><span class="line">The authenticity of host <span class="string">'sgp1.tmate.io (188.166.207.127)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:Hthk2T/M/Ivqfk1YYUn5ijC2Att3+UPzD7Rn72P5VWs.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>sgp1.tmate.io,188.166.207.127<span class="string">' (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">8yjGDpk3Vh79xm9rM2QMbKPZj@sgp1.tmate.io: Permission denied (publickey).</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何将你的 terminal 共享给他人，一起协同工作，结对编程呢？ 在这里安利 &lt;a href=&quot;https://tmate.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tmate Instant terminal sharing&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://feiyang233.club/tags/shell/"/>
    
      <category term="tools" scheme="http://feiyang233.club/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>draw.io 画图教程</title>
    <link href="http://feiyang233.club/post/drawio/"/>
    <id>http://feiyang233.club/post/drawio/</id>
    <published>2021-05-26T08:57:05.000Z</published>
    <updated>2021-06-26T00:24:37.451Z</updated>
    
    <content type="html"><![CDATA[<p>工欲善其事，必先利其器。<br><a id="more"></a></p><p><a href="https://app.diagrams.net/" target="_blank" rel="noopener">draw.io</a>  是一款免费的网页版画图工具，简单好用。  官方网站是 <a href="https://drawio-app.com/" target="_blank" rel="noopener">https://drawio-app.com/</a></p><h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><p>网上搜索一下，也有很多教程，只需要花 5 分钟就可以浏览完</p><ul><li><a href="https://zhuanlan.zhihu.com/p/129659662" target="_blank" rel="noopener">draw.io 新手使用教程</a> </li><li><a href="https://juejin.cn/post/6844903589383520264" target="_blank" rel="noopener">使用draw.io绘制简洁大方的流程图</a></li></ul><h1 id="连接线"><a href="#连接线" class="headerlink" title="连接线"></a>连接线</h1><ul><li><a href="https://drawio.freshdesk.com/support/solutions/articles/16000054438-create-a-connector-with-bidirectional-arrows" target="_blank" rel="noopener">如何画双箭头</a></li><li><a href="https://drawio-app.com/waypoints-in-draw-io-building-a-path-for-your-connectors/" target="_blank" rel="noopener">增加转折点</a> 有时候我们希望连接线在某一点固定，我们需要增加一个铆钉点。 操作是，鼠标移动到连线上需要固定的那个点，点击右键，add waypoint</li></ul><h1 id="group"><a href="#group" class="headerlink" title="group"></a>group</h1><ul><li><a href="https://drawio.freshdesk.com/support/solutions/articles/16000042523-group-and-ungroup-shapes-and-connectors" target="_blank" rel="noopener">将组件打包为一个整体</a>。 有时候组件太多了，一不小心就点错了，或者我们需要集体移动，改变大小。 这个时候，我们可以先将需要的组件选中，然后在右边的 Arrange 下面的 group</li></ul><p><img src="/img/misc/0.png" alt=""> </p><h1 id="layers"><a href="#layers" class="headerlink" title="layers"></a>layers</h1><ul><li><a href="https://www.diagrams.net/doc/layers" target="_blank" rel="noopener">Work with layers in diagrams.net</a></li><li>当有许多组件的时候，而且重叠部分比较多，（有点套娃的样子）这个时候不好编辑，那么就需要分层了。</li><li>上面的图片只显示了 Backgroud 层， 下图只显示了 frame 层。 </li></ul><p><img src="/img/misc/1.png" alt=""> </p><h1 id="export"><a href="#export" class="headerlink" title="export"></a>export</h1><p><a href="https://www.diagrams.net/doc/faq/export-diagram" target="_blank" rel="noopener">导出图片时的区别</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工欲善其事，必先利其器。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://feiyang233.club/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tools" scheme="http://feiyang233.club/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes 实验环境搭建</title>
    <link href="http://feiyang233.club/post/k8s/"/>
    <id>http://feiyang233.club/post/k8s/</id>
    <published>2021-05-13T02:44:00.000Z</published>
    <updated>2021-06-01T09:00:49.623Z</updated>
    
    <content type="html"><![CDATA[<p>都 2021 年了，我终于把 kubernetes 实验测试环境搭建好了，泪目<br><a id="more"></a></p><p>2019 年的时候，我也曾经尝试学习，搭建 kubernetes 集群，结果当时自己的电脑性能太差了。一台  mac 模拟出三台虚拟机，性能上根本无法满足要求，甚至偶尔死机。还有当时自己 naive， 也不会善用<a href="https://feiyang233.club/post/vm/#%E5%AD%A6%E4%BC%9A%E5%BF%AB%E7%85%A7-snapshot">快照</a>, 每次搞崩溃了环境，又重头再来，费时费力。</p><p>如今，时代变了。兵强马壮，家里有三台笔记本，一台台式机，机荒的日子已经一去不复返了。重现当年好学的荣光，我辈义不容辞，冲。</p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>本文记录了，在三台 Ubuntu 虚拟机上搭建一个 kubernetes 集群的全部过程，以及分享菜鸡我踩过的坑。</p><p>实验的环境如下， 都是 Ubuntu desktop 桌面版的，我也建议用桌面版。 原因：比如 kubernetes Dashboard 只能从 localhost 本地访问，桌面版自带 Firefox 浏览器，就可以直接在虚拟机界面里面直接操作， 少一步转发。</p><table><thead><tr><th>Name</th><th>Operating system</th><th>Kernel</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>ubuntu18-119</td><td>Ubuntu 18.04.5 LTS</td><td>5.4.0</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.119</td></tr><tr><td>ubuntu18-120</td><td>Ubuntu 18.04.5 LTS</td><td>5.4.0</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.120</td></tr><tr><td>ubuntu18-121</td><td>Ubuntu 18.04.5 LTS</td><td>5.4.0</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.121</td></tr></tbody></table><p>这三台虚拟机，分别跑在三台笔记本电脑上。这样做的好处是，桥接模式不需要 NAT 端口映射，在我家的局域网里面尽情的玩耍。<br>当然如果你的电脑性能超级好，一台物理机跑三台虚拟机也是没有问题的。</p><p>实验环境的搭建，可以参考我的另外一篇博客 <a href="https://feiyang233.club/post/vm/">https://feiyang233.club/post/vm/</a></p><h1 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h1><p>分享两个不错的参考文档：</p><ul><li><a href="https://mp.weixin.qq.com/s/dMygLTxvdUEieQsaQ2RGLA" target="_blank" rel="noopener">部署v1.20版的Kubernetes集群</a> 这个很不错</li><li><a href="https://www.escapelife.site/posts/180e93f1.html" target="_blank" rel="noopener">无坑部署最小化K8S集群</a> 设置相对繁琐了一些</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在每一台机器上面做相同的准备工作。</p><h3 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h3><ul><li>每台机器 2 GB 或更多的 RAM </li><li>2 CPU 核或更多</li><li>集群中的所有机器的网络彼此均能相互连接</li><li><p>节点之中不可以有重复的主机名、MAC 地址或 product_uuid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你可以使用命令 ip link 或 ifconfig -a 来获取网络接口的 MAC 地址</span><br><span class="line">可以使用 sudo cat /sys/class/dmi/id/product_uuid 命令对 product_uuid 校验</span><br></pre></td></tr></table></figure></li><li><p>禁用交换分区。 删除文件 /etc/fstab 中 swapfile 一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/fstab: static file system information.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Use 'blkid' to print the universally unique identifier for a</span></span><br><span class="line"><span class="comment"># device; this may be used with UUID= as a more robust way to name devices</span></span><br><span class="line"><span class="comment"># that works even if disks are added and removed. See fstab(5).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span></span><br><span class="line"><span class="comment"># / was on /dev/sda1 during installation</span></span><br><span class="line">UUID=2bd16ba3-1087-4d5e-9d1b-f1527f62a3ce /               ext4    errors=remount-ro 0       1</span><br><span class="line"><span class="comment"># /swapfile                                 none            swap    sw              0       0</span></span><br><span class="line">/dev/fd0        /media/floppy0  auto    rw,user,noauto,<span class="built_in">exec</span>,utf8 0       0</span><br></pre></td></tr></table></figure></li><li>允许 iptables 检查桥接流量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-121:~<span class="comment"># lsmod | grep br_netfilter</span></span><br><span class="line">br_netfilter           28672  0</span><br><span class="line">bridge                176128  1 br_netfilter</span><br><span class="line">root@ubuntu18-121:~<span class="comment"># sudo modprobe br_netfilter</span></span><br></pre></td></tr></table></figure></li><li>禁用默认的防火墙服务, Ubuntu和Debian等Linux发行版默认使用ufw（Uncomplicated FireWall）作为前端来简化 iptables的使用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line">ufw status</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h3><p>参考官网文档<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br><span class="line"></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="variable">$(lsb_release -cs)</span> stable"</span> | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></p><h3 id="Container-runtimes"><a href="#Container-runtimes" class="headerlink" title="Container runtimes"></a>Container runtimes</h3><p>配置 Docker 守护程序，尤其是使用 systemd 来管理容器的 cgroup。<br>参考： <a href="https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | sudo tee /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="设置集群"><a href="#设置集群" class="headerlink" title="设置集群"></a>设置集群</h2><p>在三台机器上面安装 kubelet kubeadm kubectl，我当时安装的版本是 v1.21.1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install -y apt-transport-https gnupg2 curl</span><br><span class="line"></span><br><span class="line">curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://apt.kubernetes.io/ kubernetes-xenial main"</span> | sudo tee -a /etc/apt/sources.list.d/kubernetes.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="comment">#  运行如下命令单独获取相关的镜像文件, 加速后面的 init </span></span><br><span class="line">kubeadm config images pull</span><br></pre></td></tr></table></figure><br>到这来就可以先把三台机器关机，然后备份，存快照 snapshot</p><h3 id="master"><a href="#master" class="headerlink" title="master"></a>master</h3><p>初始化master节点，kubeadm init命令支持两种初始化方式，一是通过命令行选项传递关键的部署设定，另一个是基于yaml格式的专用配置文件，后一种允许用户自定义各个部署参数。</p><p>命令中的各选项简单说明如下： </p><ul><li>–pod-network-cidr：Pod网络的地址范围，其值为CIDR格式的网络地址，通常，Flannel网络插件的默认为10.244.0.0/16，Project Calico插件的默认值为192.168.0.0/16；</li><li>–service-cidr：Service的网络地址范围，其值为CIDR格式的网络地址，默认为10.96.0.0/12；通常，<code>仅Flannel一类的网络插件需要手动指定该地址</code>；</li><li>–apiserver-advertise-address：apiserver通告给其他组件的IP地址，一般应该为Master节点的用于集群内部通信的IP地址，0.0.0.0表示节点上所有可用地址；</li><li>–token-ttl：共享令牌（token）的过期时长，默认为24小时，0表示永不过期；为防止不安全存储等原因导致的令牌泄露危及集群安全，建议为其设定过期时长。未设定该选项时，在token过期后，若期望再向集群中加入其它节点，可以使用如下命令重新创建token，并生成节点加入命令。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># node ip 192.168.1.119</span></span><br><span class="line"></span><br><span class="line">sudo kubeadm init \</span><br><span class="line">    --apiserver-advertise-address=192.168.1.119 \</span><br><span class="line">    --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">    --service-cidr=10.245.0.0/16</span><br><span class="line"></span><br><span class="line"><span class="comment"># output ------------------------</span></span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.1.119:6443 --token vldwrp.5p31pom71n355r2k \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:b8a5fd92b8506651a6b7a23d9176eeb4c66c8ff92a5d59ea0a5e084d494ae64f </span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 pods， 发现 coredns 在pending，是因为在等待网络插件的安装</span></span><br><span class="line">kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   coredns-558bd4d5db-76fbb               0/1     Pending   0          64s</span><br><span class="line">kube-system   coredns-558bd4d5db-vpjf4               0/1     Pending   0          64s</span><br><span class="line">kube-system   etcd-ubuntu18-119                      1/1     Running   0          79s</span><br><span class="line">kube-system   kube-apiserver-ubuntu18-119            1/1     Running   0          79s</span><br><span class="line">kube-system   kube-controller-manager-ubuntu18-119   1/1     Running   0          71s</span><br><span class="line">kube-system   kube-proxy-k8xth                       1/1     Running   0          64s</span><br><span class="line">kube-system   kube-scheduler-ubuntu18-119            1/1     Running   0          71s</span><br></pre></td></tr></table></figure><p>还有非常重要的一步是 <code>部署网络插件</code>,  <a href="https://kubernetes.io/zh/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model" target="_blank" rel="noopener">插件列表</a> ， 这里我们选择安装 <a href="https://github.com/flannel-io/flannel#flannel" target="_blank" rel="noopener">Flannel</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装网络插件</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">Warning: policy/v1beta1 PodSecurityPolicy is deprecated <span class="keyword">in</span> v1.21+, unavailable <span class="keyword">in</span> v1.25+</span><br><span class="line">podsecuritypolicy.policy/psp.flannel.unprivileged created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/flannel created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/flannel created</span><br><span class="line">serviceaccount/flannel created</span><br><span class="line">configmap/kube-flannel-cfg created</span><br><span class="line">daemonset.apps/kube-flannel-ds created</span><br></pre></td></tr></table></figure><p>安装完成，再检查 pods<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n kube-system -l app=flannel</span><br><span class="line">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-bj57z   1/1     Running   0          17s</span><br><span class="line"></span><br><span class="line"><span class="comment"># pods running</span></span><br><span class="line">kubectl get pods -n kube-system</span><br><span class="line">NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-558bd4d5db-76fbb               1/1     Running   0          10h</span><br><span class="line">coredns-558bd4d5db-vpjf4               1/1     Running   0          10h</span><br><span class="line">etcd-ubuntu18-119                      1/1     Running   0          10h</span><br><span class="line">kube-apiserver-ubuntu18-119            1/1     Running   0          10h</span><br><span class="line">kube-controller-manager-ubuntu18-119   1/1     Running   0          10h</span><br><span class="line">kube-flannel-ds-89pc6                  1/1     Running   0          10h</span><br><span class="line">kube-flannel-ds-bj57z                  1/1     Running   0          10h</span><br><span class="line">kube-flannel-ds-pnw6c                  1/1     Running   0          10h</span><br><span class="line">kube-proxy-k8xth                       1/1     Running   0          10h</span><br><span class="line">kube-proxy-n8fj8                       1/1     Running   0          10h</span><br><span class="line">kube-proxy-wlfmr                       1/1     Running   0          10h</span><br><span class="line">kube-scheduler-ubuntu18-119            1/1     Running   0          10h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时还只有一个 node</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">NAME           STATUS   ROLES                  AGE     VERSION</span><br><span class="line">ubuntu18-119   Ready    control-plane,master   3m29s   v1.21.1</span><br></pre></td></tr></table></figure><br>以上终于完成了主要节点的设置，接下来是其余 2 个节点的加入。</p><h3 id="node1"><a href="#node1" class="headerlink" title="node1"></a>node1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.1.119:6443 --token vldwrp.5p31pom71n355r2k \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:b8a5fd92b8506651a6b7a23d9176eeb4c66c8ff92a5d59ea0a5e084d494ae64f </span><br><span class="line"></span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[preflight] Reading configuration from the cluster...</span><br><span class="line">[preflight] FYI: You can look at this config file with <span class="string">'kubectl -n kube-system get cm kubeadm-config -o yaml'</span></span><br><span class="line">[kubelet-start] Writing kubelet configuration to file <span class="string">"/var/lib/kubelet/config.yaml"</span></span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file <span class="string">"/var/lib/kubelet/kubeadm-flags.env"</span></span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[kubelet-start] Waiting <span class="keyword">for</span> the kubelet to perform the TLS Bootstrap...</span><br><span class="line"></span><br><span class="line">This node has joined the cluster:</span><br><span class="line">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class="line">* The Kubelet was informed of the new secure connection details.</span><br><span class="line"></span><br><span class="line">Run <span class="string">'kubectl get nodes'</span> on the control-plane to see this node join the cluster.</span><br></pre></td></tr></table></figure><h3 id="node2"><a href="#node2" class="headerlink" title="node2"></a>node2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.1.119:6443 --token vldwrp.5p31pom71n355r2k \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:b8a5fd92b8506651a6b7a23d9176eeb4c66c8ff92a5d59ea0a5e084d494ae64f </span><br><span class="line"></span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[preflight] Reading configuration from the cluster...</span><br><span class="line">[preflight] FYI: You can look at this config file with <span class="string">'kubectl -n kube-system get cm kubeadm-config -o yaml'</span></span><br><span class="line">[kubelet-start] Writing kubelet configuration to file <span class="string">"/var/lib/kubelet/config.yaml"</span></span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file <span class="string">"/var/lib/kubelet/kubeadm-flags.env"</span></span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[kubelet-start] Waiting <span class="keyword">for</span> the kubelet to perform the TLS Bootstrap...</span><br><span class="line"></span><br><span class="line">This node has joined the cluster:</span><br><span class="line">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class="line">* The Kubelet was informed of the new secure connection details.</span><br><span class="line"></span><br><span class="line">Run <span class="string">'kubectl get nodes'</span> on the control-plane to see this node join the cluster.</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>当 2 个节点成功加入集群后，我们可以在 master 节点检查 nodes 情况, 3 个 nodes 的情况<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes -o wide</span><br><span class="line"></span><br><span class="line">NAME           STATUS   ROLES                  AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION     CONTAINER-RUNTIME</span><br><span class="line">ubuntu18-119   Ready    control-plane,master   10h   v1.21.1   192.168.1.119   &lt;none&gt;        Ubuntu 18.04.5 LTS   5.4.0-72-generic   docker://20.10.6</span><br><span class="line">ubuntu18-120   Ready    &lt;none&gt;                 10h   v1.21.1   192.168.1.120   &lt;none&gt;        Ubuntu 18.04.5 LTS   5.4.0-42-generic   docker://20.10.6</span><br><span class="line">ubuntu18-121   Ready    &lt;none&gt;                 10h   v1.21.1   192.168.1.121   &lt;none&gt;        Ubuntu 18.04.5 LTS   5.4.0-42-generic   docker://20.10.6</span><br></pre></td></tr></table></figure><br>到此为止，一个master，并附带有三个node的kubernetes集群基础设施已经部署完成，用户随后即可测试其核心功能。例如，下面的命令可将demoapp以Pod的形式编排运行于集群之上，并通过在集群外部进行访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 在  master 上运行</span></span><br><span class="line">kubectl create deployment demoapp --image=ikubernetes/demoapp:v1.0</span><br><span class="line"></span><br><span class="line">kubectl scale deployment/demoapp --replicas=6</span><br><span class="line"></span><br><span class="line">kubectl create service nodeport demoapp --tcp=80:80</span><br><span class="line"></span><br><span class="line"><span class="comment">## 而后，使用如下命令了解Service对象demoapp使用的NodePort，以便于在集群外部进行访问：</span></span><br><span class="line">kubectl get svc -l app=demoapp </span><br><span class="line">NAME      TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">demoapp   NodePort   10.245.33.169   &lt;none&gt;        80:31938/TCP   6s</span><br><span class="line"></span><br><span class="line"><span class="comment">## 检查应用 6 个容器的分布情况, 5 个在 120， 1 个在 121</span></span><br><span class="line">kubectl get pods -o wide</span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE   IP           NODE           NOMINATED NODE   READINESS GATES</span><br><span class="line">demoapp-5f7d8f9847-2s6zd   1/1     Running   0          57s   10.244.2.2   ubuntu18-121   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-2wqdv   1/1     Running   0          57s   10.244.1.4   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-8p7wd   1/1     Running   0          57s   10.244.1.3   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-jrmzj   1/1     Running   0          81s   10.244.1.2   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-mjk7x   1/1     Running   0          57s   10.244.1.5   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-xch2b   1/1     Running   0          57s   10.244.1.6   ubuntu18-120   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 service。一个 Service 由一组 backend Pod 组成。这些 Pod 通过 endpoints 暴露出来</span></span><br><span class="line"><span class="comment">#  注意 Service IP 完全是虚拟的，它从来没有走过网络，如果对它如何工作的原理感到好奇， 可以进一步阅读服务代理的内容</span></span><br><span class="line">kubectl describe svc demoapp</span><br><span class="line">Name:                     demoapp</span><br><span class="line">Namespace:                default</span><br><span class="line">Labels:                   app=demoapp</span><br><span class="line">Annotations:              &lt;none&gt;</span><br><span class="line">Selector:                 app=demoapp</span><br><span class="line">Type:                     NodePort</span><br><span class="line">IP Family Policy:         SingleStack</span><br><span class="line">IP Families:              IPv4</span><br><span class="line">IP:                       10.245.33.169</span><br><span class="line">IPs:                      10.245.33.169</span><br><span class="line">Port:                     80-80  80/TCP</span><br><span class="line">TargetPort:               80/TCP</span><br><span class="line">NodePort:                 80-80  31938/TCP</span><br><span class="line">Endpoints:                10.244.1.44:80,10.244.1.45:80,10.244.1.46:80 + 3 more...</span><br><span class="line">Session Affinity:         None</span><br><span class="line">External Traffic Policy:  Cluster</span><br><span class="line">Events:                   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 访问 access service port</span></span><br><span class="line"><span class="comment"># master test</span></span><br><span class="line">curl http://10.245.33.169 </span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-pps49, ServerIP: 10.244.1.49!</span><br><span class="line"></span><br><span class="line"><span class="comment"># node1 test</span></span><br><span class="line">curl http://10.245.33.169 </span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-p7vdc, ServerIP: 10.244.1.48!</span><br><span class="line"></span><br><span class="line"><span class="comment"># node2 test</span></span><br><span class="line">curl http://10.245.33.169 </span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-2z5g4, ServerIP: 10.244.1.44!</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在 master 上面，测试 API 注意 node 端口是 31938</span></span><br><span class="line">curl http://192.168.1.119:31938</span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.0.0, ServerName: demoapp-5f7d8f9847-2s6zd, ServerIP: 10.244.2.2!</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在 node1 上面，测试 API 注意 node 端口是 31938</span></span><br><span class="line">curl http://192.168.1.120:31938</span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.1.1, ServerName: demoapp-5f7d8f9847-2wqdv, ServerIP: 10.244.1.4!</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在 node2 上面，测试 API 注意 node 端口是 31938</span></span><br><span class="line">curl http://192.168.1.121:31938</span><br><span class="line">iKubernetes demoapp v1.0 !! ClientIP: 10.244.2.0, ServerName: demoapp-5f7d8f9847-xch2b, ServerIP: 10.244.1.6!</span><br></pre></td></tr></table></figure><p>demoapp是一个web应用，k8s 内部可以通过 service_ip + port “<a href="http://10.245.33.169:80&quot;">http://10.245.33.169:80&quot;</a> 访问。 集群外部可以通过 “<a href="http://NodeIP:31938&quot;">http://NodeIP:31938&quot;</a> 这个URL访问demoapp上的应用，例如于集群外通过浏览器访问”<a href="http://192.168.1.119:31938&quot;">http://192.168.1.119:31938&quot;</a> 。 当然用 Nginx 做一层代理也是可以的， 或者云上的话，就是 load balancer</p><blockquote><p> 注意 Service IP 10.245.33.169 完全是虚拟的，它从来没有走过网络，如果对它如何工作的原理感到好奇， 可以进一步阅读 <a href="https://kubernetes.io/zh/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies" target="_blank" rel="noopener">服务代理</a> 的内容。</p></blockquote><h3 id="service-forward"><a href="#service-forward" class="headerlink" title="service forward"></a>service forward</h3><ul><li>service virtual ip： 10.245.33.169  port:80 </li><li>node_ip: 192.168.1.x   port:31938</li></ul><p>请先看一下这篇文章 <a href="https://www.cnblogs.com/charlieroro/p/9588019.html" target="_blank" rel="noopener">理解kubernetes环境的iptables</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># nat 表里面的转发规则 ，关于 destination 是 虚拟 ip 的有两条规则</span><br><span class="line">iptables -t nat -L KUBE-SERVICES -n | grep 10.245.33.169 </span><br><span class="line"></span><br><span class="line">KUBE-MARK-MASQ  tcp  -- !10.244.0.0&#x2F;16        10.245.33.169   &#x2F;* default&#x2F;demoapp:80-80 cluster IP *&#x2F; tcp dpt:80</span><br><span class="line">KUBE-SVC-EGFVCLHG4JMRSQGG  tcp  --  0.0.0.0&#x2F;0 10.245.33.169   &#x2F;* default&#x2F;demoapp:80-80 cluster IP *&#x2F; tcp dpt:80</span><br><span class="line"></span><br><span class="line"># 6 个 pods ，注意 IP 地址</span><br><span class="line">kubectl get pods -o wide </span><br><span class="line">NAME                      READY STATUS  RESTARTS   AGE     IP            NODE     NOMINATED NODE  READINESS GATES</span><br><span class="line">demoapp-5f7d8f9847-2z5g4  1&#x2F;1   Running   0      5d17h   10.244.1.44   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-dq6s9  1&#x2F;1   Running   0      5d17h   10.244.1.47   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-p7vdc  1&#x2F;1   Running   0      5d17h   10.244.1.48   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-pps49  1&#x2F;1   Running   0      5d17h   10.244.1.49   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-t6c8k  1&#x2F;1   Running   0      5d17h   10.244.1.46   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line">demoapp-5f7d8f9847-wjqmm  1&#x2F;1   Running   0      5d17h   10.244.1.45   ubuntu18-120   &lt;none&gt;       &lt;none&gt;</span><br><span class="line"></span><br><span class="line"># 每个 pods 都有一条规则， 如果有请求是访问 pods 的</span><br><span class="line">iptables -t nat -L -n  | grep 10.244.1</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.49   0.0.0.0&#x2F;0  &#x2F;* default&#x2F;demoapp:80-80 *&#x2F;</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.47   0.0.0.0&#x2F;0  &#x2F;* default&#x2F;demoapp:80-80 *&#x2F;</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.44   0.0.0.0&#x2F;0  &#x2F;* default&#x2F;demoapp:80-80 *&#x2F;</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.48   0.0.0.0&#x2F;0  &#x2F;* default&#x2F;demoapp:80-80 *&#x2F;</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.46   0.0.0.0&#x2F;0  &#x2F;* default&#x2F;demoapp:80-80 *&#x2F;</span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.45   0.0.0.0&#x2F;0  &#x2F;* default&#x2F;demoapp:80-80 *&#x2F;</span><br></pre></td></tr></table></figure><p>从上面可以看到， iptable 最终进入到 KUBE-MARK-MASQ chain 链， 而最终会 mark 标记后的请求由 kube-proxy 处理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Chain KUBE-MARK-MASQ (23 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">MARK       all  --  0.0.0.0/0            0.0.0.0/0            MARK or 0x4000</span><br></pre></td></tr></table></figure></p><h3 id="iptables-proxy"><a href="#iptables-proxy" class="headerlink" title="iptables proxy"></a>iptables proxy</h3><p>检查是哪一种 proxy mode <a href="https://stackoverflow.com/questions/66746018/how-to-find-which-mode-kube-proxy-is-running-in" target="_blank" rel="noopener">How to find which mode kube-proxy is running in</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-119:~<span class="comment"># docker logs  k8s_kube-proxy_kube-proxy-k8xth_kube-system_0c7ede9e-3398-42ed-b30d-3e0af106049d_14 </span></span><br><span class="line">I0601 06:59:18.494352  1 node.go:172] Successfully retrieved node IP: 192.168.1.119</span><br><span class="line">I0601 06:59:18.494404  1 server_others.go:140] Detected node IP 192.168.1.119</span><br><span class="line">W0601 06:59:18.494436  1 server_others.go:598] Unknown proxy mode <span class="string">""</span>, assuming iptables proxy</span><br><span class="line">I0601 06:59:18.617259  1 server_others.go:206] kube-proxy running <span class="keyword">in</span> dual-stack mode, IPv4-primary</span><br><span class="line">I0601 06:59:18.617285  1 server_others.go:212] Using iptables Proxier.</span><br><span class="line">I0601 06:59:18.617295  1 server_others.go:219] creating dualStackProxier <span class="keyword">for</span> iptables.</span><br><span class="line">W0601 06:59:18.617306  1 server_others.go:512] detect-local-mode <span class="built_in">set</span> to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local <span class="keyword">for</span> IPv6</span><br><span class="line">I0601 06:59:18.620918  1 server.go:643] Version: v1.21.1</span><br><span class="line">I0601 06:59:18.623937  1 conntrack.go:100] Set sysctl <span class="string">'net/netfilter/nf_conntrack_max'</span> to 131072</span><br><span class="line">I0601 06:59:18.623965  1 conntrack.go:52] Setting nf_conntrack_max to 131072</span><br><span class="line">I0601 06:59:18.624646  1 conntrack.go:83] Setting conntrack hashsize to 32768</span><br><span class="line">I0601 06:59:18.641659  1 conntrack.go:100] Set sysctl <span class="string">'net/netfilter/nf_conntrack_tcp_timeout_established'</span> to 86400</span><br><span class="line">I0601 06:59:18.641709  1 conntrack.go:100] Set sysctl <span class="string">'net/netfilter/nf_conntrack_tcp_timeout_close_wait'</span> to 3600</span><br><span class="line">I0601 06:59:18.647124  1 config.go:315] Starting service config controller</span><br><span class="line">I0601 06:59:18.648113  1 shared_informer.go:240] Waiting <span class="keyword">for</span> caches to sync <span class="keyword">for</span> service config</span><br><span class="line">I0601 06:59:18.648459  1 config.go:224] Starting endpoint slice config controller</span><br></pre></td></tr></table></figure><p>有两幅图很生动，第一幅是从宏观上，第二幅是从微观上 iptable chain 过程<br><img src="/img/misc/3.svg" alt=""> </p><p><img src="/img/misc/4.svg" alt=""> </p><p>看完第二幅图，以我们自己的实验环境举例子，结果如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据 SVC demoapp get KUBE-SVC-EGFVCLHG4JMRSQGG </span></span><br><span class="line">KUBE-SVC-EGFVCLHG4JMRSQGG  tcp  --  0.0.0.0/0    10.245.33.169    /* default/demoapp:80-80 cluster IP */ tcp dpt:80</span><br><span class="line"></span><br><span class="line"><span class="comment"># check KUBE-SVC-EGFVCLHG4JMRSQGG , probability 就是 load balancer</span></span><br><span class="line">iptables -t nat -L KUBE-SVC-EGFVCLHG4JMRSQGG -n</span><br><span class="line">Chain KUBE-SVC-EGFVCLHG4JMRSQGG (2 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">KUBE-SEP-LFNE4UIW5JTX3DLE  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.16666666651</span><br><span class="line">KUBE-SEP-VKI6CD7L7QDWV7PR  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.20000000019</span><br><span class="line">KUBE-SEP-ONGVKLAWWHRT2JYZ  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.25000000000</span><br><span class="line">KUBE-SEP-BWUFDZ7V66HHLROZ  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.33333333349</span><br><span class="line">KUBE-SEP-NQEYALZIWTXZ4WPY  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */ statistic mode random probability 0.50000000000</span><br><span class="line">KUBE-SEP-36MBDHMST2HAATHB  all  --  0.0.0.0/0    0.0.0.0/0  /* default/demoapp:80-80 */</span><br><span class="line"></span><br><span class="line"><span class="comment"># KUBE-SEP-36MBDHMST2HAATHB</span></span><br><span class="line">iptables -t nat -L KUBE-SEP-36MBDHMST2HAATHB  -n</span><br><span class="line">Chain KUBE-SEP-36MBDHMST2HAATHB (1 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">KUBE-MARK-MASQ  all  --  10.244.1.49     0.0.0.0/0     /* default/demoapp:80-80 */</span><br><span class="line">DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0     /* default/demoapp:80-80 */ tcp DNAT [unsupported revision]</span><br></pre></td></tr></table></figure></p><h2 id="部署-dashboard"><a href="#部署-dashboard" class="headerlink" title="部署 dashboard"></a>部署 dashboard</h2><p>官网： <a href="https://kubernetes.io/zh/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/tasks/access-application-cluster/web-ui-dashboard/</a><br>github： <a href="https://github.com/kubernetes/dashboard" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard</a><br>Dashboard 是基于网页的 Kubernetes 用户界面。 你可以使用 Dashboard 将容器应用部署到 Kubernetes 集群中，也可以对容器应用排错，还能管理集群资源。 你可以使用 Dashboard 获取运行在集群中的应用的概览信息，也可以创建或者修改 Kubernetes 资源 （如 Deployment，Job，DaemonSet 等等）。 例如，你可以对 Deployment 实现弹性伸缩、发起滚动升级、重启 Pod 或者使用向导创建新的应用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To deploy Dashboard, execute following command:</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml</span><br><span class="line"></span><br><span class="line">namespace/kubernetes-dashboard created</span><br><span class="line">serviceaccount/kubernetes-dashboard created</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line">secret/kubernetes-dashboard-certs created</span><br><span class="line">secret/kubernetes-dashboard-csrf created</span><br><span class="line">secret/kubernetes-dashboard-key-holder created</span><br><span class="line">configmap/kubernetes-dashboard-settings created</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">service/dashboard-metrics-scraper created</span><br><span class="line">deployment.apps/dashboard-metrics-scraper created</span><br><span class="line"></span><br><span class="line"><span class="comment"># Creating a Service Account</span></span><br><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># Creating a ClusterRoleBinding</span></span><br><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># Getting a Bearer Token</span></span><br><span class="line">kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath=<span class="string">"&#123;.secrets[0].name&#125;"</span>) -o go-template=<span class="string">"&#123;&#123;.data.token | base64decode&#125;&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># token 应该是很长的一串字符，类似</span></span><br><span class="line">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><h3 id="命令行代理"><a href="#命令行代理" class="headerlink" title="命令行代理"></a>命令行代理</h3><p>还得使用代理才能访问到 Dashboard 的服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl proxy </span><br><span class="line">Starting to serve on 127.0.0.1:8001</span><br></pre></td></tr></table></figure><br>kubectl 会使得 Dashboard 可以通过 <a href="http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/" target="_blank" rel="noopener">http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</a> 访问</p><p>打开 master 虚拟机桌面，用 Firefox 浏览器输入网址 <code>http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</code>  并输入上面得到的 Bearer Token 登录<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210513203320.png" alt=""></p><p>成功登录以后，就可以看到整个集群的情况和做一些相关的操作了<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210513203325.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210513203445.png" alt=""></p><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><h2 id="虚拟机双网卡"><a href="#虚拟机双网卡" class="headerlink" title="虚拟机双网卡"></a>虚拟机双网卡</h2><p>如果虚拟机是双网卡，一般默认的是 NAT 那一张，桥接的在第二张。在我本次实验中，当安装完 flannel 网络后，却发现有错误。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果部署出现问题可通过如下命令查看日志</span></span><br><span class="line">kubectl logs kube-flannel-ds-6xxs5 --namespace=kube-system</span><br><span class="line">kubectl describe pod kube-flannel-ds-6xxs5 --namespace=kube-system</span><br></pre></td></tr></table></figure><br>日志的结果显示，用了 NAT 那一张网卡，导致和最开始设置的 <code>apiserver-advertise-address=192.168.1.119</code> 无法连接，启动失败了。<br>临时修复的办法就是，禁用 NAT 网卡，永久修复的办法就是关机后，移除 NAT 网卡(网络适配器)</p><h2 id="Flannel网络"><a href="#Flannel网络" class="headerlink" title="Flannel网络"></a>Flannel网络</h2><p>通常，仅Flannel一类的网络插件需要手动指定该地址<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--service-cidr=10.245.0.0/16</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;都 2021 年了，我终于把 kubernetes 实验测试环境搭建好了，泪目&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="kubernetes" scheme="http://feiyang233.club/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>本地虚拟机环境搭建</title>
    <link href="http://feiyang233.club/post/vm/"/>
    <id>http://feiyang233.club/post/vm/</id>
    <published>2021-05-11T22:06:06.000Z</published>
    <updated>2021-06-20T15:13:40.522Z</updated>
    
    <content type="html"><![CDATA[<p>分享自己在家搭建 Linux 虚拟机的经验。<br><a id="more"></a></p><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>在开始搭设虚拟机前，要求实验者掌握一些基础的知识。</p><ul><li><a href="https://www.runoob.com/w3cnote/summary-of-network.html" target="_blank" rel="noopener">计算机网络基础知识总结： IP 地址， 路由器知识，交换机知识，NAT协议，DHCP协议</a> </li><li><a href="https://www.runoob.com/linux/linux-intro.html" target="_blank" rel="noopener">Linux 基础知识</a></li><li><a href="https://wangdoc.com/ssh/" target="_blank" rel="noopener">SSH 教程</a> </li><li><a href="https://zhuanlan.zhihu.com/p/87447426" target="_blank" rel="noopener">虚拟机三种网络模式</a> </li></ul><p>遇到问题会 Google， 百度一下的能力也是很重要的，学会抓住关键词搜索。</p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>本文分享在家用环境搭建 Linux 虚拟机环境的过程，并且介绍几个虚拟化软件的用法。适合小白入门<br>Linux 内核的常用操作系统有： </p><ul><li>Ubuntu <a href="https://ubuntu.com/" target="_blank" rel="noopener">https://ubuntu.com/</a></li><li>CentOS <a href="https://www.centos.org/" target="_blank" rel="noopener">https://www.centos.org/</a></li></ul><p>新手玩家，强烈推荐 Ubuntu 桌面版，有 UI 界面，上手难度没有那么的大。 <a href="https://ubuntu.com/desktop" target="_blank" rel="noopener">桌面版下载地址</a></p><h1 id="准备过程"><a href="#准备过程" class="headerlink" title="准备过程"></a>准备过程</h1><p>不管你自己的电脑是什么操作， 首先需要你下载官方镜像到自己的电脑上。<br>访问 <a href="https://ubuntu.com/download/desktop" target="_blank" rel="noopener">https://ubuntu.com/download/desktop</a> 下载镜像， 文件名为 ubuntu-20.04.2.0-desktop-amd64.iso</p><h1 id="按操作系统"><a href="#按操作系统" class="headerlink" title="按操作系统"></a>按操作系统</h1><p>日常我们家用的电脑一般就是 Windows 系统或者 macOS 苹果系统。请根据自己电脑的系统，下载相迎的虚拟化软件。</p><ul><li><a href="https://www.vmware.com/asean/products/workstation-pro.html" target="_blank" rel="noopener">VMware Workstation</a> 适合 Windows，适合新人，推荐</li><li><a href="https://www.vmware.com/asean/products/fusion/fusion-evaluation.html" target="_blank" rel="noopener">VMware Fusion</a> 适合 mac</li><li><a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a> 适合 mac</li></ul><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>Windows 系统下面，推荐虚拟化软件 VMware Workstation ， <a href="https://www.vmware.com/asean/products/workstation-pro.html" target="_blank" rel="noopener">官网地址</a><br>安装的过程中，需要输入激活码， VMware Workstation <a href="https://www.gopojie.net/2349.html" target="_blank" rel="noopener">激活码网上随便搜索一下就可以用了</a></p><p><img src="/img/vm/1.jpg" alt=""> </p><p>在安装虚拟机之前，我们先看一下 VMware 的网络设置，打开虚拟网络编辑器<br><img src="/img/vm/11.jpg" alt=""><br><img src="/img/vm/12.jpg" alt=""><br>这里将桥接模式的网络，桥接到自己电脑的网卡，我这里是台式机，其网卡是 Intel(R) Ethernet Connection(7) I219-V ， 这里每个人的情况不同，笔记本电脑的话是 wireless 无线网卡。<br><img src="/img/vm/13.jpg" alt=""><br>同时，我们还需要注意到 VMware 创建了三种网络，他们各自的网络地址。 需要注意的是桥接模式的地址，是根据你自己的电脑所在网络的路由器设置的，一般家用路由器都是 <code>192.168.1.0/24</code> 如果是校园 WiFi， 那估计网络规模会大很多。在 windows 查看自己的网络地址， 打开命令提示符 CMD，运行 <code>ipconfig</code><br><img src="/img/vm/17.jpg" alt=""></p><p>如上图所示，这里我自己的家用台式机，网络地址就是 IPv4: 192.168.1.77</p><table><thead><tr><th>name</th><th style="text-align:right">mode</th><th style="text-align:center">CIDR</th></tr></thead><tbody><tr><td>VMnet0</td><td style="text-align:right">桥接</td><td style="text-align:center">192.168.1.0/24</td></tr><tr><td>VMnet1</td><td style="text-align:right">仅主机</td><td style="text-align:center">192.168.230.0/24</td></tr><tr><td>VMnet8</td><td style="text-align:right">NAT</td><td style="text-align:center">192.168.64.0/24</td><td>å</td></tr></tbody></table><p>当 VMware Workstation 安装好了之后，我们就可以用 VMware Workstation 提供的快速安装功能，安装 Ubuntu 桌面版虚拟机。<br><img src="/img/vm/2.jpg" alt=""> </p><p>我这里是 Ubuntu 18， 如果你下载的是最新版本 ubuntu-20.04.2.0-desktop-amd64.iso ， 选择的镜像不同<br><img src="/img/vm/3.jpg" alt=""> </p><p>这里设置好虚拟机的名称，还有登录的账号和密码<br><img src="/img/vm/4.jpg" alt=""><br><img src="/img/vm/5.jpg" alt=""><br><img src="/img/vm/6.jpg" alt=""><br><img src="/img/vm/7.jpg" alt=""> </p><p>输入你自己设置的账号密码，登录 Ubuntu<br><img src="/img/vm/8.jpg" alt=""></p><p>这里可以安装VMware tools， 插件是为了更好使用，比如窗口的缩放，还有拖拽文件进入虚拟机等<br><img src="/img/vm/9.jpg" alt=""></p><p>检查一下 Ubuntu 虚拟机的 IP 地址，因为我的虚拟机是双网卡： ens33 是 NAT 网络的地址， ens38 是桥接网络的地址<br><img src="/img/vm/10.jpg" alt=""><br>到此，你已经成功安装了虚拟机，在你探索之前，可以看一看<a href="#%E5%AD%A6%E4%BC%9A%E5%BF%AB%E7%85%A7-snapshot">快照</a> 部分，学会备份，随便折腾</p><p>新手可以跳过。如果你需要双网卡，可以再额外添加一张网卡，我因为第一次初始化设置的网卡是 NAT， 第二次添加的桥接网卡，双网卡的机器一般是拿来当跳板机（堡垒机用）可以看看这篇介绍 <a href="https://outmanzzq.github.io/2018/11/20/ssh-connect-through-springboard/" target="_blank" rel="noopener">ssh 通过跳板机直连跳板机内网服务器</a><br><img src="/img/vm/14.jpg" alt=""><br><img src="/img/vm/15.jpg" alt=""></p><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><p>苹果系统下面，我尝试了 2 种虚拟化软件</p><ul><li><p><a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a> 免费的，偶尔程序会崩溃，下图是如何新建一个 NAT 网络<br><img src="/img/vm/27.jpg" alt=""><br><img src="/img/vm/28.jpg" alt=""><br><img src="/img/vm/29.jpg" alt=""><br><img src="/img/vm/30.jpg" alt="">  </p></li><li><p><a href="https://www.vmware.com/asean/products/fusion/fusion-evaluation.html" target="_blank" rel="noopener">VMware Fusion</a> 付费好用。 必看<a href="https://mp.weixin.qq.com/s/o4lXJzb2gXI2X2wIT4_zpw" target="_blank" rel="noopener">Mac上安装VMware Fusion 12虚拟机</a><br><img src="/img/vm/18.jpg" alt=""> </p></li></ul><p><a href="https://pupuweb.com/solved-how-to-configure-additional-nat-in-vmware-fusion/" target="_blank" rel="noopener">Configure Additional NAT in VMware Fusion</a></p><p>VirtualBox 开源免费的，但桌面窗口的支持没有 VMware Fusion 做的好。VMware Fusion 可以在淘宝很便宜的买到序列码， 我踩坑了：好像淘宝的序列码不支持自建 NAT 网络（因为是非商业版本) non-commercial use only，很坑。 还不如这个<a href="https://mp.weixin.qq.com/s/o4lXJzb2gXI2X2wIT4_zpw" target="_blank" rel="noopener">公众号里面分享的三个注册码</a><br><img src="/img/vm/31.png" alt="">  </p><h1 id="按网络环境"><a href="#按网络环境" class="headerlink" title="按网络环境"></a>按网络环境</h1><p>虚拟机三种网络模式, <a href="https://zhuanlan.zhihu.com/p/87447426" target="_blank" rel="noopener">这篇文章已经讲得比较详细</a>。<br>在家用练习环境中，如果选择自己的网络环境。 以下是我的一些建议</p><ul><li>桥接模式 Bridged：1. 要安装对外提供的服务，自己的实体机想访问虚拟机的服务。2. 只安装一台虚拟机， 新手推荐，快速省事</li><li>网络地址转换模式 NAT：1. 自己的电脑安装几个虚拟机，搭建集群。 2. 虚拟机没有对外开放的服务，不需要端口转发</li></ul><h2 id="桥接模式-Bridged"><a href="#桥接模式-Bridged" class="headerlink" title="桥接模式 Bridged"></a>桥接模式 Bridged</h2><p><img src="/img/vm/25.png" alt=""> </p><h2 id="网络地址转换模式-NAT"><a href="#网络地址转换模式-NAT" class="headerlink" title="网络地址转换模式 NAT"></a>网络地址转换模式 NAT</h2><p><img src="/img/vm/24.png" alt=""> </p><p>这里我们用 mtr 命令测试一下连通性，并且看沿途经过的节点。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu20:~<span class="comment"># ip -4 a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    inet 192.168.64.5/24 brd 192.168.64.255 scope global ens33</span><br><span class="line"></span><br><span class="line"><span class="comment"># -I / --interface 网卡</span></span><br><span class="line"><span class="comment"># -n 不进行域名解析，显示 IP</span></span><br><span class="line"><span class="comment"># -c 定义数据包数量</span></span><br><span class="line"><span class="comment"># -r 生成报告</span></span><br><span class="line"><span class="comment"># --tcp / -T 或者 --udp / -u 或者 -S / --sctp, 默认是 icmp</span></span><br><span class="line"><span class="comment"># --port / -P</span></span><br><span class="line"></span><br><span class="line">root@ubuntu20:~<span class="comment"># mtr -n -c 3 -r --tcp --port 80  192.168.1.108</span></span><br><span class="line">Start: 2021-05-25T11:33:27+0000</span><br><span class="line">HOST: ubuntu20                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.2               0.0%     3    0.2   0.4   0.2   0.7   0.2</span><br><span class="line">  2.|-- 192.168.1.108              0.0%     3    1.0   0.9   0.8   1.0   0.1</span><br><span class="line"></span><br><span class="line">root@ubuntu20:~<span class="comment"># mtr -n -c 3 -r  192.168.1.125 </span></span><br><span class="line">Start: 2021-05-25T11:38:34+0000</span><br><span class="line">HOST: ubuntu20                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.2               0.0%     3    0.3   0.4   0.3   0.5   0.2</span><br><span class="line">  2.|-- 192.168.1.125              0.0%     3  107.3  66.8   4.6 107.3  54.7</span><br></pre></td></tr></table></figure></p><h1 id="必备技能"><a href="#必备技能" class="headerlink" title="必备技能"></a>必备技能</h1><h2 id="学会快照-snapshot"><a href="#学会快照-snapshot" class="headerlink" title="学会快照 snapshot"></a>学会快照 snapshot</h2><p>快照 <a href="https://baike.baidu.com/item/VMware%E5%BF%AB%E7%85%A7" target="_blank" rel="noopener">snapshot</a> 就是虚拟机的某一时刻的状态备份。当我们在完成一个重大改变的前后，我们都应该快照。 比如在安装一个软件之前，如果我们不确定担心安装后搞崩了环境，那么我们可以快照一下。大吉大利<br><img src="/img/vm/16.jpg" alt=""></p><h1 id="ansible-关机"><a href="#ansible-关机" class="headerlink" title="ansible 关机"></a>ansible 关机</h1><p>因为一共有 6 台虚拟机了，手动关机还有有点 laborious，所以用 ansible 批量关机方便。<br>如果不知道的 ansible 的小白同学，可以先看看 <a href="https://www.cnblogs.com/f-ck-need-u/p/7553186.html" target="_blank" rel="noopener">Ansible系列</a> <a href="https://wsgzao.github.io/post/ansible/" target="_blank" rel="noopener">奥哥的 Ansible 学习路径</a></p><p>SSH config 别名，方便记忆，快速登录。 还有跳板机的设置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">feiyang@MAC ~ % cat .ssh/config </span><br><span class="line"></span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">CheckHostIP no</span><br><span class="line"></span><br><span class="line">Host grab</span><br><span class="line">     HostName 192.168.1.119</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host feiyang</span><br><span class="line">     HostName 192.168.1.120</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host jingye</span><br><span class="line">     HostName 192.168.1.121</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host win1</span><br><span class="line">     HostName 192.168.1.108</span><br><span class="line">     User feiyang</span><br><span class="line"></span><br><span class="line">Host win2</span><br><span class="line">     HostName 192.168.64.4</span><br><span class="line">     User jy576</span><br><span class="line">     ProxyJump win1</span><br><span class="line"></span><br><span class="line">Host win3</span><br><span class="line">     HostName 192.168.64.5</span><br><span class="line">     User feiyang</span><br><span class="line">     ProxyJump win1</span><br></pre></td></tr></table></figure></p><ul><li><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/sequence_lookup.html" target="_blank" rel="noopener">stride 好像只能递增，不能递减</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#ignoring-failed-commands" target="_blank" rel="noopener">ignore_errors</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html" target="_blank" rel="noopener">如何写 hosts 文件</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_strategies.html#setting-the-batch-size-with-serial" target="_blank" rel="noopener">serial 控制批次</a></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file name: hosts</span></span><br><span class="line"></span><br><span class="line"><span class="string">[all]</span></span><br><span class="line"></span><br><span class="line"><span class="string">[ubuntu]</span></span><br><span class="line"><span class="string">feiyang</span></span><br><span class="line"><span class="string">grab</span></span><br><span class="line"><span class="string">jingye</span></span><br><span class="line"></span><br><span class="line"><span class="string">[win]</span></span><br><span class="line"><span class="string">win3</span></span><br><span class="line"><span class="string">win2</span></span><br><span class="line"><span class="string">win1</span> <span class="comment"># win1 是跳板机，必须最后才关机</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file name: shutdown.yml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  serial:</span> </span><br><span class="line"><span class="bullet">    -</span> <span class="number">5</span></span><br><span class="line"><span class="bullet">    -</span> <span class="number">1</span>        <span class="comment"># win1 是跳板机，必须最后才关机</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">shutdown</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">/sbin/shutdown</span> <span class="bullet">-h</span> <span class="string">now</span></span><br><span class="line"><span class="attr">    ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">    ignore_unreachable:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>每次如果觉得输入 ansible-playbook 命令还是很麻烦，那就用 alias ，真是懒人促进发展，哈哈哈<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> feiyang-shutdown=<span class="string">'ansible-playbook -i /Users/yang.fei/ansible/hosts /Users/yang.fei/ansible/shutdown.yml'</span></span><br></pre></td></tr></table></figure></p><h1 id="打通任督二脉"><a href="#打通任督二脉" class="headerlink" title="打通任督二脉"></a>打通任督二脉</h1><p>从上面的家庭网络架构图得知，我们有两个网络：</p><ul><li>192.168.1.0/24   家庭路由器网络</li><li>192.168.64.0/24  WIN10 台式机上，Vmware 创建的虚拟 NAT 网络</li></ul><p>接下来，我们要做的就是，打通两个网络。Ubuntu18.04 双网卡实现转发，相当于扮演了一个路由器的角色。先来看一眼架构图，今天的主角就是身负<code>双武魂</code>（斗罗大陆看多了，哈哈）双网卡的 <code>ubuntu18-108</code> , 它的两个网卡 Network interface controller 上的 IP 分别是 <code>ens33</code> 网卡是 <code>192.168.64.3</code> and <code>ens38</code> 网卡是 <code>192.168.1.108</code> 网卡名称和 IP 地址非常重要，请牢记，不要混淆了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/home/feiyang<span class="comment"># ip -4 a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    inet 192.168.64.3/24 brd 192.168.64.255 scope global ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: ens38: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    inet 192.168.1.108/24 brd 192.168.1.255 scope global noprefixroute ens38</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure></p><p><img src="/img/vm/32.png" alt=""> </p><h2 id="NAT-Server"><a href="#NAT-Server" class="headerlink" title="NAT Server"></a>NAT Server</h2><p>其实我的另外一篇 blog 有介绍 <a href="https://feiyang233.club/post/network/#%E8%AE%BE%E7%BD%AE-NAT-server">NAT server 设置</a>，但这次实验，我们采用的是临时命令行操作，因此有一点不同。在临时命令行后，我们也补充了持久化的文档链接，亲测有效<br>参考了：</p><ul><li><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/4/html/security_guide/s1-firewall-ipt-fwd" target="_blank" rel="noopener">FORWARD AND NAT RULES</a></li><li><a href="https://www.karlrupp.net/en/computer/nat_tutorial" target="_blank" rel="noopener">NAT - Network Address Translation</a></li><li><a href="https://www.cnblogs.com/hf8051/p/4530906.html" target="_blank" rel="noopener">linux – 添加、修改、删除路由</a></li><li><a href="https://support.justaddpower.com/kb/article/320-adding-a-static-route-to-macos/" target="_blank" rel="noopener">Adding a Static Route to macOS</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/net/ipv4/ip_forward</span><br><span class="line">1</span><br><span class="line"><span class="comment"># 如果此处不是 1 ，那就需要手动开启</span></span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward=1 <span class="comment"># 添加此行，开启转发功能</span></span><br><span class="line"></span><br><span class="line">sysctl -p    <span class="comment"># 执行生效</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># iptable 允许转发 </span></span><br><span class="line"><span class="comment"># 允许 ens33: 192.168.64.3/24 到 -&gt; ens38: 192.168.1.108/24</span></span><br><span class="line">iptables -A FORWARD -i ens33 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -o ens38 -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.64.0/24 -d 192.168.1.0/24 -o ens38 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许 ens38: 192.168.1.108/24 到 -&gt; ens33: 192.168.64.3/24</span></span><br><span class="line">iptables -A FORWARD -i ens38 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -o ens33 -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -d 192.168.64.0/24 -o ens33 -j MASQUERADE</span><br><span class="line"></span><br><span class="line"><span class="comment"># check nat table POSTROUTING chain</span></span><br><span class="line">iptables -t  nat  -L POSTROUTING </span><br><span class="line">Chain POSTROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">MASQUERADE  all  --  172.17.0.0/16        anywhere            </span><br><span class="line">MASQUERADE  all  --  172.18.0.0/16        anywhere            </span><br><span class="line">MASQUERADE  all  --  192.168.64.0/24      192.168.1.0/24      </span><br><span class="line">MASQUERADE  all  --  192.168.1.0/24       192.168.64.0/24</span><br></pre></td></tr></table></figure><ul><li><a href="https://linuxconfig.org/how-to-make-iptables-rules-persistent-after-reboot-on-linux" target="_blank" rel="noopener">Ubuntu 持久化 iptable</a></li></ul><h2 id="client-server"><a href="#client-server" class="headerlink" title="client server"></a>client server</h2><p>其他的机器，只需要设置一下路由，添加一条路由规则即可。</p><h3 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h3><p>macbook pro 苹果电脑的 IP 是 <code>192.168.1.125</code> 添加一条路由, 指定双网卡机器 192.168.1.108 为 gateway<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo route -n add -net 192.168.64.0/24  192.168.1.108</span><br></pre></td></tr></table></figure></p><ul><li><a href="https://www.centralit-helpdesk.co.uk/index.php?pg=kb.page&amp;id=258" target="_blank" rel="noopener">MacOS add a permanent static route</a></li></ul><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p>centos IP 是 192.168.64.4 ， ubuntu20 IP 是 192.168.64.5 。 它们两台都需要设置，添加一条路由, 指定双网卡机器 192.168.64.3 为 gateway<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.64.3 dev ens33</span><br></pre></td></tr></table></figure></p><ol><li>(CentOS7的路由配置持久化)[<a href="https://blog.csdn.net/beeworkshop/article/details/102952759]" target="_blank" rel="noopener">https://blog.csdn.net/beeworkshop/article/details/102952759]</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/route-ens33</span><br><span class="line">192.168.1.0/24 via 192.168.64.3 dev ens33</span><br></pre></td></tr></table></figure></li><li><a href="https://linuxconfig.org/how-to-add-static-route-with-netplan-on-ubuntu-20-04-focal-fossa-linux" target="_blank" rel="noopener">add static route with netplan on Ubuntu 20.04</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/netplan/00-installer-config.yaml </span><br><span class="line"><span class="comment"># This is the network config written by 'subiquity'</span></span><br><span class="line">network:</span><br><span class="line">  ethernets: </span><br><span class="line">    ens33:</span><br><span class="line">      addresses: [192.168.64.5/24]</span><br><span class="line">      optional: <span class="literal">true</span></span><br><span class="line">      dhcp4: no</span><br><span class="line">      gateway4: 192.168.64.2</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [1.1.1.1,8.8.8.8]</span><br><span class="line">      routes:</span><br><span class="line">      - to: 192.168.1.0/24</span><br><span class="line">        via: 192.168.64.3</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2></li><li><p>mac -&gt; ubuntu20 ,  ubuntu20 开 2 个 terminal， 一个启动 server， 一个 tcpdump 抓包分析，mac telnet 测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># terminal1: start simple http server</span></span><br><span class="line">python3 -m http.server 8000    </span><br><span class="line"></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># terminal2: tcpdump listen port 8000</span></span><br><span class="line">tcpdump -i any port 8000 -nnn</span><br></pre></td></tr></table></figure><p>然后就是 mac telnet 192.168.64.5 8000</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一： 用 Telnet 测试</span></span><br><span class="line">telnet 192.168.64.5 8000</span><br><span class="line"></span><br><span class="line">Trying 192.168.64.5...</span><br><span class="line">Connected to 192.168.64.5.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">^]</span><br><span class="line">telnet&gt; q</span><br><span class="line">Connection closed.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二： 用 mtr 测试</span></span><br><span class="line">➜  ~ sudo mtr -n -c 3 -r --tcp --port 8000  192.168.64.5</span><br><span class="line">Password:</span><br><span class="line">Start: 2021-06-20T20:07:35+0800</span><br><span class="line">HOST: FEIYANG-MAC       Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.1.108      0.0%     3    6.2  11.2   3.3  24.3  11.4</span><br><span class="line">  2.|-- 192.168.64.5       0.0%     3   10.9   7.7   2.6  10.9   4.5</span><br></pre></td></tr></table></figure><p>检查 ubuntu20 tcpdump 的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i any port 8000 -nnn</span><br><span class="line"></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type LINUX_SLL (Linux cooked v1), capture size 262144 bytes</span><br><span class="line">10:49:42.301949 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [S], seq 2641736153, win 65535, options [mss 1460,nop,wscale 6,nop,nop,TS val 283128122 ecr 0,sackOK,eol], length 0</span><br><span class="line">10:49:42.301991 IP 192.168.64.5.8000 &gt; 192.168.64.3.55989: Flags [S.], seq 1529903079, ack 2641736154, win 65160, options [mss 1460,sackOK,TS val 3145755328 ecr 283128122,nop,wscale 7], length 0</span><br><span class="line">10:49:42.303721 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [.], ack 1, win 2058, options [nop,nop,TS val 283128124 ecr 3145755328], length 0</span><br><span class="line">10:49:46.519038 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [F.], seq 1, ack 1, win 2058, options [nop,nop,TS val 283132312 ecr 3145755328], length 0</span><br><span class="line">10:49:46.519205 IP 192.168.64.5.8000 &gt; 192.168.64.3.55989: Flags [F.], seq 1, ack 2, win 510, options [nop,nop,TS val 3145759545 ecr 283132312], length 0</span><br><span class="line">10:49:46.521868 IP 192.168.64.3.55989 &gt; 192.168.64.5.8000: Flags [.], ack 2, win 2058, options [nop,nop,TS val 283132315 ecr 3145759545], length 0</span><br></pre></td></tr></table></figure><p>整个过程是<br><code>192.168.1.125</code> -&gt; <code>192.168.1.108</code> -&gt;  <code>192.168.64.3</code> -&gt; <code>192.168.64.5</code></p></li><li><p>centos7 -&gt; mac ,  mac 开 2 个 terminal， 一个启动 server， 一个 tcpdump 抓包分析，centos7 telnet 测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># terminal1: start simple http server</span></span><br><span class="line">python3 -m http.server 8000    </span><br><span class="line"></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># terminal2: tcpdump listen port 8000</span></span><br><span class="line">tcpdump -i any port 8000 -nnn</span><br></pre></td></tr></table></figure><p>然后就是 centos telnet 192.168.1.125 8000</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一： 用 Telnet 测试</span></span><br><span class="line">telnet 192.168.1.125 8000</span><br><span class="line"></span><br><span class="line">Trying 192.168.1.125...</span><br><span class="line">Connected to 192.168.1.125.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">^]</span><br><span class="line"></span><br><span class="line">telnet&gt; q</span><br><span class="line">Connection closed.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二： 用 mtr 测试</span></span><br><span class="line">sudo mtr -n -c 3 -r --tcp --port 8000 192.168.1.125</span><br><span class="line"></span><br><span class="line">Start: Sun Jun 20 08:16:37 2021</span><br><span class="line">HOST: centos7                     Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 192.168.64.3               0.0%     3    0.4   0.4   0.4   0.5   0.0</span><br><span class="line">  2.|-- 192.168.1.125              0.0%     3  1002. 902.3 201.3 1502. 656.6</span><br></pre></td></tr></table></figure><p>检查 mac tcpdump 的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo tcpdump -i any port 8000 -nnn</span><br><span class="line">Password:</span><br><span class="line">tcpdump: data link <span class="built_in">type</span> PKTAP</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on any, link-type PKTAP (Apple DLT_PKTAP), capture size 262144 bytes</span><br><span class="line">18:44:00.166899 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [S], seq 3298177179, win 29200, options [mss 1460,sackOK,TS val 4138980 ecr 0,nop,wscale 7], length 0</span><br><span class="line">18:44:00.166996 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [S.], seq 3788626158, ack 3298177180, win 65535, options [mss 1460,nop,wscale 6,nop,nop,TS val 282788376 ecr 4138980,sackOK,eol], length 0</span><br><span class="line">18:44:00.169945 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [.], ack 1, win 229, options [nop,nop,TS val 4138982 ecr 282788376], length 0</span><br><span class="line">18:44:00.169966 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [.], ack 1, win 2058, options [nop,nop,TS val 282788379 ecr 4138982], length 0</span><br><span class="line">18:44:12.790139 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [F.], seq 1, ack 1, win 229, options [nop,nop,TS val 4151601 ecr 282788379], length 0</span><br><span class="line">18:44:12.790165 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [.], ack 2, win 2058, options [nop,nop,TS val 282800870 ecr 4151601], length 0</span><br><span class="line">18:44:12.790246 IP 192.168.1.125.8000 &gt; 192.168.1.108.54120: Flags [F.], seq 1, ack 2, win 2058, options [nop,nop,TS val 282800870 ecr 4151601], length 0</span><br><span class="line">18:44:12.792923 IP 192.168.1.108.54120 &gt; 192.168.1.125.8000: Flags [.], ack 2, win 229, options [nop,nop,TS val 4151606 ecr 282800870], length 0</span><br><span class="line">^C</span><br><span class="line">8 packets captured</span><br><span class="line">2158 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>整个过程是<br><code>192.168.64.4</code> -&gt; <code>192.168.64.3</code> -&gt;  <code>192.168.1.108</code> -&gt; <code>192.168.1.125</code></p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这下，两个网络之间就实现了互通。让我联想到了 <a href="https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html" target="_blank" rel="noopener">AWS VPC peering</a> ，又联动上了。 如今 SSH 就不需要跳板机 ProxyJump 了, vault UI 192.168.64.3:8200 也不需要 Nginx 代理了。<br>我们如今只是将 Windows10 VMware 自定义的 NAT 内网和家庭网络连通了起来。 如果家里的其他电脑也创建了 NAT 内网， 那么最终我们可以在家里本地环境，模拟出多个网络，就像 AWS  多个VPC 一样，最终都连通起来。<br><img src="/img/vm/33.png" alt=""> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分享自己在家搭建 Linux 虚拟机的经验。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="mac" scheme="http://feiyang233.club/tags/mac/"/>
    
      <category term="tools" scheme="http://feiyang233.club/tags/tools/"/>
    
      <category term="ansible" scheme="http://feiyang233.club/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>consul 实践</title>
    <link href="http://feiyang233.club/post/consul/"/>
    <id>http://feiyang233.club/post/consul/</id>
    <published>2021-05-09T13:52:52.000Z</published>
    <updated>2021-05-26T09:27:40.921Z</updated>
    
    <content type="html"><![CDATA[<p>在本地虚拟机环境搭建 consul cluster 实践。<br><a id="more"></a></p><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>这三台虚拟机，分别跑在三台笔记本电脑上。这样做的好处是，桥接模式不需要端口映射，在我家的局域网里面尽情的玩耍。</p><table><thead><tr><th>Name</th><th>Operating system</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>ubuntu18-119</td><td>Ubuntu 18.04.5 LTS</td><td>2</td><td>4G</td><td>20G</td><td>192.168.1.119</td></tr><tr><td>ubuntu18-120</td><td>Ubuntu 18.04.5 LTS</td><td>2</td><td>4G</td><td>10G</td><td>192.168.1.120</td></tr><tr><td>ubuntu18-121</td><td>Ubuntu 18.04.5 LTS</td><td>2</td><td>4G</td><td>30G</td><td>192.168.1.121</td></tr></tbody></table><p>Ubuntu18 是公司当前线上环境的系统，桌面版有可视化，桌面比服务器版本的命令行方便一点。</p><p>实验环境的搭建，可以参考我的另外一篇博客 <a href="https://feiyang233.club/post/vm/">https://feiyang233.club/post/vm/</a></p><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>参考文档：</p><ul><li><a href="https://computingforgeeks.com/how-to-install-consul-cluster-18-04-lts/" target="_blank" rel="noopener">https://computingforgeeks.com/how-to-install-consul-cluster-18-04-lts/</a></li><li><a href="https://learn.hashicorp.com/tutorials/consul/get-started-install" target="_blank" rel="noopener">https://learn.hashicorp.com/tutorials/consul/get-started-install</a></li></ul><p>分别在三台虚拟机上安装好 consul service<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo apt-add-repository <span class="string">"deb [arch=amd64] https://apt.releases.hashicorp.com <span class="variable">$(lsb_release -cs)</span> main"</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install consul</span><br><span class="line"></span><br><span class="line"><span class="comment">## 验证安装的结果</span></span><br><span class="line">root@ubuntu18-119:/etc/consul.d<span class="comment"># cd </span></span><br><span class="line">root@ubuntu18-119:~<span class="comment"># consul version</span></span><br><span class="line">Consul v1.9.5</span><br><span class="line">Revision 3c1c22679</span><br><span class="line">Protocol 2 spoken by default, understands 2 to 3 (agent will automatically use protocol &gt;2 when speaking to compatible agents)</span><br></pre></td></tr></table></figure></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>在开始配置文件之前，先要生成一个秘钥。 随便在三台中的任意一台机器运行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-121:~<span class="comment"># consul keygen</span></span><br><span class="line">byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w=</span><br><span class="line"></span><br><span class="line"><span class="comment"># 秘钥很重要，不要随便暴露，这里的秘钥是我临时生成的作示范</span></span><br></pre></td></tr></table></figure></p><h3 id="node-119"><a href="#node-119" class="headerlink" title="node-119"></a>node-119</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">datacenter = "feiyang"</span><br><span class="line">data_dir = "/opt/consul"</span><br><span class="line">client_addr = "0.0.0.0"</span><br><span class="line">bind_addr = "192.168.1.119"</span><br><span class="line">ui = true</span><br><span class="line">server = true</span><br><span class="line">bootstrap_expect=3</span><br><span class="line">encrypt = "byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w="</span><br><span class="line">retry_join = ["192.168.1.119", "192.168.1.120", "192.168.1.121"]</span><br></pre></td></tr></table></figure><h3 id="node-120"><a href="#node-120" class="headerlink" title="node-120"></a>node-120</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">datacenter = "feiyang"</span><br><span class="line">data_dir = "/opt/consul"</span><br><span class="line">client_addr = "0.0.0.0"</span><br><span class="line">bind_addr = "192.168.1.120"</span><br><span class="line">ui = true</span><br><span class="line">server = true</span><br><span class="line">bootstrap_expect=3</span><br><span class="line">encrypt = "byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w="</span><br><span class="line">retry_join = ["192.168.1.119", "192.168.1.120", "192.168.1.121"]</span><br></pre></td></tr></table></figure><h3 id="node-121"><a href="#node-121" class="headerlink" title="node-121"></a>node-121</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">datacenter = "feiyang"</span><br><span class="line">data_dir = "/opt/consul"</span><br><span class="line">client_addr = "0.0.0.0"</span><br><span class="line">bind_addr = "192.168.1.121"</span><br><span class="line">ui = true</span><br><span class="line">server = true</span><br><span class="line">bootstrap_expect=3</span><br><span class="line">encrypt = "byCHv8NFR6p770xmNNjxlCGdeH9e0YU7CwZFnsnOW8w="</span><br><span class="line">retry_join = ["192.168.1.119", "192.168.1.120", "192.168.1.121"]</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>一切配置好以后，我们可以启动服务，并且设置服务开机自启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start consul</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> consul</span><br><span class="line"></span><br><span class="line"><span class="comment">## ---------------------------</span></span><br><span class="line"><span class="comment">## Check cluster members</span></span><br><span class="line">root@ubuntu18-119:~<span class="comment"># consul members</span></span><br><span class="line">Node          Address             Status  Type    Build  Protocol  DC       Segment</span><br><span class="line">ubuntu18-119  192.168.1.119:8301  alive   server  1.9.5  2         feiyang  &lt;all&gt;</span><br><span class="line">ubuntu18-120  192.168.1.120:8301  alive   server  1.9.5  2         feiyang  &lt;all&gt;</span><br><span class="line">ubuntu18-121  192.168.1.121:8301  alive   server  1.9.5  2         feiyang  &lt;all&gt;</span><br></pre></td></tr></table></figure></p><h2 id="ui"><a href="#ui" class="headerlink" title="ui"></a>ui</h2><p>任意一台节点的 8500 端口加路径 ui  <a href="http://node_ip:8500/ui/" target="_blank" rel="noopener">http://node_ip:8500/ui/</a><br>举例： <a href="http://192.168.1.120:8500/ui/" target="_blank" rel="noopener">http://192.168.1.120:8500/ui/</a></p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在本地虚拟机环境搭建 consul cluster 实践。&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="hashicorp" scheme="http://feiyang233.club/tags/hashicorp/"/>
    
  </entry>
  
  <entry>
    <title>vault 实践</title>
    <link href="http://feiyang233.club/post/vault/"/>
    <id>http://feiyang233.club/post/vault/</id>
    <published>2021-03-07T22:06:06.000Z</published>
    <updated>2021-07-13T06:41:17.672Z</updated>
    
    <content type="html"><![CDATA[<p>在本地虚拟机环境搭建 vault cluster 实践。<br><a id="more"></a></p><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>这三台虚拟机，都运行在我的台式机上。</p><table><thead><tr><th>Name</th><th>Operating system</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>node-1</td><td>Ubuntu 18.04.5 LTS</td><td>4</td><td>8G</td><td>50G</td><td>192.168.64.3</td></tr><tr><td>node-2</td><td>CentOS 7.8.2003</td><td>2</td><td>2G</td><td>20G</td><td>192.168.64.4</td></tr><tr><td>node-3</td><td>Ubuntu 20.04.1 LTS</td><td>2</td><td>4G</td><td>10G</td><td>192.168.64.5</td></tr></tbody></table><p>实验环境的搭建，可以参考我的另外一篇博客 <a href="https://feiyang233.club/post/vm/">https://feiyang233.club/post/vm/</a></p><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>参考文档：</p><ul><li><a href="https://computingforgeeks.com/install-and-configure-vault-server-linux/" target="_blank" rel="noopener">https://computingforgeeks.com/install-and-configure-vault-server-linux/</a></li><li><a href="https://learn.hashicorp.com/tutorials/vault/getting-started-install?in=vault/getting-started" target="_blank" rel="noopener">https://learn.hashicorp.com/tutorials/vault/getting-started-install?in=vault/getting-started</a></li><li><a href="https://learn.hashicorp.com/tutorials/vault/raft-storage" target="_blank" rel="noopener">https://learn.hashicorp.com/tutorials/vault/raft-storage</a></li></ul><p>分别在三台虚拟机上安装好 vault service<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ubuntu OS</span></span><br><span class="line">curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo apt-add-repository <span class="string">"deb [arch=amd64] https://apt.releases.hashicorp.com <span class="variable">$(lsb_release -cs)</span> main"</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install vault</span><br><span class="line"></span><br><span class="line">root@ubuntu20:/etc/vault.d<span class="comment"># vault --version</span></span><br><span class="line">Vault v1.6.2 (be65a227ef2e80f8588b3b13584b5c0d9238c1d7)</span><br></pre></td></tr></table></figure><br>就下来就是配置 config, 如果没有创建存储的文件夹，还需要创建<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /vault/data</span><br><span class="line">chown -R vault:vault /vault</span><br></pre></td></tr></table></figure><br>配置文件如下<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">// node-1</span><br><span class="line">root@ubuntu18-108:/etc/vault.d# cat /etc/vault.d/vault.hcl</span><br><span class="line">storage "raft" &#123;</span><br><span class="line">  path    = "./vault/data"</span><br><span class="line">  node_id = "node1"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener "tcp" &#123;</span><br><span class="line">  address     = "192.168.64.3:8200"</span><br><span class="line">  cluster_address = "192.168.64.3:8201"</span><br><span class="line">  tls_disable = "true"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">disable_mlock = true</span><br><span class="line">api_addr = "http://192.168.64.3:8200"</span><br><span class="line">cluster_addr = "http://192.168.64.3:8201"</span><br><span class="line"></span><br><span class="line">//----------------------------------</span><br><span class="line"></span><br><span class="line">//node2</span><br><span class="line">[root@centos7 vault.d]# cat /etc/vault.d/vault.hcl</span><br><span class="line">storage "raft" &#123;</span><br><span class="line">  path    = "./vault/data"</span><br><span class="line">  node_id = "node2"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener "tcp" &#123;</span><br><span class="line">  address     = "192.168.64.4:8200"</span><br><span class="line">  tls_disable = "true"</span><br><span class="line">  cluster_address = "192.168.64.4:8201"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">disable_mlock = true</span><br><span class="line">api_addr = "http://192.168.64.4:8200"</span><br><span class="line">cluster_addr = "http://192.168.64.4:8201"</span><br><span class="line"></span><br><span class="line">// ----------------------------------</span><br><span class="line"></span><br><span class="line">// node-3</span><br><span class="line">root@ubuntu20:/etc/vault.d# cat /etc/vault.d/vault.hcl</span><br><span class="line">storage "raft" &#123;</span><br><span class="line">  path    = "./vault/data"</span><br><span class="line">  node_id = "node3"</span><br><span class="line"></span><br><span class="line">  retry_join &#123;</span><br><span class="line">    leader_api_addr = "http://192.168.64.3:8200"</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  retry_join &#123;</span><br><span class="line">    leader_api_addr = "http://192.168.64.4:8200"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener "tcp" &#123;</span><br><span class="line">  address     = "192.168.64.5:8200"</span><br><span class="line">  cluster_address = "192.168.64.5:8201"</span><br><span class="line">  tls_disable = "true"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">api_addr = "http://192.168.64.5:8200"</span><br><span class="line">cluster_addr = "http://192.168.64.5:8201"</span><br></pre></td></tr></table></figure></p><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><p>配置完成后就是启动 vault， 并且初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">systemctl  start vault</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选一台作为 master 开始初始化，这里我选的 node-1</span></span><br><span class="line"><span class="comment"># export 设置 API 地址非常重要</span></span><br><span class="line"><span class="built_in">export</span> VAULT_ADDR=<span class="string">'http://192.168.64.3:8200'</span></span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator init</span></span><br><span class="line">Unseal Key 1: key1</span><br><span class="line">Unseal Key 2: key2</span><br><span class="line">Unseal Key 3: key3</span><br><span class="line">Unseal Key 4: key4</span><br><span class="line">Unseal Key 5: key5</span><br><span class="line"></span><br><span class="line">Initial Root Token: token</span><br><span class="line"></span><br><span class="line">Vault initialized with 5 key shares and a key threshold of 3. Please securely</span><br><span class="line">distribute the key shares printed above. When the Vault is re-sealed,</span><br><span class="line">restarted, or stopped, you must supply at least 3 of these keys to unseal it</span><br><span class="line">before it can start servicing requests.</span><br><span class="line"></span><br><span class="line">Vault does not store the generated master key. Without at least 3 key to</span><br><span class="line">reconstruct the master key, Vault will remain permanently sealed!</span><br><span class="line"></span><br><span class="line">It is possible to generate new unseal keys, provided you have a quorum of</span><br><span class="line">existing unseal keys shares. See <span class="string">"vault operator rekey"</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="comment"># 以上的初始化产生的 key 和 token 非常重要，一定要妥善安全保管</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你嫌测试环境 太多 key 麻烦，可以修改参数，产生一个 key</span></span><br><span class="line">vault operator init -key-shares=1 -key-threshold=1</span><br><span class="line"></span><br><span class="line">  -key-shares=&lt;int&gt;</span><br><span class="line">      Number of key shares to split the generated master key into. This is</span><br><span class="line">      the number of <span class="string">"unseal keys"</span> to generate. This is aliased as <span class="string">"-n"</span>. The</span><br><span class="line">      default is 5.</span><br><span class="line"></span><br><span class="line">  -key-threshold=&lt;int&gt;</span><br><span class="line">      Number of key shares required to reconstruct the master key. This must</span><br><span class="line">      be less than or equal to -key-shares. This is aliased as <span class="string">"-t"</span>. The</span><br><span class="line">      default is 3.</span><br></pre></td></tr></table></figure><h2 id="unseal"><a href="#unseal" class="headerlink" title="unseal"></a>unseal</h2><p>这个时候只是初始化启动了 vault， 还需要我们用 key unseal to reconstruct the master key</p><h3 id="node-1"><a href="#node-1" class="headerlink" title="node-1"></a>node-1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator unseal</span></span><br><span class="line">Unseal Key (will be hidden):</span><br><span class="line">Key                Value</span><br><span class="line">---                -----</span><br><span class="line">Seal Type          shamir</span><br><span class="line">Initialized        <span class="literal">true</span></span><br><span class="line">Sealed             <span class="literal">true</span></span><br><span class="line">Total Shares       5</span><br><span class="line">Threshold          3</span><br><span class="line">Unseal Progress    1/3</span><br><span class="line">Unseal Nonce       8950ac41-69ae-2a96-00db-610739dcbeee</span><br><span class="line">Version            1.7.1</span><br><span class="line">Storage Type       raft</span><br><span class="line">HA Enabled         <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator unseal</span></span><br><span class="line">Unseal Key (will be hidden):</span><br><span class="line">Key                Value</span><br><span class="line">---                -----</span><br><span class="line">Seal Type          shamir</span><br><span class="line">Initialized        <span class="literal">true</span></span><br><span class="line">Sealed             <span class="literal">true</span></span><br><span class="line">Total Shares       5</span><br><span class="line">Threshold          3</span><br><span class="line">Unseal Progress    2/3</span><br><span class="line">Unseal Nonce       8950ac41-69ae-2a96-00db-610739dcbeee</span><br><span class="line">Version            1.7.1</span><br><span class="line">Storage Type       raft</span><br><span class="line">HA Enabled         <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator unseal</span></span><br><span class="line">Unseal Key (will be hidden):</span><br><span class="line">Key                     Value</span><br><span class="line">---                     -----</span><br><span class="line">Seal Type               shamir</span><br><span class="line">Initialized             <span class="literal">true</span></span><br><span class="line">Sealed                  <span class="literal">false</span></span><br><span class="line">Total Shares            5</span><br><span class="line">Threshold               3</span><br><span class="line">Version                 1.7.1</span><br><span class="line">Storage Type            raft</span><br><span class="line">Cluster Name            vault-cluster-0618ae06</span><br><span class="line">Cluster ID              feca826b-0ffd-838f-412d-0c6687feee60</span><br><span class="line">HA Enabled              <span class="literal">true</span></span><br><span class="line">HA Cluster              n/a</span><br><span class="line">HA Mode                 standby</span><br><span class="line">Active Node Address     &lt;none&gt;</span><br><span class="line">Raft Committed Index    24</span><br><span class="line">Raft Applied Index      24</span><br></pre></td></tr></table></figure><p>这个时候 vault 才算是真正的启动，开始提供服务了，我们可以来验证一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># login</span></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault login token-for-login</span></span><br><span class="line">Success! You are now authenticated. The token information displayed below</span><br><span class="line">is already stored <span class="keyword">in</span> the token helper. You <span class="keyword">do</span> NOT need to run <span class="string">"vault login"</span></span><br><span class="line">again. Future Vault requests will automatically use this token.</span><br><span class="line"></span><br><span class="line">Key                  Value</span><br><span class="line">---                  -----</span><br><span class="line">token                token-for-login</span><br><span class="line">token_accessor       xxxxxxxxxxx</span><br><span class="line">token_duration       ∞</span><br><span class="line">token_renewable      <span class="literal">false</span></span><br><span class="line">token_policies       [<span class="string">"root"</span>]</span><br><span class="line">identity_policies    []</span><br><span class="line">policies             [<span class="string">"root"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># check nodes, 我这里设置好之后，如果此时你只安装好 node-1 列表只有一个</span></span><br><span class="line">root@ubuntu18-108:/etc/vault.d<span class="comment"># vault operator raft list-peers</span></span><br><span class="line">Node     Address              State       Voter</span><br><span class="line">----     -------              -----       -----</span><br><span class="line">node1    192.168.64.3:8201    leader      <span class="literal">true</span></span><br><span class="line">node2    192.168.64.4:8201    follower    <span class="literal">false</span></span><br><span class="line">node3    192.168.64.5:8201    follower    <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="node-2"><a href="#node-2" class="headerlink" title="node-2"></a>node-2</h3><p>follower 节点稍微多一步，需要先加入 cluster<br><code>vault operator raft join http://192.168.64.3:8200</code></p><p>为了方便，避免重复，可以采用 shell 脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim init.sh</span><br><span class="line">chmod 755 init.sh</span><br><span class="line"><span class="built_in">export</span> VAULT_ADDR=<span class="string">'http://192.168.64.4:8200'</span></span><br><span class="line">vault operator raft join http://192.168.64.3:8200</span><br><span class="line">vault operator unseal key1</span><br><span class="line">vault operator unseal key3</span><br><span class="line">vault operator unseal key5</span><br><span class="line">vault login token-for-login</span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------</span></span><br><span class="line">bash init.sh</span><br></pre></td></tr></table></figure></p><h3 id="node-3"><a href="#node-3" class="headerlink" title="node-3"></a>node-3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAULT_ADDR=<span class="string">'http://192.168.64.5:8200'</span> \</span><br><span class="line">&amp;&amp; vault operator raft join http://192.168.64.3:8200 \</span><br><span class="line">&amp;&amp; vault operator unseal key1 \</span><br><span class="line">&amp;&amp; vault operator unseal key3 \</span><br><span class="line">&amp;&amp; vault operator unseal key5 \</span><br><span class="line">vault login token-for-login</span><br></pre></td></tr></table></figure><h3 id="unseal-script"><a href="#unseal-script" class="headerlink" title="unseal-script"></a>unseal-script</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">feiyang-vault() &#123;</span><br><span class="line">for i in 1 2 3</span><br><span class="line">do</span><br><span class="line">   ssh win$i sudo bash /etc/vault.d/feiyang.sh</span><br><span class="line">done</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Enable-Audit-Logging"><a href="#Enable-Audit-Logging" class="headerlink" title="Enable Audit Logging"></a>Enable Audit Logging</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/<span class="built_in">log</span>/vault</span><br><span class="line"></span><br><span class="line">chown -R vault:vault /var/<span class="built_in">log</span>/vault</span><br><span class="line"></span><br><span class="line">vault audit <span class="built_in">enable</span> file file_path=/var/<span class="built_in">log</span>/vault/vault-audit.log</span><br><span class="line">Success! Enabled the file audit device at: file/</span><br><span class="line"></span><br><span class="line"><span class="comment"># check the log</span></span><br><span class="line">root@ubuntu18-108:/var/<span class="built_in">log</span>/vault<span class="comment"># cat /var/log/vault/vault-audit.log | jq</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"time"</span>: <span class="string">"2021-06-10T12:55:56.251461725Z"</span>,</span><br><span class="line">  <span class="string">"type"</span>: <span class="string">"request"</span>,</span><br><span class="line">  <span class="string">"auth"</span>: &#123;</span><br><span class="line">    <span class="string">"token_type"</span>: <span class="string">"default"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"request"</span>: &#123;</span><br><span class="line">    <span class="string">"id"</span>: <span class="string">"facaae9e-b62a-0a5e-e486-3737252ca003"</span>,</span><br><span class="line">    <span class="string">"operation"</span>: <span class="string">"update"</span>,</span><br><span class="line">    <span class="string">"namespace"</span>: &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"root"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"sys/audit/test"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"time"</span>: <span class="string">"2021-06-10T12:55:56.255890481Z"</span>,</span><br><span class="line">  <span class="string">"type"</span>: <span class="string">"response"</span>,</span><br><span class="line">  <span class="string">"auth"</span>: &#123;</span><br><span class="line">    <span class="string">"client_token"</span>: <span class="string">"hmac-sha256:4ee53ef44a84288b7e08f4cb5d3cee7a8169f953e18fe0dd5074aaac477000b8"</span>,</span><br><span class="line">    <span class="string">"accessor"</span>: <span class="string">"hmac-sha256:1632d2bc5c5b4bf88ed7c2fab22f9932cf31470a95f111bc22fbe34737d56322"</span>,</span><br><span class="line">    <span class="string">"display_name"</span>: <span class="string">"root"</span>,</span><br><span class="line">    <span class="string">"policies"</span>: [</span><br><span class="line">      <span class="string">"root"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"token_policies"</span>: [</span><br><span class="line">      <span class="string">"root"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"token_type"</span>: <span class="string">"service"</span>,</span><br><span class="line">    <span class="string">"token_issue_time"</span>: <span class="string">"2021-05-09T20:42:59+08:00"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"request"</span>: &#123;</span><br><span class="line">    <span class="string">"id"</span>: <span class="string">"8b29ec93-b89d-feb9-56e0-47bdb7dea4f0"</span>,</span><br><span class="line">    <span class="string">"operation"</span>: <span class="string">"update"</span>,</span><br><span class="line">    <span class="string">"mount_type"</span>: <span class="string">"system"</span>,</span><br><span class="line">    <span class="string">"client_token"</span>: <span class="string">"hmac-sha256:4ee53ef44a84288b7e08f4cb5d3cee7a8169f953e18fe0dd5074aaac477000b8"</span>,</span><br><span class="line">    <span class="string">"client_token_accessor"</span>: <span class="string">"hmac-sha256:1632d2bc5c5b4bf88ed7c2fab22f9932cf31470a95f111bc22fbe34737d56322"</span>,</span><br><span class="line">    <span class="string">"namespace"</span>: &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"root"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"sys/audit/file"</span>,</span><br><span class="line">    <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"description"</span>: <span class="string">"hmac-sha256:9a3dedcf661ac628346b8b4787ff2e1b84e506aa614c359cf8e6500c834aca3d"</span>,</span><br><span class="line">      <span class="string">"local"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"options"</span>: &#123;</span><br><span class="line">        <span class="string">"file_path"</span>: <span class="string">"hmac-sha256:1a445f97febdb58c62eee3997a99dac448c7dd32674dda94f8c1366d18c530e5"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"hmac-sha256:29023c2cba01f448e1052da9d286f10d600f2ed99aaedd46dd98122078faa77a"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"remote_address"</span>: <span class="string">"192.168.64.3"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"response"</span>: &#123;</span><br><span class="line">    <span class="string">"mount_type"</span>: <span class="string">"system"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Rekeying"><a href="#Rekeying" class="headerlink" title="Rekeying"></a>Rekeying</h2><p>如果需要重新生成 unseal  key 的话，可以用 rekey 命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vault operator rekey -init -key-shares=3 -key-threshold=2 \</span><br><span class="line">    -format=json | jq -r <span class="string">".nonce"</span> &gt; nonce.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前提是第一次 init 的结果存在 key.txt</span></span><br><span class="line">vault operator rekey -nonce=$(cat nonce.txt) \</span><br><span class="line">    $(grep <span class="string">'Key 1:'</span> key.txt | awk <span class="string">'&#123;print $NF&#125;'</span>)</span><br><span class="line"></span><br><span class="line">vault operator rekey -nonce=$(cat nonce.txt) \</span><br><span class="line">    $(grep <span class="string">'Key 2:'</span> key.txt | awk <span class="string">'&#123;print $NF&#125;'</span>)</span><br><span class="line"></span><br><span class="line">vault operator rekey -nonce=$(cat nonce.txt) \</span><br><span class="line">    $(grep <span class="string">'Key 3:'</span> key.txt | awk <span class="string">'&#123;print $NF&#125;'</span>)</span><br></pre></td></tr></table></figure></p><h2 id="Rotating"><a href="#Rotating" class="headerlink" title="Rotating"></a>Rotating</h2><p>Rotating the Encryption Key 就非常的简单了，只需要一行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vault operator rotate</span><br></pre></td></tr></table></figure></p><h1 id="nginx-代理转发"><a href="#nginx-代理转发" class="headerlink" title="nginx 代理转发"></a>nginx 代理转发</h1><p>因为我们的 vault 集群是监听在内网上的 192.168.64.0/24，而我家里局域网的网段是 192.168.0.0/24，因此要设置代理转发一下。</p><ul><li>首先安装 Nginx<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我已经关闭了防火墙的</span></span><br></pre></td></tr></table></figure></li><li>设置代理转发，配置文件如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/vault.conf</span><br><span class="line"></span><br><span class="line">upstream vault &#123;</span><br><span class="line">    server 192.168.64.3:8200;</span><br><span class="line">    keepalive 15;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen 192.168.1.108:8200;</span><br><span class="line">    server_name 192.168.1.108;</span><br><span class="line">    access_log /var/<span class="built_in">log</span>/nginx/vault.access.log;</span><br><span class="line">    error_log /var/<span class="built_in">log</span>/nginx/vault.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    </span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_buffer_size 64k;</span><br><span class="line">        proxy_buffers   32 32k;</span><br><span class="line">        proxy_busy_buffers_size 128k;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP       <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header Connection <span class="string">"Keep-Alive"</span>;</span><br><span class="line">        proxy_set_header Proxy-Connection <span class="string">"Keep-Alive"</span>;</span><br><span class="line">        </span><br><span class="line">        proxy_pass    http://vault;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl start nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记得删除 default 的 80 服务，以免和其他服务冲突，这里我这台机器 80 端口已经被 gitlab 占用了</span></span><br><span class="line">rm -f /etc/nginx/sites-enabled/default</span><br></pre></td></tr></table></figure></li></ul><p>现在我们就可以登录 vault UI 界面了  <a href="http://192.168.1.108:8200/ui/vault/auth?with=token" target="_blank" rel="noopener">http://192.168.1.108:8200/ui/vault/auth?with=token</a></p><h2 id="enable-nginx-failed"><a href="#enable-nginx-failed" class="headerlink" title="enable nginx failed"></a>enable nginx failed</h2><p>我们通过 <code>systemctl enable nginx</code>  已经设置了开机自启动 Nginx， 但是实际环境中缺是失败了。我们检查日志发现了错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:/home/feiyang<span class="comment"># systemctl status nginx</span></span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: failed (Result: <span class="built_in">exit</span>-code) since Sat 2021-06-12 09:45:56 +08; 1min 12s ago</span><br><span class="line">     Docs: man:nginx(8)</span><br><span class="line">  Process: 1365 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Jun 12 09:45:55 ubuntu18-108 systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 nginx[1365]: nginx: [emerg] <span class="built_in">bind</span>() to 192.168.1.108:8200 failed (99: Cannot assign requested address)</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 nginx[1365]: nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> failed</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 systemd[1]: nginx.service: Control process exited, code=exited status=1</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 systemd[1]: nginx.service: Failed with result <span class="string">'exit-code'</span>.</span><br><span class="line">Jun 12 09:45:56 ubuntu18-108 systemd[1]: Failed to start A high performance web server and a reverse proxy server.</span><br><span class="line"></span><br><span class="line"><span class="comment"># journalctl check log</span></span><br><span class="line">root@ubuntu18-108:/home/feiyang<span class="comment"># journalctl -u nginx</span></span><br><span class="line">-- Reboot --</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 nginx[1348]: nginx: [emerg] <span class="built_in">bind</span>() to 192.168.1.108:8200 failed (99: Cannot assign requested address)</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 nginx[1348]: nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> failed</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: nginx.service: Control process exited, code=exited status=1</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: nginx.service: Failed with result <span class="string">'exit-code'</span>.</span><br><span class="line">Jun 12 08:42:37 ubuntu18-108 systemd[1]: Failed to start A high performance web server and a reverse proxy server.</span><br></pre></td></tr></table></figure><p>从日志中，我们可以看出 Nginx 失败的原因是， 没有找到那个 IP 192.168.1.108 , 因为我们这个是双网卡的虚拟机，默认的 primary network interface 是192.168.64.3 , secondary network interface 是 192.168.1.108 , 在此我推测是因为当 Nginx 启动的时候， 第二张网卡还没有准备好。</p><p>这个时候，我们可以采用 <a href="https://fedoramagazine.org/systemd-unit-dependencies-and-order/" target="_blank" rel="noopener">systemd: Unit dependencies and order</a> 来定义 service 之间的依赖项，启动相关顺序。我们先检查一下 Nginx 的 systemd config<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-108:~<span class="comment"># cat /lib/systemd/system/nginx.service</span></span><br><span class="line"><span class="comment"># Stop dance for nginx</span></span><br><span class="line"><span class="comment"># =======================</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ExecStop sends SIGSTOP (graceful stop) to the nginx process.</span></span><br><span class="line"><span class="comment"># If, after 5s (--retry QUIT/5) nginx is still running, systemd takes control</span></span><br><span class="line"><span class="comment"># and sends SIGTERM (fast shutdown) to the main process.</span></span><br><span class="line"><span class="comment"># After another 5s (TimeoutStopSec=5), and if nginx is alive, systemd sends</span></span><br><span class="line"><span class="comment"># SIGKILL to all the remaining processes in the process group (KillMode=mixed).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx signals reference doc:</span></span><br><span class="line"><span class="comment"># http://nginx.org/en/docs/control.html</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=A high performance web server and a reverse proxy server</span><br><span class="line">Documentation=man:nginx(8)</span><br><span class="line">After=network.target <span class="comment"># 启动依赖，问题就在这里</span></span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t -q -g <span class="string">'daemon on; master_process on;'</span></span><br><span class="line">ExecStart=/usr/sbin/nginx -g <span class="string">'daemon on; master_process on;'</span></span><br><span class="line">ExecReload=/usr/sbin/nginx -g <span class="string">'daemon on; master_process on;'</span> -s reload</span><br><span class="line">ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">KillMode=mixed</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><br>从这一行看出， Nginx 是在 <code>After=network.target</code> 之后启动的，但结果却是失败。我们对比了 docker service 的 systemd config 发现 docker 是在 <code>After=network-online.target</code> 后启动的， 我们尝试将 Nginx systemd 配置文件修改为 <code>network-online.target</code> ，终于可以成功开机自启动。</p><h1 id="Auth-Methods"><a href="#Auth-Methods" class="headerlink" title="Auth Methods"></a>Auth Methods</h1><p>认证方式有很多种。 <a href="https://www.vaultproject.io/docs/auth" target="_blank" rel="noopener">https://www.vaultproject.io/docs/auth</a><br>Each auth method serves a different purpose, and some auth methods are better suited for machine authentication rather than used by human users. </p><ul><li><code>machine auth</code> methods include AppRole,</li><li><code>Cloud-based auth</code> methods, tokens, TLS, Kubernetes, and Radius. </li><li><code>human auth</code> methods include Okta, LDAP, GitHub, OIDC, and userpass.</li></ul><h2 id="userpass"><a href="#userpass" class="headerlink" title="userpass"></a>userpass</h2><p>创建一个 user 登录，这样就不需要每次都是 root token 了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地编辑一个 sudo policy，保存</span></span><br><span class="line">vim sudo.hcl</span><br><span class="line"></span><br><span class="line">path <span class="string">"*"</span> &#123;</span><br><span class="line">  policy = <span class="string">"sudo"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个名为 sudo 的 policy</span></span><br><span class="line">vault policy write sudo sudo.hcl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 user </span></span><br><span class="line">vault auth <span class="built_in">enable</span> userpass</span><br><span class="line"></span><br><span class="line">vault write auth/userpass/users/feiyang password=<span class="string">"password"</span> policies=<span class="string">"sudo"</span></span><br></pre></td></tr></table></figure><br>这样就可以用 feiyang 和 password 登录了</p><h2 id="AppRole"><a href="#AppRole" class="headerlink" title="AppRole"></a>AppRole</h2><p>AppRole 多用于机器上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上面 userpass 我们已经创建了 sudo policy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 my-role</span></span><br><span class="line">vault write auth/approle/role/my-role \</span><br><span class="line">    secret_id_ttl=10m \</span><br><span class="line">    token_ttl=20m \</span><br><span class="line">    token_max_ttl=30m \</span><br><span class="line">    token_policies=[<span class="string">"sudo"</span>] \</span><br><span class="line">    period=0 \</span><br><span class="line">    bind_secret_id=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 role list</span></span><br><span class="line">vault list /auth/approle/role</span><br><span class="line">Keys</span><br><span class="line">----</span><br><span class="line">my-role</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 role id</span></span><br><span class="line">vault <span class="built_in">read</span> auth/approle/role/my-role/role-id</span><br><span class="line">Key        Value</span><br><span class="line">---        -----</span><br><span class="line">role_id    8511d740-3e3f-76d4-6084-df02b149e6fb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 role secret</span></span><br><span class="line"> vault write -f auth/approle/role/my-role/secret-id</span><br><span class="line">Key                   Value</span><br><span class="line">---                   -----</span><br><span class="line">secret_id             3ea8ee03-9239-7c64-ca24-2194d7a10b8d</span><br><span class="line">secret_id_accessor    11d7ddcf-08ea-4e5d-921b-59d9608119ef</span><br><span class="line">secret_id_ttl         10m</span><br></pre></td></tr></table></figure><br>到此，我们有了 role_id 和 secret_id 就可以用于机器上访问 vault 了</p><h1 id="HTTP-API"><a href="#HTTP-API" class="headerlink" title="HTTP API"></a>HTTP API</h1><p>首先为了操作方便，我们需要保持 token 到环境变量 $VAULT_TOKEN<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAULT_TOKEN=<span class="string">"s.Ga5jyNq6kNfRMVQk2LY1j9iu"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTP API enable approle</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">"X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>"</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">'&#123;"type": "approle"&#125;'</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/sys/auth/approle</span><br><span class="line"></span><br><span class="line"><span class="comment"># create my-policy</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">"X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>"</span> \</span><br><span class="line">    --request PUT \</span><br><span class="line">    --data <span class="string">'&#123;"policy":"# Dev servers have version 2 of KV secrets engine mounted by default, so will\n# need these paths to grant permissions:\npath \"secret/data/*\" &#123;\n  capabilities = [\"create\", \"update\"]\n&#125;\n\npath \"secret/data/foo\" &#123;\n  capabilities = [\"read\"]\n&#125;\n"&#125;'</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/sys/policies/acl/my-policy</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable KV v2 secrets engine at secret/ using API</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">"X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>"</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">'&#123; "type":"kv-v2" &#125;'</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/sys/mounts/secret</span><br><span class="line"></span><br><span class="line"><span class="comment"># create my-role</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">"X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>"</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">'&#123;"policies": ["my-policy"]&#125;'</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/auth/approle/role/my-role</span><br><span class="line"></span><br><span class="line"><span class="comment"># get role-id</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">"X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>"</span> \</span><br><span class="line">     http://127.0.0.1:8200/v1/auth/approle/role/my-role/role-id | jq -r <span class="string">".data"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get secret-id </span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">"X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>"</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    http://127.0.0.1:8200/v1/auth/approle/role/my-role/secret-id | jq -r <span class="string">".data"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># auth with the role-id and secret-id </span></span><br><span class="line">curl --request POST \</span><br><span class="line">       --data <span class="string">'&#123;"role_id": "3c301960-8a02-d776-f025-c3443d513a18", "secret_id": "22d1e0d6-a70b-f91f-f918-a0ee8902666b"&#125;'</span> \</span><br><span class="line">       http://127.0.0.1:8200/v1/auth/approle/login | jq -r <span class="string">".auth"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set new token from my-role auth</span></span><br><span class="line"><span class="built_in">export</span> VAULT_TOKEN=<span class="string">"s.p5NB4dTlsPiUU94RA5IfbzXv"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a version 1 of secret named creds with a key password and its value set to my-long-password.</span></span><br><span class="line">curl \</span><br><span class="line">    --header <span class="string">"X-Vault-Token: <span class="variable">$VAULT_TOKEN</span>"</span> \</span><br><span class="line">    --request POST \</span><br><span class="line">    --data <span class="string">'&#123; "data": &#123;"password": "my-long-password"&#125; &#125;'</span> \</span><br><span class="line">    http://127.0.0.1:8200/v1/secret/data/creds | jq -r <span class="string">".data"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can stop the server and unset the VAULT_TOKEN environment variable.</span></span><br><span class="line"><span class="built_in">unset</span> VAULT_TOKEN</span><br></pre></td></tr></table></figure></p><h1 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h1><p>Vault Commands <a href="https://www.vaultproject.io/docs/commands" target="_blank" rel="noopener">CLI</a> 除了 API, CLI 也是我常用的</p><ul><li>自动补全 Autocompletion<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vault -autocomplete-install</span><br></pre></td></tr></table></figure></li></ul><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li>每次重启服务，都需要 unseal </li><li>如果需要重新初始化，需要先删除 raft 存储的数据， <code>rm -rf /vault/data/*</code></li><li>enable nginx failed 请看上面 3.1 章节</li></ul><h1 id="vault-考试认证"><a href="#vault-考试认证" class="headerlink" title="vault 考试认证"></a>vault 考试认证</h1><p><a href="https://www.hashicorp.com/certification/vault-associate" target="_blank" rel="noopener">HashiCorp Certified: Vault Associate</a></p><p>我买了这个练习题 <a href="https://www.udemy.com/course/hashicorp-certified-vault-associate-practice-exam/" target="_blank" rel="noopener">HashiCorp Certified: Vault Associate Practice Exam 2021</a> ，还是不错的。 虽然不是原题，但对考试，还是非常有帮助的。<br>最终通过了考试 <a href="https://www.credly.com/badges/27d38b38-2b08-4023-9932-d7567a0e0d11/public_url" target="_blank" rel="noopener">HashiCorp Certified: Vault Associate</a></p><h1 id="vault-agent"><a href="#vault-agent" class="headerlink" title="vault-agent"></a>vault-agent</h1><p>安装都是一样的，<a href="https://learn.hashicorp.com/tutorials/vault/getting-started-install" target="_blank" rel="noopener">Install Vault</a> , 只是启动的时候用 agent 模式</p><p>我们需要做的就是，创建 vault-agent.service 以便于 systemd 托管控制<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">root@ubuntu18-119:/etc/vault.d#</span> <span class="string">cat</span>  <span class="string">/lib/systemd/system/vault-agent.service</span></span><br><span class="line">  </span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Vault</span> <span class="string">agent</span></span><br><span class="line"><span class="string">Requires=network-online.target</span></span><br><span class="line"></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Environment=VAULT_ADDR=http://192.168.1.108:8200</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/vault</span> <span class="string">agent</span> <span class="bullet">-log-level=info</span> <span class="bullet">-config=/etc/vault.d/vault-agent.conf</span></span><br><span class="line"><span class="string">User=vault</span></span><br><span class="line"><span class="string">Group=vault</span></span><br><span class="line"></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br></pre></td></tr></table></figure><br>记得 reload 一下配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></p><p>还有就是创建配置文件 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-119:/etc/vault.d# cat vault-agent.conf </span><br><span class="line">        </span><br><span class="line">pid_file = "/var/run/vault-agent/vault-agent.pid"</span><br><span class="line"></span><br><span class="line">auto_auth &#123;</span><br><span class="line">  method "approle" &#123;</span><br><span class="line">    mount_path = "auth/approle"</span><br><span class="line">    config = &#123;</span><br><span class="line">      role_id_file_path = "/etc/vault.d/role_id"</span><br><span class="line">      secret_id_file_path = "/etc/vault.d/secret_id"</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  sink "file" &#123;</span><br><span class="line">    config = &#123;</span><br><span class="line">      path = "/var/run/vault-agent/vault-agent.token"</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cache &#123;</span><br><span class="line">  use_auto_auth_token = true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener "unix" &#123;</span><br><span class="line">  address = "/var/run/vault-agent/vault-agent.socket"</span><br><span class="line">  tls_disable = true</span><br><span class="line">&#125;</span><br><span class="line">listener "tcp" &#123;</span><br><span class="line">  address = "127.0.0.1:8200"</span><br><span class="line">  tls_disable = true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要创建的文件：并且保证 User=vault Group=vault 有读写权限这些文件</p><ul><li>/var/run/vault-agent/vault-agent.pid</li><li>/etc/vault.d/role_id</li><li>/etc/vault.d/secret_id</li><li>/var/run/vault-agent/vault-agent.token</li><li>/var/run/vault-agent/vault-agent.socket</li></ul><p>接下来我们就可以来测试一下，<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">systemctl start vault-agent </span><br><span class="line"></span><br><span class="line">systemctl status vault-agent</span><br><span class="line">root@ubuntu18-119:/etc/vault.d# systemctl status vault-agent</span><br><span class="line">● vault-agent.service - Vault agent</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/vault-agent.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Tue 2021-07-13 11:51:08 +08; 2h 32min ago</span><br><span class="line"> Main PID: 51688 (vault)</span><br><span class="line">    Tasks: 8 (limit: 4631)</span><br><span class="line">   CGroup: /system.slice/vault-agent.service</span><br><span class="line">           └─51688 /usr/bin/vault agent -log-level=info -config=/etc/vault.d/vault-agent.conf</span><br><span class="line"></span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]: 2021-07-13T14:20:48.288+0800 [INFO]  auth.handler: authenticating</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]: 2021-07-13T14:20:48.294+0800 [ERROR] auth.handler: error authenticating:</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   error=</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | Error making API request.</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   |</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | URL: PUT http://192.168.1.108:8200/v1/auth/approle/login</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | Code: 400. Errors:</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   |</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:   | * invalid secret id</span><br><span class="line">Jul 13 14:20:48 ubuntu18-119 vault[51688]:    backoff=4m2.47s</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 这是 token 过期了，最大期限应该是 token_max_ttl=30m ， 所以需要重新生成</span></span><br><span class="line">root@ubuntu18-108:~# vault write -f auth/approle/role/my-role/secret-id</span><br><span class="line">Key                   Value</span><br><span class="line">---                   -----</span><br><span class="line">secret_id             63859ef3-7906-7eff-0586-a4ebb97ab20c</span><br><span class="line">secret_id_accessor    3125d535-b357-097e-1a8d-68370f03327c</span><br><span class="line">secret_id_ttl         10m</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 把 secret_id 放入 /etc/vault.d/secret_id</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 vault agent</span></span><br><span class="line">systemctl restart  vault-agent</span><br><span class="line">root@ubuntu18-119:/etc/vault.d# systemctl status vault-agent</span><br><span class="line">● vault-agent.service - Vault agent</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/vault-agent.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Tue 2021-07-13 14:25:53 +08; 1s ago</span><br><span class="line"> Main PID: 128325 (vault)</span><br><span class="line">    Tasks: 7 (limit: 4631)</span><br><span class="line">   CGroup: /system.slice/vault-agent.service</span><br><span class="line">           └─128325 /usr/bin/vault agent -log-level=info -config=/etc/vault.d/vault-agent.conf</span><br><span class="line"></span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.962+0800 [INFO]  sink.file: file sink configured: path=/var/run/vault-agent/vault-agent.token mode=-rw-r-----</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.981+0800 [INFO]  auth.handler: starting auth handler</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.981+0800 [INFO]  auth.handler: authenticating</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.984+0800 [INFO]  sink.server: starting sink server</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.984+0800 [INFO]  template.server: starting template server</span><br><span class="line">Jul 13 14:25:53 ubuntu18-119 vault[128325]: 2021-07-13T14:25:53.984+0800 [INFO]  template.server: no templates found</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.000+0800 [INFO]  auth.handler: authentication successful, sending token to sinks</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.000+0800 [INFO]  auth.handler: starting renewal process</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.001+0800 [INFO]  sink.file: token written: path=/var/run/vault-agent/vault-agent.token</span><br><span class="line">Jul 13 14:25:54 ubuntu18-119 vault[128325]: 2021-07-13T14:25:54.008+0800 [INFO]  auth.handler: renewed auth token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">test</span></span></span><br><span class="line">root@ubuntu18-119:/etc/vault.d# curl  http://127.0.0.1:8200/v1/sys/health</span><br><span class="line">&#123;"initialized":true,"sealed":false,"standby":false,"performance_standby":false,"replication_performance_mode":"disabled","replication_dr_mode":"disabled","server_time_utc":1626158428,"version":"1.7.2","cluster_name":"vault-cluster-0618ae06","cluster_id":"feca826b-0ffd-838f-412d-0c6687feee60"&#125;</span><br><span class="line"></span><br><span class="line">root@ubuntu18-119:/etc/vault.d# curl  http://127.0.0.1:8200/v1/sys/leader</span><br><span class="line">&#123;"ha_enabled":true,"is_self":true,"active_time":"2021-07-13T02:11:43.591625814Z","leader_address":"http://192.168.64.3:8200","leader_cluster_address":"https://192.168.64.3:8201","performance_standby":false,"performance_standby_last_remote_wal":0,"raft_committed_index":13017,"raft_applied_index":13017&#125;</span><br></pre></td></tr></table></figure></p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在本地虚拟机环境搭建 vault cluster 实践。&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="nginx" scheme="http://feiyang233.club/tags/nginx/"/>
    
      <category term="hashicorp" scheme="http://feiyang233.club/tags/hashicorp/"/>
    
      <category term="security" scheme="http://feiyang233.club/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>DNS</title>
    <link href="http://feiyang233.club/post/dns/"/>
    <id>http://feiyang233.club/post/dns/</id>
    <published>2021-01-10T13:27:45.000Z</published>
    <updated>2021-06-11T01:03:15.869Z</updated>
    
    <content type="html"><![CDATA[<p>DNSMasq 搭建自己的DNS服务器<br><a id="more"></a></p><h1 id="Update-history"><a href="#Update-history" class="headerlink" title="Update history"></a>Update history</h1><p>2021-01-10 初稿。最近拼多多搞得太过分了，打工人们要联合起来呀</p><h1 id="Dnsmasq"><a href="#Dnsmasq" class="headerlink" title="Dnsmasq"></a>Dnsmasq</h1><p>为什么要安装 DNS 呢？ 因为上一篇 blog， 自定义的 domain 需要在每台机器上修改  hosts，有一点麻烦，干脆就直接在测试环境，搭建一个 DNS 服务器</p><h2 id="stop-systemd-resolve"><a href="#stop-systemd-resolve" class="headerlink" title="stop systemd-resolve"></a>stop systemd-resolve</h2><ul><li>ubuntu 上面 systemd-resolve 会修改 /etc/resolv.conf 详情请看 <a href="https://www.cnblogs.com/breezey/p/9155988.html" target="_blank" rel="noopener">https://www.cnblogs.com/breezey/p/9155988.html</a> </li><li>centos 上面 networkmanager 会修改 /etc/resolv.conf 这里有两种做法： </li></ul><ol><li>从源头上修改，这样每次上面 networkmanager 生成的话也是正确的 <a href="https://ma.ttias.be/centos-7-networkmanager-keeps-overwriting-etcresolv-conf/" target="_blank" rel="noopener">https://ma.ttias.be/centos-7-networkmanager-keeps-overwriting-etcresolv-conf/</a></li><li>禁止 networkmanager 修改 dns 参考 <a href="https://wiseindy.com/blog/linux/how-to-set-dns-in-centos-rhel-7-prevent-network-manager-from-overwriting-etc-resolv-conf/" target="_blank" rel="noopener">https://wiseindy.com/blog/linux/how-to-set-dns-in-centos-rhel-7-prevent-network-manager-from-overwriting-etc-resolv-conf/</a></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable systemd-resolved</span><br><span class="line">sudo systemctl stop systemd-resolved</span><br><span class="line"></span><br><span class="line">sudo rm /etc/resolv.conf</span><br><span class="line"></span><br><span class="line">echo nameserver 8.8.8.8 | sudo tee /etc/resolv.conf</span><br></pre></td></tr></table></figure><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install dnsmasq</span><br><span class="line"></span><br><span class="line">vim /etc/dnsmasq.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Listen on this specific port instead of the standard DNS port</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (53). Setting this to zero completely disables DNS <span class="keyword">function</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> leaving only DHCP and/or TFTP.</span></span><br><span class="line">port=53</span><br><span class="line"><span class="meta">#</span><span class="bash"> Never forward plain names (without a dot or domain part)</span></span><br><span class="line">domain-needed</span><br><span class="line"><span class="meta">#</span><span class="bash"> Never forward addresses <span class="keyword">in</span> the non-routed address spaces.</span></span><br><span class="line">bogus-priv</span><br><span class="line"><span class="meta">#</span><span class="bash"> By  default,  dnsmasq  will  send queries to any of the upstream</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> servers it knows about and tries to favour servers to are  known</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> to  be  up.  Uncommenting this forces dnsmasq to try each query</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> with  each  server  strictly  <span class="keyword">in</span>  the  order  they   appear   <span class="keyword">in</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/resolv.conf</span></span><br><span class="line">strict-order</span><br><span class="line"><span class="meta">#</span><span class="bash"> Set this (and domain: see below) <span class="keyword">if</span> you want to have a domain</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> automatically added to simple names <span class="keyword">in</span> a hosts-file.</span></span><br><span class="line">expand-hosts</span><br><span class="line"><span class="meta">#</span><span class="bash"> Set the domain <span class="keyword">for</span> dnsmasq. this is optional, but <span class="keyword">if</span> it is <span class="built_in">set</span>, it</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> does the following things.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1) Allows DHCP hosts to have fully qualified domain names, as long</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     as the domain part matches this setting.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2) Sets the <span class="string">"domain"</span> DHCP option thereby potentially setting the</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    domain of all systems configured by DHCP</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3) Provides the domain part <span class="keyword">for</span> <span class="string">"expand-hosts"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">domain=thekelleys.org.uk 这里的是主域名，方便在 /etc/hosts 配置的时候，只写前缀即可</span></span><br><span class="line">domain=feiyang.com</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set Liste address</span></span><br><span class="line">listen-address=127.0.0.1,192.168.17.5 # Set to Server IP for network responses</span><br></pre></td></tr></table></figure><h2 id="Adding-DNS-records"><a href="#Adding-DNS-records" class="headerlink" title="Adding DNS records"></a>Adding DNS records</h2><p>因为我们没有修改 resolv-file, 默认的就是 /etc/hosts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu20:/home/feiyang<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1 localhost</span><br><span class="line">127.0.1.1 ubuntu20</span><br><span class="line">192.168.17.3 gitlab.feiyang.com</span><br><span class="line">233.233.233.233 haha  <span class="comment">#因为有expand-hosts， 这里是 haha.feiyang.com</span></span><br><span class="line">1.1.1.1 free.dns.com</span><br><span class="line"><span class="comment"># The following lines are desirable for IPv6 capable hosts</span></span><br><span class="line">::1     ip6-localhost ip6-loopback</span><br><span class="line">fe00::0 ip6-localnet</span><br><span class="line">ff00::0 ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br></pre></td></tr></table></figure><p>重启 dnsmasq</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart dnsmasq</span><br></pre></td></tr></table></figure><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>Ubuntu 20 为 DNS 服务器, 用 Ubuntu18 和 centos7 来进行测试，结果如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18:/home/feiyang<span class="comment"># nslookup haha.feiyang.com</span></span><br><span class="line">Server:192.168.17.5</span><br><span class="line">Address:192.168.17.5<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Name:haha.feiyang.com</span><br><span class="line">Address: 233.233.233.233</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[jy576@centos7 ~]$ nslookup gitlab.feiyang.com</span><br><span class="line">Server:192.168.17.5</span><br><span class="line">Address:192.168.17.5<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Name:gitlab.feiyang.com</span><br><span class="line">Address: 192.168.17.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[jy576@centos7 ~]$ nslookup free.dns.com</span><br><span class="line">Server:192.168.17.5</span><br><span class="line">Address:192.168.17.5<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Name:free.dns.com</span><br><span class="line">Address: 1.1.1.1</span><br></pre></td></tr></table></figure></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://computingforgeeks.com/install-and-configure-dnsmasq-on-ubuntu-18-04-lts/" target="_blank" rel="noopener">https://computingforgeeks.com/install-and-configure-dnsmasq-on-ubuntu-18-04-lts/</a></li></ul><h1 id="DNS-takeover"><a href="#DNS-takeover" class="headerlink" title="DNS takeover"></a>DNS takeover</h1><p><img src="/img/misc/5.png" alt=""> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DNSMasq 搭建自己的DNS服务器&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="network" scheme="http://feiyang233.club/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>gitlab install and CI pipeline</title>
    <link href="http://feiyang233.club/post/gitlab/"/>
    <id>http://feiyang233.club/post/gitlab/</id>
    <published>2021-01-09T12:01:53.000Z</published>
    <updated>2021-07-13T00:51:56.523Z</updated>
    
    <content type="html"><![CDATA[<p>为了测试 gitlab CI pipeline， 从而在家里的台式机搭建了测试环境。<br><a id="more"></a><br>为什么进行这次实验？因为自己平时只是用到了 gitlab，它对于我来说是一个黑盒。<br>为了搞清楚 CI job 里面的一些 function 用法，自己搭建一套环境。一是方便实验，二是自己不能在公司的环境上实验，担心造成破坏。 </p><h1 id="Update-history"><a href="#Update-history" class="headerlink" title="Update history"></a>Update history</h1><p>2021-07-13 安利学 git 的网站 <a href="https://learngitbranching.js.org/?locale=zh_CN" target="_blank" rel="noopener">Learn Git Branching</a> 和 <a href="https://mp.weixin.qq.com/s/6i5v7yK1__S6j39v6jNWkw" target="_blank" rel="noopener">Git 命令太难学？我用一款游戏带你玩转它！</a><br>2021-05-24 终于认识到自己的膨胀了，倍感欣慰<br>2021-01-09 初稿，妹子什么时候才能好好学习呀</p><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><p>默认技能：</p><ul><li>docker， 虚拟机上安装 docker 的过程就省略了</li><li>DNS， 因为是自定义的域名，所以需要绑定在本地 hosts</li></ul><p>最开始 Ubuntu 机器只有 2 cpu 4GB， 安装 gitlab 非常卡顿， load 高到 40+， 增加配置后，顺利安装</p><table><thead><tr><th>Name</th><th>Operating system</th><th>CPU</th><th>RAM</th><th>Disk</th><th>IP</th></tr></thead><tbody><tr><td>gitlab-main</td><td>Ubuntu 18.04.5 LTS</td><td>4</td><td>8G</td><td>50G</td><td>192.168.64.3</td></tr><tr><td>gitlab-runner</td><td>CentOS 7.8.2003</td><td>2</td><td>2G</td><td>20G</td><td>192.168.64.4</td></tr><tr><td>gitlab-runner</td><td>Ubuntu 20.04.1 LTS</td><td>2</td><td>4G</td><td>20G</td><td>192.168.64.5</td></tr></tbody></table><h1 id="Install-gitlab"><a href="#Install-gitlab" class="headerlink" title="Install gitlab"></a>Install gitlab</h1><p>官方文档：<a href="https://docs.gitlab.com/" target="_blank" rel="noopener">https://docs.gitlab.com/</a></p><h2 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h2><p>本次实验，为了快速安装选择了 docker 模式。 <a href="https://docs.gitlab.com/omnibus/docker/README.html" target="_blank" rel="noopener">https://docs.gitlab.com/omnibus/docker/README.html</a></p><p>本地 <code>22</code> 端口被 SSH 占用了，所以改为了 <code>2222</code>，这里需要注意的是，我用的是 社区版本 <code>ce</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --detach \</span><br><span class="line">  --hostname gitlab.feiyang.com \</span><br><span class="line">  --publish 443:443 --publish 80:80 --publish 2222:22 \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  --restart always \</span><br><span class="line">  --volume <span class="variable">$GITLAB_HOME</span>/config:/etc/gitlab \</span><br><span class="line">  --volume <span class="variable">$GITLAB_HOME</span>/logs:/var/<span class="built_in">log</span>/gitlab \</span><br><span class="line">  --volume <span class="variable">$GITLAB_HOME</span>/data:/var/opt/gitlab \</span><br><span class="line">  gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure></p><p>如果还需要修改配置，可以 attach 到容器内部，进行修改。</p><p>例如修改 relative URL <a href="https://docs.gitlab.com/omnibus/settings/configuration.html#enable-relative-url-in-gitlab" target="_blank" rel="noopener">https://docs.gitlab.com/omnibus/settings/configuration.html#enable-relative-url-in-gitlab</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it gitlab bash</span><br><span class="line"></span><br><span class="line">vi /etc/gitlab/gitlab.rb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定host地址</span></span><br><span class="line">external_url <span class="string">'http://gitlab.feiyang.com'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置文件并重启服务</span></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure><br>第一次登陆，一定要以 IP 地址登陆，而不是用 localhost。 否则设置 root 新密码就会遇到错误 <strong>8 errors prohibited this user from being saved</strong><br>成功登陆网友以后，我创建了一个新用户，并且设置了 SSH Key，创建了一个 test repo</p><blockquote><p>在这里需要的注意的是，如果没有设置域名  <code>http://gitlab.feiyang.com</code> 那在repo 页面上 git clong 的 url 可能不对，导致无法解析并下载。</p></blockquote><h2 id="runner"><a href="#runner" class="headerlink" title="runner"></a>runner</h2><p>本次实验，为了快速安装选择了 docker 模式。 <a href="https://docs.gitlab.com/runner/install/docker.html" target="_blank" rel="noopener">https://docs.gitlab.com/runner/install/docker.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker volume create gitlab-runner-config</span><br><span class="line"></span><br><span class="line">docker run -d --name gitlab-runner --restart always \</span><br><span class="line">    -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">    -v gitlab-runner-config:/etc/gitlab-runner \</span><br><span class="line">    gitlab/gitlab-runner:latest</span><br></pre></td></tr></table></figure><p>最好先进入容器设置一下 extra_hosts = [“gitlab.feiyang.com:192.168.64.3”] (这里后文有详细介绍 config.toml 可以搜索关键词) 否则注册 runner 的时候，只能输入 IP<br>下一步就是注册，前提你需要去 gitlab 网页上 CI/CD section runner 详情页上获得 token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 jy576]<span class="comment"># docker run --rm -it -v gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:latest register</span></span><br><span class="line">Runtime platform                                    arch=amd64 os=linux pid=7 revision=943fc252 version=13.7.0</span><br><span class="line">Running <span class="keyword">in</span> system-mode.                            </span><br><span class="line">                                                   </span><br><span class="line">Enter the GitLab instance URL (<span class="keyword">for</span> example, https://gitlab.com/):</span><br><span class="line">http://gitlab.feiyang.com/</span><br><span class="line">Enter the registration token:</span><br><span class="line">kXmj4UA9Z2_NL2sa2Z6z</span><br><span class="line">Enter a description <span class="keyword">for</span> the runner:</span><br><span class="line">[43420abf216d]: centos7       </span><br><span class="line">Enter tags <span class="keyword">for</span> the runner (comma-separated):</span><br><span class="line">ci,ssh</span><br><span class="line">ERROR: Registering runner... failed                 runner=kXmj4UA9 status=couldn<span class="string">'t execute POST against http://gitlab.feiyang.com/api/v4/runners: Post http://gitlab.feiyang.com/api/v4/runners: dial tcp: lookup gitlab.feiyang.com on 8.8.8.8:53: no such host</span></span><br><span class="line"><span class="string">PANIC: Failed to register the runner. You may be having network problems. </span></span><br><span class="line"><span class="string">[root@centos7 jy576]# docker run --rm -it -v gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:latest register</span></span><br><span class="line"><span class="string">Runtime platform                                    arch=amd64 os=linux pid=8 revision=943fc252 version=13.7.0</span></span><br><span class="line"><span class="string">Running in system-mode.                            </span></span><br><span class="line"><span class="string">                                                   </span></span><br><span class="line"><span class="string">Enter the GitLab instance URL (for example, https://gitlab.com/):</span></span><br><span class="line"><span class="string">http://192.168.64.3/</span></span><br><span class="line"><span class="string">Enter the registration token:</span></span><br><span class="line"><span class="string">kXmj4UA9Z2_NL2sa2Z6z</span></span><br><span class="line"><span class="string">Enter a description for the runner:</span></span><br><span class="line"><span class="string">[a7068d34147b]: centos7</span></span><br><span class="line"><span class="string">Enter tags for the runner (comma-separated):</span></span><br><span class="line"><span class="string">ci,ssh</span></span><br><span class="line"><span class="string">Registering runner... succeeded                     runner=kXmj4UA9</span></span><br><span class="line"><span class="string">Enter an executor: custom, virtualbox, docker+machine, docker, docker-ssh, parallels, shell, ssh, docker-ssh+machine, kubernetes:</span></span><br><span class="line"><span class="string">docker</span></span><br><span class="line"><span class="string">Enter the default Docker image (for example, ruby:2.6):</span></span><br><span class="line"><span class="string">python:3.9.1-slim-buster</span></span><br><span class="line"><span class="string">Runner registered successfully. Feel free to start it, but if it'</span>s running already the config should be automatically reloaded! </span><br><span class="line">[root@centos7 jy576]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                         COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">926cd5798468   gitlab/gitlab-runner:latest   <span class="string">"/usr/bin/dumb-init …"</span>   7 minutes ago   Up 7 minutes             gitlab-runner</span><br></pre></td></tr></table></figure><p>回到网页端，我们需要修改一下 runner 设置，勾选上 Run untagged jobs<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210109230805.png" alt=""></p><p>因为我们是自定义域名，所以我们需要在 gitlab-runner 里面进行设置，否则 CI job 无法 pull<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the "docker" executor</span><br><span class="line">00:04</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f for python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:01</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting source from Git repository</span><br><span class="line">00:00</span><br><span class="line">Fetching changes with git depth set to 50...</span><br><span class="line">Initialized empty Git repository in /builds/feiyang/test/.git/</span><br><span class="line">Created fresh repository.</span><br><span class="line">fatal: unable to access 'http://gitlab.feiyang.com/feiyang/test.git/': Could not resolve host: gitlab.feiyang.com</span><br><span class="line">ERROR: Job failed: exit code 1</span><br></pre></td></tr></table></figure><br>在这里，我们需要在 runner 里面定义好 domain gitlab.feiyang.com<br>参考文档： <a href="https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runnersdocker-section" target="_blank" rel="noopener">https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runnersdocker-section</a><br>extra_hosts: Specify hosts that should be defined in container environment<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 jy576]# docker exec -it gitlab-runner bash</span><br><span class="line">root@926cd5798468:/# cat /etc/gitlab-runner/config.toml </span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = "centos7"</span><br><span class="line">  url = "http://192.168.64.3/"</span><br><span class="line">  token = "FSX9yRiUGxok94hMPYdt"</span><br><span class="line">  executor = "docker"</span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line">    [runners.cache.azure]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = false</span><br><span class="line">    image = "python:3.9.1-slim-buster"</span><br><span class="line">    privileged = true</span><br><span class="line">    disable_entrypoint_overwrite = false</span><br><span class="line">    oom_kill_disable = false</span><br><span class="line">    disable_cache = false</span><br><span class="line">    volumes = ["/cache"]</span><br><span class="line">    shm_size = 0</span><br><span class="line">    extra_hosts   = ["gitlab.feiyang.com:192.168.64.3"]</span><br></pre></td></tr></table></figure></p><h1 id="Test-CI"><a href="#Test-CI" class="headerlink" title="Test CI"></a>Test CI</h1><p>gitlab 和 runner 安装完成以后，我们就可以进行测试</p><h2 id="Job-artifacts"><a href="#Job-artifacts" class="headerlink" title="Job artifacts"></a>Job artifacts</h2><p>文档：<a href="https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#defining-artifacts-in-gitlab-ciyml" target="_blank" rel="noopener">https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#defining-artifacts-in-gitlab-ciyml</a></p><p>test repo 目录结构如下<br>├── .gitlab-ci.yml<br>├── lint.py<br>└── README.md</p><p>lint.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.chdir(os.path.dirname(__file__))</span><br><span class="line">print(<span class="string">"feiyang test CI"</span>)</span><br><span class="line">print(os.getcwd())</span><br></pre></td></tr></table></figure></p><p>.gitlab-ci.yml<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">lint</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">image:</span> <span class="attr">python:3.9.1-slim-buster</span></span><br><span class="line"></span><br><span class="line"><span class="attr">check_path:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">lint</span></span><br><span class="line"><span class="attr">  before_script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">pwd</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME</span> <span class="string">&amp;&amp;</span> <span class="string">python</span> <span class="string">lint.py</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_ami:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  before_script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">apt</span> <span class="string">update</span> <span class="string">&amp;&amp;</span> <span class="string">apt</span> <span class="string">install</span> <span class="bullet">-y</span> <span class="string">curl</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">echo</span> <span class="string">$CI_JOB_ID</span> <span class="string">&gt;&gt;</span> <span class="string">ip.json</span> <span class="string">&amp;&amp;</span> <span class="string">curl</span> <span class="string">ipinfo.io</span> <span class="string">&gt;&gt;</span> <span class="string">ip.json</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    expire_in:</span> <span class="number">1</span> <span class="string">year</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ip.json</span></span><br><span class="line"></span><br><span class="line"><span class="attr">read_artifacts:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span></span><br><span class="line"><span class="attr">  before_script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">pwd</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">cat</span> <span class="string">ip.json</span></span><br></pre></td></tr></table></figure></p><p>CI 结果</p><h3 id="lint"><a href="#lint" class="headerlink" title="lint"></a>lint</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the <span class="string">"docker"</span> executor</span><br><span class="line">00:05</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f <span class="keyword">for</span> python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:00</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting <span class="built_in">source</span> from Git repository</span><br><span class="line">00:01</span><br><span class="line">Fetching changes with git depth <span class="built_in">set</span> to 50...</span><br><span class="line">Reinitialized existing Git repository <span class="keyword">in</span> /builds/feiyang/<span class="built_in">test</span>/.git/</span><br><span class="line">Checking out b60b95c1 as master...</span><br><span class="line">Removing ip.json</span><br><span class="line">Skipping Git submodules setup</span><br><span class="line">Executing <span class="string">"step_script"</span> stage of the job script</span><br><span class="line">00:00</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/builds/feiyang/<span class="built_in">test</span></span><br><span class="line">$ <span class="built_in">cd</span> /builds/<span class="variable">$CI_PROJECT_NAMESPACE</span>/<span class="variable">$CI_PROJECT_NAME</span> &amp;&amp; python lint.py</span><br><span class="line">feiyang <span class="built_in">test</span> CI</span><br><span class="line">/builds/feiyang/<span class="built_in">test</span></span><br><span class="line">Job succeeded</span><br></pre></td></tr></table></figure><h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the <span class="string">"docker"</span> executor</span><br><span class="line">00:04</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f <span class="keyword">for</span> python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:00</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting <span class="built_in">source</span> from Git repository</span><br><span class="line">00:01</span><br><span class="line">Fetching changes with git depth <span class="built_in">set</span> to 50...</span><br><span class="line">Reinitialized existing Git repository <span class="keyword">in</span> /builds/feiyang/<span class="built_in">test</span>/.git/</span><br><span class="line">Checking out b60b95c1 as master...</span><br><span class="line">Skipping Git submodules setup</span><br><span class="line">Executing <span class="string">"step_script"</span> stage of the job script</span><br><span class="line">00:05</span><br><span class="line">$ apt update &amp;&amp; apt install -y curl</span><br><span class="line">WARNING: apt does not have a stable CLI interface. Use with caution <span class="keyword">in</span> scripts.</span><br><span class="line">Get:1 http://security.debian.org/debian-security buster/updates InRelease [65.4 kB]</span><br><span class="line">Get:2 http://deb.debian.org/debian buster InRelease [121 kB]</span><br><span class="line">Get:3 http://deb.debian.org/debian buster-updates InRelease [51.9 kB]</span><br><span class="line">Get:4 http://security.debian.org/debian-security buster/updates/main amd64 Packages [260 kB]</span><br><span class="line">Get:5 http://deb.debian.org/debian buster/main amd64 Packages [7907 kB]</span><br><span class="line">Get:6 http://deb.debian.org/debian buster-updates/main amd64 Packages [7860 B]</span><br><span class="line">Fetched 8414 kB <span class="keyword">in</span> 2s (4381 kB/s)</span><br><span class="line">Reading package lists...</span><br><span class="line">Building dependency tree...</span><br><span class="line">Reading state information...</span><br><span class="line">2 packages can be upgraded. Run <span class="string">'apt list --upgradable'</span> to see them.</span><br><span class="line">WARNING: apt does not have a stable CLI interface. Use with caution <span class="keyword">in</span> scripts.</span><br><span class="line">Reading package lists...</span><br><span class="line">Building dependency tree...</span><br><span class="line">Reading state information...</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  krb5-locales libcurl4 libgssapi-krb5-2 libk5crypto3 libkeyutils1 libkrb5-3</span><br><span class="line">  libkrb5support0 libldap-2.4-2 libldap-common libnghttp2-14 libpsl5 librtmp1</span><br><span class="line">  libsasl2-2 libsasl2-modules libsasl2-modules-db libssh2-1 publicsuffix</span><br><span class="line">Suggested packages:</span><br><span class="line">  krb5-doc krb5-user libsasl2-modules-gssapi-mit</span><br><span class="line">  | libsasl2-modules-gssapi-heimdal libsasl2-modules-ldap libsasl2-modules-otp</span><br><span class="line">  libsasl2-modules-sql</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  curl krb5-locales libcurl4 libgssapi-krb5-2 libk5crypto3 libkeyutils1</span><br><span class="line">  libkrb5-3 libkrb5support0 libldap-2.4-2 libldap-common libnghttp2-14 libpsl5</span><br><span class="line">  librtmp1 libsasl2-2 libsasl2-modules libsasl2-modules-db libssh2-1</span><br><span class="line">  publicsuffix</span><br><span class="line">0 upgraded, 18 newly installed, 0 to remove and 2 not upgraded.</span><br><span class="line">Need to get 2470 kB of archives.</span><br><span class="line">After this operation, 5837 kB of additional disk space will be used.</span><br><span class="line">Get:1 http://deb.debian.org/debian buster/main amd64 krb5-locales all 1.17-3+deb10u1 [95.4 kB]</span><br><span class="line">Get:2 http://deb.debian.org/debian buster/main amd64 libkeyutils1 amd64 1.6-6 [15.0 kB]</span><br><span class="line">Get:3 http://deb.debian.org/debian buster/main amd64 libkrb5support0 amd64 1.17-3+deb10u1 [65.8 kB]</span><br><span class="line">Get:4 http://deb.debian.org/debian buster/main amd64 libk5crypto3 amd64 1.17-3+deb10u1 [122 kB]</span><br><span class="line">Get:5 http://deb.debian.org/debian buster/main amd64 libkrb5-3 amd64 1.17-3+deb10u1 [369 kB]</span><br><span class="line">Get:6 http://deb.debian.org/debian buster/main amd64 libgssapi-krb5-2 amd64 1.17-3+deb10u1 [158 kB]</span><br><span class="line">Get:7 http://deb.debian.org/debian buster/main amd64 libsasl2-modules-db amd64 2.1.27+dfsg-1+deb10u1 [69.1 kB]</span><br><span class="line">Get:8 http://deb.debian.org/debian buster/main amd64 libsasl2-2 amd64 2.1.27+dfsg-1+deb10u1 [106 kB]</span><br><span class="line">Get:9 http://deb.debian.org/debian buster/main amd64 libldap-common all 2.4.47+dfsg-3+deb10u4 [89.8 kB]</span><br><span class="line">Get:10 http://deb.debian.org/debian buster/main amd64 libldap-2.4-2 amd64 2.4.47+dfsg-3+deb10u4 [224 kB]</span><br><span class="line">Get:11 http://deb.debian.org/debian buster/main amd64 libnghttp2-14 amd64 1.36.0-2+deb10u1 [85.0 kB]</span><br><span class="line">Get:12 http://deb.debian.org/debian buster/main amd64 libpsl5 amd64 0.20.2-2 [53.7 kB]</span><br><span class="line">Get:13 http://deb.debian.org/debian buster/main amd64 librtmp1 amd64 2.4+20151223.gitfa8646d.1-2 [60.5 kB]</span><br><span class="line">Get:14 http://deb.debian.org/debian buster/main amd64 libssh2-1 amd64 1.8.0-2.1 [140 kB]</span><br><span class="line">Get:15 http://deb.debian.org/debian buster/main amd64 libcurl4 amd64 7.64.0-4+deb10u1 [331 kB]</span><br><span class="line">Get:16 http://deb.debian.org/debian buster/main amd64 curl amd64 7.64.0-4+deb10u1 [264 kB]</span><br><span class="line">Get:17 http://deb.debian.org/debian buster/main amd64 libsasl2-modules amd64 2.1.27+dfsg-1+deb10u1 [104 kB]</span><br><span class="line">Get:18 http://deb.debian.org/debian buster/main amd64 publicsuffix all 20190415.1030-1 [116 kB]</span><br><span class="line">debconf: delaying package configuration, since apt-utils is not installed</span><br><span class="line">Fetched 2470 kB <span class="keyword">in</span> 0s (5707 kB/s)</span><br><span class="line">Selecting previously unselected package krb5-locales.</span><br><span class="line">(Reading database ... 6829 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../00-krb5-locales_1.17-3+deb10u1_all.deb ...</span><br><span class="line">Unpacking krb5-locales (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libkeyutils1:amd64.</span><br><span class="line">Preparing to unpack .../01-libkeyutils1_1.6-6_amd64.deb ...</span><br><span class="line">Unpacking libkeyutils1:amd64 (1.6-6) ...</span><br><span class="line">Selecting previously unselected package libkrb5support0:amd64.</span><br><span class="line">Preparing to unpack .../02-libkrb5support0_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libkrb5support0:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libk5crypto3:amd64.</span><br><span class="line">Preparing to unpack .../03-libk5crypto3_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libk5crypto3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libkrb5-3:amd64.</span><br><span class="line">Preparing to unpack .../04-libkrb5-3_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libkrb5-3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libgssapi-krb5-2:amd64.</span><br><span class="line">Preparing to unpack .../05-libgssapi-krb5-2_1.17-3+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libgssapi-krb5-2:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libsasl2-modules-db:amd64.</span><br><span class="line">Preparing to unpack .../06-libsasl2-modules-db_2.1.27+dfsg-1+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libsasl2-modules-db:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libsasl2-2:amd64.</span><br><span class="line">Preparing to unpack .../07-libsasl2-2_2.1.27+dfsg-1+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libsasl2-2:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libldap-common.</span><br><span class="line">Preparing to unpack .../08-libldap-common_2.4.47+dfsg-3+deb10u4_all.deb ...</span><br><span class="line">Unpacking libldap-common (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Selecting previously unselected package libldap-2.4-2:amd64.</span><br><span class="line">Preparing to unpack .../09-libldap-2.4-2_2.4.47+dfsg-3+deb10u4_amd64.deb ...</span><br><span class="line">Unpacking libldap-2.4-2:amd64 (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Selecting previously unselected package libnghttp2-14:amd64.</span><br><span class="line">Preparing to unpack .../10-libnghttp2-14_1.36.0-2+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libnghttp2-14:amd64 (1.36.0-2+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libpsl5:amd64.</span><br><span class="line">Preparing to unpack .../11-libpsl5_0.20.2-2_amd64.deb ...</span><br><span class="line">Unpacking libpsl5:amd64 (0.20.2-2) ...</span><br><span class="line">Selecting previously unselected package librtmp1:amd64.</span><br><span class="line">Preparing to unpack .../12-librtmp1_2.4+20151223.gitfa8646d.1-2_amd64.deb ...</span><br><span class="line">Unpacking librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2) ...</span><br><span class="line">Selecting previously unselected package libssh2-1:amd64.</span><br><span class="line">Preparing to unpack .../13-libssh2-1_1.8.0-2.1_amd64.deb ...</span><br><span class="line">Unpacking libssh2-1:amd64 (1.8.0-2.1) ...</span><br><span class="line">Selecting previously unselected package libcurl4:amd64.</span><br><span class="line">Preparing to unpack .../14-libcurl4_7.64.0-4+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libcurl4:amd64 (7.64.0-4+deb10u1) ...</span><br><span class="line">Selecting previously unselected package curl.</span><br><span class="line">Preparing to unpack .../15-curl_7.64.0-4+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking curl (7.64.0-4+deb10u1) ...</span><br><span class="line">Selecting previously unselected package libsasl2-modules:amd64.</span><br><span class="line">Preparing to unpack .../16-libsasl2-modules_2.1.27+dfsg-1+deb10u1_amd64.deb ...</span><br><span class="line">Unpacking libsasl2-modules:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Selecting previously unselected package publicsuffix.</span><br><span class="line">Preparing to unpack .../17-publicsuffix_20190415.1030-1_all.deb ...</span><br><span class="line">Unpacking publicsuffix (20190415.1030-1) ...</span><br><span class="line">Setting up libkeyutils1:amd64 (1.6-6) ...</span><br><span class="line">Setting up libpsl5:amd64 (0.20.2-2) ...</span><br><span class="line">Setting up libsasl2-modules:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Setting up libnghttp2-14:amd64 (1.36.0-2+deb10u1) ...</span><br><span class="line">Setting up krb5-locales (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libldap-common (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Setting up libkrb5support0:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libsasl2-modules-db:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Setting up librtmp1:amd64 (2.4+20151223.gitfa8646d.1-2) ...</span><br><span class="line">Setting up libk5crypto3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libsasl2-2:amd64 (2.1.27+dfsg-1+deb10u1) ...</span><br><span class="line">Setting up libssh2-1:amd64 (1.8.0-2.1) ...</span><br><span class="line">Setting up libkrb5-3:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up publicsuffix (20190415.1030-1) ...</span><br><span class="line">Setting up libldap-2.4-2:amd64 (2.4.47+dfsg-3+deb10u4) ...</span><br><span class="line">Setting up libgssapi-krb5-2:amd64 (1.17-3+deb10u1) ...</span><br><span class="line">Setting up libcurl4:amd64 (7.64.0-4+deb10u1) ...</span><br><span class="line">Setting up curl (7.64.0-4+deb10u1) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> libc-bin (2.28-10) ...</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$CI_JOB_ID</span> &gt;&gt; ip.json &amp;&amp; curl ipinfo.io &gt;&gt; ip.json</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   312  100   312    0     0   1362      0 --:--:-- --:--:-- --:--:--  1362</span><br><span class="line">Uploading artifacts <span class="keyword">for</span> successful job</span><br><span class="line">00:00</span><br><span class="line">Uploading artifacts...</span><br><span class="line">ip.json: found 1 matching files and directories    </span><br><span class="line">Uploading artifacts as <span class="string">"archive"</span> to coordinator... ok  id=14 responseStatus=201 Created token=AzTM9Cfs</span><br><span class="line">Job succeeded</span><br></pre></td></tr></table></figure><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Running with gitlab-runner 13.7.0 (943fc252)</span><br><span class="line">  on centos7 FSX9yRiU</span><br><span class="line">Preparing the <span class="string">"docker"</span> executor</span><br><span class="line">00:04</span><br><span class="line">Using Docker executor with image python:3.9.1-slim-buster ...</span><br><span class="line">Pulling docker image python:3.9.1-slim-buster ...</span><br><span class="line">Using docker image sha256:b55839ea7a0e9bb534237d00558cb96dce4013bf7f1092966fe0e27e98f8179f <span class="keyword">for</span> python:3.9.1-slim-buster with digest python@sha256:4d92968b26bb6b7b62d957244de86fc1054f03793577d49e85c00864eb03ca07 ...</span><br><span class="line">Preparing environment</span><br><span class="line">00:00</span><br><span class="line">Running on runner-fsx9yriu-project-2-concurrent-0 via 926cd5798468...</span><br><span class="line">Getting <span class="built_in">source</span> from Git repository</span><br><span class="line">00:01</span><br><span class="line">Fetching changes with git depth <span class="built_in">set</span> to 50...</span><br><span class="line">Reinitialized existing Git repository <span class="keyword">in</span> /builds/feiyang/<span class="built_in">test</span>/.git/</span><br><span class="line">Checking out b60b95c1 as master...</span><br><span class="line">Removing ip.json</span><br><span class="line">Skipping Git submodules setup</span><br><span class="line">Downloading artifacts</span><br><span class="line">00:00</span><br><span class="line">Downloading artifacts <span class="keyword">for</span> build_ami (14)...</span><br><span class="line">Downloading artifacts from coordinator... ok        id=14 responseStatus=200 OK token=AzTM9Cfs</span><br><span class="line">Executing <span class="string">"step_script"</span> stage of the job script</span><br><span class="line">00:00</span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/builds/feiyang/<span class="built_in">test</span></span><br><span class="line">$ cat ip.json</span><br><span class="line">14</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"ip"</span>: <span class="string">"x.x.x.x"</span>,</span><br><span class="line">  <span class="string">"hostname"</span>: <span class="string">"singnet.com.sg"</span>,</span><br><span class="line">  <span class="string">"city"</span>: <span class="string">"Singapore"</span>,</span><br><span class="line">  <span class="string">"region"</span>: <span class="string">"Singapore"</span>,</span><br><span class="line">  <span class="string">"country"</span>: <span class="string">"SG"</span>,</span><br><span class="line">  <span class="string">"loc"</span>: <span class="string">"1,103"</span>,</span><br><span class="line">  <span class="string">"org"</span>: <span class="string">"AS9506 Singtel Fibre Broadband"</span>,</span><br><span class="line">  <span class="string">"postal"</span>: <span class="string">"048508"</span>,</span><br><span class="line">  <span class="string">"timezone"</span>: <span class="string">"Asia/Singapore"</span>,</span><br><span class="line">  <span class="string">"readme"</span>: <span class="string">"https://ipinfo.io/missingauth"</span></span><br><span class="line">&#125;</span><br><span class="line">Job succeeded</span><br></pre></td></tr></table></figure><blockquote><p>总结 artifacts，前一个 stage 生存的文件，以 artifacts 保存下来，给下一个 stage 使用</p></blockquote><h1 id="CI-CD"><a href="#CI-CD" class="headerlink" title="CI/CD"></a>CI/CD</h1><h2 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h2><ul><li>先看 <a href="https://juejin.cn/post/6876816474887946253" target="_blank" rel="noopener">docker:latest 和 docker:dind 镜像区别</a></li><li>官网文档 <a href="https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-to-build-docker-images" target="_blank" rel="noopener">Use Docker to build Docker images</a></li><li><a href="https://docs.gitlab.com/ee/ci/services/#passing-cicd-variables-to-services" target="_blank" rel="noopener">CI/CD services</a> 一句话，service 就是 CI 步骤里面需要的额外服务，比如 MySQL， redis， 或者 docker engine，不懂看完这一节，保证你会明白</li><li><a href="https://docs.gitlab.com/ee/ci/services/#passing-cicd-variables-to-services" target="_blank" rel="noopener">Passing CI/CD variables to services</a> 这个是非常重要的， 因为 CI 的 variables 是不能自动传入到 services 的容器环境</li></ul><h3 id="dind"><a href="#dind" class="headerlink" title="dind"></a>dind</h3><p>dind docker in docker, 在 docker 里面运行 docker，套娃。 我在工作上遇到了，用 gitlab CI docker build image， 我们先看下面的一段 ci.yml<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ------------- sleep 方便检测容器 -----------------</span></span><br><span class="line"><span class="attr">build_docker:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">docker:latest</span></span><br><span class="line"><span class="attr">  variables:</span></span><br><span class="line"><span class="attr">    DOCKER_HOST:</span> <span class="attr">tcp://docker:2375</span></span><br><span class="line">    <span class="comment"># This instructs Docker not to start over TLS.</span></span><br><span class="line"><span class="attr">    DOCKER_TLS_CERTDIR:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  before_script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">apk</span> <span class="string">add</span> <span class="bullet">--no-cache</span> <span class="string">curl</span> <span class="string">jq</span> <span class="string">python3</span> <span class="string">py3-pip</span> <span class="string">git</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">head</span> <span class="bullet">-1</span> <span class="string">/proc/self/cgroup|cut</span> <span class="bullet">-d/</span> <span class="bullet">-f3</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">docker</span> <span class="string">info</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">env</span></span><br><span class="line"><span class="attr">  services:</span></span><br><span class="line"><span class="attr">    - docker:</span><span class="string">dind</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">head</span> <span class="bullet">-1</span> <span class="string">/proc/self/cgroup|cut</span> <span class="bullet">-d/</span> <span class="bullet">-f3</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">env</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">docker</span> <span class="string">build</span> <span class="bullet">-t</span> <span class="string">sre-turtle</span> <span class="string">.</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">sleep</span> <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------- 测试 docker login 和 push ----------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build_docker:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">docker:latest</span></span><br><span class="line"><span class="attr">  variables:</span></span><br><span class="line"><span class="attr">    DOCKER_HOST:</span> <span class="attr">tcp://docker:2375</span></span><br><span class="line">    <span class="comment"># This instructs Docker not to start over TLS.</span></span><br><span class="line"><span class="attr">    DOCKER_TLS_CERTDIR:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  before_script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">$DOCKERPASS</span> <span class="string">| docker login --username $DOCKERUSER --password-stdin</span></span><br><span class="line"><span class="string"></span><span class="attr">  services:</span></span><br><span class="line"><span class="attr">    - docker:</span><span class="string">dind</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">export</span> <span class="string">VERSION=$&#123;CI_JOB_ID&#125;_$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">| head -c 8)</span></span><br><span class="line"><span class="string">    - docker build -t sre-turtle .</span></span><br><span class="line"><span class="string">    - docker tag sre-turtle:latest $DOCKERUSER/turtle:$VERSION</span></span><br><span class="line"><span class="string">    - docker push $DOCKERUSER/turtle:$VERSION</span></span><br></pre></td></tr></table></figure><br>上面这一段代码的意思：</p><ol><li>启动一个容器1 docker:latest 开始进行 CI</li><li>同时启动一个 service 运行在容器2 docker:dind 里面，service 生命周期仅限于 build_docker 这一步</li><li>当容器1 运行 docker build 的时候，容器1 会自动调用容器2 的 docker engine 。 打一个比方， 容器1 好比你电脑的命令行，容器2 好比你电脑上运行的 docker，当我们在电脑上运行  docker build ， 实际上也是去调用 电脑上运行的 docker 来 build image</li><li>补充知识 <a href="https://docs.docker.com/network/links/" target="_blank" rel="noopener">两容器之间的连接</a></li><li>测试 docker login 和 push 的成果 <a href="https://hub.docker.com/r/feiyang233/turtle" target="_blank" rel="noopener">https://hub.docker.com/r/feiyang233/turtle</a></li></ol><p>下图就很清楚的解释了 gitlab-runner 在运行上面这段代码时，容器的整体情况，会创建 2 个容器，一个负责 CI script， 一个负责 docker engine<br><img src="/img/vm/19.png" alt=""> </p><p>为了更有说服力， 我们也亲自 SSH 到机器上面去验证<br>这里 docker:latest 运行所有的 script<br><img src="/img/vm/20.png" alt=""> </p><p>这里 docker:dind 运行 docker engine ， 对外提供服务端口 2375<br><img src="/img/vm/21.png" alt=""> </p><p>总结图，可以看到 build image 是存放在 docker engine, 在 CI  shell 运行 docker images 可以调用 API 检查<br><img src="/img/vm/22.png" alt=""> </p><h3 id="build-image"><a href="#build-image" class="headerlink" title="build image"></a>build image</h3><p>如果在构建镜像的过程中，需要访问一个私有的仓库 <a href="https://stackoverflow.com/questions/55929417/how-to-securely-git-clone-pip-install-a-private-repository-into-my-docker-image" target="_blank" rel="noopener">How to securely git clone/pip install a private repository into my docker image?</a><br>好消息！ docker 官网已经有了答案 <a href="https://docs.docker.com/develop/develop-images/build_enhancements/#using-ssh-to-access-private-data-in-builds" target="_blank" rel="noopener">Using SSH to access private data in builds</a>。但是官网的文档真的不够详细，还是要参考这一细节 <a href="https://yeasy.gitbook.io/docker_practice/buildx/buildkit#run-mount-type-ssh" target="_blank" rel="noopener">BuildKit 镜像构建</a>。看一眼 <a href="https://www.huaweicloud.com/articles/e76e0af0038321951fc8e4f16e48b417.html" target="_blank" rel="noopener">Docker 一篇文章带你理解Dockerfile</a><br>安全的办法是采用 ssh key 访问:</p><ul><li><a href="https://docs.gitlab.com/ee/ssh/#generate-an-ssh-key-pair" target="_blank" rel="noopener">Generate an SSH key pair</a> <del>OpenSSH 6.5 introduced ED25519 SSH keys in 2014 and they should be available on most operating systems.</del>  ED25519 有坑！见文末</li><li><a href="https://pythonspeed.com/articles/docker-build-secrets/" target="_blank" rel="noopener">Don’t leak your Docker image’s build secrets</a></li><li><a href="https://docs.gitlab.com/ee/user/project/deploy_keys/#differences-between-deploy-keys-and-deploy-tokens" target="_blank" rel="noopener">Differences between deploy keys and deploy tokens</a></li><li><a href="https://docs.gitlab.com/ee/ci/variables/#cicd-variable-types" target="_blank" rel="noopener">用 file type 存 key 到 CI/CD variable 里面</a></li></ul><p>如下图所示，当我们在构建镜像的时候，实际上是 Dockerfile 指定的那一个镜像(图中是 python的镜像 )去执行 git clone 或者 pip install, 为了不让 SSH key 存在于我们的镜像中， 确保安全第一，我们必须用新版 docker 提供的 BuildKit， 下一代的镜像构建组件。</p><ul><li>在容器1 运行一个 eval $(ssh-agent)， CI 容器1 中有 SSH key (gitlab deploy key)</li><li>容器1 通过 docker –ssh default=$SSH_AUTH_SOCK 配置好  allow the Docker Engine to forward SSH agent connections. </li><li>在 Dockerfile 构建的步骤里，哪一步需要 SSH 代理转发， 就挂载 ssh， RUN –mount=type=ssh &lt;执行命令&gt;</li></ul><p><img src="/img/vm/23.png" alt=""> </p><p>完整的实验代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># syntax=docker/dockerfile:1.2</span></span><br><span class="line"></span><br><span class="line">FROM python:3.9.1-slim-buster</span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="comment">#COPY requirements.txt requirements.txt</span></span><br><span class="line">COPY . .</span><br><span class="line">RUN apt update &amp;&amp; apt install -y openssh-client git dnsutils</span><br><span class="line">RUN mkdir -p -m 0700 ~/.ssh &amp;&amp; <span class="built_in">echo</span> <span class="string">"[192.168.64.3]:2222 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAs5kvb4yuBB1C5yJfyav7F13MCP5Z4BJpCYq403tz2G/eyUMzJUzW+/FIIlLAffnLZxqkLpKZterXD2Ahn9KvA="</span> &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line"><span class="comment"># RUN mkdir -p -m 0700 ~/.ssh &amp;&amp; ssh-keyscan gitlab.feiyang.com &gt;&gt; ~/.ssh/known_hosts 但是我自己自定义的域名，无法解析</span></span><br><span class="line">RUN nslookup gitlab.feiyang.com</span><br><span class="line">RUN --mount=<span class="built_in">type</span>=ssh git <span class="built_in">clone</span> ssh://git@192.168.64.3:2222/feiyang/test.git</span><br><span class="line"></span><br><span class="line">RUN ls &amp;&amp; env &amp;&amp; apt-get purge -y --auto-remove git</span><br><span class="line"></span><br><span class="line">CMD [ <span class="string">"python3"</span>, <span class="string">"-m"</span> , <span class="string">"flask"</span>, <span class="string">"run"</span>, <span class="string">"--host=0.0.0.0"</span>]</span><br></pre></td></tr></table></figure></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">build_docker:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">docker:latest</span></span><br><span class="line"><span class="attr">  variables:</span></span><br><span class="line"><span class="attr">    DOCKER_HOST:</span> <span class="attr">tcp://docker:2375</span></span><br><span class="line">    <span class="comment"># This instructs Docker not to start over TLS.</span></span><br><span class="line"><span class="attr">    DOCKER_TLS_CERTDIR:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">    PASS_VAR:</span> <span class="string">$FEIYANG</span></span><br><span class="line"><span class="attr">  before_script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">apk</span> <span class="string">add</span> <span class="bullet">--no-cache</span> <span class="string">curl</span> <span class="string">jq</span> <span class="string">python3</span> <span class="string">py3-pip</span> <span class="string">git</span> <span class="string">bind-tools</span> <span class="string">openssh-client</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">$DOCKERPASS</span> <span class="string">| docker login --username $DOCKERUSER --password-stdin</span></span><br><span class="line"><span class="string">    - mkdir -p -m 0700 ~/.ssh</span></span><br><span class="line"><span class="string">    #- 这里本来应该是 ssh-keyscan gitlab.feiyang.com &gt;&gt; ~/.ssh/known_hosts 但是我自己自定义的域名，无法解析</span></span><br><span class="line"><span class="string">    - echo "[192.168.64.3]:2222 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAs5kvb4yuBB1C5yJfyav7F13MCP5Z4BJpCYq403tz2G/eyUMzJUzW+/FIIlLAffnLZxqkLpKZterXD2Ahn9KvA=" &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">    - chmod 600 $SSH_TEST</span></span><br><span class="line"><span class="string">    - cat /etc/hosts</span></span><br><span class="line"><span class="string">    - nslookup gitlab.feiyang.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span><span class="attr">  services:</span></span><br><span class="line"><span class="attr">    - docker:</span><span class="string">dind</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">export</span> <span class="string">VERSION=$&#123;CI_JOB_ID&#125;_$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">| head -c 8)</span></span><br><span class="line"><span class="string">    - export DOCKER_BUILDKIT=1</span></span><br><span class="line"><span class="string">    - eval $(ssh-agent)</span></span><br><span class="line"><span class="string">    - ssh-add $SSH_TEST</span></span><br><span class="line"><span class="string">    - docker build -t sre-turtle  --ssh default=$SSH_AUTH_SOCK .</span></span><br><span class="line"><span class="string">    - docker tag sre-turtle:latest $DOCKERUSER/turtle:$VERSION</span></span><br><span class="line"><span class="string">    - docker push $DOCKERUSER/turtle:$VERSION</span></span><br></pre></td></tr></table></figure><p>最后的结果 <a href="https://hub.docker.com/layers/150841970/feiyang233/turtle/177_0f142bbc/images/sha256-f340ebbc0cf763f43dcc70349cd12f313bfc1849d1489daa008e42ea087fc6ae?context=explore" target="_blank" rel="noopener">成品镜像</a></p><p>可以运行如下的命令去检测 SSH key 是否存在于,新构建的镜像中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull feiyang233/turtle:177_0f142bbc</span><br><span class="line">docker run -it feiyang233/turtle:177_0f142bbc bash</span><br><span class="line">ls  ~/.ssh/</span><br></pre></td></tr></table></figure></p><h3 id="bonus-for-sai"><a href="#bonus-for-sai" class="headerlink" title="bonus for sai"></a>bonus for sai</h3><blockquote><p>Maybe you have a question, why we need 2 docker containers, 1 stage task container, 1 service docker engine</p></blockquote><p>The answer is </p><ul><li>It’s easier and faster to use an existing image and run it as an additional container than to install docker engine</li><li>if you use dind image, please remember gitlab CI docker CMD entrypoint is <code>/bin/sh</code>, because CI job you need run script on shell</li></ul><p>But we also can try to test using only 1 container to build docker image:</p><ul><li>because gitlab start this container by <code>/bin/sh</code></li><li>we need manually run docker engine in backend and wait it startup</li><li>we also need change the deafult env of DOCKER_HOST</li></ul><p><img src="/img/vm/26.png" alt=""> </p><p>I also manually to test, see the terminal logs:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu20:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS           NAMES</span><br><span class="line">ad978e3c9250   dc8c389414c8                  <span class="string">"dockerd-entrypoint.…"</span>   16 seconds ago   Up 15 seconds   2375-2376/tcp   runner-supzrn4b-project-2-concurrent-0-ef2ee4c879673f88-build-2</span><br><span class="line">dea3a81e5209   gitlab/gitlab-runner:latest   <span class="string">"/usr/bin/dumb-init …"</span>   4 months ago     Up 46 minutes                   gitlab-runner</span><br><span class="line">root@ubuntu20:~<span class="comment"># docker exec -it ad978e3c9250 sh</span></span><br><span class="line">/ <span class="comment"># ps -ef</span></span><br><span class="line">PID   USER     TIME  COMMAND</span><br><span class="line">    1 root      0:00 /bin/sh</span><br><span class="line">   17 root      0:00 /bin/sh</span><br><span class="line">   27 root      0:00 sleep 120</span><br><span class="line">   28 root      0:00 sh</span><br><span class="line">   34 root      0:00 ps -ef</span><br><span class="line">/ <span class="comment"># env | grep DOCKER_HOST</span></span><br><span class="line">CI_COMMIT_TITLE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">CI_COMMIT_MESSAGE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">/ <span class="comment"># export  DOCKER_HOST=tcp://127.0.0.1:2375</span></span><br><span class="line">/ <span class="comment"># env | grep DOCKER_HOST</span></span><br><span class="line">CI_COMMIT_TITLE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">CI_COMMIT_MESSAGE=<span class="built_in">export</span> DOCKER_HOST=tcp://127.0.0.1:2375</span><br><span class="line">/ <span class="comment"># dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 </span></span><br><span class="line">INFO[2021-06-02T15:20:31.852225191Z] Starting up                                  </span><br><span class="line">WARN[2021-06-02T15:20:31.853254325Z] could not change group /var/run/docker.sock to docker: group docker not found </span><br><span class="line">WARN[2021-06-02T15:20:31.853700852Z] Binding to IP address without --tlsverify is insecure and gives root access on this machine to everyone who has access to your network.  host=<span class="string">"tcp://0.0.0.0:2375"</span></span><br><span class="line">WARN[2021-06-02T15:20:31.853771630Z] Binding to an IP address, even on localhost, can also give access to scripts run <span class="keyword">in</span> a browser. Be safe out there!  host=<span class="string">"tcp://0.0.0.0:2375"</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857263870Z] Binding to an IP address without --tlsverify is deprecated. Startup is intentionally being slowed down to show this message  host=<span class="string">"tcp://0.0.0.0:2375"</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857418830Z] Please consider generating tls certificates with client validation to prevent exposing unauthenticated root access to your network  host=<span class="string">"tcp://0.0.0.0:2375"</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857466269Z] You can override this by explicitly specifying <span class="string">'--tls=false'</span> or <span class="string">'--tlsverify=false'</span>  host=<span class="string">"tcp://0.0.0.0:2375"</span></span><br><span class="line">WARN[2021-06-02T15:20:32.857660544Z] Support <span class="keyword">for</span> listening on TCP without authentication or explicit intent to run without authentication will be removed <span class="keyword">in</span> the next release  host=<span class="string">"tcp://0.0.0.0:2375"</span></span><br><span class="line">INFO[2021-06-02T15:20:47.860746924Z] libcontainerd: started new containerd process  pid=48</span><br><span class="line">INFO[2021-06-02T15:20:47.860803013Z] parsed scheme: <span class="string">"unix"</span>                         module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.860813924Z] scheme <span class="string">"unix"</span> not registered, fallback to default scheme  module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.860830282Z] ccResolverWrapper: sending update to cc: &#123;[&#123;unix:///var/run/docker/containerd/containerd.sock  &lt;nil&gt; 0 &lt;nil&gt;&#125;] &lt;nil&gt; &lt;nil&gt;&#125;  module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.860835997Z] ClientConn switching balancer to <span class="string">"pick_first"</span>  module=grpc</span><br><span class="line">INFO[2021-06-02T15:20:47.877826134Z] starting containerd revision=05f951a3781f4f2c1911b05e61c160e9c30eaa8e version=v1.4.4</span><br></pre></td></tr></table></figure></p><p>Finally, share with you the gitlab ci yaml file</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">before_script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">apk</span> <span class="string">add</span> <span class="bullet">--no-cache</span> <span class="string">curl</span> <span class="string">jq</span> <span class="string">python3</span> <span class="string">py3-pip</span> <span class="string">git</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">mkdir</span> <span class="bullet">-p</span> <span class="bullet">-m</span> <span class="number">0600</span> <span class="string">~/.ssh</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">echo</span> <span class="string">"[192.168.64.3]:2222 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAs5kvb4yuBB1C5yJfyav7F13MCP5Z4BJpCYq403tz2G/eyUMzJUzW+/FIIlLAffnLZxqkLpKZterXD2Ahn9KvA="</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">chmod</span> <span class="number">600</span> <span class="string">$SSH_TEST</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">export</span> <span class="string">DOCKER_HOST=tcp://127.0.0.1:2375</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nohup</span> <span class="string">dockerd</span> <span class="bullet">--host=unix:///var/run/docker.sock</span> <span class="bullet">--host=tcp://0.0.0.0:2375</span> <span class="string">&amp;</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">cp</span> <span class="string">$SSH_TEST</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">sleep</span> <span class="number">30</span> <span class="comment"># it's hard to set a best vaule</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">export</span> <span class="string">VERSION=$&#123;CI_JOB_ID&#125;_$(echo</span> <span class="string">$CI_COMMIT_SHA</span> <span class="string">| head -c 8)</span></span><br><span class="line"><span class="string">  - export DOCKER_BUILDKIT=1</span></span><br><span class="line"><span class="string">  - eval $(ssh-agent)</span></span><br><span class="line"><span class="string">  - ssh-add $SSH_TEST</span></span><br><span class="line"><span class="string">  - docker build -t sre-turtle  --ssh default=$SSH_AUTH_SOCK .</span></span><br><span class="line"><span class="string">  - docker tag sre-turtle:latest $DOCKERUSER/turtle:$VERSION</span></span><br><span class="line"><span class="string">  - echo $DOCKERPASS | docker login --username $DOCKERUSER --password-stdin</span></span><br><span class="line"><span class="string">  - docker push $DOCKERUSER/turtle:$VERSION</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>gitlab docker in docker</th><th>pros</th><th>cons</th></tr></thead><tbody><tr><td>2 containers</td><td>official recommend<br>Automatically wait docker engine startup<br>No need setup env<br>parallel start 2 docker is faster</td><td>Use one more docker</td></tr><tr><td>1 container</td><td>one docker is enough</td><td>slower than 2 dockers<br>need more setup: env<br>unsure how long to wait docker engin startup</td></tr></tbody></table><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li><a href="https://blog.csdn.net/skykingf/article/details/95212146" target="_blank" rel="noopener">gitlab 自定义 SSH 端口</a></li><li><a href="https://docs.gitlab.com/ee/user/packages/container_registry/#authenticate-by-using-gitlab-cicd" target="_blank" rel="noopener">gitlab container registry authenticate</a></li><li><p>设置 CI/CD  变量的时候, 上传 deploy key, 类型选择 file, 切记多留最后一行空白，否则会报错 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error loading key &quot;&#x2F;root&#x2F;.ssh&#x2F;id_rsa&quot;: invalid format</span><br></pre></td></tr></table></figure><p>临时文件会在 runner 容器的 /build/user/project.temp/ 下面。 比如说 <code>/builds/feiyang/test.tmp/SSH_TEST</code> </p></li><li><p><code>Error loading key &quot;/root/.ssh/id_ed25519&quot;: invalid format</code> deploy key 的类型，最好是 RSA (at least 2048-bit key size), 新的 ED25519 (preferred) 在 docker build 会报错</p></li><li>Host key verification failed. 两个容器都需要添加 <code>ssh-keyscan gitlab.feiyang.com &gt;&gt; ~/.ssh/known_hosts</code></li><li><a href="https://stackoverflow.com/questions/37510711/installing-ssh-keyscan-on-alpine-linux" target="_blank" rel="noopener">Installing ssh-keyscan on Alpine linux?</a> 这里安装包 openssh-client 就足够了， 如果安装 openssh， 就重很多， 自带了 server 功能，不推荐.</li><li><a href="https://unix.stackexchange.com/questions/351725/why-eval-the-output-of-ssh-agent" target="_blank" rel="noopener">Why eval the output of ssh-agent?</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了测试 gitlab CI pipeline， 从而在家里的台式机搭建了测试环境。&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="docker" scheme="http://feiyang233.club/tags/docker/"/>
    
      <category term="security" scheme="http://feiyang233.club/tags/security/"/>
    
      <category term="git" scheme="http://feiyang233.club/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Python 基础学习</title>
    <link href="http://feiyang233.club/post/python-basic/"/>
    <id>http://feiyang233.club/post/python-basic/</id>
    <published>2020-09-22T11:51:36.000Z</published>
    <updated>2021-07-02T03:31:03.047Z</updated>
    
    <content type="html"><![CDATA[<p>以此文来记录一下，我自己觉得鲜为人知的知识点。 我个人比较喜欢的网站 <a href="https://www.programiz.com/python-programming" target="_blank" rel="noopener">Learn Python Programming</a><br><a id="more"></a> </p><h1 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h1><p>2021 年 06 月 17 日 - 更新数据结构与算法全景， 全剧终<br>2020 年 10 月 09 日 - 更新单元测试，调试和性能分析<br>2020 年 09 月 29 日 - 规范代码风格<br>2020 年 09 月 26 日 - Asyncio 协程，垃圾回收， GIL, 多进程与多线程选择<br>2020 年 09 月 25 日 - 生成器的特性，next() 函数运行的时候，保存了当前的指针<br>2020 年 09 月 24 日 - 进阶篇 list 拼接返回的是一个新的对象<br>2020 年 09 月 23 日 - 增加基础篇<br>2020 年 09 月 22 日 - 初稿</p><h1 id="知识图谱"><a href="#知识图谱" class="headerlink" title="知识图谱"></a>知识图谱</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200922195621.png" alt=""></p><h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><p>不可变类型</p><ul><li>int</li><li>float</li><li>decimal</li><li>complex</li><li>bool</li><li>string</li><li>tuple</li><li>range</li><li>frozenset</li><li>bytes</li></ul><p>可变类型</p><ul><li>list</li><li>dict</li><li>set</li><li>bytearray</li><li>user-defined classes (unless specifically made immutable)</li></ul><h2 id="列表和元组"><a href="#列表和元组" class="headerlink" title="列表和元组"></a>列表和元组</h2><ul><li>列表是动态的，长度大小不固定，可以随意地增加、删减或者改变元素（mutable）。</li><li>而元组是静态的，长度大小固定，无法增加删减或者改变（immutable）。</li><li><p>列表和元组常用的内置函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">1</span>]</span><br><span class="line">l.count(<span class="number">3</span>) </span><br><span class="line"><span class="number">2</span></span><br><span class="line">l.index(<span class="number">7</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">l.reverse()</span><br><span class="line">l</span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l.sort()</span><br><span class="line">l</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"> </span><br><span class="line">tup = (<span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">1</span>)</span><br><span class="line">tup.count(<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line">tup.index(<span class="number">7</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">list(reversed(tup))</span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">sorted(tup)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></table></figure></li><li><p>列表和元组存储方式的差异: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l.__sizeof__()</span><br><span class="line"><span class="number">64</span></span><br><span class="line">tup = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">tup.__sizeof__()</span><br><span class="line"><span class="number">48</span></span><br></pre></td></tr></table></figure><p>由于列表是动态的，所以它需要存储指针，来指向对应的元素（上述例子中，对于 int 型，8 字节）。另外，由于列表可变，所以需要额外存储已经分配的长度大小（8 字节），这样才可以实时追踪列表空间的使用情况，当空间不足时，及时分配额外空间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line">l.__sizeof__() // 空列表的存储空间为 <span class="number">40</span> 字节</span><br><span class="line"><span class="number">40</span></span><br><span class="line">l.append(<span class="number">1</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">72</span> // 加入了元素 <span class="number">1</span> 之后，列表为其分配了可以存储 <span class="number">4</span> 个元素的空间 (<span class="number">72</span> - <span class="number">40</span>)/<span class="number">8</span> = <span class="number">4</span></span><br><span class="line">l.append(<span class="number">2</span>) </span><br><span class="line">l.__sizeof__()</span><br><span class="line"><span class="number">72</span> // 由于之前分配了空间，所以加入元素 <span class="number">2</span>，列表空间不变</span><br><span class="line">l.append(<span class="number">3</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">72</span> // 同上</span><br><span class="line">l.append(<span class="number">4</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">72</span> // 同上</span><br><span class="line">l.append(<span class="number">5</span>)</span><br><span class="line">l.__sizeof__() </span><br><span class="line"><span class="number">104</span> // 加入元素 <span class="number">5</span> 之后，列表的空间不足，所以又额外分配了可以存储 <span class="number">4</span> 个元素的空间</span><br></pre></td></tr></table></figure></li><li><p>创建一个空的列表，我们可以用下面的 A、B 两种方式，请问它们在效率上有什么区别吗？我们应该优先考虑使用哪种呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建空列表</span><br><span class="line"># option A</span><br><span class="line">empty_list &#x3D; list()</span><br><span class="line"></span><br><span class="line"># option B</span><br><span class="line">empty_list &#x3D; []</span><br></pre></td></tr></table></figure><p>用list()方法构造一个空列表使用的是class list([iterable])的类型构造器，参数可以是一个iterable，如果没有给出参数，构造器将创建一个空列表[ ]，相比较而言多了一步class调用和参数判断，所以用 [ ] 直接构造一个空列表的方法速度更快</p></li></ul><h2 id="字典、集合"><a href="#字典、集合" class="headerlink" title="字典、集合"></a>字典、集合</h2><p>那究竟什么是字典，什么是集合呢？字典是一系列由键（key）和值（value）配对组成的元素的集合，在 Python3.7+，字典被确定为有序（注意：在 3.6 中，字典有序是一个 implementation detail，在 3.7 才正式成为语言特性，因此 3.6 中无法 100% 确保其有序性），而 3.6 之前是无序的，其长度大小可变，元素可以任意地删减和改变。</p><ul><li>字典访问可以直接索引键，如果不存在，就会抛出异常：KeyError 也可以使用 get(key, default) 函数来进行索引。如果键不存在，调用 get() 函数可以返回一个默认值。</li><li>集合并不支持索引操作，因为集合本质上是一个哈希表，和列表不一样。</li><li>想要判断一个元素在不在字典或集合内，我们可以用 value in dict/set 来判断。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="number">1</span> <span class="keyword">in</span> s</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">in</span> s</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">d = &#123;<span class="string">'name'</span>: <span class="string">'jason'</span>, <span class="string">'age'</span>: <span class="number">20</span>&#125;</span><br><span class="line"><span class="string">'name'</span> <span class="keyword">in</span> d</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="string">'location'</span> <span class="keyword">in</span> d</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li>集合的 pop() 操作是删除集合中最后一个元素，可是集合本身是无序的，你无法知道会删除哪个元素，因此这个操作得谨慎使用。</li><li>对于字典，我们通常会根据键或值，进行升序或降序排序：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">'b'</span>: <span class="number">1</span>, <span class="string">'a'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">10</span>&#125;</span><br><span class="line">d_sorted_by_key = sorted(d.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>]) <span class="comment"># 根据字典键的升序排序</span></span><br><span class="line">d_sorted_by_value = sorted(d.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>]) <span class="comment"># 根据字典值的升序排序</span></span><br><span class="line">d_sorted_by_key</span><br><span class="line">[(<span class="string">'a'</span>, <span class="number">2</span>), (<span class="string">'b'</span>, <span class="number">1</span>), (<span class="string">'c'</span>, <span class="number">10</span>)]</span><br><span class="line">d_sorted_by_value</span><br><span class="line">[(<span class="string">'b'</span>, <span class="number">1</span>), (<span class="string">'a'</span>, <span class="number">2</span>), (<span class="string">'c'</span>, <span class="number">10</span>)]</span><br></pre></td></tr></table></figure></li><li>字典和集合的工作原理: 对于字典而言，这张表存储了哈希值（hash）、键和值这 3 个元素。而对集合来说，区别就是哈希表内没有键和值的配对，只有单一的元素了。</li><li>老版本 Python 的哈希表结构如下所示：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--+-------------------------------+</span><br><span class="line">  | 哈希值 (hash)  键 (key)  值 (value)</span><br><span class="line">--+-------------------------------+</span><br><span class="line"><span class="number">0</span> |    hash0      key0    value0</span><br><span class="line">--+-------------------------------+</span><br><span class="line"><span class="number">1</span> |    hash1      key1    value1</span><br><span class="line">--+-------------------------------+</span><br><span class="line"><span class="number">2</span> |    hash2      key2    value2</span><br><span class="line">--+-------------------------------+</span><br><span class="line">. |           ...</span><br><span class="line">__+_______________________________+</span><br></pre></td></tr></table></figure>不难想象，随着哈希表的扩张，它会变得越来越稀疏。举个例子，比如我有这样一个字典：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'mike'</span>, <span class="string">'dob'</span>: <span class="string">'1999-01-01'</span>, <span class="string">'gender'</span>: <span class="string">'male'</span>&#125;</span><br></pre></td></tr></table></figure>那么它会存储为类似下面的形式：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">entries = [</span><br><span class="line">[<span class="string">'--'</span>, <span class="string">'--'</span>, <span class="string">'--'</span>]</span><br><span class="line">[<span class="number">-230273521</span>, <span class="string">'dob'</span>, <span class="string">'1999-01-01'</span>],</span><br><span class="line">[<span class="string">'--'</span>, <span class="string">'--'</span>, <span class="string">'--'</span>],</span><br><span class="line">[<span class="string">'--'</span>, <span class="string">'--'</span>, <span class="string">'--'</span>],</span><br><span class="line">[<span class="number">1231236123</span>, <span class="string">'name'</span>, <span class="string">'mike'</span>],</span><br><span class="line">[<span class="string">'--'</span>, <span class="string">'--'</span>, <span class="string">'--'</span>],</span><br><span class="line">[<span class="number">9371539127</span>, <span class="string">'gender'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>这样的设计结构显然非常浪费存储空间。为了提高存储空间的利用率，现在的哈希表除了字典本身的结构，会把索引和哈希值、键、值单独分开，也就是下面这样新的结构：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Indices</span><br><span class="line">----------------------------------------------------</span><br><span class="line"><span class="literal">None</span> | index | <span class="literal">None</span> | <span class="literal">None</span> | index | <span class="literal">None</span> | index ...</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> </span><br><span class="line">Entries</span><br><span class="line">--------------------</span><br><span class="line">hash0   key0  value0</span><br><span class="line">---------------------</span><br><span class="line">hash1   key1  value1</span><br><span class="line">---------------------</span><br><span class="line">hash2   key2  value2</span><br><span class="line">---------------------</span><br><span class="line">        ...</span><br><span class="line">---------------------</span><br></pre></td></tr></table></figure></li><li><p>删除操作 对于删除操作，Python 会暂时对这个位置的元素，赋于一个特殊的值，等到重新调整哈希表的大小时，再将其删除。不难理解，哈希冲突的发生，往往会降低字典和集合操作的速度。因此，为了保证其高效性，字典和集合内的哈希表，通常会保证其至少留有 1/3 的剩余空间。随着元素的不停插入，当剩余空间小于 1/3 时，Python 会重新获取更大的内存空间，扩充哈希表。不过，这种情况下，表内所有的元素位置都会被重新排放。虽然哈希冲突和哈希表大小的调整，都会导致速度减缓，但是这种情况发生的次数极少。所以，平均情况下，这仍能保证插入、查找和删除的时间复杂度为 O(1)。</p></li><li><p>下面初始化字典的方式，哪一种更高效？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Option A</span></span><br><span class="line">d = &#123;<span class="string">'name'</span>: <span class="string">'jason'</span>, <span class="string">'age'</span>: <span class="number">20</span>, <span class="string">'gender'</span>: <span class="string">'male'</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Option B</span></span><br><span class="line">d = dict(&#123;<span class="string">'name'</span>: <span class="string">'jason'</span>, <span class="string">'age'</span>: <span class="number">20</span>, <span class="string">'gender'</span>: <span class="string">'male'</span>&#125;)</span><br></pre></td></tr></table></figure><p>第一种方法更快，原因感觉上是和之前一样，就是不需要去调用相关的函数，而且像老师说的那样 {} 应该是关键字，内部会去直接调用底层C写好的代码</p></li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li>什么是字符串呢？字符串是由独立字符组成的一个序列，通常包含在单引号（’’）双引号（””）或者三引号之中（’’’ ‘’’或””” “””，两者一样</li><li><p>Python 同时支持这三种表达方式，很重要的一个原因就是，这样方便你在字符串中，内嵌带引号的字符串。比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;I&#39;m a student&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200922211447.png" alt=""></p></li><li><p>特别要注意，Python 的字符串是不可变的（immutable）。因此，用下面的操作，来改变一个字符串内部的字符是错误的，不允许的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'hello'</span></span><br><span class="line">s[<span class="number">0</span>] = <span class="string">'H'</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">'str'</span> object does <span class="keyword">not</span> support item assignment</span><br></pre></td></tr></table></figure><p>Python 中字符串的改变，通常只能通过创建新的字符串来完成。比如上述例子中，想把’hello’的第一个字符’h’，改为大写的’H’，我们可以采用下面的做法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'H'</span> + s[<span class="number">1</span>:]</span><br><span class="line">s = s.replace(<span class="string">'h'</span>, <span class="string">'H'</span>)</span><br></pre></td></tr></table></figure></li><li>使用加法操作符’+=’的字符串拼接方法。因为它是一个例外，打破了字符串不可变的特性。从 Python2.5 开始，每次处理字符串的拼接操作时（str1 += str2），Python 首先会检测 str1 还有没有其他的引用。如果没有的话，就会尝试原地扩充字符串 buffer 的大小，而不是重新分配一块内存来创建新的字符串并拷贝。</li><li>字符串的格式化<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'no data available for person with id: &#123;&#125;, name: &#123;&#125;'</span>.format(id, name))</span><br></pre></td></tr></table></figure></li></ul><h2 id="输入与输出"><a href="#输入与输出" class="headerlink" title="输入与输出"></a>输入与输出</h2><ul><li>input() 函数暂停程序运行，同时等待键盘输入；直到回车被按下，函数的参数即为提示语，输入的类型永远是字符串型（str）。</li><li>json.dumps() 这个函数，接受 Python 的基本数据类型，然后将其序列化为 string；</li><li>json.loads() 这个函数，接受一个合法字符串，然后将其反序列化为 Python 的基本数据类型。</li></ul><h2 id="条件与循环"><a href="#条件与循环" class="headerlink" title="条件与循环"></a>条件与循环</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200923062014.png" alt=""></p><ul><li>在实际写代码时，我们鼓励，除了 boolean 类型的数据，条件判断最好是显性的。比如，在判断一个整型数是否为 0 时，我们最好写出判断的条件：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if i !&#x3D; 0:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>而不是只写出变量名：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if i:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li><li>当我们同时需要索引和元素时，还有一种更简洁的方式，那就是通过 Python 内置的函数 enumerate()。用它来遍历集合，不仅返回每个元素，并且还返回其对应的索引<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">l &#x3D; [1, 2, 3, 4, 5, 6, 7]</span><br><span class="line">for index, item in enumerate(l):</span><br><span class="line">    if index &lt; 5:</span><br><span class="line">        print(item)  </span><br><span class="line">              </span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure></li><li>在循环语句中，我们还常常搭配 continue 和 break 一起使用。所谓 continue，就是让程序跳过当前这层循环，继续执行下面的循环；而 break 则是指完全跳出所在的整个循环体。在循环中适当加入 continue 和 break，往往能使程序更加简洁、易读。</li><li>for 循环和 while 循环可以互相转换。通常来说，如果你只是遍历一个已知的集合，找出满足条件的元素，并进行相应的操作，那么使用 for 循环更加简洁。但如果你需要在满足某个条件前，不停地重复某些操作，并且没有特定的集合需要去遍历，那么一般则会使用 while 循环。</li><li>for 循环和 while 循环的效率问题。比如下面的 while 循环：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">1000000</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure>和等价的 for 循环：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for i in range(0, 1000000):</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure>range() 函数是直接由 C 语言写的，调用它速度非常快。而 while 循环中的“i += 1”这个操作，得通过 Python 的解释器间接调用底层的 C 语言；并且这个简单的操作，又涉及到了对象的创建和删除（因为 i 是整型，是 immutable，i += 1 相当于 i = new int(i + 1)）。所以，显然，for 循环的效率更胜一筹。</li><li>expression1 if condition else expression2 for item in iterable <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable:</span><br><span class="line">    <span class="keyword">if</span> condition:</span><br><span class="line">        expression1</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        expression2</span><br></pre></td></tr></table></figure>而如果没有 else 语句，则需要写成：expression for item in iterable if condition</li><li><p>[(xx, yy) for xx in x for yy in y if xx != yy]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> xx <span class="keyword">in</span> x:</span><br><span class="line">    <span class="keyword">for</span> yy <span class="keyword">in</span> y:</span><br><span class="line">        <span class="keyword">if</span> xx != yy:</span><br><span class="line">            l.append((xx, yy))</span><br></pre></td></tr></table></figure></li><li><p>[dict(zip(attributes, value)) for value in values]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">attributes = [<span class="string">'name'</span>, <span class="string">'dob'</span>, <span class="string">'gender'</span>]</span><br><span class="line">values = [[<span class="string">'jason'</span>, <span class="string">'2000-01-01'</span>, <span class="string">'male'</span>], </span><br><span class="line">[<span class="string">'mike'</span>, <span class="string">'1999-01-01'</span>, <span class="string">'male'</span>],</span><br><span class="line">[<span class="string">'nancy'</span>, <span class="string">'2001-02-01'</span>, <span class="string">'female'</span>]</span><br><span class="line">]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># expected outout:</span></span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'jason'</span>, <span class="string">'dob'</span>: <span class="string">'2000-01-01'</span>, <span class="string">'gender'</span>: <span class="string">'male'</span>&#125;, </span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'mike'</span>, <span class="string">'dob'</span>: <span class="string">'1999-01-01'</span>, <span class="string">'gender'</span>: <span class="string">'male'</span>&#125;, </span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'nancy'</span>, <span class="string">'dob'</span>: <span class="string">'2001-02-01'</span>, <span class="string">'gender'</span>: <span class="string">'female'</span>&#125;]</span><br></pre></td></tr></table></figure></li></ul><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ul><li>程序中的错误至少包括两种，一种是语法错误，另一种则是异常。</li><li>很多时候，我们很难保证程序覆盖所有的异常类型，所以，更通常的做法，是在最后一个 except block，声明其处理的异常类型是 Exception。Exception 是其他所有非系统异常的基类，能够匹配任意非系统异常。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s = input(<span class="string">'please enter two numbers separated by comma: '</span>)</span><br><span class="line">    num1 = int(s.split(<span class="string">','</span>)[<span class="number">0</span>].strip())</span><br><span class="line">    num2 = int(s.split(<span class="string">','</span>)[<span class="number">1</span>].strip())</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">'Value Error: &#123;&#125;'</span>.format(err))</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">'Index Error: &#123;&#125;'</span>.format(err))</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">'Other error: &#123;&#125;'</span>.format(err))</span><br><span class="line"> </span><br><span class="line">print(<span class="string">'continue'</span>)</span><br></pre></td></tr></table></figure></li><li>当程序中存在多个 except block 时，最多只有一个 except block 会被执行。换句话说，如果多个 except 声明的异常类型都与实际相匹配，那么只有最前面的 except block 会被执行，其他则被忽略。</li><li>异常处理中，还有一个很常见的用法是 finally，经常和 try、except 放在一起来用。无论发生什么情况，finally block 中的语句都会被执行，哪怕前面的 try 和 excep block 中使用了 return 语句。</li><li>用户自定义异常</li><li>When an exception has been assigned using as target, it is cleared at the end of the except clause. 这句话意思是，如果你在异常处理的 except block 中，把异常赋予了一个变量，那么这个变量会在 except block 执行结束时被删除</li></ul><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><ul><li>和其他需要编译的语言（比如 C 语言）不一样的是，def 是可执行语句，这意味着函数直到被调用前，都是不存在的。当程序调用函数时，def 语句才会创建一个新的函数对象，并赋予其名字。</li><li>主程序调用函数时，必须保证这个函数此前已经定义过，不然就会报错</li><li>如果我们在函数内部调用其他函数，函数间哪个声明在前、哪个在后就无所谓，因为 def 是可执行语句，函数在调用之前都不存在，我们只需保证调用时，所需的函数都已经声明定义</li><li>Python 不用考虑输入的数据类型，而是将其交给具体的代码去判断执行，同样的一个函数（比如这边的相加函数 my_sum()），可以同时应用在整型、列表、字符串等等的操作中。在编程语言中，我们把这种行为称为多态。</li><li>所谓的函数嵌套，就是指函数里面又有函数。第一，函数的嵌套能够保证内部函数的隐私。第二，合理的使用函数嵌套，能够提高程序的运行效率。</li><li>如果变量是在函数内部定义的，就称为局部变量，只在函数内部有效。一旦函数执行完毕，局部变量就会被回收，无法访问</li><li><p>不能在函数内部随意改变全局变量的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MIN_VALUE = <span class="number">1</span></span><br><span class="line">MAX_VALUE = <span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">validation_check</span><span class="params">(value)</span>:</span></span><br><span class="line">    MIN_VALUE += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">validation_check(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">UnboundLocalError: local variable <span class="string">'MIN_VALUE'</span> referenced before assignment</span><br></pre></td></tr></table></figure><p>如果我们一定要在函数内部改变全局变量的值，就必须加上 global 这个声明。这里的 global 关键字，并不表示重新创建了一个全局变量 MIN_VALUE，而是告诉 Python 解释器，函数内部的变量 MIN_VALUE，就是之前定义的全局变量，并不是新的全局变量，也不是局部变量。这样，程序就可以在函数内部访问全局变量，并修改它的值了。另外，如果遇到函数内部局部变量和全局变量同名的情况，那么在函数内部，局部变量会覆盖全局变量</p></li><li><p>对于嵌套函数来说，内部函数可以访问外部函数定义的变量，但是无法修改，若要修改，必须加上 nonlocal 这个关键字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="string">"local"</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span> x <span class="comment"># nonlocal 关键字表示这里的 x 就是外部函数 outer 定义的变量 x</span></span><br><span class="line">        x = <span class="string">'nonlocal'</span></span><br><span class="line">        print(<span class="string">"inner:"</span>, x)</span><br><span class="line">    inner()</span><br><span class="line">    print(<span class="string">"outer:"</span>, x)</span><br><span class="line">outer()</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">inner: <span class="keyword">nonlocal</span></span><br><span class="line">outer: <span class="keyword">nonlocal</span></span><br></pre></td></tr></table></figure><p>如果不加上 nonlocal 这个关键字，而内部函数的变量又和外部函数变量同名，那么同样的，内部函数变量会覆盖外部函数的变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="string">"local"</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        x = <span class="string">'nonlocal'</span> <span class="comment"># 这里的 x 是 inner 这个函数的局部变量</span></span><br><span class="line">        print(<span class="string">"inner:"</span>, x)</span><br><span class="line">    inner()</span><br><span class="line">    print(<span class="string">"outer:"</span>, x)</span><br><span class="line">outer()</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">inner: <span class="keyword">nonlocal</span></span><br><span class="line">outer: local</span><br></pre></td></tr></table></figure></li><li>闭包（closure)返回的是一个函数</li></ul><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><ul><li>lambda argument1, argument2,… argumentN : expression</li><li>匿名函数 lambda 和常规函数一样，返回的都是一个函数对象（function object）</li><li><p>lambda 是一个表达式（expression），并不是一个语句（statement）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Program to show the use of lambda functions</span></span><br><span class="line">double = <span class="keyword">lambda</span> x: x * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">print(double(<span class="number">5</span>)) <span class="comment"># 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># is nearly the same as:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span><span class="params">(x)</span>:</span></span><br><span class="line">   <span class="keyword">return</span> x * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example use with filter()</span></span><br><span class="line"><span class="comment"># Program to filter out only the even items from a list</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">new_list = list(filter(<span class="keyword">lambda</span> x: (x%<span class="number">2</span> == <span class="number">0</span>) , my_list))</span><br><span class="line"></span><br><span class="line">print(new_list)</span><br><span class="line">[<span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example use with map()</span></span><br><span class="line"><span class="comment"># Program to double each item in a list using map()</span></span><br><span class="line"></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">new_list = list(map(<span class="keyword">lambda</span> x: x * <span class="number">2</span> , my_list))</span><br><span class="line"></span><br><span class="line">print(new_list)</span><br><span class="line">[<span class="number">2</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">24</span>]</span><br></pre></td></tr></table></figure></li><li><p>所谓的表达式，就是用一系列“公式”去表达一个东西，比如x + 2、 x**2等等；</p></li><li>所谓的语句，则一定是完成了某些功能，比如赋值语句x = 1完成了赋值，print 语句print(x)完成了打印，条件语句 if x &lt; 0:完成了选择功能等等。</li><li>所谓函数式编程，是指代码中每一块都是不可变的（immutable），都由纯函数（pure function）的形式组成。这里的纯函数，是指函数本身相互独立、互不影响，对于相同的输入，总会有相同的输出，没有任何副作用。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply_2</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">0</span>, len(l)):</span><br><span class="line">        l[index] *= <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> l</span><br></pre></td></tr></table></figure>这段代码就不是一个纯函数的形式，因为列表中元素的值被改变了，如果我多次调用 multiply_2() 这个函数，那么每次得到的结果都不一样。要想让它成为一个纯函数的形式，就得写成下面这种形式，重新创建一个新的列表并返回。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply_2_pure</span><span class="params">(l)</span>:</span></span><br><span class="line">    new_list = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> l:</span><br><span class="line">        new_list.append(item * <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> new_list</span><br></pre></td></tr></table></figure></li><li>函数式编程的优点，主要在于其纯函数和不可变的特性使程序更加健壮，易于调试（debug）和测试；缺点主要在于限制多，难写。</li><li><p>map(function, iterable) </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python3 -mtimeit -s<span class="string">'xs=range(1000000)'</span> <span class="string">'map(lambda x: x*2, xs)'</span></span><br><span class="line"><span class="number">2000000</span> loops, best of <span class="number">5</span>: <span class="number">171</span> nsec per loop</span><br><span class="line"> </span><br><span class="line">python3 -mtimeit -s<span class="string">'xs=range(1000000)'</span> <span class="string">'[x * 2 for x in xs]'</span></span><br><span class="line"><span class="number">5</span> loops, best of <span class="number">5</span>: <span class="number">62.9</span> msec per loop</span><br><span class="line"> </span><br><span class="line">python3 -mtimeit -s<span class="string">'xs=range(1000000)'</span> <span class="string">'l = []'</span> <span class="string">'for i in xs: l.append(i * 2)'</span></span><br><span class="line"><span class="number">5</span> loops, best of <span class="number">5</span>: <span class="number">92.7</span> msec per loop</span><br></pre></td></tr></table></figure><p>map() 是最快的。因为 map() 函数直接由 C 语言写的，运行时不需要通过 Python 解释器间接调用，并且内部做了诸多优化，所以运行速度最快。</p></li><li><p>对一个字典，根据值进行由高到底的排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">'mike'</span>: <span class="number">10</span>, <span class="string">'lucy'</span>: <span class="number">2</span>, <span class="string">'ben'</span>: <span class="number">30</span>&#125;</span><br><span class="line"></span><br><span class="line">sorted(d.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解释一下 Python Dictionary items()</span></span><br><span class="line"><span class="comment"># returns a view object that displays a list of a given dictionary's (key, value) tuple pair.</span></span><br><span class="line"><span class="comment"># random sales dictionary</span></span><br><span class="line">sales = &#123; <span class="string">'apple'</span>: <span class="number">2</span>, <span class="string">'orange'</span>: <span class="number">3</span>, <span class="string">'grapes'</span>: <span class="number">4</span> &#125;</span><br><span class="line"></span><br><span class="line">print(sales.items())</span><br><span class="line">dict_items([(<span class="string">'apple'</span>, <span class="number">2</span>), (<span class="string">'orange'</span>, <span class="number">3</span>), (<span class="string">'grapes'</span>, <span class="number">4</span>)])</span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2></li><li>面向对象编程四要素是：类，属性，函数，对象，</li><li>OOP (object oriented programming) </li><li>如果一个属性以 __ （注意，此处有两个 _） 开头，我们就默认这个属性是私有属性。私有属性，是指不希望在类的函数之外的地方被访问和修改的属性</li><li>类函数、成员函数和静态函数三个概念。它们其实很好理解，前两者产生的影响是动态的，能够访问或者修改对象的属性；而静态函数则与类没有什么关联，最明显的特征便是，静态函数的第一个参数没有任何特殊性。</li><li>首先需要注意的是构造函数。每个类都有构造函数，继承类在生成对象的时候，是不会自动调用父类的构造函数的，因此你必须在 init() 函数中显式调用父类的构造函数。它们的执行顺序是 子类的构造函数 -&gt; 父类的构造函数。</li><li>抽象类是一种特殊的类，它生下来就是作为父类存在的，一旦对象化就会报错。同样，抽象函数定义在抽象类之中，子类必须重写该函数才能使用。相应的抽象函数，则是使用装饰器 @abstractmethod 来表示。</li><li>super(Parents_Name, self).<strong>init</strong>()直接初始化该类的第一个父类，不过使用这种方法时，要求继承链的最顶层父类必须要继承 object；</li><li>对于多重继承，如果有多个构造函数需要调用， 我们就必须用传统的方法 LRUCache.<strong>init</strong>(self) 。</li></ul><h2 id="Python-模块化"><a href="#Python-模块化" class="headerlink" title="Python 模块化"></a>Python 模块化</h2><ul><li>import 同一个模块只会被执行一次，这样就可以防止重复导入模块出现问题。当然，良好的编程习惯应该杜绝代码多次导入的情况。在 Facebook 的编程规范中，除了一些极其特殊的情况，import 必须位于程序的最前端。</li><li>你可能在许多教程中看到过这样的要求：我们还需要在模块所在的文件夹新建一个 <strong>init</strong>.py，内容可以为空，也可以用来表述包对外暴露的模块接口。不过，事实上，这是 Python 2 的规范。在 Python 3 规范中，<strong>init</strong>.py 并不是必须的，很多教程里没提过这一点，或者没讲明白，我希望你还是能注意到这个地方。</li><li>一个 Python 文件在运行的时候，都会有一个运行时位置，最开始时即为这个文件所在的文件夹。</li><li>以项目的根目录作为最基本的目录，所有的模块调用，都要通过根目录一层层向下索引的方式来 import。</li><li>Python 解释器在遇到 import 的时候，它会在一个特定的列表中寻找模块。这个特定的列表，可以用下面的方式拿到：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys  </span><br><span class="line"> </span><br><span class="line">print(sys.path)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">[<span class="string">''</span>, <span class="string">'/usr/lib/python36.zip'</span>, <span class="string">'/usr/lib/python3.6'</span>, <span class="string">'/usr/lib/python3.6/lib-dynload'</span>, <span class="string">'/usr/local/lib/python3.6/dist-packages'</span>, <span class="string">'/usr/lib/python3/dist-packages'</span>]</span><br></pre></td></tr></table></figure>修改 PYTHONHOME。Python 的 Virtual Environment（虚拟运行环境）。Python 可以通过 Virtualenv 工具，非常方便地创建一个全新的 Python 运行环境。</li><li>神奇的 if <strong>name</strong> == ‘<strong>main</strong>‘  Python 是脚本语言，和 C++、Java 最大的不同在于，不需要显式提供 main() 函数入口。既然 Python 可以直接写代码，if <strong>name</strong> == ‘<strong>main</strong>‘ 这样的写法，除了能让 Python 代码更好看（更像 C++ ）外，还有什么好处吗？import 在导入文件的时候，会自动把所有暴露在外面的代码全都执行一遍。因此，如果你要把一个东西封装成模块，又想让它可以执行的话，你必须将要执行的代码放在 if <strong>name</strong> == ‘<strong>main</strong>‘下面。</li></ul><h2 id="列表和元组的内部实现"><a href="#列表和元组的内部实现" class="headerlink" title="列表和元组的内部实现"></a>列表和元组的内部实现</h2><ul><li>Python 3.7 的 list 源码。<br>listobject.h：<a href="https://github.com/python/cpython/blob/949fe976d5c62ae63ed505ecf729f815d0baccfc/Include/listobject.h#L23" target="_blank" rel="noopener">https://github.com/python/cpython/blob/949fe976d5c62ae63ed505ecf729f815d0baccfc/Include/listobject.h#L23</a><br>listobject.c: <a href="https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/listobject.c#L33" target="_blank" rel="noopener">https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/listobject.c#L33</a><br>list 本质上是一个 over-allocate 的 array。allocated &gt;= len(list) = ob_size。</li><li>我们再来分析元组。下面是 Python 3.7 的 tuple 源码<br>tupleobject.h： <a href="https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Include/tupleobject.h#L25" target="_blank" rel="noopener">https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Include/tupleobject.h#L25</a><br>tupleobject.c：<a href="https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/tupleobject.c#L16" target="_blank" rel="noopener">https://github.com/python/cpython/blob/3d75bd15ac82575967db367c517d7e6e703a6de3/Objects/tupleobject.c#L16</a><br>tuple本质也是一个 array，但是空间大小固定。不同于一般 array，Python 的 tuple 做了许多优化，来提升在程序中的效率。当 tuple 的大小不超过 20 时，Python 就会把它缓存在内部的一个 free list 中。这样，如果你以后需要再去创建同样的 tuple，Python 就可以直接从缓存中载入，提高了程序运行效率。</li></ul><h2 id="全局变量的修改"><a href="#全局变量的修改" class="headerlink" title="全局变量的修改"></a>全局变量的修改</h2><ul><li>当全局变量指向的对象不可变时，比如是整型、字符串等等，如果你尝试在函数内部改变它的值，却不加关键字 global，就会抛出异常：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x += <span class="number">1</span></span><br><span class="line">func()</span><br><span class="line">x</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">UnboundLocalError: local variable <span class="string">'x'</span> referenced before assignment</span><br></pre></td></tr></table></figure></li><li>如果全局变量指向的对象是可变的，比如是列表、字典等等，你就可以在函数内部修改它了：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>]</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x.append(<span class="number">2</span>)</span><br><span class="line">func()</span><br><span class="line">x</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure>当然，需要注意的是，这里的x.append(2)，并没有改变变量 x，x 依然指向原来的列表。事实上，这句话的意思是，访问 x 指向的列表，并在这个列表的末尾增加 2。</li></ul><h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><h2 id="Python对象的比较、拷贝"><a href="#Python对象的比较、拷贝" class="headerlink" title="Python对象的比较、拷贝"></a>Python对象的比较、拷贝</h2><ul><li><p>‘==’ VS ‘is’   等于（==）和 is 是 Python 中对象比较常用的两种方式。简单来说，’==’操作符比较对象之间的值是否相等；而’is’操作符比较的是对象的身份标识是否相等，即它们是否是同一个对象，是否指向同一个内存地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line"> </span><br><span class="line">a == b</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">id(a)</span><br><span class="line"><span class="number">4427562448</span></span><br><span class="line"> </span><br><span class="line">id(b)</span><br><span class="line"><span class="number">4427562448</span></span><br><span class="line"> </span><br><span class="line">a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>首先 Python 会为 10 这个值开辟一块内存，然后变量 a 和 b 同时指向这块内存区域，即 a 和 b 都是指向 10 这个变量，因此 a 和 b 的值相等，id 也相等，a == b和a is b都返回 True。不过，需要注意，对于整型数字来说，以上a is b为 True 的结论，只适用于 -5 到 256 范围内的数字<br>事实上，出于对性能优化的考虑，Python 内部会对 -5 到 256 的整型维持一个数组，起到一个缓存的作用。这样，每次你试图创建一个 -5 到 256 范围内的整型数字时，Python 都会从这个数组中返回相对应的引用，而不是重新开辟一块新的内存空间。</p></li><li><p>比较操作符’is’的速度效率，通常要优于’==’ 因为’is’操作符不能被重载，这样，Python 就不需要去寻找，程序中是否有其他地方重载了比较操作符，并去调用。执行比较操作符’is’，就仅仅是比较两个变量的 ID 而已。但是’==’操作符却不同，执行a == b相当于是去执行a.<strong>eq</strong>(b)，而 Python 大部分的数据类型都会去重载<strong>eq</strong>这个函数，其内部的处理通常会复杂一些。比如，对于列表，<strong>eq</strong>函数会去遍历列表中的元素，比较它们的顺序和值是否相等。</p></li><li><p>浅拷贝（shallow copy）常见的浅拷贝的方法，是使用数据类型本身的构造器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l2 = list(l1)</span><br><span class="line"> </span><br><span class="line">l2</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"> </span><br><span class="line">l1 == l2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">l1 <span class="keyword">is</span> l2</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">s1 = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">s2 = set(s1)</span><br><span class="line"> </span><br><span class="line">s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"> </span><br><span class="line">s1 == s2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">s1 <span class="keyword">is</span> s2</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>l2 就是 l1 的浅拷贝，s2 是 s1 的浅拷贝。当然，对于可变的序列，我们还可以通过切片操作符’:’完成浅拷贝</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l2 = l1[:]</span><br><span class="line"> </span><br><span class="line">l1 == l2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">l1 <span class="keyword">is</span> l2</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>当然，Python 中也提供了相对应的函数 copy.copy()，适用于任何数据类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">l2 = copy.copy(l1)</span><br></pre></td></tr></table></figure><p>不过，需要注意的是，对于元组，使用 tuple() 或者切片操作符’:’不会创建一份浅拷贝，相反，它会返回一个指向相同元组的引用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t1 = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">t2 = tuple(t1)</span><br><span class="line"> </span><br><span class="line">t1 == t2</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">t1 <span class="keyword">is</span> t2</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure></li><li><p>浅拷贝，是指重新分配一块内存，创建一个新的对象，里面的元素是原对象中子对象的引用。因此，如果原对象中的元素不可变，那倒无所谓；但如果元素可变，浅拷贝通常会带来一些副作用，尤其需要注意</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">l1 &#x3D; [[1, 2], (30, 40)]</span><br><span class="line">l2 &#x3D; list(l1)</span><br><span class="line">l1.append(100)</span><br><span class="line">l1[0].append(3)</span><br><span class="line"> </span><br><span class="line">l1</span><br><span class="line">[[1, 2, 3], (30, 40), 100]</span><br><span class="line"> </span><br><span class="line">l2</span><br><span class="line">[[1, 2, 3], (30, 40)]</span><br><span class="line"> </span><br><span class="line">l1[1] +&#x3D; (50, 60)</span><br><span class="line">l1</span><br><span class="line">[[1, 2, 3], (30, 40, 50, 60), 100]</span><br><span class="line"> </span><br><span class="line">l2</span><br><span class="line">[[1, 2, 3], (30, 40)]</span><br></pre></td></tr></table></figure><p>l1.append(100)，表示对 l1 的列表新增元素 100。这个操作不会对 l2 产生任何影响，因为 l2 和 l1 作为整体是两个不同的对象，并不共享内存地址。再来看，l1[0].append(3)，这里表示对 l1 中的第一个列表新增元素 3。因为 l2 是 l1 的浅拷贝，l2 中的第一个元素和 l1 中的第一个元素，共同指向同一个列表，因此 l2 中的第一个列表也会相对应的新增元素 3。操作后 l1 和 l2 都会改变。最后是l1[1] += (50, 60)，因为元组是不可变的，这里表示对 l1 中的第二个元组拼接，然后重新创建了一个新元组作为 l1 中的第二个元素，而 l2 中没有引用新元组，因此 l2 并不受影响。操作后 l2 不变，l1 发生改变</p></li><li><p>深度拷贝，是指重新分配一块内存，创建一个新的对象，并且将原对象中的元素，以递归的方式，通过创建新的子对象拷贝到新对象中。因此，新对象和原对象没有任何关联。深度拷贝也不是完美的，往往也会带来一系列问题。如果被拷贝对象中存在指向自身的引用，那么程序很容易陷入无限循环</p></li><li>RecursionError: maximum recursion depth exceeded in comparison<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">x = [<span class="number">1</span>]</span><br><span class="line">x.append(x)</span><br><span class="line"> </span><br><span class="line">y = copy.deepcopy(x)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 以下命令的输出是？</span></span><br><span class="line">x == y</span><br></pre></td></tr></table></figure></li><li>列表 self append 无限嵌套的原理</li></ul><ol><li>x 指向一个列表，列表的第一个元素为 1；执行了 append 操作后，第二个元素又反过来指向 x，即指向了 x 所指向的列表，因此形成了一个无限嵌套的循环：[1, [1, [1, [1, …]]]]。</li><li>虽然 x 是无限嵌套的列表，但 x.append(x) 的操作，并不会递归遍历其中的每一个元素。它只是扩充了原列表的第二个元素，并将其指向 x，因此不会出现 stack overflow 的问题，自然不会报错。</li><li>为什么 len(x) 返回的是 2？我们还是来看 x，虽然它是无限嵌套的列表，但 x 的 top level 只有 2 个元素组成，第一个元素为 1，第二个元素为指向自身的列表，因此 len(x) 返回 2。</li></ol><h2 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h2><ul><li>所谓值传递，通常就是拷贝参数的值，然后传递给函数里的新变量。</li><li>所谓引用传递，通常是指把参数的引用传给新的变量，这样，原变量和新变量就会指向同一块内存地址。如果改变了其中任何一个变量的值，那么另外一个变量也会相应地随之改变。</li><li>Python 的数据类型，例如整型（int）、字符串（string）等等，是不可变的。所以，a = a + 1，并不是让 a 的值增加 1，而是表示重新创建了一个新的值为 2 的对象，并让 a 指向它。但是 b 仍然不变，仍然指向 1 这个对象。</li><li>由于列表是可变的，所以 l1.append(4) 不会创建新的列表，只是在原列表的末尾插入了元素 4，变成 [1, 2, 3, 4]。由于 l1 和 l2 同时指向这个列表，所以列表的变化会同时反映在 l1 和 l2 这两个变量上，那么，l1 和 l2 的值就同时变为了 [1, 2, 3, 4]。</li><li>需要注意的是，Python 里的变量可以被删除，但是对象无法被删除。比如下面的代码：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">del</span> l</span><br></pre></td></tr></table></figure>del l 删除了 l 这个变量，从此以后你无法访问 l，但是对象 [1, 2, 3] 仍然存在。Python 程序运行时，其自带的垃圾回收系统会跟踪每个对象的引用。如果 [1, 2, 3] 除了 l 外，还在其他地方被引用，那就不会被回收，反之则会被回收。</li><li>变量的赋值，只是表示让变量指向了某个对象，并不表示拷贝对象给变量；而一个对象，可以被多个变量所指向。</li><li>可变对象（列表，字典，集合等等）的改变，会影响所有指向该对象的变量。</li><li>对于不可变对象（字符串，整型，元祖等等），所有指向该对象的变量的值总是一样的，也不会改变。但是通过某些操作（+= 等等）更新不可变对象的值时，会返回一个新的对象。</li><li>变量可以被删除，但是对象无法被删除。</li><li>Python 的参数传递是赋值传递 （pass by assignment），或者叫作对象的引用传递（pass by object reference）。Python 里所有的数据类型都是对象，所以参数传递时，只是让新变量与原变量指向相同的对象而已，并不存在值传递或是引用传递一说。</li><li>当可变对象当作参数传入函数里的时候，改变可变对象的值，就会影响所有指向它的变量。比如下面的例子：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func3</span><span class="params">(l2)</span>:</span></span><br><span class="line">    l2.append(<span class="number">4</span>)</span><br><span class="line">    print(<span class="string">"l2 id is &#123;&#125;"</span>.format(id(l2)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">print(<span class="string">"l1 id is &#123;&#125;"</span>.format(id(l1)))</span><br><span class="line"></span><br><span class="line">my_func3(l1)</span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">l1 id <span class="keyword">is</span> <span class="number">4358387328</span></span><br><span class="line">l2 id <span class="keyword">is</span> <span class="number">4358387328</span></span><br></pre></td></tr></table></figure>这里 l1 和 l2 先是同时指向值为 [1, 2, 3] 的列表。不过，由于列表可变，执行 append() 函数，对其末尾加入新元素 4 时，变量 l1 和 l2 的值也都随之改变了。</li><li><p>但是，下面这个例子，看似都是给列表增加了一个新元素，却得到了明显不同的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func3</span><span class="params">(l2)</span>:</span></span><br><span class="line">    print(<span class="string">"before joint l2 id is &#123;&#125;"</span>.format(id(l2)))</span><br><span class="line">    l2 = l2 + [<span class="number">4</span>]</span><br><span class="line">    print(<span class="string">"after joint l2 id is &#123;&#125;"</span>.format(id(l2)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">l1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">print(<span class="string">"l1 id is &#123;&#125;"</span>.format(id(l1)))</span><br><span class="line"></span><br><span class="line">my_func3(l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output</span></span><br><span class="line">l1 id <span class="keyword">is</span> <span class="number">4448097856</span></span><br><span class="line">before joint l2 id <span class="keyword">is</span> <span class="number">4448097856</span></span><br><span class="line">after joint l2 id <span class="keyword">is</span> <span class="number">4448100544</span></span><br></pre></td></tr></table></figure><p>要注意，这里 l2 = l2 + [4]，表示拼接两个 List，返回一个新的 List。这个过程与 l1 无关，l1还是引用的原值。</p></li><li><p>Python 中参数的传递既不是值传递，也不是引用传递，而是赋值传递，或者是叫对象的引用传递。需要注意的是，这里的赋值或对象的引用传递，不是指向一个具体的内存地址，而是指向一个具体的对象。</p></li><li>如果对象是可变的，当其改变时，所有指向这个对象的变量都会改变。</li><li>如果对象不可变，简单的赋值只能改变其中一个变量的值，其余变量则不受影响。</li><li>如果你想通过一个函数来改变某个变量的值，通常有两种方法。一种是直接将可变数据类型（比如列表，字典，集合）当作参数传入，直接在其上修改；第二种则是创建一个新变量，来保存修改后的值，然后将其返回给原变量。在实际工作中，我们更倾向于使用后者，因为其表达清晰明了，不易出错。</li></ul><h2 id="装饰器-decorator"><a href="#装饰器-decorator" class="headerlink" title="装饰器 decorator"></a>装饰器 decorator</h2><p>所谓的装饰器，其实就是通过装饰器函数，来修改原函数的一些功能，使得原函数不需要修改。<br>Decorators is to modify the behavior of the function through a wrapper so we don’t have to actually modify the function.</p><ul><li>函数的返回值也可以是函数对象（闭包）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_closure</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_message</span><span class="params">(message)</span>:</span></span><br><span class="line">        print(<span class="string">'Got a message: &#123;&#125;'</span>.format(message))</span><br><span class="line">    <span class="keyword">return</span> get_message</span><br><span class="line"> </span><br><span class="line">send_message = func_closure()</span><br><span class="line">send_message(<span class="string">'hello world'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">Got a message: hello world</span><br></pre></td></tr></table></figure>这里函数 func_closure() 的返回值是函数对象 get_message() 本身</li><li>我们通常使用内置的装饰器@functools.wrap，它会帮助保留原函数的元信息（也就是将原函数的元信息，拷贝到对应的装饰器函数里）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_decorator</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">    @functools.wraps(func)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(<span class="string">'wrapper of decorator'</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line">    </span><br><span class="line"><span class="meta">@my_decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span><span class="params">(message)</span>:</span></span><br><span class="line">    print(message)</span><br><span class="line"> </span><br><span class="line">greet.__name__</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="string">'greet'</span></span><br></pre></td></tr></table></figure></li><li>类也可以作为装饰器。类装饰器主要依赖于函数<strong>call_()，每当你调用一个类的示例时，函数</strong>call__()就会被执行一次。</li><li>装饰器的嵌套<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@decorator1</span></span><br><span class="line"><span class="meta">@decorator2</span></span><br><span class="line"><span class="meta">@decorator3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 它的执行顺序从里到外，所以上面的语句也等效于下面这行代码：</span></span><br><span class="line">decorator1(decorator2(decorator3(func)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 'hello world'这个例子，就可以改写成下面这样：</span></span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_decorator1</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">    @functools.wraps(func)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(<span class="string">'execute decorator1'</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_decorator2</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">    @functools.wraps(func)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(<span class="string">'execute decorator2'</span>)</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@my_decorator1</span></span><br><span class="line"><span class="meta">@my_decorator2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span><span class="params">(message)</span>:</span></span><br><span class="line">    print(message)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">greet(<span class="string">'hello world'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">execute decorator1</span><br><span class="line">execute decorator2</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure></li><li><p>装饰器用法实例</p><ul><li>身份认证<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import functools</span><br><span class="line"></span><br><span class="line">def authenticate(func):</span><br><span class="line">    @functools.wraps(func)</span><br><span class="line">    def wrapper(*args, **kwargs):</span><br><span class="line">        request &#x3D; args[0]</span><br><span class="line">        if check_user_logged_in(request): # 如果用户处于登录状态</span><br><span class="line">            return func(*args, **kwargs) # 执行函数 post_comment() </span><br><span class="line">        else:</span><br><span class="line">            raise Exception(&#39;Authentication failed&#39;)</span><br><span class="line">    return wrapper</span><br><span class="line">    </span><br><span class="line">@authenticate</span><br><span class="line">def post_comment(request, ...)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li>日志记录<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_execution_time</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">    @functools.wraps(func)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        start = time.perf_counter()</span><br><span class="line">        res = func(*args, **kwargs)</span><br><span class="line">        end = time.perf_counter()</span><br><span class="line">        print(<span class="string">'&#123;&#125; took &#123;&#125; ms'</span>.format(func.__name__, (end - start) * <span class="number">1000</span>))</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line">    </span><br><span class="line"><span class="meta">@log_execution_time</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_similarity</span><span class="params">(items)</span>:</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li><li><p>输入合理性检查</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">validation_check</span><span class="params">(input)</span>:</span></span><br><span class="line"><span class="meta">    @functools.wraps(func)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span> </span><br><span class="line">        ... <span class="comment"># 检查输入是否合法</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">@validation_check</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">neural_network_training</span><span class="params">(param1, param2, ...)</span>:</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li><li><p>缓存 LRU cache，在 Python 中的表示形式是@lru_cache。@lru_cache会缓存进程中的函数参数和结果，当缓存满了以后，会删除 least recenly used 的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@lru_cache</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(param1, param2, ...)</span> # 检查用户设备类型，版本号等等</span></span><br><span class="line"><span class="function">    ...</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="metaclass"><a href="#metaclass" class="headerlink" title="metaclass"></a>metaclass</h2><p>事实上，meta-class 的 meta 这个词根，起源于希腊语词汇 meta，包含下面两种意思：</p><ul><li>“Beyond”，例如技术词汇 metadata，意思是描述数据的超越数据；</li><li><p>“Change”，例如技术词汇 metamorphosis，意思是改变的形态。<br>metaclass，一如其名，实际上同时包含了“超越类”和“变形类”的含义，完全不是“基本类”的意思。所以，要深入理解 metaclass，我们就要围绕它的超越变形特性。</p></li><li><p>所有的 Python 的用户定义类，都是 type 这个类的实例。</p></li><li>用户自定义类，只不过是 type 类的<strong>call</strong>运算符重载。</li><li>metaclass 是 type 的子类，通过替换 type 的<strong>call</strong>运算符重载机制，“超越变形”正常的类。</li></ul><h2 id="迭代器和生成器"><a href="#迭代器和生成器" class="headerlink" title="迭代器和生成器"></a>迭代器和生成器</h2><p>在 Python 中一切皆对象，对象的抽象就是类，而对象的集合就是容器。列表（list: [0, 1, 2]），元组（tuple: (0, 1, 2)），字典（dict: {0:0, 1:1, 2:2}），集合（set: set([0, 1, 2])）都是容器。</p><ul><li>严谨地说，迭代器（iterator）提供了一个 next 的方法。调用这个方法后，你要么得到这个容器的下一个对象，要么得到一个 StopIteration 的错误。你不需要像列表一样指定元素的索引，因为字典和集合这样的容器并没有索引一说。比如，字典采用哈希表实现，那么你就只需要知道，next 函数可以不重复不遗漏地一个一个拿到所有元素即可。</li><li><p>生成器是懒人版本的迭代器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_iterator</span><span class="params">()</span>:</span></span><br><span class="line">    show_memory_info(<span class="string">'initing iterator'</span>)</span><br><span class="line">    list_1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">'after iterator initiated'</span>)</span><br><span class="line">    print(sum(list_1))</span><br><span class="line">    show_memory_info(<span class="string">'after sum called'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_generator</span><span class="params">()</span>:</span></span><br><span class="line">    show_memory_info(<span class="string">'initing generator'</span>)</span><br><span class="line">    list_2 = (i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000000</span>))</span><br><span class="line">    show_memory_info(<span class="string">'after generator initiated'</span>)</span><br><span class="line">    print(sum(list_2))</span><br><span class="line">    show_memory_info(<span class="string">'after sum called'</span>)</span><br><span class="line"> </span><br><span class="line">%time test_iterator()</span><br><span class="line">%time test_generator()</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initing iterator memory used: <span class="number">48.9765625</span> MB</span><br><span class="line">after iterator initiated memory used: <span class="number">3920.30078125</span> MB</span><br><span class="line"><span class="number">4999999950000000</span></span><br><span class="line">after sum called memory used: <span class="number">3920.3046875</span> MB</span><br><span class="line">Wall time: <span class="number">17</span> s</span><br><span class="line">initing generator memory used: <span class="number">50.359375</span> MB</span><br><span class="line">after generator initiated memory used: <span class="number">50.359375</span> MB</span><br><span class="line"><span class="number">4999999950000000</span></span><br><span class="line">after sum called memory used: <span class="number">50.109375</span> MB</span><br><span class="line">Wall time: <span class="number">12.5</span> s</span><br></pre></td></tr></table></figure><p>在你调用 next() 函数的时候，才会生成下一个变量。生成器在 Python 的写法是用小括号括起来，(i for i in range(100000000))，即初始化了一个生成器。生成器并不会像迭代器一样占用大量内存，只有在被使用的时候才会调用。而且生成器在初始化的时候，并不需要运行一次生成操作，相比于 test_iterator() ，test_generator() 函数节省了一次生成一亿个元素的过程，因此耗时明显比迭代器短。</p></li><li><p><a href="https://www.programiz.com/python-programming/generator" target="_blank" rel="noopener">yield</a> 是魔术的关键。可以理解为，函数运行到这一行的时候，程序会从这里暂停，然后跳出到 next() 函数。那么 yield i ** k 是干什么的呢？它其实成了 next() 函数的返回值。</p></li><li>迭代器是一个有限集合，生成器则可以成为一个无限集。</li><li>给定一个 list 和一个指定数字，求这个数字在 list 中的位置。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_generator</span><span class="params">(L, target)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i, num <span class="keyword">in</span> enumerate(L):</span><br><span class="line">        <span class="keyword">if</span> num == target:</span><br><span class="line">            <span class="keyword">yield</span> i</span><br><span class="line"> </span><br><span class="line">print(list(index_generator([<span class="number">1</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>], <span class="number">2</span>)))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">[<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure>唯一需要强调的是， index_generator 会返回一个 Generator 对象，需要使用 list 转换为列表后，才能用 print 输出。</li><li>给定两个序列，判定第一个是不是第二个的子序列。（LeetCode 链接如下：<a href="https://leetcode.com/problems/is-subsequence/" target="_blank" rel="noopener">https://leetcode.com/problems/is-subsequence/</a> ）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def is_subsequence(a, b):</span><br><span class="line">    b &#x3D; iter(b)</span><br><span class="line">    return all(i in b for i in a)</span><br><span class="line"> </span><br><span class="line">print(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))</span><br><span class="line">print(is_subsequence([1, 4, 3], [1, 2, 3, 4, 5]))</span><br><span class="line"> </span><br><span class="line">########## 输出 ##########</span><br><span class="line"> </span><br><span class="line">True</span><br><span class="line">False</span><br></pre></td></tr></table></figure>这里的(i in b)，大致等价于下面这段代码：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    val = next(b)</span><br><span class="line">    <span class="keyword">if</span> val == i:</span><br><span class="line">        <span class="keyword">yield</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>这里非常巧妙地利用生成器的特性，next() 函数运行的时候，保存了当前的指针。</li><li>容器是可迭代对象，可迭代对象调用 iter() 函数，可以得到一个迭代器。迭代器可以通过 next() 函数来得到下一个元素，从而支持遍历。</li><li>生成器是一种特殊的迭代器（注意这个逻辑关系反之不成立）。使用生成器，你可以写出来更加清晰的代码；合理使用生成器，可以降低内存占用、优化程序结构、提高程序速度。</li><li>生成器在 Python 2 的版本上，是协程的一种重要实现方式；而 Python 3.5 引入 async await 语法糖后，生成器实现协程的方式就已经落后了。我们会在下节课，继续深入讲解 Python 协程。</li></ul><h2 id="协程-asyncio"><a href="#协程-asyncio" class="headerlink" title="协程 asyncio"></a>协程 asyncio</h2><ul><li>协程和多线程的区别，主要在于两点，一是协程为单线程；二是协程由用户决定，在哪些地方交出控制权，切换到下一个任务。</li><li>协程的写法更加简洁清晰，把 async / await 语法和 create_task 结合来用，对于中小级别的并发需求已经毫无压力。</li><li>写协程程序的时候，你的脑海中要有清晰的事件循环概念，知道程序在什么时候需要暂停、等待 I/O，什么时候需要一并执行到底。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">crawl_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    print(<span class="string">'crawling &#123;&#125;'</span>.format(url))</span><br><span class="line">    sleep_time = int(url.split(<span class="string">'_'</span>)[<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(sleep_time)</span><br><span class="line">    print(<span class="string">'OK &#123;&#125;'</span>.format(url))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(urls)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        <span class="keyword">await</span> crawl_page(url)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main([<span class="string">'url_1'</span>, <span class="string">'url_2'</span>, <span class="string">'url_3'</span>, <span class="string">'url_4'</span>]))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">crawling url_1</span><br><span class="line">OK url_1</span><br><span class="line">crawling url_2</span><br><span class="line">OK url_2</span><br><span class="line">crawling url_3</span><br><span class="line">OK url_3</span><br><span class="line">crawling url_4</span><br><span class="line">OK url_4</span><br><span class="line">Wall time: <span class="number">10</span> s</span><br></pre></td></tr></table></figure><p>async 修饰词声明异步函数，于是，这里的 crawl_page 和 main 都变成了异步函数。而调用异步函数，我们便可得到一个协程对象（coroutine object）。<br>await 是同步调用，因此， crawl_page(url) 在当前的调用结束之前，是不会触发下一次调用的。于是，这个代码效果就和上面完全一样了，相当于我们用异步接口写了个同步代码。</p><ul><li><p>执行协程有三种方法： </p><ol><li>首先，我们可以通过 await 来调用。await 执行的效果，和 Python 正常执行是一样的，也就是说程序会阻塞在这里，进入被调用的协程函数，执行完毕返回后再继续，而这也是 await 的字面意思</li><li>其次，我们可以通过 asyncio.create_task() 来创建任务</li><li>最后，我们需要 asyncio.run 来触发运行。asyncio.run 这个函数是 Python 3.7 之后才有的特性，可以让 Python 的协程接口变得非常简单，你不用去理会事件循环怎么定义和怎么使用的问题（我们会在下面讲）。一个非常好的编程规范是，asyncio.run(main()) 作为主程序的入口函数，在程序运行周期内，只调用一次 asyncio.run。</li></ol><ul><li>通过 asyncio.create_task 来创建任务。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">crawl_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    print(<span class="string">'crawling &#123;&#125;'</span>.format(url))</span><br><span class="line">    sleep_time = int(url.split(<span class="string">'_'</span>)[<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(sleep_time)</span><br><span class="line">    print(<span class="string">'OK &#123;&#125;'</span>.format(url))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(urls)</span>:</span></span><br><span class="line">    tasks = [asyncio.create_task(crawl_page(url)) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        <span class="keyword">await</span> task</span><br><span class="line"></span><br><span class="line">asyncio.run(main([<span class="string">'url_1'</span>, <span class="string">'url_2'</span>, <span class="string">'url_3'</span>, <span class="string">'url_4'</span>]))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>对于执行 tasks，还有另一种做法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">crawl_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    print(<span class="string">'crawling &#123;&#125;'</span>.format(url))</span><br><span class="line">    sleep_time = int(url.split(<span class="string">'_'</span>)[<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(sleep_time)</span><br><span class="line">    print(<span class="string">'OK &#123;&#125;'</span>.format(url))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(urls)</span>:</span></span><br><span class="line">    tasks = [asyncio.create_task(crawl_page(url)) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main([<span class="string">'url_1'</span>, <span class="string">'url_2'</span>, <span class="string">'url_3'</span>, <span class="string">'url_4'</span>]))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">crawling url_1</span><br><span class="line">crawling url_2</span><br><span class="line">crawling url_3</span><br><span class="line">crawling url_4</span><br><span class="line">OK url_1</span><br><span class="line">OK url_2</span><br><span class="line">OK url_3</span><br><span class="line">OK url_4</span><br><span class="line">Wall time: <span class="number">4.01</span> s</span><br></pre></td></tr></table></figure><p>唯一要注意的是，*tasks 解包列表，将列表变成了函数的参数；与之对应的是， ** dict 将字典变成了函数的参数。<br>asyncio.create_task，asyncio.run 这些函数都是 Python 3.7 以上的版本才提供的，自然，相比于旧接口它们也更容易理解和阅读。</p></li><li><p>解密协程运行时<br>顺序执行的时候</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'worker_1 start'</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">'worker_1 done'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_2</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'worker_2 start'</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    print(<span class="string">'worker_2 done'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'before await'</span>)</span><br><span class="line">    <span class="keyword">await</span> worker_1()</span><br><span class="line">    print(<span class="string">'awaited worker_1'</span>)</span><br><span class="line">    <span class="keyword">await</span> worker_2()</span><br><span class="line">    print(<span class="string">'awaited worker_2'</span>)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">before <span class="keyword">await</span></span><br><span class="line">worker_1 start</span><br><span class="line">worker_1 done</span><br><span class="line">awaited worker_1</span><br><span class="line">worker_2 start</span><br><span class="line">worker_2 done</span><br><span class="line">awaited worker_2</span><br><span class="line">Wall time: <span class="number">3</span> s</span><br></pre></td></tr></table></figure><p>并发执行的时候</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'worker_1 start'</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">'worker_1 done'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_2</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'worker_2 start'</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    print(<span class="string">'worker_2 done'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    task1 = asyncio.create_task(worker_1())</span><br><span class="line">    task2 = asyncio.create_task(worker_2())</span><br><span class="line">    print(<span class="string">'before await'</span>)</span><br><span class="line">    <span class="keyword">await</span> task1</span><br><span class="line">    print(<span class="string">'awaited worker_1'</span>)</span><br><span class="line">    <span class="keyword">await</span> task2</span><br><span class="line">    print(<span class="string">'awaited worker_2'</span>)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">before <span class="keyword">await</span></span><br><span class="line">worker_1 start</span><br><span class="line">worker_2 start</span><br><span class="line">worker_1 done</span><br><span class="line">awaited worker_1</span><br><span class="line">worker_2 done</span><br><span class="line">awaited worker_2</span><br><span class="line">Wall time: <span class="number">2.01</span> s</span><br></pre></td></tr></table></figure><p>为了更详细了解到协程和线程的具体区别，这里详细地分析了整个过程。步骤有点多，别着急，慢慢来看。</p></li></ul><ol><li>asyncio.run(main())，程序进入 main() 函数，事件循环开启；</li><li>task1 和 task2 任务被创建，并进入事件循环等待运行；运行到 print，输出 ‘before await’；</li><li>await task1 执行，用户选择从当前的主任务中切出，事件调度器开始调度 worker_1；</li><li>worker_1 开始运行，运行 print 输出’worker_1 start’，然后运行到 await asyncio.sleep(1)， 从当前任务切出，事件调度器开始调度 worker_2；</li><li>worker_2 开始运行，运行 print 输出 ‘worker_2 start’，然后运行 await asyncio.sleep(2) 从当前任务切出；</li><li>以上所有事件的运行时间，都应该在 1ms 到 10ms 之间，甚至可能更短，事件调度器从这个时候开始暂停调度；</li><li>一秒钟后，worker_1 的 sleep 完成，事件调度器将控制权重新传给 task_1，输出 ‘worker_1 done’，task_1 完成任务，从事件循环中退出；</li><li>await task1 完成，事件调度器将控制器传给主任务，输出 ‘awaited worker_1’，·然后在 await task2 处继续等待；</li><li>两秒钟后，worker_2 的 sleep 完成，事件调度器将控制权重新传给 task_2，输出 ‘worker_2 done’，task_2 完成任务，从事件循环中退出；</li><li>主任务输出 ‘awaited worker_2’，协程全任务结束，事件循环结束。</li></ol><ul><li>如果我们想给某些协程任务限定运行时间，一旦超时就取消，又该怎么做呢？再进一步，如果某些协程运行时出现错误，又该怎么处理呢？<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_time</span><span class="params">(s=<span class="string">""</span>)</span>:</span></span><br><span class="line">    now = datetime.now()</span><br><span class="line">    current_time = now.strftime(<span class="string">"%H:%M:%S"</span>)</span><br><span class="line">    print(<span class="string">"&#123;&#125; Current Time =&#123;&#125;"</span>.format(s, current_time))</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_1</span><span class="params">()</span>:</span></span><br><span class="line">    print_time(<span class="string">"start work1"</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print_time(<span class="string">"end work1"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_2</span><span class="params">()</span>:</span></span><br><span class="line">    print_time(<span class="string">"start work2"</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    print_time(<span class="string">"end work2"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> / <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_3</span><span class="params">()</span>:</span></span><br><span class="line">    print_time(<span class="string">"start work3"</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">3</span>)</span><br><span class="line">    print_time(<span class="string">"end work3"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    task_1 = asyncio.create_task(worker_1())</span><br><span class="line">    task_2 = asyncio.create_task(worker_2())</span><br><span class="line">    task_3 = asyncio.create_task(worker_3())</span><br><span class="line">    print_time(<span class="string">"start work in main"</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    print_time(<span class="string">"end work in main"</span>)</span><br><span class="line">    task_3.cancel()</span><br><span class="line"></span><br><span class="line">    res = <span class="keyword">await</span> asyncio.gather(task_1, task_2, task_3, return_exceptions=<span class="literal">True</span>)</span><br><span class="line">    print(res)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line">start work <span class="keyword">in</span> main Current Time =<span class="number">14</span>:<span class="number">41</span>:<span class="number">05</span></span><br><span class="line">start work1 Current Time =<span class="number">14</span>:<span class="number">41</span>:<span class="number">05</span></span><br><span class="line">start work2 Current Time =<span class="number">14</span>:<span class="number">41</span>:<span class="number">05</span></span><br><span class="line">start work3 Current Time =<span class="number">14</span>:<span class="number">41</span>:<span class="number">05</span></span><br><span class="line">end work1 Current Time =<span class="number">14</span>:<span class="number">41</span>:<span class="number">06</span></span><br><span class="line">end work <span class="keyword">in</span> main Current Time =<span class="number">14</span>:<span class="number">41</span>:<span class="number">07</span></span><br><span class="line">end work2 Current Time =<span class="number">14</span>:<span class="number">41</span>:<span class="number">07</span></span><br><span class="line">[<span class="number">1</span>, ZeroDivisionError(<span class="string">'division by zero'</span>), CancelledError()]</span><br></pre></td></tr></table></figure></li></ul><ol><li>从 main 函数程序入口开始，创建 3 个 task，进入事件循环等待运行。运行 await asyncio.sleep(2) 从当前主任务切出；</li><li>运行 task1, 又是await，切换到 task2， 还是 await， 切换到 task3，再次 await， 切回主任务。</li><li>一秒钟后，worker_1 的 sleep 完成，事件调度器将控制权重新传给 task_1， task1 结束。</li><li>两秒钟后，主程序的 sleep 完成， 取消 task_3.cancel()。</li><li>紧接着， task2 sleep 完成, 事件调度器将控制器 task2, task2 完成</li><li>task3 因为已经取消了，协程全任务结束，事件循环结束。</li><li>最后打印出结果，很稳</li></ol><p>worker_1 正常运行，worker_2 运行中出现错误，worker_3 执行时间过长被我们 cancel 掉了，这些信息会全部体现在最终的返回结果 res 中。不过要注意return_exceptions=True这行代码。如果不设置这个参数，错误就会完整地 throw 到我们这个执行层，从而需要 try except 来捕捉，这也就意味着其他还没被执行的任务会被全部取消掉。为了避免这个局面，我们将 return_exceptions 设置为 True 即可。</p><ul><li>用协程来实现一个经典的生产者消费者模型<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> / <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">worker_3</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    task_1 = asyncio.create_task(worker_1())</span><br><span class="line">    task_2 = asyncio.create_task(worker_2())</span><br><span class="line">    task_3 = asyncio.create_task(worker_3())</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)</span><br><span class="line">    task_3.cancel()</span><br><span class="line"> </span><br><span class="line">    res = <span class="keyword">await</span> asyncio.gather(task_1, task_2, task_3, return_exceptions=<span class="literal">True</span>)</span><br><span class="line">    print(res)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">[<span class="number">1</span>, ZeroDivisionError(<span class="string">'division by zero'</span>), CancelledError()]</span><br><span class="line">Wall time: <span class="number">2</span> s</span><br><span class="line">你可以看到，worker_1 正常运行，worker_2 运行中出现错误，worker_3 执行时间过长被我们 cancel 掉了，这些信息会全部体现在最终的返回结果 res 中。</span><br><span class="line"></span><br><span class="line">不过要注意return_exceptions=<span class="literal">True</span>这行代码。如果不设置这个参数，错误就会完整地 throw 到我们这个执行层，从而需要 <span class="keyword">try</span> <span class="keyword">except</span> 来捕捉，这也就意味着其他还没被执行的任务会被全部取消掉。为了避免这个局面，我们将 return_exceptions 设置为 <span class="literal">True</span> 即可。</span><br><span class="line"></span><br><span class="line">到这里，发现了没，线程能实现的，协程都能做到。那就让我们温习一下这些知识点，用协程来实现一个经典的生产者消费者模型吧。</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">consumer</span><span class="params">(queue, id)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        val = <span class="keyword">await</span> queue.get()</span><br><span class="line">        print(<span class="string">'&#123;&#125; get a val: &#123;&#125;'</span>.format(id, val))</span><br><span class="line">        <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">producer</span><span class="params">(queue, id)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        val = random.randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">await</span> queue.put(val)</span><br><span class="line">        print(<span class="string">'&#123;&#125; put a val: &#123;&#125;'</span>.format(id, val))</span><br><span class="line">        <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    queue = asyncio.Queue()</span><br><span class="line"> </span><br><span class="line">    consumer_1 = asyncio.create_task(consumer(queue, <span class="string">'consumer_1'</span>))</span><br><span class="line">    consumer_2 = asyncio.create_task(consumer(queue, <span class="string">'consumer_2'</span>))</span><br><span class="line"> </span><br><span class="line">    producer_1 = asyncio.create_task(producer(queue, <span class="string">'producer_1'</span>))</span><br><span class="line">    producer_2 = asyncio.create_task(producer(queue, <span class="string">'producer_2'</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">10</span>)</span><br><span class="line">    consumer_1.cancel()</span><br><span class="line">    consumer_2.cancel()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(consumer_1, consumer_2, producer_1, producer_2, return_exceptions=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line">%time asyncio.run(main())</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">producer_1 put a val: <span class="number">5</span></span><br><span class="line">producer_2 put a val: <span class="number">3</span></span><br><span class="line">consumer_1 get a val: <span class="number">5</span></span><br><span class="line">consumer_2 get a val: <span class="number">3</span></span><br><span class="line">producer_1 put a val: <span class="number">1</span></span><br><span class="line">producer_2 put a val: <span class="number">3</span></span><br><span class="line">consumer_2 get a val: <span class="number">1</span></span><br><span class="line">consumer_1 get a val: <span class="number">3</span></span><br><span class="line">producer_1 put a val: <span class="number">6</span></span><br><span class="line">producer_2 put a val: <span class="number">10</span></span><br><span class="line">consumer_1 get a val: <span class="number">6</span></span><br><span class="line">consumer_2 get a val: <span class="number">10</span></span><br><span class="line">producer_1 put a val: <span class="number">4</span></span><br><span class="line">producer_2 put a val: <span class="number">5</span></span><br><span class="line">consumer_2 get a val: <span class="number">4</span></span><br><span class="line">consumer_1 get a val: <span class="number">5</span></span><br><span class="line">producer_1 put a val: <span class="number">2</span></span><br><span class="line">producer_2 put a val: <span class="number">8</span></span><br><span class="line">consumer_1 get a val: <span class="number">2</span></span><br><span class="line">consumer_2 get a val: <span class="number">8</span></span><br><span class="line">Wall time: <span class="number">10</span> s</span><br></pre></td></tr></table></figure></li></ul><h2 id="并发编程之Futures"><a href="#并发编程之Futures" class="headerlink" title="并发编程之Futures"></a>并发编程之Futures</h2><ul><li>并发，通过线程和任务之间互相切换的方式实现，但同一时刻，只允许有一个线程或任务执行。并发通常应用于 I/O 操作频繁的场景，比如你要从网站上下载多个文件，I/O 操作的时间可能会比 CPU 运行处理的时间长得多。</li><li>而并行，则是指多个进程完全同步同时的执行。并行则更多应用于 CPU heavy 的场景，比如 MapReduce 中的并行计算，为了加快运行速度，一般会用多台机器、多个处理器来完成。</li><li>在 Python 中，并发并不是指同一时刻有多个操作（thread、task）同时进行。相反，某个特定的时刻，它只允许有一个操作发生，只不过线程 / 任务之间会互相切换，直到完成。</li><li>对于 threading，操作系统知道每个线程的所有信息，因此它会做主在适当的时候做线程切换。很显然，这样的好处是代码容易书写，因为程序员不需要做任何切换操作的处理；但是切换线程的操作，也有可能出现在一个语句执行的过程中（比如 x += 1），这样就容易出现 race condition 的情况。</li><li>对于 asyncio，主程序想要切换任务时，必须得到此任务可以被切换的通知，这样一来也就可以避免刚刚提到的 race condition 的情况。</li><li>所谓的并行，指的才是同一时刻、同时发生。Python 中的 multi-processing 便是这个意思，对于 multi-processing，你可以简单地这么理解：比如你的电脑是 6 核处理器，那么在运行程序时，就可以强制 Python 开 6 个进程，同时执行，以加快运行速度</li></ul><ul><li>我们具体来看这段代码，它是多线程版本和单线程版的主要区别所在：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> executor:</span><br><span class="line">     executor.map(download_one, sites)</span><br></pre></td></tr></table></figure>我们创建了一个线程池，总共有 5 个线程可以分配使用。executer.map() 与前面所讲的 Python 内置的 map() 函数类似，表示对 sites 中的每一个元素，并发地调用函数 download_one()。顺便提一下，在 download_one() 函数中，我们使用的 requests.get() 方法是线程安全的（thread-safe），因此在多线程的环境下，它也可以安全使用，并不会出现 race condition 的情况。</li><li><p>我们也可以用并行的方式去提高程序运行效率。你只需要在 download_all() 函数中，做出下面的变化即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> futures.ThreadPoolExecutor(workers) <span class="keyword">as</span> executor</span><br><span class="line">=&gt;</span><br><span class="line"><span class="keyword">with</span> futures.ProcessPoolExecutor() <span class="keyword">as</span> executor:</span><br></pre></td></tr></table></figure><p>在需要修改的这部分代码中，函数 ProcessPoolExecutor() 表示创建进程池，使用多个进程并行的执行程序。不过，这里我们通常省略参数 workers，因为系统会自动返回 CPU 的数量作为可以调用的进程数。</p></li><li><p>到底什么是 Futures<br>Python 中的 Futures 模块，位于 concurrent.futures 和 asyncio 中，它们都表示带有延迟的操作。Futures 会将处于等待状态的操作包裹起来放到队列中，这些操作的状态随时可以查询，当然，它们的结果或是异常，也能够在操作完成后被获取。Futures 中的 Executor 类，当我们执行 executor.submit(func) 时，它便会安排里面的 func() 函数执行，并返回创建好的 future 实例，以便你之后查询调用。</p></li><li><p>Futures 中的方法 done()，表示相对应的操作是否完成——True 表示完成，False 表示没有完成。不过，要注意，done() 是 non-blocking 的，会立即返回结果。相对应的 add_done_callback(fn)，则表示 Futures 完成后，相对应的参数函数 fn，会被通知并执行调用。</p></li><li>Futures 中还有一个重要的函数 result()，它表示当 future 完成后，返回其对应的结果或异常。而 as_completed(fs)，则是针对给定的 future 迭代器 fs，在其完成后，返回完成后的迭代器。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> concurrent.futures</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_one</span><span class="params">(url)</span>:</span></span><br><span class="line">    resp = requests.get(url)</span><br><span class="line">    print(<span class="string">'Read &#123;&#125; from &#123;&#125;'</span>.format(len(resp.content), url))</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_all</span><span class="params">(sites)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> executor:</span><br><span class="line">        to_do = []</span><br><span class="line">        <span class="keyword">for</span> site <span class="keyword">in</span> sites:</span><br><span class="line">            future = executor.submit(download_one, site)</span><br><span class="line">            to_do.append(future)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> future <span class="keyword">in</span> concurrent.futures.as_completed(to_do):</span><br><span class="line">            future.result()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    sites = [</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Arts'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:History'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Society'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Biography'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Mathematics'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Technology'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Geography'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Science'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Computer_science'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Python_(programming_language)'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Java_(programming_language)'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/PHP'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Node.js'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/The_C_Programming_Language'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Go_(programming_language)'</span></span><br><span class="line">    ]</span><br><span class="line">    start_time = time.perf_counter()</span><br><span class="line">    download_all(sites)</span><br><span class="line">    end_time = time.perf_counter()</span><br><span class="line">    print(<span class="string">'Download &#123;&#125; sites in &#123;&#125; seconds'</span>.format(len(sites), end_time - start_time))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">Read <span class="number">129886</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Arts</span><br><span class="line">Read <span class="number">107634</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Biography</span><br><span class="line">Read <span class="number">224118</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Society</span><br><span class="line">Read <span class="number">158984</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Mathematics</span><br><span class="line">Read <span class="number">184343</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:History</span><br><span class="line">Read <span class="number">157949</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Technology</span><br><span class="line">Read <span class="number">167923</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Geography</span><br><span class="line">Read <span class="number">94228</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Portal:Science</span><br><span class="line">Read <span class="number">391905</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Python_(programming_language)</span><br><span class="line">Read <span class="number">321352</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Computer_science</span><br><span class="line">Read <span class="number">180298</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Node.js</span><br><span class="line">Read <span class="number">321417</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Java_(programming_language)</span><br><span class="line">Read <span class="number">468421</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/PHP</span><br><span class="line">Read <span class="number">56765</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/The_C_Programming_Language</span><br><span class="line">Read <span class="number">324039</span> <span class="keyword">from</span> https://en.wikipedia.org/wiki/Go_(programming_language)</span><br><span class="line">Download <span class="number">15</span> sites <span class="keyword">in</span> <span class="number">0.21698231499976828</span> seconds</span><br></pre></td></tr></table></figure><p>这里，我们首先调用 executor.submit()，将下载每一个网站的内容都放进 future 队列 to_do，等待执行。然后是 as_completed() 函数，在 future 完成后，便输出结果。</p><p>不过，这里要注意，future 列表中每个 future 完成的顺序，和它在列表中的顺序并不一定完全一致。到底哪个先完成、哪个后完成，取决于系统的调度和每个 future 的执行时间。</p><ul><li>为什么多线程每次只能有一个线程执行？<br>同一时刻，Python 主程序只允许有一个线程执行，所以 Python 的并发，是通过多线程的切换完成的。Python 的解释器并不是线程安全的，为了解决由此带来的 race condition 等问题，Python 便引入了全局解释器锁，也就是同一时刻，只允许一个线程执行。当然，在执行 I/O 操作时，如果一个线程被 block 了，全局解释器锁便会被释放，从而让另一个线程能够继续执行。</li></ul><h2 id="并发编程之Asyncio"><a href="#并发编程之Asyncio" class="headerlink" title="并发编程之Asyncio"></a>并发编程之Asyncio</h2><p>在处理 I/O 操作时，使用多线程与普通的单线程相比，效率得到了极大的提高。你可能会想，既然这样，为什么还需要 Asyncio？</p><ol><li>比如，多线程运行过程容易被打断，因此有可能出现 race condition 的情况；</li><li>再如，线程切换本身存在一定的损耗，线程数不能无限增加，因此，如果你的 I/O 操作非常 heavy，多线程很有可能满足不了高效率、高质量的需求。</li></ol><p>Sync VS Async</p><ul><li>所谓 Sync，是指操作一个接一个地执行，下一个操作必须等上一个操作完成后才能执行。</li><li>而 Async 是指不同操作间可以相互交替执行，如果其中的某个操作被 block 了，程序并不会等待，而是会找出可执行的操作继续执行。</li><li>事实上，Asyncio 和其他 Python 程序一样，是单线程的，它只有一个主线程，但是可以进行多个不同的任务（task），这里的任务，就是特殊的 future 对象。这些不同的任务，被一个叫做 event loop 的对象所控制。你可以把这里的任务，类比成多线程版本里的多个线程。<br>为了简化讲解这个问题，我们可以假设任务只有两个状态：一是预备状态；二是等待状态。所谓的预备状态，是指任务目前空闲，但随时待命准备运行。而等待状态，是指任务已经运行，但正在等待外部的操作完成，比如 I/O 操作。<br>在这种情况下，event loop 会维护两个任务列表，分别对应这两种状态；并且选取预备状态的一个任务（具体选取哪个任务，和其等待的时间长短、占用的资源等等相关），使其运行，一直到这个任务把控制权交还给 event loop 为止。<br>当任务把控制权交还给 event loop 时，event loop 会根据其是否完成，把任务放到预备或等待状态的列表，然后遍历等待状态列表的任务，查看他们是否完成。<br>如果完成，则将其放到预备状态的列表；如果未完成，则继续放在等待状态的列表。这样，当所有任务被重新放置在合适的列表后，新一轮的循环又开始了：event loop 继续从预备状态的列表中选取一个任务使其执行…如此周而复始，直到所有任务完成。</li><li>值得一提的是，对于 Asyncio 来说，它的任务在运行时不会被外部的一些因素打断，因此 Asyncio 内的操作不会出现 race condition 的情况，这样你就不需要担心线程安全的问题了。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download_one</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url) <span class="keyword">as</span> resp:</span><br><span class="line">            print(<span class="string">'Read &#123;&#125; from &#123;&#125;'</span>.format(resp.content_length, url))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download_all</span><span class="params">(sites)</span>:</span></span><br><span class="line">    tasks = [asyncio.create_task(download_one(site)) <span class="keyword">for</span> site <span class="keyword">in</span> sites]</span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    sites = [</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Arts'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:History'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Society'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Biography'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Mathematics'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Technology'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Geography'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Portal:Science'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Computer_science'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Python_(programming_language)'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Java_(programming_language)'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/PHP'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Node.js'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/The_C_Programming_Language'</span>,</span><br><span class="line">        <span class="string">'https://en.wikipedia.org/wiki/Go_(programming_language)'</span></span><br><span class="line">    ]</span><br><span class="line">    start_time = time.perf_counter()</span><br><span class="line">    asyncio.run(download_all(sites))</span><br><span class="line">    end_time = time.perf_counter()</span><br><span class="line">    print(<span class="string">'Download &#123;&#125; sites in &#123;&#125; seconds'</span>.format(len(sites), end_time - start_time))</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>这里的 Async 和 await 关键字是 Asyncio 的最新写法，表示这个语句 / 函数是 non-block 的，正好对应前面所讲的 event loop 的概念。如果任务执行的过程需要等待，则将其放入等待状态的列表中，然后继续执行预备状态列表里的任务。</li><li>主函数里的 asyncio.run(coro) 是 Asyncio 的 root call，表示拿到 event loop，运行输入的 coro，直到它结束，最后关闭这个 event loop。事实上，asyncio.run() 是 Python3.7+ 才引入的</li><li>这里的asyncio.create_task(coro)，表示对输入的协程 coro 创建一个任务，安排它的执行，并返回此任务对象。这个函数也是 Python 3.7+ 新增的，如果是之前的版本，你可以用asyncio.ensure_future(coro)等效替代。可以看到，这里我们对每一个网站的下载，都创建了一个对应的任务。</li><li><p>asyncio.gather(*aws, loop=None, return_exception=False)，则表示在 event loop 中运行aws序列的所有任务。当然，除了例子中用到的这几个函数，Asyncio 还提供了很多其他的用法，你可以查看 <a href="https://docs.python.org/3/library/asyncio-eventloop.html" target="_blank" rel="noopener">相应文档</a> 进行了解。</p></li><li><p>Asyncio 有缺陷吗？想用好 Asyncio，特别是发挥其强大的功能，很多情况下必须得有相应的 Python 库支持。</p></li><li><p>多线程还是 Asyncio, 总的来说，你可以遵循以下伪代码的规范：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> io_bound:</span><br><span class="line">    <span class="keyword">if</span> io_slow:</span><br><span class="line">        print(<span class="string">'Use Asyncio'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Use multi-threading'</span>)</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> cpu_bound:</span><br><span class="line">    print(<span class="string">'Use multi-processing'</span>)</span><br></pre></td></tr></table></figure></li><li>如果是 I/O bound，并且 I/O 操作很慢，需要很多任务 / 线程协同实现，那么使用 Asyncio 更合适。</li><li>如果是 I/O bound，但是 I/O 操作很快，只需要有限数量的任务 / 线程，那么使用多线程就可以了。</li><li>如果是 CPU bound，则需要使用多进程来提高程序运行效率。</li></ul><h2 id="Python-GIL（全局解释器锁）"><a href="#Python-GIL（全局解释器锁）" class="headerlink" title="Python GIL（全局解释器锁）"></a>Python GIL（全局解释器锁）</h2><ul><li>Python 的线程，的的确确封装了底层的操作系统线程，在 Linux 系统里是 Pthread（全称为 POSIX Thread），而在 Windows 系统里是 Windows Thread。另外，Python 的线程，也完全受操作系统管理，比如协调何时执行、管理内存资源、管理中断等等。所以，虽然 Python 的线程和 C++ 的线程本质上是不同的抽象，但它们的底层并没有什么不同。</li><li>GIL，是最流行的 Python 解释器 CPython 中的一个技术术语。它的意思是全局解释器锁，本质上是类似操作系统的 Mutex。每一个 Python 线程，在 CPython 解释器中执行时，都会先锁住自己的线程，阻止别的线程执行。当然，CPython 会做一些小把戏，轮流执行 Python 线程。这样一来，用户看到的就是“伪并行”——Python 线程在交错执行，来模拟真正并行的线程。</li><li>CPython 使用引用计数来管理内存，所有 Python 脚本中创建的实例，都会有一个引用计数，来记录有多少个指针指向它。当引用计数只有 0 时，则会自动释放内存。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.getrefcount(a)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>这个例子中，a 的引用计数是 3，因为有 a、b 和作为参数传递的 getrefcount 这三个地方，都引用了一个空列表。</li><li>CPython 引进 GIL 其实主要就是这么两个原因：一是设计者为了规避类似于内存管理这样的复杂的竞争风险问题（race condition）；二是因为 CPython 大量使用 C 语言库，但大部分 C 语言库都不是原生线程安全的（线程安全会降低性能和增加复杂度）。</li><li>GIL 是如何工作的: 一个 GIL 在 Python 程序的工作示例。其中，Thread 1、2、3 轮流执行，每一个线程在开始执行时，都会锁住 GIL，以阻止别的线程执行；同样的，每一个线程执行完一段后，会释放 GIL，以允许别的线程开始利用资源。</li><li>为什么 Python 线程会去主动释放 GIL 呢？CPython 中还有另一个机制，叫做 check_interval，意思是 CPython 解释器会去轮询检查线程 GIL 的锁住情况。每隔一段时间，Python 解释器就会强制当前线程去释放 GIL，这样别的线程才能有执行的机会。不同版本的 Python 中，check interval 的实现方式并不一样。早期的 Python 是 100 个 ticks，大致对应了 1000 个 bytecodes；而 Python 3 以后，interval 是 15 毫秒。当然，我们不必细究具体多久会强制释放 GIL，这不应该成为我们程序设计的依赖条件，我们只需明白，CPython 解释器会在一个“合理”的时间范围内释放 GIL 就可以了。</li><li>GIL 的设计，主要是为了方便 CPython 解释器层面的编写者，而不是 Python 应用层面的程序员。作为 Python 的使用者，我们还是需要 lock 等工具，来确保线程安全。</li><li>如何绕过 GIL: 1. 绕过 CPython，使用 JPython（Java 实现的 Python 解释器）等别的实现； 2. 把关键性能代码，放到别的语言（一般是 C++）中实现。</li><li>GIL 与多线程的关系: GIL 只支持单线程，而 Python 支持多线程，这两者之间究竟是什么关系呢？</li></ul><ol><li>其实，GIL 的存在与 Python 支持多线程并不矛盾。前面我们讲过，GIL 是指同一时刻，程序只能有一个线程运行；而 Python 中的多线程，是指多个线程交替执行，造成一个“伪并行”的结果，但是具体到某一时刻，仍然只有 1 个线程在运行，并不是真正的多线程并行</li><li>举个例子来理解。比如，我用 10 个线程来爬取 50 个网站的内容。线程 1 在爬取第 1 个网站时，被 I/O block 住了，处于等待状态；这时，GIL 就会释放，而线程 2 就会开始执行，去爬取第 2 个网站，依次类推。等到线程 1 的 I/O 操作完成时，主程序便又会切回线程 1，让其完成剩下的操作。这样一来，从用户角度看到的，便是我们所说的多线程。</li></ol><h2 id="Python-垃圾回收机制"><a href="#Python-垃圾回收机制" class="headerlink" title="Python 垃圾回收机制"></a>Python 垃圾回收机制</h2><ul><li>什么是内存泄漏呢？这里的泄漏，并不是说你的内存出现了信息安全问题，被恶意程序利用了，而是指程序本身没有设计好，导致程序未能释放已不再使用的内存。内存泄漏也不是指你的内存在物理上消失了，而是意味着代码在分配了某段内存后，因为设计错误，失去了对这段内存的控制，从而造成了内存的浪费。</li><li><p>计数引用, Python 中一切皆对象。因此，你所看到的一切变量，本质上都是对象的一个指针。当这个对象的引用计数（指针数）为 0 的时候，说明这个对象永不可达，自然它也就成为了垃圾，需要被回收。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前 python 程序占用的内存大小</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_memory_info</span><span class="params">(hint)</span>:</span></span><br><span class="line">    pid = os.getpid()</span><br><span class="line">    p = psutil.Process(pid)</span><br><span class="line"></span><br><span class="line">    info = p.memory_full_info()</span><br><span class="line">    memory = info.uss / <span class="number">1024.</span> / <span class="number">1024</span></span><br><span class="line">    print(<span class="string">'&#123;&#125; memory used: &#123;&#125; MB'</span>.format(hint, memory))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    show_memory_info(<span class="string">'initial'</span>)</span><br><span class="line">    a = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">'after a created'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">show_memory_info(<span class="string">'finished'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------------------------</span></span><br><span class="line">initial memory used: <span class="number">6.0625</span> MB</span><br><span class="line">after a created memory used: <span class="number">385.87890625</span> MB</span><br><span class="line">finished memory used: <span class="number">12.7421875</span> MB</span><br></pre></td></tr></table></figure><p>调用函数 func()，在列表 a 被创建之后，内存占用迅速增加到了 433 MB：而在函数调用结束后，内存则返回正常。函数内部声明的列表 a 是局部变量，在函数返回后，局部变量的引用会注销掉；此时，列表 a 所指代对象的引用数为 0，Python 便会执行垃圾回收，因此之前占用的大量内存就又回来了。</p></li><li><p>深入看一下 Python 内部的引用计数机制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line">a = []</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 两次引用，一次来自 a，一次来自 getrefcount</span></span><br><span class="line">print(sys.getrefcount(a))</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a)</span>:</span></span><br><span class="line">    <span class="comment"># 四次引用，a，python 的函数调用栈，函数参数，和 getrefcount</span></span><br><span class="line">    print(sys.getrefcount(a))</span><br><span class="line"> </span><br><span class="line">func(a)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 两次引用，一次来自 a，一次来自 getrefcount，函数 func 调用已经不存在</span></span><br><span class="line">print(sys.getrefcount(a))</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>sys.getrefcount() 这个函数，可以查看一个变量的引用次数。这段代码本身应该很好理解，不过别忘了，getrefcount 本身也会引入一次计数。另一个要注意的是，在函数调用发生的时候，会产生额外的两次引用，一次来自函数栈，另一个是函数参数。 函数栈引用这里有点不解？</p></li><li><p>另外一个示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line">a = []</span><br><span class="line"> </span><br><span class="line">print(sys.getrefcount(a)) <span class="comment"># 两次</span></span><br><span class="line"> </span><br><span class="line">b = a</span><br><span class="line"> </span><br><span class="line">print(sys.getrefcount(a)) <span class="comment"># 三次</span></span><br><span class="line"> </span><br><span class="line">c = b</span><br><span class="line">d = b</span><br><span class="line">e = c</span><br><span class="line">f = e</span><br><span class="line">g = d</span><br><span class="line"> </span><br><span class="line">print(sys.getrefcount(a)) <span class="comment"># 八次</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><p>需要你稍微注意一下，a、b、c、d、e、f、g 这些变量全部指代的是同一个对象，而 sys.getrefcount() 函数并不是统计一个指针，而是要统计一个对象被引用的次数，所以最后一共会有八次引用。</p></li><li><p>手动释放内存，应该怎么做呢？方法同样很简单。你只需要先调用 del a 来删除一个对象；然后强制调用 gc.collect()，即可手动启动垃圾回收。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"> </span><br><span class="line">show_memory_info(<span class="string">'initial'</span>)</span><br><span class="line"> </span><br><span class="line">a = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000000</span>)]</span><br><span class="line"> </span><br><span class="line">show_memory_info(<span class="string">'after a created'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">del</span> a</span><br><span class="line">gc.collect()</span><br><span class="line"> </span><br><span class="line">show_memory_info(<span class="string">'finish'</span>)</span><br><span class="line">print(a)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initial memory used: <span class="number">48.1015625</span> MB</span><br><span class="line">after a created memory used: <span class="number">434.3828125</span> MB</span><br><span class="line">finish memory used: <span class="number">48.33203125</span> MB</span><br><span class="line"> </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">NameError                                 Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input<span class="number">-12</span><span class="number">-153e15063</span>d8a&gt; <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">     <span class="number">11</span> </span><br><span class="line">     <span class="number">12</span> show_memory_info(<span class="string">'finish'</span>)</span><br><span class="line">---&gt; 13 print(a)</span><br><span class="line"> </span><br><span class="line">NameError: name <span class="string">'a'</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure></li><li><p>面试官问：引用次数为 0 是垃圾回收启动的充要条件吗？还有没有其他可能性呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    show_memory_info(<span class="string">'initial'</span>)</span><br><span class="line">    a = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000000</span>)]</span><br><span class="line">    b = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">'after a, b created'</span>)</span><br><span class="line">    a.append(b)</span><br><span class="line">    b.append(a)</span><br><span class="line"> </span><br><span class="line">func()</span><br><span class="line">show_memory_info(<span class="string">'finished'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initial memory used: <span class="number">47.984375</span> MB</span><br><span class="line">after a, b created memory used: <span class="number">822.73828125</span> MB</span><br><span class="line">finished memory used: <span class="number">821.73046875</span> MB</span><br></pre></td></tr></table></figure><p>这里，a 和 b 互相引用，并且，作为局部变量，在函数 func 调用结束后，a 和 b 这两个指针从程序意义上已经不存在了。但是，很明显，依然有内存占用！为什么呢？因为互相引用，导致它们的引用数都不为 0。更隐蔽的情况是出现一个引用环，在工程代码比较复杂的情况下，引用环还真不一定能被轻易发现。</p></li><li><p>Python 本身能够处理这种情况，我们刚刚讲过的，可以显式调用 gc.collect() ，来启动垃圾回收。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    show_memory_info(<span class="string">'initial'</span>)</span><br><span class="line">    a = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000000</span>)]</span><br><span class="line">    b = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000000</span>)]</span><br><span class="line">    show_memory_info(<span class="string">'after a, b created'</span>)</span><br><span class="line">    a.append(b)</span><br><span class="line">    b.append(a)</span><br><span class="line"> </span><br><span class="line">func()</span><br><span class="line">gc.collect()</span><br><span class="line">show_memory_info(<span class="string">'finished'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">########## 输出 ##########</span></span><br><span class="line"> </span><br><span class="line">initial memory used: <span class="number">49.51171875</span> MB</span><br><span class="line">after a, b created memory used: <span class="number">824.1328125</span> MB</span><br><span class="line">finished memory used: <span class="number">49.98046875</span> MB</span><br></pre></td></tr></table></figure></li><li>Python 使用标记清除（mark-sweep）算法和分代收集（generational），来启用针对循环引用的自动垃圾回收。</li><li>先来看标记清除算法。我们先用图论来理解不可达的概念。对于一个有向图，如果从一个节点出发进行遍历，并标记其经过的所有节点；那么，在遍历结束后，所有没有被标记的节点，我们就称之为不可达节点。显而易见，这些节点的存在是没有任何意义的，自然的，我们就需要对它们进行垃圾回收。当然，每次都遍历全图，对于 Python 而言是一种巨大的性能浪费。所以，在 Python 的垃圾回收实现中，mark-sweep 使用双向链表维护了一个数据结构，并且只考虑容器类的对象（只有容器类对象才有可能产生循环引用）。</li><li>分代收集算法，则是另一个优化手段。Python 将所有对象分为三代。刚刚创立的对象是第 0 代；经过一次垃圾回收后，依然存在的对象，便会依次从上一代挪到下一代。而每一代启动自动垃圾回收的阈值，则是可以单独指定的。当垃圾回收器中新增对象减去删除对象达到相应的阈值时，就会对这一代对象启动垃圾回收。分代收集基于的思想是，新生的对象更有可能被垃圾回收，而存活更久的对象也有更高的概率继续存活。因此，通过这种做法，可以节约不少计算量，从而提高 Python 的性能。</li><li>调试内存泄漏: objgraph，一个非常好用的可视化引用关系的包。在这个包中，我主要推荐两个函数，第一个是 show_refs()，它可以生成清晰的引用关系图。另一个非常有用的函数，是 show_backrefs()。</li></ul><h2 id="多进程与多线程的应用场景"><a href="#多进程与多线程的应用场景" class="headerlink" title="多进程与多线程的应用场景"></a>多进程与多线程的应用场景</h2><ul><li><p>如果你想对 CPU 密集型任务加速，使用多线程是无效的，请使用多进程。这里所谓的 CPU 密集型任务，是指会消耗大量 CPU 资源的任务，比如求 1 到 100000000 的乘积，或者是把一段很长的文字编码后又解码等等。使用多线程之所以无效，原因正是我们前面刚讲过的，Python 多线程的本质是多个线程互相切换，但同一时刻仍然只允许一个线程运行。因此，你使用多线程，和使用一个主线程，本质上来说并没有什么差别；反而在很多情况下，因为线程切换带来额外损耗，还会降低程序的效率。如果使用多进程，就可以允许多个进程之间 in parallel 地执行任务，所以能够有效提高程序的运行效率。</p></li><li><p>至于 I/O 密集型任务，如果想要加速，请优先使用多线程或 Asyncio。当然，使用多进程也可以达到目的，但是完全没有这个必要。因为对 I/O 密集型任务来说，大多数时间都浪费在了 I/O 等待上。因此，在一个线程 / 任务等待 I/O 时，我们只需要切换线程 / 任务去执行其他 I/O 操作就可以了。不过，如果 I/O 操作非常多、非常 heavy，需要建立的连接也比较多时，我们一般会选择 Asyncio。因为 Asyncio 的任务切换更加轻量化，并且它能启动的任务数也远比多线程启动的线程数要多。当然，如果 I/O 的操作不是那么的 heavy，那么使用多线程也就足够了。</p></li></ul><h1 id="规范篇"><a href="#规范篇" class="headerlink" title="规范篇"></a>规范篇</h1><h2 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h2><ul><li>《8 号 Python 增强规范》（Python Enhacement Proposal #8），以下简称 PEP8；</li><li>《Google Python 风格规范》（Google Python Style Guide），以下简称 Google Style，这是源自 Google 内部的风格规范。公开发布的社区版本，是为了让 Google 旗下所有 Python 开源项目的编程风格统一。（<a href="http://google.github.io/styleguide/pyguide.html）" target="_blank" rel="noopener">http://google.github.io/styleguide/pyguide.html）</a></li><li>统一的编程规范能提高开发效率。而开发效率，关乎三类对象，也就是阅读者、编程者和机器。他们的优先级是阅读者的体验 &gt;&gt; 编程者的体验 &gt;&gt; 机器的体验。</li><li>对于命名原则，我想很多人应该都有所理解，PEP8 第 38 条规定命名必须有意义，不能是无意义的单字母。</li><li>Google Style 2.2 条规定，Python 代码中的 import 对象，只能是 package 或者 module。</li><li>正确的是在代码风格中，当你和 None 比较时候永远使用 is, 不要忘记，Python 中还有隐式布尔转换, 当你明确想要比较对象是否是 None 时，一定要显式地用 is None。</li></ul><h2 id="分解代码"><a href="#分解代码" class="headerlink" title="分解代码"></a>分解代码</h2><ul><li>PEP 是 Python Enhancement Proposal 的缩写，翻译过来叫“Python 增强规范”。正如我们写文章，会有句式、标点、段落格式、开头缩进等标准的规范一样，Python 书写自然也有一套较为官方的规范。PEP 8 就是这样一种规范，它存在的意义，就是让 Python 更易阅读，换句话，增强代码可读性。</li><li>Pycharm 已经内置了 PEP 8 规范检测器，它会自动对编码不规范的地方进行检查，然后指出错误，并推荐修改方式</li><li>Python 的缩进其实可以写成很多种，Tab、双空格、四空格、空格和 Tab 混合等。而 PEP 8 规范告诉我们，请选择四个空格的缩进，不要使用 Tab，更不要 Tab 和空格混着用。</li><li>每行最大长度请限制在 79 个字符。</li><li>空行规范: 全局的类和函数的上方需要空两个空行，而类的函数之间需要空一个空行。函数内部也可以使用空行，和英语的段落一样，用来区分不同意群之间的代码块。但是记住最多空一行，千万不要滥用。</li><li>Python 本身允许把多行合并为一行，使用分号隔开，但这是 PEP 8 不推荐的做法。所以，即使是使用控制语句 if / while / for，你的执行语句哪怕只有一行命令，也请另起一行，这样可以更大程度提升阅读效率。</li><li>至于代码的尾部，每个代码文件的最后一行为空行，并且只有这一个空行。</li><li>空格规范: 函数的参数列表中，调用函数的参数列表中会出现逗号，请注意逗号后要跟一个空格，这是英语的使用习惯，也能让每个参数独立阅读，更清晰。冒号经常被用来初始化字典，冒号后面也要跟一个空格。Python 中我们可以使用#进行单独注释，请记得要在#后、注释前加一个空格。对于操作符，例如+，-，*，/，&amp;，|，=，==，!=，请在两边都保留空格。不过与此对应，括号内的两端并不需要空格。</li><li>换行规范: 第一种，通过括号来将过长的运算进行封装，此时虽然跨行，但是仍处于一个逻辑引用之下。 第二种，则是通过换行符来实现。</li><li>文档规范: 首先，所有 import 尽量放在开头。其次，不要使用 import 一次导入多个模块。虽然我们可以在一行中 import 多个模块，并用逗号分隔，但请不要这么做。import time, os 是 PEP 8 不推荐的做法。如果你采用 from module import func 这样的语句，请确保 func 在本文件中不会出现命名冲突。不过，你其实可以通过 from module import func as new_func 来进行重命名，从而避免冲突。</li><li>注释规范: 对于大的逻辑块，我们可以在最开始相同的缩进处以 # 开始写注释。至于行注释，如空格规范中所讲，我们可以在一行后面跟两个空格，然后以 # 开头加入注释。不过，请注意，行注释并不是很推荐的方式。</li><li>文档描述: ，类和函数的注释，为的是让读者快速理解这个函数做了什么，它输入的参数和格式，输出的返回值和格式，以及其他需要注意的地方。至于 docstring 的写法，它是用三个双引号开始、三个双引号结尾。我们首先用一句话简单说明这个函数做什么，然后跟一段话来详细解释；再往后是参数列表、参数格式、返回值格式。</li><li>命名规范: 变量名请拒绝使用 a b c d 这样毫无意义的单字符，我们应该使用能够代表其意思的变量名,一般来说，变量使用小写，通过下划线串联起来，</li></ul><ol><li>例如：data_format、input_spec、image_data_set。唯一可以使用单字符的地方是迭代，比如 for i in range(n) 这种，为了精简可以使用。如果是类的私有变量，请记得前面增加两个下划线。</li><li>对于常量，最好的做法是全部大写，并通过下划线连接，例如：WAIT_TIME、SERVER_ADDRESS、PORT_NUMBER。</li><li>对于函数名，同样也请使用小写的方式，通过下划线连接起来，例如：launch_nuclear_missile()、check_input_validation()。</li><li>对于类名，则应该首字母大写，然后合并起来，例如：class SpatialDropout2D()、class FeatureSet()。</li></ol><ul><li>代码分解技巧: 编程中一个核心思想是，不写重复代码。重复代码大概率可以通过使用条件、循环、构造函数和类来解决。而另一个核心思想则是，减少迭代层数，尽可能让 Python 代码扁平化，毕竟，人的大脑无法处理过多的栈操作。</li><li>一个函数的粒度应该尽可能细，不要让一个函数做太多的事情。所以，对待一个复杂的函数，我们需要尽可能地把它拆分成几个功能简单的函数，然后合并起来。那么，应该如何拆分函数呢？</li><li>以一个简单的二分搜索来举例说明。我给定一个非递减整数数组，和一个 target，要求你找到数组中最小的一个数 x，可以满足 x*x &gt; target。一旦不存在，则返回 -1。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(arr, target)</span>:</span></span><br><span class="line">    l, r = <span class="number">0</span>, len(arr) - <span class="number">1</span></span><br><span class="line">    ret = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">        m = (l + r) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> arr[m] * arr[m] &gt; target:</span><br><span class="line">            ret = m</span><br><span class="line">            r = m - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = m + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ret == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[ret]</span><br></pre></td></tr></table></figure><p>给出的第一段代码这样的写法，在算法比赛和面试中已经 OK 了。不过，从工程角度来说，我们还能继续优化一下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comp</span><span class="params">(x, target)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x * x &gt; target</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span><span class="params">(arr, target)</span>:</span></span><br><span class="line">    l, r = <span class="number">0</span>, len(arr) - <span class="number">1</span></span><br><span class="line">    ret = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">        m = (l + r) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> comp(arr[m], target):</span><br><span class="line">            ret = m</span><br><span class="line">            r = m - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = m + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">(arr, target)</span>:</span></span><br><span class="line">    id = binary_search(arr, target)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> id != <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[id]</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><br>第二段代码中，我把不同功能的代码拿了出来。其中，comp() 函数作为核心判断，拿出来后可以让整个程序更清晰；同时，我也把二分搜索的主程序拿了出来，只负责二分搜索；最后的 solve() 函数拿到结果，决定返回不存在，还是返回值。这样一来，每个函数各司其职，阅读性也能得到一定提高。</p><ul><li>最后，我们再来看一下如何拆分类。老规矩，先看代码：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, sex, age, job_title, job_description, company_name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">        self.job_title = job_title</span><br><span class="line">        self.job_description = description</span><br><span class="line">        self.company_name = company_name</span><br></pre></td></tr></table></figure>job 在其中出现了很多次，而且它们表达的是一个意义实体，这种情况下，我们可以考虑将这部分分解出来，作为单独的类。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, sex, age, job_title, job_description, company_name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.age = age</span><br><span class="line">        self.job = Job(job_title, job_description, company_name)</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Job</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, job_title, job_description, company_name)</span>:</span></span><br><span class="line">        </span><br><span class="line">        self.job_title = job_title</span><br><span class="line">        self.job_description = description</span><br><span class="line">        self.company_name = company_name</span><br></pre></td></tr></table></figure></li></ul><h2 id="合理利用assert"><a href="#合理利用assert" class="headerlink" title="合理利用assert"></a>合理利用assert</h2><ul><li><p>Python 的 assert 语句，可以说是一个 debug 的好工具，主要用于测试一个条件是否满足。如果测试的条件满足，则什么也不做，相当于执行了 pass 语句；如果测试条件不满足，便会抛出异常 AssertionError，并返回具体的错误信息（optional）。它的具体语法是下面这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">assert_stmt ::=  <span class="string">"assert"</span> expression [<span class="string">","</span> expression]</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __debug__:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> expression: <span class="keyword">raise</span> AssertionError</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> <span class="number">1</span> == <span class="number">2</span>,  <span class="string">'assertion is wrong'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __debug__:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> expression1: <span class="keyword">raise</span> AssertionError(expression2)</span><br></pre></td></tr></table></figure></li><li><p>一定记住，不要在使用 assert 时加入括号，比如下面这个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span>(<span class="number">1</span> == <span class="number">2</span>, <span class="string">'This should fail'</span>)</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">&lt;ipython-input-8-2c057bd7fe24&gt;:1: SyntaxWarning: assertion is always true, perhaps remove parentheses?</span><br><span class="line">  <span class="keyword">assert</span>(<span class="number">1</span> == <span class="number">2</span>, <span class="string">'This should fail'</span>)</span><br></pre></td></tr></table></figure></li><li><p>在实际工作中，assert 还有一些很常见的用法，比如这里函数 func() 里的所有操作，都是基于输入必须是 list 这个前提。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(input)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> isinstance(input, list), <span class="string">'input must be type of list'</span></span><br><span class="line">    <span class="comment"># 下面的操作都是基于前提：input 必须是 list</span></span><br><span class="line">    <span class="keyword">if</span> len(input) == <span class="number">1</span>:</span><br><span class="line">        ...</span><br><span class="line">    <span class="keyword">elif</span> len(input) == <span class="number">2</span>:</span><br><span class="line">        ...</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure></li><li><p>assert 错误示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_course</span><span class="params">(user, course_id)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> user_is_admin(user), <span class="string">'user must be admin'</span></span><br><span class="line">    <span class="keyword">assert</span> course_exist(course_id), <span class="string">'course id must exist'</span></span><br><span class="line">    delete(course_id)</span><br></pre></td></tr></table></figure><p>assert 的检查是可以被关闭的，比如在运行 Python 程序时，加入-O这个选项就会让 assert 失效。一旦 assert 的检查被关闭，user_is_admin() 和 course_exist() 这两个函数便不会被执行。 任何用户都有权限删除专栏课程；并且，不管这个课程是否存在，他们都可以强行执行删除操作。</p></li></ul><p>正确的做法，是使用条件语句进行相应的检查，并合理抛出异常：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_course</span><span class="params">(user, course_id)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user_is_admin(user):</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'user must be admin'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> course_exist(course_id):</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'coursde id must exist'</span>)</span><br><span class="line">    delete(course_id)</span><br></pre></td></tr></table></figure><br>再来看一个例子，如果你想打开一个文件，进行数据读取、处理等一系列操作，那么下面这样的写法，显然也是不正确的：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_and_process</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> file_exist(path), <span class="string">'file must exist'</span></span><br><span class="line">    <span class="keyword">with</span> open(path) <span class="keyword">as</span> f:</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure><br>因为 assert 的使用，表明你强行指定了文件必须存在，但事实上在很多情况下，这个假设并不成立。另外，打开文件操作，也有可能触发其他的异常。所以，正确的做法是进行异常处理，用 try 和 except 来解决：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_and_process</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(path) <span class="keyword">as</span> f:</span><br><span class="line">            ...</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            ...</span><br></pre></td></tr></table></figure></p><ul><li>总的来说，assert 并不适用 run-time error 的检查。assert 通常用来对代码进行必要的 self check，表明你很确定这种情况一定发生，或者一定不会发生。需要注意的是，使用 assert 时，一定不要加上括号，否则无论表达式对与错，assert 检查永远不会 fail。另外，程序中的 assert 语句，可以通过-O等选项被全局 disable。</li></ul><h2 id="上下文管理器"><a href="#上下文管理器" class="headerlink" title="上下文管理器"></a>上下文管理器</h2><p>在任何一门编程语言中，文件的输入输出、数据库的连接断开等，都是很常见的资源管理操作。但资源都是有限的，在写程序时，我们必须保证这些资源在使用过后得到释放，不然就容易造成资源泄露，轻者使得系统处理缓慢，重则会使系统崩溃。</p><ul><li><p>错误示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10000000</span>): </span><br><span class="line">    f = open(<span class="string">'test.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">    f.write(<span class="string">'hello'</span>)</span><br></pre></td></tr></table></figure><p>这就是一个典型的资源泄露的例子。因为程序中同时打开了太多的文件，占据了太多的资源，造成系统崩溃。<br>为了解决这个问题，不同的编程语言都引入了不同的机制。而在 Python 中，对应的解决方式便是上下文管理器（context manager）。上下文管理器，能够帮助你自动分配并且释放资源，其中最典型的应用便是 with 语句。所以，上面代码的正确写法应该如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10000000</span>):</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'test.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="string">'hello'</span>)</span><br></pre></td></tr></table></figure></li><li><p>另外一个典型的例子，是 Python 中的 threading.lock 类。举个例子，比如我想要获取一个锁，执行相应的操作，完成后再释放，那么代码就可以写成下面这样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">some_lock = threading.Lock()</span><br><span class="line">some_lock.acquire()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    some_lock.release()</span><br><span class="line"></span><br><span class="line"><span class="comment">### 而对应的 with 语句，同样非常简洁：</span></span><br><span class="line">some_lock = threading.Lock()</span><br><span class="line"><span class="keyword">with</span> somelock:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li><li><p>上下文管理器的实现: 自定义了一个上下文管理类 FileManager，模拟 Python 的打开、关闭文件操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileManager</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, mode)</span>:</span></span><br><span class="line">        print(<span class="string">'calling __init__ method'</span>)</span><br><span class="line">        self.name = name</span><br><span class="line">        self.mode = mode </span><br><span class="line">        self.file = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'calling __enter__ method'</span>)</span><br><span class="line">        self.file = open(self.name, self.mode)</span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, exc_type, exc_val, exc_tb)</span>:</span></span><br><span class="line">        print(<span class="string">'calling __exit__ method'</span>)</span><br><span class="line">        <span class="keyword">if</span> self.file:</span><br><span class="line">            self.file.close()</span><br><span class="line">            </span><br><span class="line"><span class="keyword">with</span> FileManager(<span class="string">'test.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(<span class="string">'ready to write to file'</span>)</span><br><span class="line">    f.write(<span class="string">'hello world'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">calling __init__ method</span><br><span class="line">calling __enter__ method</span><br><span class="line">ready to write to file</span><br><span class="line">calling __exit__ method</span><br></pre></td></tr></table></figure></li><li><p>当我们用类来创建上下文管理器时，必须保证这个类包括方法”<strong>enter</strong>()”和方法“<strong>exit</strong>()”。其中，方法“<strong>enter</strong>()”返回需要被管理的资源，方法“<strong>exit</strong>()”里通常会存在一些释放、清理资源的操作，比如这个例子中的关闭文件等等。</p></li><li><p>当我们用 with 语句，执行这个上下文管理器时：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> FileManager(<span class="string">'test.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure><p>下面这四步操作会依次发生：</p></li></ul><ol><li>方法“<strong>init</strong>()”被调用，程序初始化对象 FileManager，使得文件名（name）是”test.txt”，文件模式 (mode) 是’w’；</li><li>方法“<strong>enter</strong>()”被调用，文件“test.txt”以写入的模式被打开，并且返回 FileManager 对象赋予变量 f；</li><li>字符串“hello world”被写入文件“test.txt”；</li><li>方法“<strong>exit</strong>()”被调用，负责关闭之前打开的文件流。</li></ol><p>值得一提的是，方法“<strong>exit</strong>()”中的参数“exc_type, exc_val, exc_tb”，分别表示 exception_type、exception_value 和 traceback。当我们执行含有上下文管理器的 with 语句时，如果有异常抛出，异常的信息就会包含在这三个变量中，传入方法“<strong>exit</strong>()”。</p><ul><li>数据库的连接操作，也常常用上下文管理器来表示<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DBConnectionManager</span>:</span> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, hostname, port)</span>:</span> </span><br><span class="line">        self.hostname = hostname </span><br><span class="line">        self.port = port </span><br><span class="line">        self.connection = <span class="literal">None</span></span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span> </span><br><span class="line">        self.connection = DBClient(self.hostname, self.port) </span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, exc_type, exc_val, exc_tb)</span>:</span> </span><br><span class="line">        self.connection.close() </span><br><span class="line">  </span><br><span class="line"><span class="keyword">with</span> DBConnectionManager(<span class="string">'localhost'</span>, <span class="string">'8080'</span>) <span class="keyword">as</span> db_client:</span><br></pre></td></tr></table></figure></li></ul><ol><li>方法“<strong>init</strong>()”负责对数据库进行初始化，也就是将主机名、接口（这里是 localhost 和 8080）分别赋予变量 hostname 和 port；</li><li>方法“<strong>enter</strong>()”连接数据库，并且返回对象 DBConnectionManager；</li><li>方法“<strong>exit</strong>()”则负责关闭数据库的连接。</li></ol><ul><li><p>基于生成器的上下文管理器<br>你可以使用装饰器 contextlib.contextmanager，来定义自己所需的基于生成器的上下文管理器，用以支持 with 语句。还是拿前面的类上下文管理器 FileManager 来说，我们也可以用下面形式来表示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> contextlib <span class="keyword">import</span> contextmanager</span><br><span class="line"> </span><br><span class="line"><span class="meta">@contextmanager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file_manager</span><span class="params">(name, mode)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = open(name, mode)</span><br><span class="line">        <span class="keyword">yield</span> f</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        f.close()</span><br><span class="line">        </span><br><span class="line"><span class="keyword">with</span> file_manager(<span class="string">'test.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure><p>这段代码中，函数 file_manager() 是一个生成器，当我们执行 with 语句时，便会打开文件，并返回文件对象 f；当 with 语句执行完后，finally block 中的关闭文件操作便会执行。使用基于生成器的上下文管理器时，我们不再用定义“<strong>enter</strong>()”和“<strong>exit</strong>()”方法，但请务必加上装饰器 @contextmanager，这一点新手很容易疏忽。</p></li><li><p>讲完这两种不同原理的上下文管理器后，还需要强调的是，基于类的上下文管理器和基于生成器的上下文管理器，这两者在功能上是一致的。只不过:</p></li></ul><ol><li>于类的上下文管理器更加 flexible，适用于大型的系统开发；</li><li>而基于生成器的上下文管理器更加方便、简洁，适用于中小型程序。</li><li>无论你使用哪一种，请不用忘记在方法“<strong>exit</strong>()”或者是 finally block 中释放资源，这一点尤其重要。</li></ol><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><p>说起单元测试，就不得不提 Python <a href="https://docs.python.org/3/library/unittest.html" target="_blank" rel="noopener">unittest</a> 库，它提供了我们需要的大多数工具。我们来看下面这个简单的测试，从代码中了解其使用方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将要被测试的排序函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span><span class="params">(arr)</span>:</span></span><br><span class="line">    l = len(arr)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, l):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, l):</span><br><span class="line">            <span class="keyword">if</span> arr[i] &gt;= arr[j]:</span><br><span class="line">                tmp = arr[i]</span><br><span class="line">                arr[i] = arr[j]</span><br><span class="line">                arr[j] = tmp</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 编写子类继承 unittest.TestCase</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestSort</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment"># 以 test 开头的函数将会被测试</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">test_sort</span><span class="params">(self)</span>:</span></span><br><span class="line">        arr = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">        sort(arr)</span><br><span class="line">        <span class="comment"># assert 结果跟我们期待的一样</span></span><br><span class="line">        self.assertEqual(arr, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">## 如果在 Jupyter 下，请用如下方式运行单元测试</span></span><br><span class="line">    unittest.main(argv=[<span class="string">'first-arg-is-ignored'</span>], exit=<span class="literal">False</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## 如果是命令行下运行，则：</span></span><br><span class="line">    <span class="comment">## unittest.main()</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">..</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">2</span> tests <span class="keyword">in</span> <span class="number">0.002</span>s</span><br><span class="line"> </span><br><span class="line">OK</span><br></pre></td></tr></table></figure><br>首先，我们需要创建一个类TestSort，继承类‘unittest.TestCase’；然后，在这个类中定义相应的测试函数 test_sort()，进行测试。注意，测试函数要以‘test’开头，而测试函数的内部，通常使用 assertEqual()、assertTrue()、assertFalse() 和 assertRaise() 等 assert 语句对结果进行验证。</p><p>介绍 Python 单元测试的几个技巧，分别是 mock、side_effect 和 patch。这三者用法不一样，但都是一个核心思想，即用虚假的实现，来替换掉被测试函数的一些依赖项，让我们能把更多的精力放在需要被测试的功能上。</p><ol><li><p>mock 是单元测试中最核心重要的一环。mock 的意思，便是通过一个虚假对象，来代替被测试函数或模块需要的对象。举个例子，比如你要测一个后端 API 逻辑的功能性，但一般后端 API 都依赖于数据库、文件系统、网络等。这样，你就需要通过 mock，来创建一些虚假的数据库层、文件系统层、网络层对象，以便可以简单地对核心后端逻辑单元进行测试。Python mock 则主要使用 mock 或者 MagicMock 对象，这里我也举了一个代码示例。这个例子看上去比较简单，但是里面的思想很重要。下面我们一起来看下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> MagicMock</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">m1</span><span class="params">(self)</span>:</span></span><br><span class="line">        val = self.m2()</span><br><span class="line">        self.m3(val)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">m2</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">m3</span><span class="params">(self, val)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_m1</span><span class="params">(self)</span>:</span></span><br><span class="line">        a = A()</span><br><span class="line">        a.m2 = MagicMock(return_value=<span class="string">"custom_val"</span>)</span><br><span class="line">        a.m3 = MagicMock()</span><br><span class="line">        a.m1()</span><br><span class="line">        self.assertTrue(a.m2.called) <span class="comment"># 验证 m2 被 call 过</span></span><br><span class="line">        a.m3.assert_called_with(<span class="string">"custom_val"</span>) <span class="comment"># 验证 m3 被指定参数 call 过</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main(argv=[<span class="string">'first-arg-is-ignored'</span>], exit=<span class="literal">False</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">## 输出</span></span><br><span class="line">..</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">Ran <span class="number">2</span> tests <span class="keyword">in</span> <span class="number">0.002</span>s</span><br><span class="line"> </span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>这段代码中，我们定义了一个类的三个方法 m1()、m2()、m3()。我们需要对 m1() 进行单元测试，但是 m1() 取决于 m2() 和 m3()。如果 m2() 和 m3() 的内部比较复杂, 你就不能只是简单地调用 m1() 函数来进行测试，可能需要解决很多依赖项的问题。</p></li><li><p>Mock Side Effect: 就是 mock 的函数，属性是可以根据不同的输入，返回不同的数值，而不只是一个 return_value。<br>比如下面这个示例，例子很简单，测试的是输入参数是否为负数，输入小于 0 则输出为 1 ，否则输出为 2。代码很简短，你一定可以看懂，这便是 Mock Side Effect 的用法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> MagicMock</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">side_effect</span><span class="params">(arg)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> arg &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">mock = MagicMock()</span><br><span class="line">mock.side_effect = side_effect</span><br><span class="line"> </span><br><span class="line">mock(<span class="number">-1</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"> </span><br><span class="line">mock(<span class="number">1</span>)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>至于 patch，给开发者提供了非常便利的函数 mock 方法。它可以应用 Python 的 decoration 模式或是 context manager 概念，快速自然地 mock 所需的函数。它的用法也不难，我们来看代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> patch</span><br><span class="line"> </span><br><span class="line"><span class="meta">@patch('sort')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_sort</span><span class="params">(self, mock_sort)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>在这个 test 里面，mock_sort 替代 sort 函数本身的存在，所以，我们可以像开始提到的 mock object 一样，设置 return_value 和 side_effect。<br>另一种 patch 的常见用法，是 mock 类的成员函数，这个技巧我们在工作中也经常会用到，比如说一个类的构造函数非常复杂，而测试其中一个成员函数并不依赖所有初始化的 object。它的用法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> patch.object(A, <span class="string">'__init__'</span>, <span class="keyword">lambda</span> x: <span class="literal">None</span>):</span><br><span class="line">      …</span><br></pre></td></tr></table></figure><p>代码应该也比较好懂。在 with 语句里面，我们通过 patch，将 A 类的构造函数 mock 为一个 do nothing 的函数，这样就可以很方便地避免一些复杂的初始化（initialization）。</p></li></ol><ul><li>Test Coverage: 衡量代码中语句被 cover 的百分比。 <a href="https://coverage.readthedocs.io/en/v4.5.x/" target="_blank" rel="noopener">https://coverage.readthedocs.io/en/v4.5.x/</a> 。</li><li>模块化: 正确的测试方法，应该是先模块化代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(arr)</span>:</span></span><br><span class="line">    <span class="comment"># pre process</span></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment"># sort</span></span><br><span class="line">    l = len(arr)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, l):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, j):</span><br><span class="line">            <span class="keyword">if</span> arr[i] &gt;= arr[j]:</span><br><span class="line">                tmp = arr[i]</span><br><span class="line">                arr[i] = arr[j]</span><br><span class="line">                arr[j] = tmp</span><br><span class="line">    <span class="comment"># post process</span></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    Return arr</span><br></pre></td></tr></table></figure>这段代码的大概意思是，先有个预处理，再排序，最后再处理一下然后返回。如果现在要求你，给这个函数写个单元测试，你是不是会一筹莫展呢？这个函数确实有点儿复杂，以至于你都不知道应该是怎样的输入，并要期望怎样的输出。这种代码写单元测试是非常痛苦的，更别谈 cover 每条语句的要求了。所以，正确的测试方法，应该是先模块化代码，写成下面的形式：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preprocess</span><span class="params">(arr)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span><span class="params">(arr)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">postprocess</span><span class="params">(arr)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(self)</span>:</span></span><br><span class="line">    arr = preprocess(arr)</span><br><span class="line">    arr = sort(arr)</span><br><span class="line">    arr = postprocess(arr)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure>接着再进行相应的测试，测试三个子函数的功能正确性；然后通过 mock 子函数，调用 work() 函数，来验证三个子函数被 call 过。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unittest.mock <span class="keyword">import</span> patch</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_preprocess</span><span class="params">(self)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_sort</span><span class="params">(self)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_postprocess</span><span class="params">(self)</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line"><span class="meta">@patch('%s.preprocess')</span></span><br><span class="line"><span class="meta">@patch('%s.sort')</span></span><br><span class="line"><span class="meta">@patch('%s.postprocess')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_work</span><span class="params">(self,mock_post_process, mock_sort, mock_preprocess)</span>:</span></span><br><span class="line">    work()</span><br><span class="line">    self.assertTrue(mock_post_process.called)</span><br><span class="line">    self.assertTrue(mock_sort.called)</span><br><span class="line">    self.assertTrue(mock_preprocess.called)</span><br></pre></td></tr></table></figure><h2 id="pdb-amp-cProfile"><a href="#pdb-amp-cProfile" class="headerlink" title="pdb &amp; cProfile"></a>pdb &amp; cProfile</h2></li></ul><p>在实际生产环境中，对代码进行调试和性能分析，是一个永远都逃不开的话题。调试和性能分析的主要场景，通常有这么三个：</p><ol><li>一是代码本身有问题，需要我们找到 root cause 并修复；</li><li>二是代码效率有问题，比如过度浪费资源，增加 latency，因此需要我们 debug；</li><li>三是在开发新的 feature 时，一般都需要测试。</li></ol><ul><li><p>pdb 的必要性: 在程序中相应的地方打印，的确是调试程序的一个常用手段，但这只适用于小型程序。因为你每次都得重新运行整个程序，或是一个完整的功能模块，才能看到打印出来的变量值。如果程序不大，每次运行都非常快，那么使用 print()，的确是很方便的。</p></li><li><p>如何使用 pdb: 要启动 pdb 调试，我们只需要在程序中，加入“import pdb”和“pdb.set_trace()”这两行代码就行了，比如下面这个简单的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="keyword">import</span> pdb</span><br><span class="line">pdb.set_trace()</span><br><span class="line">c = <span class="number">3</span></span><br><span class="line">print(a + b + c)</span><br></pre></td></tr></table></figure><p>当我们运行这个程序时时，它的输出界面是下面这样的，表示程序已经运行到了“pdb.set_trace()”这行，并且暂停了下来，等待用户输入。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; /Users/feiyang/test.py(<span class="number">5</span>)&lt;module&gt;()</span><br><span class="line">-&gt; c = 3</span><br></pre></td></tr></table></figure><p>这时，我们就可以执行，在 IDE 断点调试器中可以执行的一切操作，比如打印，语法是”p <expression>“：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(pdb) p a</span><br><span class="line"><span class="number">1</span></span><br><span class="line">(pdb) p b</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>你可以看到，我打印的是 a 和 b 的值，分别为 1 和 2，与预期相符。为什么不打印 c 呢？显然，打印 c 会抛出异常，因为程序目前只运行了前面几行，此时的变量 c 还没有被定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(pdb) p c</span><br><span class="line">*** NameError: name <span class="string">'c'</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure><p>除了打印，常见的操作还有“n”，表示继续执行代码到下一行，用法如下</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(pdb) n</span><br><span class="line">-&gt; print(a + b + c)</span><br></pre></td></tr></table></figure><p>而命令”l“，则表示列举出当前代码行上下的 11 行源代码，方便开发者熟悉当前断点周围的代码状态：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(pdb) l</span><br><span class="line">  <span class="number">1</span>  a = <span class="number">1</span></span><br><span class="line">  <span class="number">2</span>  b = <span class="number">2</span></span><br><span class="line">  <span class="number">3</span>  <span class="keyword">import</span> pdb</span><br><span class="line">  <span class="number">4</span>  pdb.set_trace()</span><br><span class="line">  5  -&gt;c = 3</span><br><span class="line">  <span class="number">6</span>  print(a + b + c)</span><br></pre></td></tr></table></figure><p>命令“s“，就是 step into 的意思，即进入相对应的代码内部。这时，命令行中会显示”–Call–“的字样，当你执行完内部的代码块后，命令行中则会出现”–Return–“的字样。我们来看下面这个例子：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'enter func()'</span>)</span><br><span class="line"> </span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="keyword">import</span> pdb</span><br><span class="line">pdb.set_trace()</span><br><span class="line">func()</span><br><span class="line">c = <span class="number">3</span></span><br><span class="line">print(a + b + c)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># pdb</span></span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">9</span>)&lt;module&gt;()</span><br><span class="line">-&gt; func()</span><br><span class="line">(pdb) s</span><br><span class="line">--Call--</span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">1</span>)func()</span><br><span class="line">-&gt; def func():</span><br><span class="line">(Pdb) l</span><br><span class="line">  1  -&gt;def func():</span><br><span class="line">  <span class="number">2</span>  print(<span class="string">'enter func()'</span>)</span><br><span class="line">  <span class="number">3</span></span><br><span class="line">  <span class="number">4</span></span><br><span class="line">  <span class="number">5</span>  a = <span class="number">1</span></span><br><span class="line">  <span class="number">6</span>  b = <span class="number">2</span></span><br><span class="line">  <span class="number">7</span>  <span class="keyword">import</span> pdb</span><br><span class="line">  <span class="number">8</span>  pdb.set_trace()</span><br><span class="line">  <span class="number">9</span>  func()</span><br><span class="line"> <span class="number">10</span>  c = <span class="number">3</span></span><br><span class="line"> <span class="number">11</span>  print(a + b + c)</span><br><span class="line"> </span><br><span class="line">(Pdb) n</span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">2</span>)func()</span><br><span class="line">-&gt; print('enter func()')</span><br><span class="line">(Pdb) n</span><br><span class="line">enter func()</span><br><span class="line">--Return--</span><br><span class="line">&gt; /Users/feiyang/test.py(2)func()-&gt;None</span><br><span class="line">-&gt; print('enter func()')</span><br><span class="line"> </span><br><span class="line">(Pdb) n</span><br><span class="line">&gt; /Users/feiyang/test.py(<span class="number">10</span>)&lt;module&gt;()</span><br><span class="line">-&gt; c = 3</span><br></pre></td></tr></table></figure><p>这里，我们使用命令”s“进入了函数 func() 的内部，显示”–Call–“；而当我们执行完函数 func() 内部语句并跳出后，显示”–Return–“。</p></li></ul><ol><li>与之相对应的命令”r“，表示 step out，即继续执行，直到当前的函数完成返回。</li><li>命令”b [ ([filename:]lineno | function) [, condition] ]“可以用来设置断点。比方说，我想要在代码中的第 10 行，再加一个断点，那么在 pdb 模式下输入”b 11“即可。</li><li>而”c“则表示一直执行程序，直到遇到下一个断点。</li></ol><ul><li><p>可以参考对应的官方文档（<a href="https://docs.python.org/3/library/pdb.html#module-pdb），来熟悉这些用法。" target="_blank" rel="noopener">https://docs.python.org/3/library/pdb.html#module-pdb），来熟悉这些用法。</a></p></li><li><p>用 cProfile 进行性能分析: 这里所谓的 profile，是指对代码的每个部分进行动态的分析，比如准确计算出每个模块消耗的时间等。这样你就可以知道程序的瓶颈所在，从而对其进行修正或优化。<br>比如我想计算斐波拉契数列，运用递归思想，我们很容易就能写出下面这样的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fib(n<span class="number">-1</span>) + fib(n<span class="number">-2</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib_seq</span><span class="params">(n)</span>:</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        res.extend(fib_seq(n<span class="number">-1</span>))</span><br><span class="line">    res.append(fib(n))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line">fib_seq(<span class="number">30</span>)</span><br></pre></td></tr></table></figure><p>接下来，我想要测试一下这段代码总的效率以及各个部分的效率。那么，我就只需在开头导入 cProfile 这个模块，并且在最后运行 cProfile.run() 就可以了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cProfile</span><br><span class="line"><span class="comment"># def fib(n)</span></span><br><span class="line"><span class="comment"># def fib_seq(n):</span></span><br><span class="line">cProfile.run(<span class="string">'fib_seq(30)'</span>)</span><br></pre></td></tr></table></figure><p>结果如下</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Users&#x2F;yang.fei&#x2F;python&#x2F;my_test&#x2F;venv&#x2F;bin&#x2F;python &#x2F;Users&#x2F;yang.fei&#x2F;python&#x2F;my_test&#x2F;test.py</span><br><span class="line">         7049218 function calls (96 primitive calls) in 1.777 seconds</span><br><span class="line"></span><br><span class="line">   Ordered by: standard name</span><br><span class="line"></span><br><span class="line">   ncalls  tottime  percall  cumtime  percall filename:lineno(function)</span><br><span class="line">        1    0.000    0.000    1.777    1.777 &lt;string&gt;:1(&lt;module&gt;)</span><br><span class="line">     31&#x2F;1    0.000    0.000    1.777    1.777 test.py:12(fib_seq)</span><br><span class="line">7049123&#x2F;31    1.777    0.000    1.777    0.057 test.py:3(fib)</span><br><span class="line">        1    0.000    0.000    1.777    1.777 &#123;built-in method builtins.exec&#125;</span><br><span class="line">       31    0.000    0.000    0.000    0.000 &#123;method &#39;append&#39; of &#39;list&#39; objects&#125;</span><br><span class="line">        1    0.000    0.000    0.000    0.000 &#123;method &#39;disable&#39; of &#39;_lsprof.Profiler&#39; objects&#125;</span><br><span class="line">       30    0.000    0.000    0.000    0.000 &#123;method &#39;extend&#39; of &#39;list&#39; objects&#125;</span><br></pre></td></tr></table></figure><p>或者更简单一些，直接在运行脚本的命令中，加入选项“-m cProfile”也很方便： python3 -m cProfile xxx.py</p><ul><li>参数介绍：</li></ul><ol><li>ncalls，是指相应代码 / 函数被调用的次数；</li><li>tottime，是指对应代码 / 函数总共执行所需要的时间（注意，并不包括它调用的其他代码 / 函数的执行时间）；</li><li>tottime percall，就是上述两者相除的结果，也就是tottime / ncalls；</li><li>cumtime，则是指对应代码 / 函数总共执行所需要的时间，这里包括了它调用的其他代码 / 函数的执行时间；</li><li>cumtime percall，则是 cumtime 和 ncalls 相除的平均结果。</li></ol><p>了解这些参数后，再来看结果。我们可以清晰地看到，这段程序执行效率的瓶颈，在于第三行的函数 fib()，它被调用了 700 多万次。</p><ul><li>有没有什么办法可以提高改进呢？答案是肯定的。通过观察，我们发现，程序中有很多对 fib() 的调用，其实是重复的，那我们就可以用字典来保存计算过的结果，防止重复。改进后的代码如下所示：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">memoize</span><span class="params">(f)</span>:</span></span><br><span class="line">    memo = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">helper</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> memo:            </span><br><span class="line">            memo[x] = f(x)</span><br><span class="line">        <span class="keyword">return</span> memo[x]</span><br><span class="line">    <span class="keyword">return</span> helper</span><br><span class="line"> </span><br><span class="line"><span class="meta">@memoize</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fib(n<span class="number">-1</span>) + fib(n<span class="number">-2</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib_seq</span><span class="params">(n)</span>:</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        res.extend(fib_seq(n<span class="number">-1</span>))</span><br><span class="line">    res.append(fib(n))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line">fib_seq(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">########### 这次快多了 ############</span></span><br><span class="line"></span><br><span class="line">/Users/yang.fei/python/my_test/venv/bin/python /Users/yang.fei/python/my_test/test.py</span><br><span class="line">         <span class="number">215</span> function calls (<span class="number">127</span> primitive calls) <span class="keyword">in</span> <span class="number">0.000</span> seconds</span><br><span class="line"></span><br><span class="line">   Ordered by: standard name</span><br><span class="line"></span><br><span class="line">   ncalls  tottime  percall  cumtime  percall filename:lineno(function)</span><br><span class="line">        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &lt;string&gt;:<span class="number">1</span>(&lt;module&gt;)</span><br><span class="line">       <span class="number">31</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> test.py:<span class="number">15</span>(fib)</span><br><span class="line">     <span class="number">31</span>/<span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> test.py:<span class="number">25</span>(fib_seq)</span><br><span class="line">    <span class="number">89</span>/<span class="number">31</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> test.py:<span class="number">7</span>(helper)</span><br><span class="line">        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;built-<span class="keyword">in</span> method builtins.<span class="keyword">exec</span>&#125;</span><br><span class="line">       <span class="number">31</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;method <span class="string">'append'</span> of <span class="string">'list'</span> objects&#125;</span><br><span class="line">        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;method <span class="string">'disable'</span> of <span class="string">'_lsprof.Profiler'</span> objects&#125;</span><br><span class="line">       <span class="number">30</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> &#123;method <span class="string">'extend'</span> of <span class="string">'list'</span> objects&#125;</span><br></pre></td></tr></table></figure></li><li>当然，cProfile 还有很多其他功能，还可以结合 stats 类来使用，你可以阅读相应的 <a href="https://docs.python.org/3.7/library/profile.html" target="_blank" rel="noopener">官方文档</a> 来了解</li></ul><h2 id="选择异常处理方式"><a href="#选择异常处理方式" class="headerlink" title="选择异常处理方式"></a>选择异常处理方式</h2><ul><li>问题一：应该使用哪种异常处理方式？</li></ul><ol><li><p>第一种，在代码中对数据进行检测，并直接处理与抛出异常。方法一旦抛出异常，那么程序就会终止；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [condition1]:</span><br><span class="line">    <span class="keyword">raise</span> Exception1(<span class="string">'exception 1'</span>)</span><br><span class="line"><span class="keyword">elif</span> [condition2]:</span><br><span class="line">    <span class="keyword">raise</span> Exception2(<span class="string">'exception 2'</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>第二种，在异常处理代码中进行处理。如果抛出异常，会被程序捕获（catch），程序还会继续运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>问题二：先写出能跑起来的代码，后期再优化可以吗？<br>很明显，这种认知是错误的。我们从一开始写代码时，就必须对功能和规范这两者双管齐下。</p></li><li><p>问题三：代码中写多少注释才合适？<br>通常来说，我们会在类的开头、函数的开头或者是某一个功能块的开头加上一段描述性的注释，来说明这段代码的功能，并指明所有的输入和输出。除此之外，我们也要求在一些比较 tricky 的代码上方加上注释，帮助阅读者理解代码的含义。另外，必须提醒一点，如果在写好之后修改了代码，那么代码对应的注释一定也要做出相应的修改，不然很容易造成“文不对题”的现象，给别人也给你自己带来困扰。</p></li><li><p>问题四：项目的 API 文档重要吗？<br>项目的文档，主要是对相应的系统、产品或是功能模块做一个概述，有助于后人理解。以一个 service 为例，其对应的文档通常会包括下面几部分：</p></li></ul><ol><li>系统的概述，包括各个组成部分以及工作流程的介绍；</li><li>每个组成部分的具体介绍，包括必要性、设计原理等等；</li><li>系统的 performance，包括 latency 等等参数；</li><li>主要说明如何对系统的各个部分进行修改，主要给出相应的 code pointer 及对应的测试方案。</li></ol><h1 id="实战篇"><a href="#实战篇" class="headerlink" title="实战篇"></a>实战篇</h1><h2 id="REST-简介"><a href="#REST-简介" class="headerlink" title="REST 简介"></a>REST 简介</h2><ul><li>REST 的全称是表征层状态转移（REpresentational State Transfer），本意是指一种操作资源方法。不过，你不用纠结于这个绕口的名字。换种方式来说，REST 的实质可以理解为：通过 URL 定位资源，用 GET、POST、PUT、DELETE 等动词来描述操作。而满足 REST 要求的接口，就被称为 RESTful 的接口。</li><li>总的来说，RESTful 接口通常以 HTTP GET 和 POST 形式出现。但并非所有的 GET、POST 请求接口，都是 RESTful 的接口。</li><li>REST 接口的另一个重要要求：无状态。无状态的意思是，每个 REST 请求都是独立的，不需要服务器在会话（Session）中缓存中间状态来完成这个请求。</li><li>一个 HTTP 请求完成一次完整操作。</li></ul><h2 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h2><ul><li>WebSocket 是一种在单个 TCP/TSL 连接上，进行全双工、双向通信的协议。WebSocket 可以让客户端与服务器之间的数据交换变得更加简单高效，服务端也可以主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就可以直接创建持久性的连接，并进行双向数据传输。</li></ul><h2 id="数据结构与算法全景"><a href="#数据结构与算法全景" class="headerlink" title="数据结构与算法全景"></a>数据结构与算法全景</h2><blockquote><p>基础数据结构：数组，堆，栈，队列，链表</p></blockquote><ul><li>数组自不必多说，Python 中的基础数组，满足 O(1) 的随机查找，和 O(n) 的随机插入。</li><li>堆，严格来讲，是一种特殊的二叉树，满足 O(nlogn) 的随机插入和删除，以及 O(1) 时间复杂度拿到最大值或者最小值。堆可以用来实现优先队列，还可以在项目中实现多任务调度，有着非常广泛的应用。</li><li>栈，是一种先进后出的数据结构，入栈和出栈操作都是 O(1) 时间复杂度。</li><li>队列，和栈对应，不过功能刚好相反，它是一种先进先出的数据结构，一如其名，先排队者先服务。入队和出队也是 O(1) 的时间复杂度。栈和队列都能用数组来实现，但是对空间的规划需要注意，特别是用数组实现的队列，我们通常用的是循环队列。</li><li>链表，则是另一种线性表，和数组的不同是，它不支持随机访问，你不能通过下标来获取链表的元素。链表的元素通过指针相连，单链表中元素可以指向后者，双链表则是让相邻的元素互相连接。</li></ul><blockquote><p>进阶数据结构：无向图，有向图，树，DAG 图，字典树，哈希表</p></blockquote><ul><li>无向图，是由顶点和边组成的数据结构，一条边连接两个顶点（如果两个顶点是一个，这条边称为自环）。一如其名，“无向”，所以它的边没有指向性。</li><li>有向图，和无向图一样都是“图”这种数据结构，不同的是有向图的边有指向性，方向为一个顶点指向另一个顶点。</li><li>树这种数据结构，则可以分为有根树和无根树。前者中，最常见的就是我们的二叉树，从顶点开始一级级向下，每个父结点最多有两个子结点。至于无根树，则是一种特殊的无向图，无环连通的无向图被称为无根树，它有很多特别的性质和优点，在离散数学中应用广泛。</li><li>DAG 图，也叫做有向无环图，是一种特殊应用的数据结构，在图的动态规划问题中出现甚多。遍历 DAG 图的方式，也就是我们常说的拓扑排序，是一种图算法。DAG 可以认为是链表的图版本，如果说区块链是链表，那么区块链 3.0 时代可能就是 DAG 图。</li><li>字典树，又被称为 Trie 树，是一种边为字符的有向图，它在字符串处理中有着非常强大的应用。广为人知的 AC 自动机，就是用 Trie 树来解决多模式字符串匹配问题。Trie 树在工业界也常被拿来做搜索提示，例如你在百度中搜索 “极客时”，就会自动跳出 “极客时间”。</li><li><p>哈希表，这一定是程序员应用最广、自觉最简单的一个数据结构，比如 Python 的 dict() 就可以拿来即用，简单而自然。不过，哈希表其实有着非常深刻的内涵，冲突算法、哈希算法、扩容算法，都很值得我们去深究一下。</p></li><li><p>算法：二分搜索</p></li><li>算法：深度优先搜索（DFS）和广度优先搜索（BFS）</li><li>算法：贪心和动态规划</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以此文来记录一下，我自己觉得鲜为人知的知识点。 我个人比较喜欢的网站 &lt;a href=&quot;https://www.programiz.com/python-programming&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Python Programming&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>aws</title>
    <link href="http://feiyang233.club/post/aws/"/>
    <id>http://feiyang233.club/post/aws/</id>
    <published>2020-06-08T11:14:05.000Z</published>
    <updated>2020-09-28T13:27:54.698Z</updated>
    
    <content type="html"><![CDATA[<p>Record some knowledge of AWS<br><a id="more"></a></p><h1 id="Documents"><a href="#Documents" class="headerlink" title="Documents"></a>Documents</h1><ul><li>AWS CLI Command Reference <a href="https://docs.aws.amazon.com/cli/latest/index.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/cli/latest/index.html</a></li><li>AWS Documentation <a href="https://docs.aws.amazon.com/index.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/index.html</a></li><li><a href="https://mp.weixin.qq.com/s/Qo3_35pyn9acw8NiUuITNg" target="_blank" rel="noopener">AWS Official Wechat Account</a></li><li><a href="https://mp.weixin.qq.com/s/tGRSVWiZenROqE7GTfjSgQ" target="_blank" rel="noopener">AWS cerificate</a></li></ul><h1 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h1><ul><li><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html</a><br>From my understand about role, every user is general people. role like some profession. When switch role, like you become police with some privilege. When you takeoff uniform, just like you switch out role, you loose these privilege.</p></li><li><p><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html" target="_blank" rel="noopener">IAM roles for Amazon EC2</a><br>For EC2 instance, it’s very easy to use role without any secret token. When some group of EC2 have permission to assume to some role, when cluster scale up or scale down, all EC2 instances are same with the role permission</p></li><li><p><a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html" target="_blank" rel="noopener">Using an IAM role in the AWS CLI</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[profile crossaccountrole]</span><br><span class="line">role_arn &#x3D; arn:aws:iam::234567890123:role&#x2F;SomeRole</span><br><span class="line">source_profile &#x3D; default</span><br><span class="line">mfa_serial &#x3D; arn:aws:iam::123456789012:mfa&#x2F;saanvi</span><br><span class="line">external_id &#x3D; 123456</span><br></pre></td></tr></table></figure></li></ul><h1 id="S3"><a href="#S3" class="headerlink" title="S3"></a>S3</h1><ul><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_understand-policy-summary-access-level-summaries.html#access_policies_access-level" target="_blank" rel="noopener">AWS Access Levels</a></li><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_s3_rw-bucket-console.html" target="_blank" rel="noopener">Amazon S3: Allows Read and Write Access to Objects in an S3 Bucket, Programmatically and in the Console</a></li><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html" target="_blank" rel="noopener">S3 action and permission table</a></li><li><a href="https://aws.amazon.com/premiumsupport/knowledge-center/ec2-instance-access-s3-bucket/" target="_blank" rel="noopener">EC2 access S3</a></li><li><a href="https://aws.amazon.com/premiumsupport/knowledge-center/read-access-objects-s3-bucket/" target="_blank" rel="noopener">S3 grant public read</a></li></ul><h1 id="Policy-difference"><a href="#Policy-difference" class="headerlink" title="Policy difference"></a>Policy difference</h1><ul><li><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#aws-managed-policies" target="_blank" rel="noopener">https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#aws-managed-policies</a></li></ul><h2 id="multiple-resources"><a href="#multiple-resources" class="headerlink" title="multiple resources"></a>multiple resources</h2><p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"Resource": [</span><br><span class="line">    "arn:aws:dynamodb:us-east-2:account-ID-without-hyphens:table/books_table",</span><br><span class="line">    <span class="string">"arn:aws:dynamodb:us-east-2:account-ID-without-hyphens:table/magazines_table"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Record some knowledge of AWS&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="aws" scheme="http://feiyang233.club/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>Fluent Python</title>
    <link href="http://feiyang233.club/post/fluent-python/"/>
    <id>http://feiyang233.club/post/fluent-python/</id>
    <published>2020-05-15T00:40:20.000Z</published>
    <updated>2020-10-17T01:45:39.192Z</updated>
    
    <content type="html"><![CDATA[<p>Record some trick of python3<br><a id="more"></a> </p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ul><li>Fluent Python <a href="https://evanli.github.io/programming-book-3/Python/Fluent%20Python.pdf" target="_blank" rel="noopener">https://evanli.github.io/programming-book-3/Python/Fluent%20Python.pdf</a></li><li>python3-cookbook <a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/preface.html" target="_blank" rel="noopener">https://python3-cookbook.readthedocs.io/zh_CN/latest/preface.html</a></li></ul><h1 id="Building-Lists-of-Lists"><a href="#Building-Lists-of-Lists" class="headerlink" title="Building Lists of Lists"></a>Building Lists of Lists</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>board = [[<span class="string">'_'</span>] * <span class="number">3</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>board</span><br><span class="line">[[<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>]] &gt;&gt;&gt; board[<span class="number">1</span>][<span class="number">2</span>] = <span class="string">'X'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>board [[<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'X'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># A list with three references to the same list is useless</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board = [[<span class="string">'_'</span>] * <span class="number">3</span>] * <span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board</span><br><span class="line">[[<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'_'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board[<span class="number">1</span>][<span class="number">2</span>] = <span class="string">'O'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>weird_board</span><br><span class="line">[[<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'O'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'O'</span>], [<span class="string">'_'</span>, <span class="string">'_'</span>, <span class="string">'O'</span>]]</span><br></pre></td></tr></table></figure><h1 id="A-Assignment-Puzzler"><a href="#A-Assignment-Puzzler" class="headerlink" title="A += Assignment Puzzler"></a>A += Assignment Puzzler</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>, <span class="number">2</span>, [<span class="number">10</span>, <span class="number">20</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>] += [<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">'tuple'</span> object does <span class="keyword">not</span> support item assignment</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, [<span class="number">10</span>, <span class="number">20</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure><h1 id="difference-between-dir-and-dict-in-python"><a href="#difference-between-dir-and-dict-in-python" class="headerlink" title="difference between dir and dict in python"></a>difference between dir and <strong>dict</strong> in python</h1><ul><li><a href="https://stackoverflow.com/questions/14361256/whats-the-biggest-difference-between-dir-and-dict-in-python" target="_blank" rel="noopener">https://stackoverflow.com/questions/14361256/whats-the-biggest-difference-between-dir-and-dict-in-python</a><br>The same applies to many built-in types; lists do not have a <strong>dict</strong> attribute, but you can still list all the attributes using dir()</li></ul><h1 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h1><p>The Python IDE for Professional Developers <a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/</a><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200516212642.png" alt=""></p><ul><li>wechat article <a href="https://mp.weixin.qq.com/s/dc2vR8mcVsXJirIcRpsLYg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/dc2vR8mcVsXJirIcRpsLYg</a></li></ul><h1 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h1><p>Record issue that I cannot find in google</p><h2 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h2><p>after operation in some one folder, there is .DS_Store. Then I run following code<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> fn <span class="keyword">in</span> os.listdir(<span class="string">"migrations/versions"</span>):</span><br><span class="line">    <span class="keyword">if</span> fn == <span class="string">"__pycache__"</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">f"migrations/versions/<span class="subst">&#123;fn&#125;</span>"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        first_line = f.readline()</span><br><span class="line"></span><br><span class="line"><span class="comment"># error is UnicodeDecodeError: 'utf-8' codec can't decode byte 0xa9 in position 1087: invalid start byte</span></span><br><span class="line">    first_line = f.readline()</span><br><span class="line">  File <span class="string">"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/codecs.py"</span>, line <span class="number">322</span>, <span class="keyword">in</span> decode</span><br><span class="line">    (result, consumed) = self._buffer_decode(data, self.errors, final)</span><br><span class="line">UnicodeDecodeError: <span class="string">'utf-8'</span> codec can<span class="string">'t decode byte 0xb2 in position 319: invalid start byte</span></span><br></pre></td></tr></table></figure><br>after deleting .DS_Store, all is good.</p><h2 id="pycharm-stuck"><a href="#pycharm-stuck" class="headerlink" title="pycharm stuck"></a>pycharm stuck</h2><p>If you open PyCharm is always stuck, you can try delete this <a href="https://rider-support.jetbrains.com/hc/en-us/articles/207097529-What-is-the-idea-folder-" target="_blank" rel="noopener">.idea folder</a></p><h2 id="faster-your-pycharm"><a href="#faster-your-pycharm" class="headerlink" title="faster your pycharm"></a>faster your pycharm</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20201017094259.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Record some trick of python3&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Flask</title>
    <link href="http://feiyang233.club/post/flask/"/>
    <id>http://feiyang233.club/post/flask/</id>
    <published>2020-04-25T07:19:34.000Z</published>
    <updated>2020-09-22T03:32:45.996Z</updated>
    
    <content type="html"><![CDATA[<p>For develop some internal tools.<br><a id="more"></a> </p><h1 id="reference-docs"><a href="#reference-docs" class="headerlink" title="reference docs"></a>reference docs</h1><ul><li><a href="https://flask.palletsprojects.com/en/1.1.x/" target="_blank" rel="noopener">https://flask.palletsprojects.com/en/1.1.x/</a></li><li><a href="https://flask-appbuilder.readthedocs.io/en/latest/intro.html" target="_blank" rel="noopener">https://flask-appbuilder.readthedocs.io/en/latest/intro.html</a></li><li><a href="https://github.com/luhuisicnu/The-Flask-Mega-Tutorial-zh" target="_blank" rel="noopener">https://github.com/luhuisicnu/The-Flask-Mega-Tutorial-zh</a> 2017年新版The Flask Mega-Tutorial教程</li></ul><h1 id="pyvenv"><a href="#pyvenv" class="headerlink" title="pyvenv"></a>pyvenv</h1><p>Recommend to use pyvenv to develop flask, easy to manage the python version and packages</p><ul><li><a href="https://docs.python.org/3/library/venv.html#module-venv" target="_blank" rel="noopener">https://docs.python.org/3/library/venv.html#module-venv</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv /path/to/new/virtual/environment</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /path/to/new/virtual/environment</span><br></pre></td></tr></table></figure><h1 id="install-flask"><a href="#install-flask" class="headerlink" title="install flask"></a>install flask</h1><ul><li><a href="https://flask-appbuilder.readthedocs.io/en/latest/installation.html#" target="_blank" rel="noopener">https://flask-appbuilder.readthedocs.io/en/latest/installation.html#</a></li><li><a href="https://flask.palletsprojects.com/en/1.1.x/installation/#installation" target="_blank" rel="noopener">https://flask.palletsprojects.com/en/1.1.x/installation/#installation</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># under virtual env</span></span><br><span class="line">pip install Flask</span><br><span class="line"></span><br><span class="line">pip install flask-appbuilder</span><br><span class="line"></span><br><span class="line">flask fab create-app</span><br><span class="line"></span><br><span class="line">flask run</span><br></pre></td></tr></table></figure><h1 id="SQLAlchemy"><a href="#SQLAlchemy" class="headerlink" title="SQLAlchemy"></a>SQLAlchemy</h1><ul><li>English Documentation <a href="https://docs.sqlalchemy.org/en/13/index.html" target="_blank" rel="noopener">https://docs.sqlalchemy.org/en/13/index.html</a></li><li>中文文档 <a href="https://www.osgeo.cn/sqlalchemy/index.html" target="_blank" rel="noopener">https://www.osgeo.cn/sqlalchemy/index.html</a></li></ul><p>Sometimes, if it’s not easy to add constriant condition on model.py in database level, we can try from application level by built-in methods pre_add <a href="https://flask-appbuilder.readthedocs.io/en/latest/api.html#flask_appbuilder.baseviews.BaseCRUDView.pre_add" target="_blank" rel="noopener">https://flask-appbuilder.readthedocs.io/en/latest/api.html#flask_appbuilder.baseviews.BaseCRUDView.pre_add</a></p><h1 id="security"><a href="#security" class="headerlink" title="security"></a>security</h1><p>Put sensitive data in file <code>.env</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY&#x3D;secret key</span><br></pre></td></tr></table></figure><br>Use os module method getenv()<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">secret_key = os.getenv(<span class="string">"SECRET_KEY"</span>,<span class="string">"default value"</span>)</span><br></pre></td></tr></table></figure></p><h1 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h1><ul><li><a href="https://stackoom.com/question/3VWj6/%E4%BD%BF%E7%94%A8JSON%E5%9C%A8flask-appbuilder%E4%B8%AD%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener">Use JSON</a></li><li><a href="https://www.mysqltutorial.org/mysql-unique/" target="_blank" rel="noopener">UNIQUE Index</a> by <em>UniqueConstraint</em> <a href="https://stackoverflow.com/questions/10059345/sqlalchemy-unique-across-multiple-columns" target="_blank" rel="noopener">https://stackoverflow.com/questions/10059345/sqlalchemy-unique-across-multiple-columns</a> </li><li>One issue in update row <a href="https://github.com/dpgaspar/Flask-AppBuilder/issues/1397" target="_blank" rel="noopener">https://github.com/dpgaspar/Flask-AppBuilder/issues/1397</a></li><li><a href="https://portingguide.readthedocs.io/en/latest/dicts.html" target="_blank" rel="noopener">has_key</a> dict check key</li><li>if there is error in log.info( error program ), console will not show that</li><li><p>error example: finally is None</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_string</span><span class="params">(s: str)</span> -&gt; str:</span></span><br><span class="line">  begin = s.find(<span class="string">","</span>)</span><br><span class="line">  end = s.rfind(<span class="string">","</span>)</span><br><span class="line">  s = s[begin + <span class="number">1</span>:end]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> len(s) &gt; <span class="number">255</span>:</span><br><span class="line">    cut_string(s)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure></li><li><p>flake8 complains on boolean comparison “==” in filter clause  <a href="https://stackoverflow.com/questions/18998010/flake8-complains-on-boolean-comparison-in-filter-clause" target="_blank" rel="noopener">sqlalchemy query condition is false</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;For develop some internal tools.&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="python" scheme="http://feiyang233.club/tags/python/"/>
    
      <category term="flask" scheme="http://feiyang233.club/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Terraform 入门</title>
    <link href="http://feiyang233.club/post/terraform/"/>
    <id>http://feiyang233.club/post/terraform/</id>
    <published>2020-04-13T01:58:21.000Z</published>
    <updated>2021-07-12T15:28:12.306Z</updated>
    
    <content type="html"><![CDATA[<p>Use Infrastructure as Code to provision and manage any cloud, infrastructure, or service<br><a id="more"></a></p><h1 id="入门介绍视频"><a href="#入门介绍视频" class="headerlink" title="入门介绍视频"></a>入门介绍视频</h1><p>这个视频给你一个基础的入门概念。Best video for learn terraform: Terraform Course - Automate your AWS cloud infrastructure <a href="https://www.youtube.com/watch?v=SLB_c_ayRMo" target="_blank" rel="noopener">https://www.youtube.com/watch?v=SLB_c_ayRMo</a></p><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p><a href="https://www.terraform.io/" target="_blank" rel="noopener">https://www.terraform.io/</a>  官方文档<br><a href="https://lonegunmanb.github.io/introduction-terraform/" target="_blank" rel="noopener">https://lonegunmanb.github.io/introduction-terraform/</a> 一位有情怀的大佬巨著，必看。<br><a href="https://www.alibabacloud.com/help/zh/doc-detail/91285.htm?spm=a2c63.p38356.b99.372.8b994d00YwQjZI" target="_blank" rel="noopener">https://www.alibabacloud.com/help/zh/doc-detail/91285.htm?spm=a2c63.p38356.b99.372.8b994d00YwQjZI</a> 中文版,阿里云文档<br><a href="https://learn.hashicorp.com/terraform/getting-started/intro" target="_blank" rel="noopener">https://learn.hashicorp.com/terraform/getting-started/intro</a>  小白学习必看<br><a href="https://whyliyi.github.io/2020/01/27/terraform-resource.html" target="_blank" rel="noopener">https://whyliyi.github.io/2020/01/27/terraform-resource.html</a> terraform 中文系列<br><a href="https://wsgzao.github.io/post/terraform/" target="_blank" rel="noopener">https://wsgzao.github.io/post/terraform/</a> 奥哥的大作</p><h1 id="terraform-几种用法"><a href="#terraform-几种用法" class="headerlink" title="terraform 几种用法"></a>terraform 几种用法</h1><ol><li>如果是单人操作，backed 就直接本地存储 state。简单方便</li><li>如果是团队合作，backend 可以设置为 S3，大家共享 state， 也会有锁来确保不会起冲突。</li><li>如果财大气粗，可以花钱购买 terraform enterprise(TFE)，大家的修改都会上传到 TFE, 有一个队列来依次执行。TFE 可视化效果非常好,还可以 discard 一些 change, 或者 lock TF  workspace</li></ol><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20210116110942.jpg" alt=""></p><h1 id="基础的命令"><a href="#基础的命令" class="headerlink" title="基础的命令"></a>基础的命令</h1><p>Why not use ansible ? because changes to resources aren’t tracked. terraform code 是存在 git 上的，我们可以轻松检查历史记录，和回退<br>Why didn’t we choose CloudFormation? Its support is limited to AWS. terraform 还支持模块化，复用性可以提升我们效率。而且 terraform 支持多数的云，方便多平台操作。</p><p>Terraform config is code we write, state file is a json file. store these on the remote.<br>Plan is safe to do any where, apply we don’t comment any want. don’t apply locally, don’t apply locally, don’t apply locally!</p><table><thead><tr><th>Commands</th><th>Description</th></tr></thead><tbody><tr><td>terraform init</td><td>Initiate Terraform. Terraform must be initiated before you plan/apply terraform.</td></tr><tr><td>terraform plan</td><td>You will be able to examine Terraform’s execution plan before you deploy it to AWS.</td></tr><tr><td>terraform apply</td><td>Deploy your final execution plan to AWS.</td></tr><tr><td>terraform init -upgrade</td><td>Update providers.</td></tr><tr><td>terraform state show</td><td>Inspect the current state.</td></tr><tr><td>terraform graph</td><td>Displays the visual dependency graph of Terraform resources according to configuration files in DIR (or the current directory if omitted).</td></tr><tr><td>terraform destroy</td><td>Destroy all resources created by terraform and also destroy the changes in your state file.</td></tr><tr><td>terraform plan-out <name of file></td><td>To save the displayed plan (from the ‘terraform plan’ command) for reference.</td></tr></tbody></table><h1 id="precedence-优先级"><a href="#precedence-优先级" class="headerlink" title="precedence 优先级"></a>precedence 优先级</h1><p><a href="https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence" target="_blank" rel="noopener">https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence</a></p><h1 id="Local-Values"><a href="#Local-Values" class="headerlink" title="Local Values"></a>Local Values</h1><p><a href="https://www.terraform.io/docs/configuration/locals.html" target="_blank" rel="noopener">https://www.terraform.io/docs/configuration/locals.html</a></p><h1 id="Terraform-version-compatibility"><a href="#Terraform-version-compatibility" class="headerlink" title="Terraform version compatibility"></a>Terraform version compatibility</h1><table><thead><tr><th>Terraform Version</th><th>Remote State Version</th><th>Able to read</th></tr></thead><tbody><tr><td>0.11.14</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.11.14</td><td>0.13.x</td><td>Yes</td></tr><tr><td>0.11.14</td><td>0.14.x</td><td>Yes</td></tr><tr><td>0.12.2</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.12.x</td><td>&gt; 0.12.x</td><td>No</td></tr><tr><td>0.12.30</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.12.30</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.12.30</td><td>0.13.x</td><td>Yes</td></tr><tr><td>0.12.30</td><td>0.14.x</td><td>Yes</td></tr><tr><td>0.13.x</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.13.x</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.13.x</td><td>&gt; 0.13.x</td><td>No</td></tr><tr><td>0.13.6</td><td>0.11.14</td><td>Yes</td></tr><tr><td>0.13.6</td><td>0.12.x</td><td>Yes</td></tr><tr><td>0.13.6</td><td>0.13.x</td><td>Yes</td></tr><tr><td>0.13.6</td><td>0.14.x</td><td>Yes</td></tr><tr><td>0.14.x</td><td>&gt;= 0.11.14</td><td>Yes</td></tr></tbody></table><p>Recommendation:</p><ol><li>Move workspaces to atleast 0.12.30. Once the workspaces are moved to 0.12.30 they will no longer face compatibility issues with different state versions.</li><li>If you are moving to Terraform 0.13, use  &gt;= 0.13.6</li><li>All 0.14 states are compatible.</li></ol><h1 id="terraenv"><a href="#terraenv" class="headerlink" title="terraenv"></a>terraenv</h1><p>This is a good multi-version control tools for terraform. <a href="https://github.com/aaratn/terraenv" target="_blank" rel="noopener">https://github.com/aaratn/terraenv</a></p><h1 id="verbose-debug"><a href="#verbose-debug" class="headerlink" title="verbose debug"></a>verbose debug</h1><p>特别是在遇到权限不足的时候，如果想检查是具体哪个 service 权限不足。就需要 debug 输出详细的过程<br><a href="https://www.terraform.io/docs/internals/debugging.html" target="_blank" rel="noopener">https://www.terraform.io/docs/internals/debugging.html</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> TF_LOG=DEBUG</span><br><span class="line">terraform plan</span><br></pre></td></tr></table></figure></p><h1 id="input-variables-几种方式"><a href="#input-variables-几种方式" class="headerlink" title="input variables 几种方式"></a>input variables 几种方式</h1><p><a href="https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence" target="_blank" rel="noopener">https://www.terraform.io/docs/configuration/variables.html#variable-definition-precedence</a></p><h1 id="terraform-modules"><a href="#terraform-modules" class="headerlink" title="terraform modules"></a>terraform modules</h1><p><a href="https://learn.hashicorp.com/tutorials/terraform/module?in=terraform/modules" target="_blank" rel="noopener">https://learn.hashicorp.com/tutorials/terraform/module?in=terraform/modules</a></p><h1 id="Terraform-Associate"><a href="#Terraform-Associate" class="headerlink" title="Terraform Associate"></a>Terraform Associate</h1><p><a href="https://www.hashicorp.com/certification/terraform-associate" target="_blank" rel="noopener">HashiCorp Certified: Terraform Associate</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Use Infrastructure as Code to provision and manage any cloud, infrastructure, or service&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="aws" scheme="http://feiyang233.club/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch(elk) technology and practice</title>
    <link href="http://feiyang233.club/post/elk-geek/"/>
    <id>http://feiyang233.club/post/elk-geek/</id>
    <published>2020-03-03T03:11:11.000Z</published>
    <updated>2020-09-22T03:32:45.745Z</updated>
    
    <content type="html"><![CDATA[<p>Elasticsearch is a search engine based on the Lucene library. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in Java. This blog is record  what I learn from this <a href="https://time.geekbang.org/course/intro/100030501" target="_blank" rel="noopener">geek Course</a><br><a id="more"></a><br>The <a href="https://time.geekbang.org/column/article/104136" target="_blank" rel="noopener">recommendation</a> for learning Elasticsearch. </p><h1 id="Getting-started-with-elasticsearch"><a href="#Getting-started-with-elasticsearch" class="headerlink" title="Getting started with elasticsearch"></a>Getting started with elasticsearch</h1><p>This course github <a href="https://github.com/geektime-geekbang/geektime-ELK" target="_blank" rel="noopener">https://github.com/geektime-geekbang/geektime-ELK</a><br>Elasticsearch <a href="https://www.elastic.co/" target="_blank" rel="noopener">https://www.elastic.co/</a></p><ul><li>Elasticsearch Certification <a href="https://www.elastic.co/cn/training/certification" target="_blank" rel="noopener">https://www.elastic.co/cn/training/certification</a></li><li>ElasticSearch Engineering I training  <a href="https://www.elastic.co/cn/training/elasticsearch-engineer-1" target="_blank" rel="noopener">https://www.elastic.co/cn/training/elasticsearch-engineer-1</a></li><li>ElasticSearch Engineering II training  <a href="https://www.elastic.co/cn/training/elasticsearch-engineer-2" target="_blank" rel="noopener">https://www.elastic.co/cn/training/elasticsearch-engineer-2</a></li></ul><h2 id="Install-elasticsearch"><a href="#Install-elasticsearch" class="headerlink" title="Install elasticsearch"></a>Install elasticsearch</h2><p>Install can refer <a href="https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html" target="_blank" rel="noopener">offical docs</a>  </p><p>From version 7.0, don’t need install java by yourself.</p><table><thead><tr><th style="text-align:center">directory</th><th style="text-align:center">Vaconfig filelue</th><th style="text-align:center">description</th></tr></thead><tbody><tr><td style="text-align:center">bin</td><td style="text-align:center"></td><td style="text-align:center">execution file</td></tr><tr><td style="text-align:center">config</td><td style="text-align:center">elasticsearch.yml</td><td style="text-align:center">es cluster config</td></tr><tr><td style="text-align:center">JDK</td><td style="text-align:center"></td><td style="text-align:center">Java env</td></tr><tr><td style="text-align:center">data</td><td style="text-align:center">path.data</td><td style="text-align:center">es data file</td></tr><tr><td style="text-align:center">lib</td><td style="text-align:center"></td><td style="text-align:center">Java lib</td></tr><tr><td style="text-align:center">logs</td><td style="text-align:center">path.log</td><td style="text-align:center">log file</td></tr><tr><td style="text-align:center">modules</td><td style="text-align:center"></td><td style="text-align:center">including all es modules</td></tr><tr><td style="text-align:center">plugins</td><td style="text-align:center"></td><td style="text-align:center">including all installed plugins</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adjust JVM - config/jvm.options</span></span><br><span class="line">default is 1GB</span><br></pre></td></tr></table></figure><p>Config recommendation</p><ol><li>Xms equal to Xmx</li><li>Xmx don’t larger than 50% of memory</li><li>Xmx no larger than 30GB can refer <a href="https://www.elastic.co/blog/a-heap-of-trouble" target="_blank" rel="noopener">https://www.elastic.co/blog/a-heap-of-trouble</a></li></ol><h2 id="plugins"><a href="#plugins" class="headerlink" title="plugins"></a>plugins</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#启动单节点 start single nodes</span></span><br><span class="line">bin/elasticsearch -E node.name=node0 -E cluster.name=geektime -E path.data=node0_data</span><br><span class="line"></span><br><span class="line">bin/elasticsearch-plugin list</span><br><span class="line">bin/elasticsearch-plugin install analysis-icu</span><br><span class="line"></span><br><span class="line"><span class="comment">#start kibana</span></span><br><span class="line">bin/kibana</span><br><span class="line"></span><br><span class="line">bin/kibana-plugin install plugin_location</span><br><span class="line">bin/kibana-plugin list</span><br><span class="line">bin/kibana-plugin remove</span><br><span class="line"></span><br><span class="line"><span class="comment"># dev tools in kibana</span></span><br><span class="line"><span class="comment">#查看安装的插件 check installed plugins</span></span><br><span class="line">GET http://localhost:9200/_cat/plugins?v</span><br><span class="line"><span class="comment">#查看集群 check cluster </span></span><br><span class="line">GET http://localhost:9200</span><br><span class="line"><span class="comment">#查看nodes check nodes</span></span><br><span class="line">GET _cat/nodes</span><br><span class="line">GET _cluster/health</span><br></pre></td></tr></table></figure><p>Run multiple nodes in the same machine<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;node0 -E cluster.name&#x3D;geektime -E path.dat&#x3D; node0_data -d</span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;node1 -E cluster.name&#x3D;geektime -E path.dat&#x3D; node1_data -d</span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;node2 -E cluster.name&#x3D;geektime -E path.dat&#x3D; node2_data -d</span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;node3 -E cluster.name&#x3D;geektime -E path.dat&#x3D; node3_data -d</span><br></pre></td></tr></table></figure></p><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>Use docker-compose start cerebro kibana and 2 elasticsearch<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2.2'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  cerebro:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">lmenezes/cerebro:0.8.5</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">cerebro</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9000:9000"</span></span><br><span class="line"><span class="attr">    command:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="bullet">-Dhosts.0.host=http://elasticsearch:9200</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"><span class="attr">  kibana:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">docker.elastic.co/kibana/kibana:7.1.0</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">kibana7</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">I18N_LOCALE=zh-CN</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">XPACK_GRAPH_ENABLED=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">TIMELION_ENABLED=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">XPACK_MONITORING_COLLECTION_ENABLED="true"</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"5601:5601"</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"><span class="attr">  elasticsearch:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.1.0</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">es7_01</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.name=geektime</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">node.name=es7_01</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.initial_master_nodes=es7_01,es7_02</span></span><br><span class="line"><span class="attr">    ulimits:</span></span><br><span class="line"><span class="attr">      memlock:</span></span><br><span class="line"><span class="attr">        soft:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">        hard:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - es7data1:</span><span class="string">/usr/share/elasticsearch/data</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"><span class="attr">  elasticsearch2:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.1.0</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">es7_02</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.name=geektime</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">node.name=es7_02</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">discovery.seed_hosts=es7_01,es7_02</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">cluster.initial_master_nodes=es7_01,es7_02</span></span><br><span class="line"><span class="attr">    ulimits:</span></span><br><span class="line"><span class="attr">      memlock:</span></span><br><span class="line"><span class="attr">        soft:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">        hard:</span> <span class="bullet">-1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="attr">      - es7data2:</span><span class="string">/usr/share/elasticsearch/data</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es7net</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">  es7data1:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">  es7data2:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  es7net:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure></p><h2 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h2><blockquote><p>Make sure all the version is the same for elasticsearch logstash and kibana<br>Now the latest version is 7.6, because this course use 7.1, <a href="https://www.elastic.co/downloads/past-releases/logstash-7-1-0" target="_blank" rel="noopener">https://www.elastic.co/downloads/past-releases/logstash-7-1-0</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download logstash，（7.1.0）in mac you need also install JAVA</span></span><br><span class="line"><span class="comment"># cd movielens, modify logstash.conf config</span></span><br><span class="line"><span class="comment"># modify your path of movies.csv</span></span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; <span class="string">"YOUR_FULL_PATH_OF_movies.csv"</span></span><br><span class="line">    start_position =&gt; <span class="string">"beginning"</span></span><br><span class="line">    sincedb_path =&gt; <span class="string">"/dev/null"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># First start Elasticsearch cluster，then start logstash </span></span><br><span class="line">sudo ./bin/logstash -f /YOUR_PATH_of_logstash.conf</span><br></pre></td></tr></table></figure><ul><li>Download MovieLens data set：<a href="https://grouplens.org/datasets/movielens/" target="_blank" rel="noopener">https://grouplens.org/datasets/movielens/</a></li><li>Logstash download：<a href="https://www.elastic.co/cn/downloads/logstash" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/logstash</a></li><li>Logstash docs：<a href="https://www.elastic.co/guide/en/logstash/current/index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/logstash/current/index.html</a></li></ul><h1 id="Elasticsearch-basic"><a href="#Elasticsearch-basic" class="headerlink" title="Elasticsearch basic"></a>Elasticsearch basic</h1><p>Document is the smallest unit of elasticsearch. Document will transform to json and store in es. Every document has unique ID.</p><ul><li>Mutiple Tyeps <a href="https://www.elastic.co/cn/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0" target="_blank" rel="noopener">https://www.elastic.co/cn/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0</a></li><li>CAT Index API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-indices.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-indices.html</a><br>Index 相关 API<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#查看索引相关信息 check index info</span><br><span class="line">GET kibana_sample_data_ecommerce</span><br><span class="line"></span><br><span class="line">#查看索引的文档总数 check index count</span><br><span class="line">GET kibana_sample_data_ecommerce&#x2F;_count</span><br><span class="line"></span><br><span class="line">#查看前10条文档，了解文档格式 check first 10 index </span><br><span class="line">POST kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#_cat indices API</span><br><span class="line">#查看indices </span><br><span class="line">GET &#x2F;_cat&#x2F;indices&#x2F;kibana*?v&amp;s&#x3D;index</span><br><span class="line"></span><br><span class="line">#查看状态为绿的索引 </span><br><span class="line">GET &#x2F;_cat&#x2F;indices?v&amp;health&#x3D;green</span><br><span class="line"></span><br><span class="line">#按照文档个数排序</span><br><span class="line">GET &#x2F;_cat&#x2F;indices?v&amp;s&#x3D;docs.count:desc</span><br><span class="line"></span><br><span class="line">#查看具体的字段</span><br><span class="line">GET &#x2F;_cat&#x2F;indices&#x2F;kibana*?pri&amp;v&amp;h&#x3D;health,index,pri,rep,docs.count,mt</span><br><span class="line"></span><br><span class="line">#How much memory is used per index?</span><br><span class="line">GET &#x2F;_cat&#x2F;indices?v&amp;h&#x3D;i,tm&amp;s&#x3D;tm:desc</span><br></pre></td></tr></table></figure></li></ul><h2 id="Node-amp-Shard"><a href="#Node-amp-Shard" class="headerlink" title="Node &amp; Shard"></a>Node &amp; Shard</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html</a></p><ol><li>Master-eligible node: A node that has node.master set to true (default), which makes it eligible to be elected as the master node, which controls the cluster.</li><li>Data node: A node that has node.data set to true (default). Data nodes hold data and perform data related operations such as CRUD, search, and aggregations.</li><li>Ingest node: A node that has node.ingest set to true (default). Ingest nodes are able to apply an ingest pipeline to a document in order to transform and enrich the document before indexing. With a heavy ingest load, it makes sense to use dedicated ingest nodes and to mark the master and data nodes as node.ingest: false.</li><li>Machine learning node: A node that has xpack.ml.enabled and node.ml set to true, which is the default behavior in the Elasticsearch default distribution. If you want to use machine learning features, there must be at least one machine learning node in your cluster. For more information about machine learning features, see Machine learning in the Elastic Stack.</li></ol><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html</a></p><ol><li>primary shard: Each document is stored in a single primary shard. When you index a document, it is indexed first on the primary shard, then on all replicas of the primary shard. By default, an index has one primary shard. You can specify more primary shards to scale the number of documents that your index can handle. You cannot change the number of primary shards in an index, once the index is created. However, an index can be split into a new index using the split API. See also routing</li><li>replica shard: Each primary shard can have zero or more replicas. A replica is a copy of the primary shard, and has two purposes:</li></ol><ul><li>increase failover: a replica shard can be promoted to a primary shard if the primary fails</li><li>increase performance: get and search requests can be handled by primary or replica shards.</li></ul><p>By default, each primary shard has one replica, but the number of replicas can be changed dynamically on an existing index. A replica shard will never be started on the same node as its primary shard.</p><h2 id="cluster-health"><a href="#cluster-health" class="headerlink" title="cluster-health"></a>cluster-health</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">get _cat&#x2F;nodes?v</span><br><span class="line">GET &#x2F;_nodes&#x2F;es7_01,es7_02</span><br><span class="line">GET &#x2F;_cat&#x2F;nodes?v</span><br><span class="line">GET &#x2F;_cat&#x2F;nodes?v&amp;h&#x3D;id,ip,port,v,m</span><br><span class="line"></span><br><span class="line">GET _cluster&#x2F;health</span><br><span class="line">GET _cluster&#x2F;health?level&#x3D;shards</span><br><span class="line">GET &#x2F;_cluster&#x2F;health&#x2F;kibana_sample_data_ecommerce,kibana_sample_data_flights</span><br><span class="line">GET &#x2F;_cluster&#x2F;health&#x2F;kibana_sample_data_flights?level&#x3D;shards</span><br><span class="line"></span><br><span class="line">#### cluster state</span><br><span class="line">The cluster state API allows access to metadata representing the state of the whole cluster. This includes information such as</span><br><span class="line">GET &#x2F;_cluster&#x2F;state</span><br><span class="line"></span><br><span class="line">#cluster get settings</span><br><span class="line">GET &#x2F;_cluster&#x2F;settings</span><br><span class="line">GET &#x2F;_cluster&#x2F;settings?include_defaults&#x3D;true</span><br><span class="line"></span><br><span class="line">GET _cat&#x2F;shards</span><br><span class="line">GET _cat&#x2F;shards?h&#x3D;index,shard,prirep,state,unassigned.reason</span><br></pre></td></tr></table></figure></p><ul><li>CAT Nodes API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-nodes.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-nodes.html</a></li><li>Cluster API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html</a></li><li>CAT Shards API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-shards.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-shards.html</a></li></ul><h2 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h2><ul><li>Document API <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">############Create Document############</span><br><span class="line">#create document. 自动生成 _id</span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;</span><br><span class="line">&quot;user&quot; : &quot;Mike&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-04-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Kibana&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#create document. 指定Id。如果id已经存在，报错</span><br><span class="line">PUT users&#x2F;_doc&#x2F;1?op_type&#x3D;create</span><br><span class="line">&#123;</span><br><span class="line">    &quot;user&quot; : &quot;Jack&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#create document. 指定 ID 如果已经存在，就报错</span><br><span class="line">PUT users&#x2F;_create&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">     &quot;user&quot; : &quot;Jack&quot;,</span><br><span class="line">    &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">    &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### Get Document by ID</span><br><span class="line">#Get the document by ID</span><br><span class="line">GET users&#x2F;_doc&#x2F;1</span><br><span class="line"></span><br><span class="line">###  Index &amp; Update</span><br><span class="line">#Update 指定 ID  (先删除，在写入)</span><br><span class="line">GET users&#x2F;_doc&#x2F;1</span><br><span class="line"></span><br><span class="line">PUT users&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">&quot;user&quot; : &quot;Mike&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#GET users&#x2F;_doc&#x2F;1</span><br><span class="line">#在原文档上增加字段</span><br><span class="line">POST users&#x2F;_update&#x2F;1&#x2F;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;doc&quot;:&#123;</span><br><span class="line">        &quot;post_date&quot; : &quot;2019-05-15T14:12:12&quot;,</span><br><span class="line">        &quot;message&quot; : &quot;trying out Elasticsearch&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### Delete by Id</span><br><span class="line"># 删除文档</span><br><span class="line">DELETE users&#x2F;_doc&#x2F;1</span><br><span class="line"></span><br><span class="line">### Bulk 操作</span><br><span class="line">#执行两次，查看每次的结果</span><br><span class="line"></span><br><span class="line">#执行第1次</span><br><span class="line">POST _bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line">&#123; &quot;delete&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;create&quot; : &#123; &quot;_index&quot; : &quot;test2&quot;, &quot;_id&quot; : &quot;3&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value3&quot; &#125;</span><br><span class="line">&#123; &quot;update&quot; : &#123;&quot;_id&quot; : &quot;1&quot;, &quot;_index&quot; : &quot;test&quot;&#125; &#125;</span><br><span class="line">&#123; &quot;doc&quot; : &#123;&quot;field2&quot; : &quot;value2&quot;&#125; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#执行第2次</span><br><span class="line">POST _bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;1&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value1&quot; &#125;</span><br><span class="line">&#123; &quot;delete&quot; : &#123; &quot;_index&quot; : &quot;test&quot;, &quot;_id&quot; : &quot;2&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;create&quot; : &#123; &quot;_index&quot; : &quot;test2&quot;, &quot;_id&quot; : &quot;3&quot; &#125; &#125;</span><br><span class="line">&#123; &quot;field1&quot; : &quot;value3&quot; &#125;</span><br><span class="line">&#123; &quot;update&quot; : &#123;&quot;_id&quot; : &quot;1&quot;, &quot;_index&quot; : &quot;test&quot;&#125; &#125;</span><br><span class="line">&#123; &quot;doc&quot; : &#123;&quot;field2&quot; : &quot;value2&quot;&#125; &#125;</span><br><span class="line"></span><br><span class="line">### mget 操作</span><br><span class="line">GET &#x2F;_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#URI中指定index</span><br><span class="line">GET &#x2F;test&#x2F;_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET &#x2F;_mget</span><br><span class="line">&#123;</span><br><span class="line">    &quot;docs&quot; : [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">            &quot;_source&quot; : false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;2&quot;,</span><br><span class="line">            &quot;_source&quot; : [&quot;field3&quot;, &quot;field4&quot;]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">            &quot;_id&quot; : &quot;3&quot;,</span><br><span class="line">            &quot;_source&quot; : &#123;</span><br><span class="line">                &quot;include&quot;: [&quot;user&quot;],</span><br><span class="line">                &quot;exclude&quot;: [&quot;user.location&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### msearch 操作</span><br><span class="line">POST kibana_sample_data_ecommerce&#x2F;_msearch</span><br><span class="line">&#123;&#125;</span><br><span class="line">&#123;&quot;query&quot; : &#123;&quot;match_all&quot; : &#123;&#125;&#125;,&quot;size&quot;:1&#125;</span><br><span class="line">&#123;&quot;index&quot; : &quot;kibana_sample_data_flights&quot;&#125;</span><br><span class="line">&#123;&quot;query&quot; : &#123;&quot;match_all&quot; : &#123;&#125;&#125;,&quot;size&quot;:2&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 清除测试数据</span><br><span class="line">#清除数据 delete data</span><br><span class="line">DELETE users</span><br><span class="line">DELETE test</span><br><span class="line">DELETE test2</span><br></pre></td></tr></table></figure></li></ul><h2 id="inverted-index"><a href="#inverted-index" class="headerlink" title="inverted-index"></a>inverted-index</h2><ul><li><a href="https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95</a></li><li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/inverted-index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/cn/elasticsearch/guide/current/inverted-index.html</a></li></ul><p>Demo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Mastering Elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Elasticsearch Server&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Elasticsearch Essentials&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="analyzer"><a href="#analyzer" class="headerlink" title="analyzer"></a>analyzer</h2><p>Demo for practice<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#Simple Analyzer – 按照非字母切分（符号被过滤），小写处理</span><br><span class="line">#Stop Analyzer – 小写处理，停用词过滤（the，a，is）</span><br><span class="line">#Whitespace Analyzer – 按照空格切分，不转小写</span><br><span class="line">#Keyword Analyzer – 不分词，直接将输入当作输出</span><br><span class="line">#Patter Analyzer – 正则表达式，默认 \W+ (非字符分隔)</span><br><span class="line">#Language – 提供了30多种常见语言的分词器</span><br><span class="line">#2 running Quick brown-foxes leap over lazy dogs in the summer evening</span><br><span class="line"></span><br><span class="line">#查看不同的analyzer的效果</span><br><span class="line">#standard</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#simpe</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;simple&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;stop&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#stop</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#keyword</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;keyword&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;pattern&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#english</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;english&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;2 running Quick brown-foxes leap over lazy dogs in the summer evening.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;icu_analyzer&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的确实在理”&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的确实在理”&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;icu_analyzer&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;这个苹果不大好吃&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer-anatomy.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer-anatomy.html</a></li></ul><h2 id="URI-Search"><a href="#URI-Search" class="headerlink" title="URI Search"></a>URI Search</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a></li><li><a href="https://searchenginewatch.com/sew/news/2065080/search-engines-101" target="_blank" rel="noopener">https://searchenginewatch.com/sew/news/2065080/search-engines-101</a></li><li><a href="https://www.huffpost.com/entry/search-engines-101-part-i_b_1104525" target="_blank" rel="noopener">https://www.huffpost.com/entry/search-engines-101-part-i_b_1104525</a></li><li><a href="https://www.entrepreneur.com/article/176398" target="_blank" rel="noopener">https://www.entrepreneur.com/article/176398</a></li><li><a href="https://www.searchtechnologies.com/meaning-of-relevancy" target="_blank" rel="noopener">https://www.searchtechnologies.com/meaning-of-relevancy</a></li></ul><table><thead><tr><th style="text-align:center">Grammer</th><th style="text-align:center">search range</th></tr></thead><tbody><tr><td style="text-align:center">/_search</td><td style="text-align:center">all index in cluster</td></tr><tr><td style="text-align:center">/index1/_search</td><td style="text-align:center">only index1</td></tr><tr><td style="text-align:center">/index,index2/_search</td><td style="text-align:center">index1 and index2</td></tr><tr><td style="text-align:center">/index*/_search</td><td style="text-align:center">regex index*</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#URI Query</span><br><span class="line">GET kibana_sample_data_ecommerce&#x2F;_search?q&#x3D;customer_first_name:Eddie</span><br><span class="line">GET kibana*&#x2F;_search?q&#x3D;customer_first_name:Eddie</span><br><span class="line">GET &#x2F;_all&#x2F;_search?q&#x3D;customer_first_name:Eddie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#REQUEST Body</span><br><span class="line">POST kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;: &#123;</span><br><span class="line">&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a></li></ul><table><thead><tr><th style="text-align:center">fields</th><th style="text-align:center">function</th></tr></thead><tbody><tr><td style="text-align:center">q</td><td style="text-align:center">query string syntax</td></tr><tr><td style="text-align:center">df</td><td style="text-align:center">default field</td></tr><tr><td style="text-align:center">sort</td><td style="text-align:center">sort by xx</td></tr><tr><td style="text-align:center">from size</td><td style="text-align:center">for page</td></tr><tr><td style="text-align:center">profile</td><td style="text-align:center">check the query process</td></tr><tr><td style="text-align:center">A B</td><td style="text-align:center">A OR B</td></tr><tr><td style="text-align:center">“A B”</td><td style="text-align:center">A AND B</td></tr><tr><td style="text-align:center">title:(A AND B)</td><td style="text-align:center">title=”A AND B”</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">#基本查询</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;2012&amp;df&#x3D;title&amp;sort&#x3D;year:desc&amp;from&#x3D;0&amp;size&#x3D;10&amp;timeout&#x3D;1s</span><br><span class="line"></span><br><span class="line">#带profile</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;2012&amp;df&#x3D;title</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#泛查询，正对_all,所有字段</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;2012</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#指定字段</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:2012&amp;sort&#x3D;year:desc&amp;from&#x3D;0&amp;size&#x3D;10&amp;timeout&#x3D;1s</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查找美丽心灵, Mind为泛查询</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:Beautiful Mind</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 泛查询</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:2012</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#使用引号，Phrase查询</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:&quot;Beautiful Mind&quot;</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#分组，Bool查询</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:(Beautiful Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#布尔操作符</span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:(Beautiful AND Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:(Beautiful NOT Mind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 查找美丽心灵</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:(Beautiful %2BMind)</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#范围查询 ,区间写法</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:beautiful AND year:[2002 TO 2018%7D</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#通配符查询</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:b*</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;模糊匹配&amp;近似度匹配</span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:beautifl~1</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;movies&#x2F;_search?q&#x3D;title:&quot;Lord Rings&quot;~2</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Request-Body"><a href="#Request-Body" class="headerlink" title="Request Body"></a>Request Body</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">#ignore_unavailable&#x3D;true，可以忽略尝试访问不存在的索引“404_idx”导致的报错</span><br><span class="line">#查询movies分页</span><br><span class="line">POST &#x2F;movies,404_idx&#x2F;_search?ignore_unavailable&#x3D;true</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;: &#123;</span><br><span class="line">&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;from&quot;:10,</span><br><span class="line">  &quot;size&quot;:20,</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对日期排序</span><br><span class="line">POST kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;sort&quot;:[&#123;&quot;order_date&quot;:&quot;desc&quot;&#125;],</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#source filtering</span><br><span class="line">POST kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_source&quot;:[&quot;order_date&quot;],</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#脚本字段 painless script</span><br><span class="line">GET kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;script_fields&quot;: &#123;</span><br><span class="line">    &quot;new_field&quot;: &#123;</span><br><span class="line">      &quot;script&quot;: &#123;</span><br><span class="line">        &quot;lang&quot;: &quot;painless&quot;,</span><br><span class="line">        &quot;source&quot;: &quot;doc[&#39;order_date&#39;].value+&#39;hello&#39;&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;last christmas&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;</span><br><span class="line">        &quot;query&quot;: &quot;last christmas&quot;,</span><br><span class="line">        &quot;operator&quot;: &quot;and&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;title&quot;:&#123;</span><br><span class="line">        &quot;query&quot;: &quot;one love&quot;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># slop can increase search area</span><br><span class="line">POST movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;title&quot;:&#123;</span><br><span class="line">        &quot;query&quot;: &quot;one love&quot;,</span><br><span class="line">        &quot;slop&quot;: 1</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Simple-Query-String"><a href="#Simple-Query-String" class="headerlink" title="Simple Query String"></a>Simple Query String</h2><ul><li>Not support AND OR NOT, will transform thses to string</li><li>Support + for AND, | for OR, - for NOT</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">PUT &#x2F;users&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;Ruan Yiming&quot;,</span><br><span class="line">  &quot;about&quot;:&quot;java, golang, node, swift, elasticsearch&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;users&#x2F;_doc&#x2F;2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;Li Yiming&quot;,</span><br><span class="line">  &quot;about&quot;:&quot;Hadoop&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;query_string&quot;: &#123;</span><br><span class="line">      &quot;default_field&quot;: &quot;name&quot;,</span><br><span class="line">      &quot;query&quot;: &quot;Ruan AND Yiming&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;query_string&quot;: &#123;</span><br><span class="line">      &quot;fields&quot;:[&quot;name&quot;,&quot;about&quot;],</span><br><span class="line">      &quot;query&quot;: &quot;(Ruan AND Yiming) OR (Java AND Elasticsearch)&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Simple Query 默认的operator是 Or</span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;simple_query_string&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;Ruan AND Yiming&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;name&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;simple_query_string&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;Ruan Yiming&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;name&quot;],</span><br><span class="line">      &quot;default_operator&quot;: &quot;AND&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;:&#123;</span><br><span class="line">&quot;query_string&quot;:&#123;</span><br><span class="line">&quot;default_field&quot;: &quot;title&quot;,</span><br><span class="line">&quot;query&quot;: &quot;Beafiful AND Mind&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 多fields</span><br><span class="line">GET &#x2F;movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;: true,</span><br><span class="line">&quot;query&quot;:&#123;</span><br><span class="line">&quot;query_string&quot;:&#123;</span><br><span class="line">&quot;fields&quot;:[</span><br><span class="line">&quot;title&quot;,</span><br><span class="line">&quot;year&quot;</span><br><span class="line">],</span><br><span class="line">&quot;query&quot;: &quot;2012&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;profile&quot;:true,</span><br><span class="line">&quot;query&quot;:&#123;</span><br><span class="line">&quot;simple_query_string&quot;:&#123;</span><br><span class="line">&quot;query&quot;:&quot;Beautiful +mind&quot;,</span><br><span class="line">&quot;fields&quot;:[&quot;title&quot;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Dynamic-Mapping"><a href="#Dynamic-Mapping" class="headerlink" title="Dynamic Mapping"></a>Dynamic Mapping</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-field-mapping.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-field-mapping.html</a></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">true</th><th style="text-align:center">false</th><th style="text-align:center">strict</th></tr></thead><tbody><tr><td style="text-align:center">document can be index</td><td style="text-align:center">YES</td><td style="text-align:center">YES</td><td style="text-align:center">NO</td></tr><tr><td style="text-align:center">fields can be index</td><td style="text-align:center">YES</td><td style="text-align:center">NO</td><td style="text-align:center">NO</td></tr><tr><td style="text-align:center">mapping can be update</td><td style="text-align:center">YES</td><td style="text-align:center">NO</td><td style="text-align:center">NO</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">#写入文档，查看 Mapping</span><br><span class="line">PUT mapping_test&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Chan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Jackie&quot;,</span><br><span class="line">  &quot;loginDate&quot;:&quot;2018-07-24T10:29:48.103Z&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看 Mapping文件</span><br><span class="line">GET mapping_test&#x2F;_mapping</span><br><span class="line"></span><br><span class="line">#Delete index</span><br><span class="line">DELETE mapping_test</span><br><span class="line"></span><br><span class="line">#dynamic mapping，推断字段的类型</span><br><span class="line">PUT mapping_test&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;uid&quot; : &quot;123&quot;,</span><br><span class="line">    &quot;isVip&quot; : false,</span><br><span class="line">    &quot;isAdmin&quot;: &quot;true&quot;,</span><br><span class="line">    &quot;age&quot;:19,</span><br><span class="line">    &quot;heigh&quot;:180</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看 Dynamic</span><br><span class="line">GET mapping_test&#x2F;_mapping</span><br><span class="line"></span><br><span class="line">#默认Mapping支持dynamic，写入的文档中加入新的字段</span><br><span class="line">PUT dynamic_mapping_test&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;newField&quot;:&quot;someValue&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#该字段可以被搜索，数据也在_source中出现</span><br><span class="line">POST dynamic_mapping_test&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match&quot;:&#123;</span><br><span class="line">      &quot;newField&quot;:&quot;someValue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#修改为dynamic false</span><br><span class="line">PUT dynamic_mapping_test&#x2F;_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;dynamic&quot;: false</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#新增 anotherField</span><br><span class="line">PUT dynamic_mapping_test&#x2F;_doc&#x2F;10</span><br><span class="line">&#123;</span><br><span class="line">  &quot;anotherField&quot;:&quot;someValue&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#该字段不可以被搜索，因为dynamic已经被设置为false</span><br><span class="line">POST dynamic_mapping_test&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;:&#123;</span><br><span class="line">    &quot;match&quot;:&#123;</span><br><span class="line">      &quot;anotherField&quot;:&quot;someValue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">get dynamic_mapping_test&#x2F;_doc&#x2F;10</span><br><span class="line"></span><br><span class="line">#修改为strict</span><br><span class="line">PUT dynamic_mapping_test&#x2F;_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;dynamic&quot;: &quot;strict&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#写入数据出错，HTTP Code 400</span><br><span class="line">PUT dynamic_mapping_test&#x2F;_doc&#x2F;12</span><br><span class="line">&#123;</span><br><span class="line">  &quot;lastField&quot;:&quot;value&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE dynamic_mapping_test</span><br></pre></td></tr></table></figure><h2 id="Mapping-Setting"><a href="#Mapping-Setting" class="headerlink" title="Mapping Setting"></a>Mapping Setting</h2><ul><li>Mapping Parameters <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html</a></li></ul><table><thead><tr><th style="text-align:center">Index Option</th><th style="text-align:center">Record Type</th></tr></thead><tbody><tr><td style="text-align:center">docs</td><td style="text-align:center">doc id</td></tr><tr><td style="text-align:center">freqs</td><td style="text-align:center">doc id, term frequencies</td></tr><tr><td style="text-align:center">positions</td><td style="text-align:center">doc id, term frequencies, term position</td></tr><tr><td style="text-align:center">offsets</td><td style="text-align:center">doc id, term frequencies, term position, character offects</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">#设置 index 为 false</span><br><span class="line">DELETE users</span><br><span class="line">PUT users</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;firstName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;lastName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mobile&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;index&quot;: false</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT users&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming&quot;,</span><br><span class="line">  &quot;mobile&quot;: &quot;12345678&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;mobile&quot;:&quot;12345678&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设定Null_value</span><br><span class="line"></span><br><span class="line">DELETE users</span><br><span class="line">PUT users</span><br><span class="line">&#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;firstName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;lastName&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mobile&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;keyword&quot;,</span><br><span class="line">          &quot;null_value&quot;: &quot;NULL&quot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT users&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming&quot;,</span><br><span class="line">  &quot;mobile&quot;: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT users&#x2F;_doc&#x2F;2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan2&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming2&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;mobile&quot;:&quot;NULL&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设置 Copy to</span><br><span class="line">DELETE users</span><br><span class="line">PUT users</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;firstName&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;copy_to&quot;: &quot;fullName&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;lastName&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;copy_to&quot;: &quot;fullName&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT users&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Yiming&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET users&#x2F;_search?q&#x3D;fullName:(Ruan Yiming)</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">       &quot;fullName&quot;:&#123;</span><br><span class="line">        &quot;query&quot;: &quot;Ruan Yiming&quot;,</span><br><span class="line">        &quot;operator&quot;: &quot;and&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数组类型</span><br><span class="line">PUT users&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;onebird&quot;,</span><br><span class="line">  &quot;interests&quot;:&quot;reading&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT users&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;twobirds&quot;,</span><br><span class="line">  &quot;interests&quot;:[&quot;reading&quot;,&quot;music&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">&quot;match_all&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET users&#x2F;_mapping</span><br></pre></td></tr></table></figure><h2 id="Analyzer"><a href="#Analyzer" class="headerlink" title="Analyzer"></a>Analyzer</h2><ul><li>character filters: HTML strip, Mapping, Pattern replace</li><li>tokenizer: whitespace / standard / uax_url_email / pattern / keyword / path hierarchy</li><li>token filter: Lowercase / stop / synonym</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">PUT logs&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;&quot;level&quot;:&quot;DEBUG&quot;&#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;logs&#x2F;_mapping</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;:&quot;keyword&quot;,</span><br><span class="line">  &quot;char_filter&quot;:[&quot;html_strip&quot;],</span><br><span class="line">  &quot;text&quot;: &quot;&lt;b&gt;hello world&lt;&#x2F;b&gt;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;:&quot;path_hierarchy&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;&#x2F;user&#x2F;ymruan&#x2F;a&#x2F;b&#x2F;c&#x2F;d&#x2F;e&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#使用char filter进行替换</span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;char_filter&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;mapping&quot;,</span><br><span class="line">        &quot;mappings&quot; : [ &quot;- &#x3D;&gt; _&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &quot;text&quot;: &quot;123-456, I-test! test-990 650-555-1234&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;char filter 替换表情符号</span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;char_filter&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;mapping&quot;,</span><br><span class="line">        &quot;mappings&quot; : [ &quot;:) &#x3D;&gt; happy&quot;, &quot;:( &#x3D;&gt; sad&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;text&quot;: [&quot;I am felling :)&quot;, &quot;Feeling :( today&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; white space and snowball</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;filter&quot;: [&quot;stop&quot;,&quot;snowball&quot;],</span><br><span class="line">  &quot;text&quot;: [&quot;The gilrs in China are playing this game!&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; whitespace与stop</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;filter&quot;: [&quot;stop&quot;,&quot;snowball&quot;],</span><br><span class="line">  &quot;text&quot;: [&quot;The rain in Spain falls mainly on the plain.&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;remove 加入lowercase后，The被当成 stopword删除</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;whitespace&quot;,</span><br><span class="line">  &quot;filter&quot;: [&quot;lowercase&quot;,&quot;stop&quot;,&quot;snowball&quot;],</span><br><span class="line">  &quot;text&quot;: [&quot;The gilrs in China are playing this game!&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;正则表达式</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;char_filter&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot; : &quot;pattern_replace&quot;,</span><br><span class="line">        &quot;pattern&quot; : &quot;http:&#x2F;&#x2F;(.*)&quot;,</span><br><span class="line">        &quot;replacement&quot; : &quot;$1&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;text&quot; : &quot;http:&#x2F;&#x2F;www.elastic.co&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Dynamic-Template"><a href="#Dynamic-Template" class="headerlink" title="Dynamic Template"></a>Dynamic Template</h2><ul><li>Index Templates <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html</a></li><li>Dynamic Template <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">#数字字符串被映射成text，日期字符串被映射成日期</span><br><span class="line">PUT ttemplate&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">&quot;someNumber&quot;:&quot;1&quot;,</span><br><span class="line">&quot;someDate&quot;:&quot;2019&#x2F;01&#x2F;01&quot;</span><br><span class="line">&#125;</span><br><span class="line">GET ttemplate&#x2F;_mapping</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Create a default template</span><br><span class="line">PUT _template&#x2F;template_default</span><br><span class="line">&#123;</span><br><span class="line">  &quot;index_patterns&quot;: [&quot;*&quot;],</span><br><span class="line">  &quot;order&quot; : 0,</span><br><span class="line">  &quot;version&quot;: 1,</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1,</span><br><span class="line">    &quot;number_of_replicas&quot;:1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT &#x2F;_template&#x2F;template_test</span><br><span class="line">&#123;</span><br><span class="line">    &quot;index_patterns&quot; : [&quot;test*&quot;],</span><br><span class="line">    &quot;order&quot; : 1,</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1,</span><br><span class="line">        &quot;number_of_replicas&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">    &quot;date_detection&quot;: false,</span><br><span class="line">    &quot;numeric_detection&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看template信息</span><br><span class="line">GET &#x2F;_template&#x2F;template_default</span><br><span class="line">GET &#x2F;_template&#x2F;temp*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#写入新的数据，index以test开头</span><br><span class="line">PUT testtemplate&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">&quot;someNumber&quot;:&quot;1&quot;,</span><br><span class="line">&quot;someDate&quot;:&quot;2019&#x2F;01&#x2F;01&quot;</span><br><span class="line">&#125;</span><br><span class="line">GET testtemplate&#x2F;_mapping</span><br><span class="line">get testtemplate&#x2F;_settings</span><br><span class="line"></span><br><span class="line">PUT testmy</span><br><span class="line">&#123;</span><br><span class="line">&quot;settings&quot;:&#123;</span><br><span class="line">&quot;number_of_replicas&quot;:5</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">put testmy&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;key&quot;:&quot;value&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">get testmy&#x2F;_settings</span><br><span class="line">DELETE testmy</span><br><span class="line">DELETE &#x2F;_template&#x2F;template_default</span><br><span class="line">DELETE &#x2F;_template&#x2F;template_test</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Dynaminc Mapping 根据类型和字段名</span><br><span class="line">DELETE my_index</span><br><span class="line"></span><br><span class="line">PUT my_index&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;:&quot;Ruan&quot;,</span><br><span class="line">  &quot;isVIP&quot;:&quot;true&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET my_index&#x2F;_mapping</span><br><span class="line">DELETE my_index</span><br><span class="line">PUT my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;dynamic_templates&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">        &quot;strings_as_boolean&quot;: &#123;</span><br><span class="line">          &quot;match_mapping_type&quot;:   &quot;string&quot;,</span><br><span class="line">          &quot;match&quot;:&quot;is*&quot;,</span><br><span class="line">          &quot;mapping&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;boolean&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;strings_as_keywords&quot;: &#123;</span><br><span class="line">          &quot;match_mapping_type&quot;:   &quot;string&quot;,</span><br><span class="line">          &quot;mapping&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE my_index</span><br><span class="line">#结合路径</span><br><span class="line">PUT my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;dynamic_templates&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;full_name&quot;: &#123;</span><br><span class="line">          &quot;path_match&quot;:   &quot;name.*&quot;,</span><br><span class="line">          &quot;path_unmatch&quot;: &quot;*.middle&quot;,</span><br><span class="line">          &quot;mapping&quot;: &#123;</span><br><span class="line">            &quot;type&quot;:       &quot;text&quot;,</span><br><span class="line">            &quot;copy_to&quot;:    &quot;full_name&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT my_index&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &#123;</span><br><span class="line">    &quot;first&quot;:  &quot;John&quot;,</span><br><span class="line">    &quot;middle&quot;: &quot;Winston&quot;,</span><br><span class="line">    &quot;last&quot;:   &quot;Lennon&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET my_index&#x2F;_search?q&#x3D;full_name:John</span><br></pre></td></tr></table></figure></li></ul><h2 id="aggregations"><a href="#aggregations" class="headerlink" title="aggregations"></a>aggregations</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html</a></li></ul><ol><li>Bucket Aggregation: A family of aggregations that build buckets, where each bucket is associated with a key and a document criterion. When the aggregation is executed, all the buckets criteria are evaluated on every document in the context and when a criterion matches, the document is considered to “fall in” the relevant bucket. By the end of the aggregation process, we’ll end up with a list of buckets - each one with a set of documents that “belong” to it.</li><li>Metric Aggregation: Aggregations that keep track and compute metrics over a set of documents.</li><li>Pipeline Aggregation: Aggregations that aggregate the output of other aggregations and their associated metrics</li><li>Matrix Aggregation: A family of aggregations that operate on multiple fields and produce a matrix result based on the values extracted from the requested document fields. Unlike metric and bucket aggregations, this aggregation family does not yet support scripting.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">#按照目的地进行分桶统计</span><br><span class="line">GET kibana_sample_data_flights&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;size&quot;: 0,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;flight_dest&quot;:&#123;</span><br><span class="line">&quot;terms&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;DestCountry&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看航班目的地的统计信息，增加平均，最高最低价格</span><br><span class="line">GET kibana_sample_data_flights&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;size&quot;: 0,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;flight_dest&quot;:&#123;</span><br><span class="line">&quot;terms&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;DestCountry&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;avg_price&quot;:&#123;</span><br><span class="line">&quot;avg&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;max_price&quot;:&#123;</span><br><span class="line">&quot;max&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;min_price&quot;:&#123;</span><br><span class="line">&quot;min&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#价格统计信息+天气信息</span><br><span class="line">GET kibana_sample_data_flights&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;size&quot;: 0,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;flight_dest&quot;:&#123;</span><br><span class="line">&quot;terms&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;DestCountry&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;aggs&quot;:&#123;</span><br><span class="line">&quot;stats_price&quot;:&#123;</span><br><span class="line">&quot;stats&quot;:&#123;</span><br><span class="line">&quot;field&quot;:&quot;AvgTicketPrice&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;wather&quot;:&#123;</span><br><span class="line">  &quot;terms&quot;: &#123;</span><br><span class="line">    &quot;field&quot;: &quot;DestWeather&quot;,</span><br><span class="line">    &quot;size&quot;: 5</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-chapter"><a href="#3-chapter" class="headerlink" title="3 chapter"></a>3 chapter</h1><h2 id="term-query-amp-full-query"><a href="#term-query-amp-full-query" class="headerlink" title="term query &amp; full query"></a>term query &amp; full query</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/full-text-queries.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/full-text-queries.html</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">DELETE products</span><br><span class="line">PUT products</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;products&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot;,&quot;desc&quot;:&quot;iPhone&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot;,&quot;desc&quot;:&quot;iPad&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot;,&quot;desc&quot;:&quot;MBP&quot; &#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;products</span><br><span class="line"></span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &#123;</span><br><span class="line">        &#x2F;&#x2F;&quot;value&quot;: &quot;iPhone&quot;</span><br><span class="line">        &quot;value&quot;:&quot;iphone&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;desc.keyword&quot;: &#123;</span><br><span class="line">        &#x2F;&#x2F;&quot;value&quot;: &quot;iPhone&quot;</span><br><span class="line">        &#x2F;&#x2F;&quot;value&quot;:&quot;iphone&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;productID&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F;&quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;productID.keyword&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;productID.keyword&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#设置 position_increment_gap</span><br><span class="line">DELETE groups</span><br><span class="line">PUT groups</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;names&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;position_increment_gap&quot;: 0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET groups&#x2F;_mapping</span><br><span class="line"></span><br><span class="line">POST groups&#x2F;_doc</span><br><span class="line">&#123;</span><br><span class="line">  &quot;names&quot;: [ &quot;John Water&quot;, &quot;Water Smith&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST groups&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;names&quot;: &#123;</span><br><span class="line">        &quot;query&quot;: &quot;Water Water&quot;,</span><br><span class="line">        &quot;slop&quot;: 100</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST groups&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;names&quot;: &quot;Water Smith&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="structured-search"><a href="#structured-search" class="headerlink" title="structured search"></a>structured search</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line">#结构化搜索，精确匹配</span><br><span class="line">DELETE products</span><br><span class="line">POST &#x2F;products&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 10,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2018-01-01&quot;, &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 20,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2019-01-01&quot;, &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:true, &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:false, &quot;productID&quot; : &quot;QQPX-R-3956-#aD8&quot; &#125;</span><br><span class="line"></span><br><span class="line">GET products&#x2F;_mapping</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对布尔值 match 查询，有算分</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;avaliable&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对布尔值，通过constant score 转成 filtering，没有算分</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;avaliable&quot;: true</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#数字类型 Term</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: 30</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数字类型 terms</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;terms&quot;: &#123;</span><br><span class="line">          &quot;price&quot;: [</span><br><span class="line">            &quot;20&quot;,</span><br><span class="line">            &quot;30&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数字 Range 查询</span><br><span class="line">GET products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;constant_score&quot; : &#123;</span><br><span class="line">            &quot;filter&quot; : &#123;</span><br><span class="line">                &quot;range&quot; : &#123;</span><br><span class="line">                    &quot;price&quot; : &#123;</span><br><span class="line">                        &quot;gte&quot; : 20,</span><br><span class="line">                        &quot;lte&quot;  : 30</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 日期 range</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123;</span><br><span class="line">        &quot;constant_score&quot; : &#123;</span><br><span class="line">            &quot;filter&quot; : &#123;</span><br><span class="line">                &quot;range&quot; : &#123;</span><br><span class="line">                    &quot;date&quot; : &#123;</span><br><span class="line">                      &quot;gte&quot; : &quot;now-1y&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#exists查询</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;exists&quot;: &#123;</span><br><span class="line">          &quot;field&quot;: &quot;date&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#处理多值字段</span><br><span class="line">POST &#x2F;movies&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Father of the Bridge Part II&quot;,&quot;year&quot;:1995, &quot;genre&quot;:&quot;Comedy&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Dave&quot;,&quot;year&quot;:1993,&quot;genre&quot;:[&quot;Comedy&quot;,&quot;Romance&quot;] &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#处理多值字段，term 查询是包含，而不是等于</span><br><span class="line">POST movies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;genre.keyword&quot;: &quot;Comedy&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#字符类型 terms</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;terms&quot;: &#123;</span><br><span class="line">          &quot;productID.keyword&quot;: [</span><br><span class="line">            &quot;QQPX-R-3956-#aD8&quot;,</span><br><span class="line">            &quot;JODL-X-1937-#pV7&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: 30</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;date&quot;: &quot;2019-01-01&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;date&quot;: &quot;2019-01-01&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;productID.keyword&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;productID.keyword&quot;: &quot;XHDK-A-1293-#fJ3&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#对布尔数值</span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;avaliable&quot;: &quot;false&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;avaliable&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;false&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;20&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;profile&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;price&quot;: &quot;20&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;constant_score&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;bool&quot;: &#123;</span><br><span class="line">          &quot;must_not&quot;: &#123;</span><br><span class="line">            &quot;exists&quot;: &#123;</span><br><span class="line">              &quot;field&quot;: &quot;date&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="relevance"><a href="#relevance" class="headerlink" title="relevance"></a>relevance</h2><ul><li>TP = term frequency</li><li>IDF = inverse document frequency</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">PUT testscore</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 1</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT testscore&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;we use Elasticsearch to power the search&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;we like elasticsearch&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;The scoring of documents is caculated by the scoring formula&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;you know, for search&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;testscore&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F;&quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;content&quot;:&quot;you&quot;</span><br><span class="line">      &#x2F;&#x2F;&quot;content&quot;: &quot;elasticsearch&quot;</span><br><span class="line">      &#x2F;&#x2F;&quot;content&quot;:&quot;the&quot;</span><br><span class="line">      &#x2F;&#x2F;&quot;content&quot;: &quot;the elasticsearch&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST testscore&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;boosting&quot; : &#123;</span><br><span class="line">            &quot;positive&quot; : &#123;</span><br><span class="line">                &quot;term&quot; : &#123;</span><br><span class="line">                    &quot;content&quot; : &quot;elasticsearch&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;negative&quot; : &#123;</span><br><span class="line">                 &quot;term&quot; : &#123;</span><br><span class="line">                     &quot;content&quot; : &quot;like&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;negative_boost&quot; : 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST tmdb&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_source&quot;: [&quot;title&quot;,&quot;overview&quot;],</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;more_like_this&quot;: &#123;</span><br><span class="line">      &quot;fields&quot;: [</span><br><span class="line">        &quot;title^10&quot;,&quot;overview&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;like&quot;: [&#123;&quot;_id&quot;:&quot;14191&quot;&#125;],</span><br><span class="line">      &quot;min_term_freq&quot;: 1,</span><br><span class="line">      &quot;max_query_terms&quot;: 12</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Query-amp-Filtering"><a href="#Query-amp-Filtering" class="headerlink" title="Query&amp;Filtering"></a>Query&amp;Filtering</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-boosting-query.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-boosting-query.html</a></li></ul><p>Demo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;products&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 10,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2018-01-01&quot;, &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 20,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2019-01-01&quot;, &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:true, &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:false, &quot;productID&quot; : &quot;QQPX-R-3956-#aD8&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#基本语法</span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot; : &#123;</span><br><span class="line">      &quot;must&quot; : &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;price&quot; : &quot;30&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot; : &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;should&quot; : [</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;JODL-X-1937-#pV7&quot; &#125; &#125;,</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125; &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;minimum_should_match&quot; :1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#改变数据模型，增加字段。解决数组包含而不是精确匹配的问题</span><br><span class="line">POST &#x2F;newmovies&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Father of the Bridge Part II&quot;,&quot;year&quot;:1995, &quot;genre&quot;:&quot;Comedy&quot;,&quot;genre_count&quot;:1 &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Dave&quot;,&quot;year&quot;:1993,&quot;genre&quot;:[&quot;Comedy&quot;,&quot;Romance&quot;],&quot;genre_count&quot;:2 &#125;</span><br><span class="line"></span><br><span class="line">#must，有算分</span><br><span class="line">POST &#x2F;newmovies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre.keyword&quot;: &#123;&quot;value&quot;: &quot;Comedy&quot;&#125;&#125;&#125;,</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre_count&quot;: &#123;&quot;value&quot;: 1&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#Filter。不参与算分，结果的score是0</span><br><span class="line">POST &#x2F;newmovies&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: [</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre.keyword&quot;: &#123;&quot;value&quot;: &quot;Comedy&quot;&#125;&#125;&#125;,</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;genre_count&quot;: &#123;&quot;value&quot;: 1&#125;&#125;&#125;</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Filtering Context</span><br><span class="line">POST _search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot; : &#123;</span><br><span class="line"></span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot; : &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Query Context</span><br><span class="line">POST &#x2F;products&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 10,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2018-01-01&quot;, &quot;productID&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 20,&quot;avaliable&quot;:true,&quot;date&quot;:&quot;2019-01-01&quot;, &quot;productID&quot; : &quot;KDKE-B-9947-#kL5&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:true, &quot;productID&quot; : &quot;JODL-X-1937-#pV7&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 4 &#125;&#125;</span><br><span class="line">&#123; &quot;price&quot; : 30,&quot;avaliable&quot;:false, &quot;productID&quot; : &quot;QQPX-R-3956-#aD8&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;productID.keyword&quot;: &#123;</span><br><span class="line">              &quot;value&quot;: &quot;JODL-X-1937-#pV7&quot;&#125;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;&quot;term&quot;: &#123;&quot;avaliable&quot;: &#123;&quot;value&quot;: true&#125;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#嵌套，实现了 should not 逻辑</span><br><span class="line">POST &#x2F;products&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;price&quot;: &quot;30&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;bool&quot;: &#123;</span><br><span class="line">            &quot;must_not&quot;: &#123;</span><br><span class="line">              &quot;term&quot;: &#123;</span><br><span class="line">                &quot;avaliable&quot;: &quot;false&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;minimum_should_match&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Controll the Precision</span><br><span class="line">POST _search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot; : &#123;</span><br><span class="line">      &quot;must&quot; : &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;price&quot; : &quot;30&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot; : &#123; &quot;avaliable&quot; : &quot;true&quot; &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot; : &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;price&quot; : &#123; &quot;lte&quot; : 10 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;should&quot; : [</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;JODL-X-1937-#pV7&quot; &#125; &#125;,</span><br><span class="line">        &#123; &quot;term&quot; : &#123; &quot;productID.keyword&quot; : &quot;XHDK-A-1293-#fJ3&quot; &#125; &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;minimum_should_match&quot; :2</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;animals&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;brown&quot; &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;red&quot; &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;quick&quot;   &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;dog&quot;   &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;animals&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;quick&quot; &#125;&#125;,</span><br><span class="line">        &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;dog&quot;   &#125;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;bool&quot;:&#123;</span><br><span class="line">            &quot;should&quot;:[</span><br><span class="line">               &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;brown&quot; &#125;&#125;,</span><br><span class="line">                 &#123; &quot;term&quot;: &#123; &quot;text&quot;: &quot;brown&quot; &#125;&#125;,</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE blogs</span><br><span class="line">POST &#x2F;blogs&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Apple iPad&quot;, &quot;content&quot;:&quot;Apple iPad,Apple iPad&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Apple iPad,Apple iPad&quot;, &quot;content&quot;:&quot;Apple iPad&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;&quot;match&quot;: &#123;</span><br><span class="line">          &quot;title&quot;: &#123;</span><br><span class="line">            &quot;query&quot;: &quot;apple,ipad&quot;,</span><br><span class="line">            &quot;boost&quot;: 1.1</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;,</span><br><span class="line"></span><br><span class="line">        &#123;&quot;match&quot;: &#123;</span><br><span class="line">          &quot;content&quot;: &#123;</span><br><span class="line">            &quot;query&quot;: &quot;apple,ipad&quot;,</span><br><span class="line">            &quot;boost&quot;:</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE news</span><br><span class="line">POST &#x2F;news&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;Apple Mac&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;Apple iPad&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 3 &#125;&#125;</span><br><span class="line">&#123; &quot;content&quot;:&quot;Apple employee like Apple Pie and Apple Juice&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST news&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: &#123;</span><br><span class="line">        &quot;match&quot;:&#123;&quot;content&quot;:&quot;apple&quot;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST news&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: &#123;</span><br><span class="line">        &quot;match&quot;:&#123;&quot;content&quot;:&quot;apple&quot;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;must_not&quot;: &#123;</span><br><span class="line">        &quot;match&quot;:&#123;&quot;content&quot;:&quot;pie&quot;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST news&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;boosting&quot;: &#123;</span><br><span class="line">      &quot;positive&quot;: &#123;</span><br><span class="line">        &quot;match&quot;: &#123;</span><br><span class="line">          &quot;content&quot;: &quot;apple&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;negative&quot;: &#123;</span><br><span class="line">        &quot;match&quot;: &#123;</span><br><span class="line">          &quot;content&quot;: &quot;pie&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;negative_boost&quot;: 0.5</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Disjunction-max-query"><a href="#Disjunction-max-query" class="headerlink" title="Disjunction max query"></a>Disjunction max query</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html</a></li></ul><p>Demo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">PUT &#x2F;blogs&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">    &quot;title&quot;: &quot;Quick brown rabbits&quot;,</span><br><span class="line">    &quot;body&quot;:  &quot;Brown rabbits are commonly seen.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;blogs&#x2F;_doc&#x2F;2</span><br><span class="line">&#123;</span><br><span class="line">    &quot;title&quot;: &quot;Keeping pets healthy&quot;,</span><br><span class="line">    &quot;body&quot;:  &quot;My quick brown fox eats rabbits on a regular basis.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;bool&quot;: &#123;</span><br><span class="line">            &quot;should&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Brown fox&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Brown fox&quot; &#125;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;dis_max&quot;: &#123;</span><br><span class="line">            &quot;queries&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Quick pets&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Quick pets&quot; &#125;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;dis_max&quot;: &#123;</span><br><span class="line">            &quot;queries&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Quick pets&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Quick pets&quot; &#125;&#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;tie_breaker&quot;: 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>## </p><ul><li><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html</a></p></li><li><p>Best Fields</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">POST blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;dis_max&quot;: &#123;</span><br><span class="line">            &quot;queries&quot;: [</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;Quick pets&quot; &#125;&#125;,</span><br><span class="line">                &#123; &quot;match&quot;: &#123; &quot;body&quot;:  &quot;Quick pets&quot; &#125;&#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;tie_breaker&quot;: 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;type&quot;: &quot;best_fields&quot;,</span><br><span class="line">      &quot;query&quot;: &quot;Quick pets&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;title&quot;,&quot;body&quot;],</span><br><span class="line">      &quot;tie_breaker&quot;: 0.2,</span><br><span class="line">      &quot;minimum_should_match&quot;: &quot;20%&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST books&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">        &quot;query&quot;:  &quot;Quick brown fox&quot;,</span><br><span class="line">        &quot;fields&quot;: &quot;*_title&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST books&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">        &quot;query&quot;:  &quot;Quick brown fox&quot;,</span><br><span class="line">        &quot;fields&quot;: [ &quot;*_title&quot;, &quot;chapter_title^2&quot; ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE &#x2F;titles</span><br><span class="line">PUT &#x2F;titles</span><br><span class="line">&#123;</span><br><span class="line">    &quot;settings&quot;: &#123; &quot;number_of_shards&quot;: 1 &#125;,</span><br><span class="line">    &quot;mappings&quot;: &#123;</span><br><span class="line">        &quot;my_type&quot;: &#123;</span><br><span class="line">            &quot;properties&quot;: &#123;</span><br><span class="line">                &quot;title&quot;: &#123;</span><br><span class="line">                    &quot;type&quot;:     &quot;string&quot;,</span><br><span class="line">                    &quot;analyzer&quot;: &quot;english&quot;,</span><br><span class="line">                    &quot;fields&quot;: &#123;</span><br><span class="line">                        &quot;std&quot;:   &#123;</span><br><span class="line">                            &quot;type&quot;:     &quot;string&quot;,</span><br><span class="line">                            &quot;analyzer&quot;: &quot;standard&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;titles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;analyzer&quot;: &quot;english&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST titles&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;My dog barks&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;I see a lot of barking dogs on the road &quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET titles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;barking dogs&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE &#x2F;titles</span><br><span class="line">PUT &#x2F;titles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;analyzer&quot;: &quot;english&quot;,</span><br><span class="line">        &quot;fields&quot;: &#123;&quot;std&quot;: &#123;&quot;type&quot;: &quot;text&quot;,&quot;analyzer&quot;: &quot;standard&quot;&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST titles&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 1 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;My dog barks&quot; &#125;</span><br><span class="line">&#123; &quot;index&quot;: &#123; &quot;_id&quot;: 2 &#125;&#125;</span><br><span class="line">&#123; &quot;title&quot;: &quot;I see a lot of barking dogs on the road &quot; &#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;titles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">   &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">            &quot;query&quot;:  &quot;barking dogs&quot;,</span><br><span class="line">            &quot;type&quot;:   &quot;most_fields&quot;,</span><br><span class="line">            &quot;fields&quot;: [ &quot;title&quot;, &quot;title.std&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;titles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">   &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">            &quot;query&quot;:  &quot;barking dogs&quot;,</span><br><span class="line">            &quot;type&quot;:   &quot;most_fields&quot;,</span><br><span class="line">            &quot;fields&quot;: [ &quot;title^10&quot;, &quot;title.std&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="multi-language"><a href="#multi-language" class="headerlink" title="multi-language"></a>multi-language</h2></li><li><p>Elasticsearch IK分词插件 <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></p></li><li>Elasticsearch hanlp 分词插件 <a href="https://github.com/KennFalcon/elasticsearch-analysis-hanlp" target="_blank" rel="noopener">https://github.com/KennFalcon/elasticsearch-analysis-hanlp</a></li><li>分词算法综述 <a href="https://zhuanlan.zhihu.com/p/50444885" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/50444885</a></li><li>中科院计算所NLPIR <a href="http://ictclas.nlpir.org/nlpir/" target="_blank" rel="noopener">http://ictclas.nlpir.org/nlpir/</a></li><li>ansj分词器 <a href="https://github.com/NLPchina/ansj_seg" target="_blank" rel="noopener">https://github.com/NLPchina/ansj_seg</a></li><li>哈工大的LTP <a href="https://github.com/HIT-SCIR/ltp" target="_blank" rel="noopener">https://github.com/HIT-SCIR/ltp</a></li><li>清华大学THULAC <a href="https://github.com/thunlp/THULAC" target="_blank" rel="noopener">https://github.com/thunlp/THULAC</a></li><li>斯坦福分词器 <a href="https://nlp.stanford.edu/software/segmenter.shtml" target="_blank" rel="noopener">https://nlp.stanford.edu/software/segmenter.shtml</a></li><li>Hanlp分词器 <a href="https://github.com/hankcs/HanLP" target="_blank" rel="noopener">https://github.com/hankcs/HanLP</a></li><li>结巴分词 <a href="https://github.com/yanyiwu/cppjieba" target="_blank" rel="noopener">https://github.com/yanyiwu/cppjieba</a></li><li>KCWS分词器(字嵌入+Bi-LSTM+CRF) <a href="https://github.com/koth/kcws" target="_blank" rel="noopener">https://github.com/koth/kcws</a></li><li>ZPar <a href="https://github.com/frcchang/zpar/releases" target="_blank" rel="noopener">https://github.com/frcchang/zpar/releases</a></li><li>IKAnalyzer <a href="https://github.com/wks/ik-analyzer" target="_blank" rel="noopener">https://github.com/wks/ik-analyzer</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">#stop word</span><br><span class="line"></span><br><span class="line">DELETE my_index</span><br><span class="line">PUT &#x2F;my_index&#x2F;_doc&#x2F;1</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#39;m happy for this fox&quot; &#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;my_index&#x2F;_doc&#x2F;2</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#39;m not happy about my fox problem&quot; &#125;</span><br><span class="line"></span><br><span class="line">POST my_index&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;not happy fox&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#虽然通过使用 english （英语）分析器，使得匹配规则更加宽松，我们也因此提高了召回率，但却降低了精准匹配文档的能力。为了获得两方面的优势，我们可以使用multifields（多字段）对 title 字段建立两次索引： 一次使用 &#96;english&#96;（英语）分析器，另一次使用 &#96;standard&#96;（标准）分析器:</span><br><span class="line"></span><br><span class="line">DELETE my_index</span><br><span class="line"></span><br><span class="line">PUT &#x2F;my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;blog&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;title&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">          &quot;analyzer&quot;: &quot;english&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;my_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;blog&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;title&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">          &quot;fields&quot;: &#123;</span><br><span class="line">            &quot;english&quot;: &#123;</span><br><span class="line">              &quot;type&quot;:     &quot;string&quot;,</span><br><span class="line">              &quot;analyzer&quot;: &quot;english&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;my_index&#x2F;blog&#x2F;1</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#39;m happy for this fox&quot; &#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;my_index&#x2F;blog&#x2F;2</span><br><span class="line">&#123; &quot;title&quot;: &quot;I&#39;m not happy about my fox problem&quot; &#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;type&quot;:     &quot;most_fields&quot;,</span><br><span class="line">      &quot;query&quot;:    &quot;not happy foxes&quot;,</span><br><span class="line">      &quot;fields&quot;: [ &quot;title&quot;, &quot;title.english&quot; ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#安装插件</span><br><span class="line">.&#x2F;elasticsearch-plugin install https:&#x2F;&#x2F;github.com&#x2F;medcl&#x2F;elasticsearch-analysis-ik&#x2F;releases&#x2F;download&#x2F;v7.1.0&#x2F;elasticsearch-analysis-ik-7.1.0.zip</span><br><span class="line">#安装插件</span><br><span class="line">bin&#x2F;elasticsearch install https:&#x2F;&#x2F;github.com&#x2F;KennFalcon&#x2F;elasticsearch-analysis-hanlp&#x2F;releases&#x2F;download&#x2F;v7.1.0&#x2F;elasticsearch-analysis-hanlp-7.1.0.zip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#ik_max_word</span><br><span class="line">#ik_smart</span><br><span class="line">#hanlp: hanlp默认分词</span><br><span class="line">#hanlp_standard: 标准分词</span><br><span class="line">#hanlp_index: 索引分词</span><br><span class="line">#hanlp_nlp: NLP分词</span><br><span class="line">#hanlp_n_short: N-最短路分词</span><br><span class="line">#hanlp_dijkstra: 最短路分词</span><br><span class="line">#hanlp_crf: CRF分词（在hanlp 1.6.6已开始废弃）</span><br><span class="line">#hanlp_speed: 极速词典分词</span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;hanlp_standard&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;剑桥分析公司多位高管对卧底记者说，他们确保了唐纳德·特朗普在总统大选中获胜&quot;]</span><br><span class="line"></span><br><span class="line">&#125;     </span><br><span class="line"></span><br><span class="line">#Pinyin</span><br><span class="line">PUT &#x2F;artists&#x2F;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">        &quot;analysis&quot; : &#123;</span><br><span class="line">            &quot;analyzer&quot; : &#123;</span><br><span class="line">                &quot;user_name_analyzer&quot; : &#123;</span><br><span class="line">                    &quot;tokenizer&quot; : &quot;whitespace&quot;,</span><br><span class="line">                    &quot;filter&quot; : &quot;pinyin_first_letter_and_full_pinyin_filter&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;filter&quot; : &#123;</span><br><span class="line">                &quot;pinyin_first_letter_and_full_pinyin_filter&quot; : &#123;</span><br><span class="line">                    &quot;type&quot; : &quot;pinyin&quot;,</span><br><span class="line">                    &quot;keep_first_letter&quot; : true,</span><br><span class="line">                    &quot;keep_full_pinyin&quot; : false,</span><br><span class="line">                    &quot;keep_none_chinese&quot; : true,</span><br><span class="line">                    &quot;keep_original&quot; : false,</span><br><span class="line">                    &quot;limit_first_letter_length&quot; : 16,</span><br><span class="line">                    &quot;lowercase&quot; : true,</span><br><span class="line">                    &quot;trim_whitespace&quot; : true,</span><br><span class="line">                    &quot;keep_none_chinese_in_first_letter&quot; : true</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET &#x2F;artists&#x2F;_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;text&quot;: [&quot;刘德华 张学友 郭富城 黎明 四大天王&quot;],</span><br><span class="line">  &quot;analyzer&quot;: &quot;user_name_analyzer&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="tmdb-practice"><a href="#tmdb-practice" class="headerlink" title="tmdb practice"></a>tmdb practice</h2><p>Prequest</p><ul><li>Python 2.7.15</li><li>request</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> tmdb-search</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">Run python ./ingest_tmdb_from_file.py</span><br></pre></td></tr></table></figure><p>Demo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">POST tmdb&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;_source&quot;: [&quot;title&quot;,&quot;overview&quot;],</span><br><span class="line"> &quot;query&quot;: &#123;</span><br><span class="line">   &quot;match_all&quot;: &#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST tmdb&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_source&quot;: [&quot;title&quot;,&quot;overview&quot;],</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;basketball with cartoon aliens&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;title&quot;,&quot;overview&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;highlight&quot; : &#123;</span><br><span class="line">        &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;overview&quot; : &#123; &quot;pre_tags&quot; : [&quot;\\033[0;32;40m&quot;], &quot;post_tags&quot; : [&quot;\\033[0m&quot;] &#125;,</span><br><span class="line">            &quot;title&quot; : &#123; &quot;pre_tags&quot; : [&quot;\\033[0;32;40m&quot;], &quot;post_tags&quot; : [&quot;\\033[0m&quot;] &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Search-Template-amp-Index-Alias"><a href="#Search-Template-amp-Index-Alias" class="headerlink" title="Search Template &amp; Index Alias"></a>Search Template &amp; Index Alias</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">POST _scripts&#x2F;tmdb</span><br><span class="line">&#123;</span><br><span class="line">  &quot;script&quot;: &#123;</span><br><span class="line">    &quot;lang&quot;: &quot;mustache&quot;,</span><br><span class="line">    &quot;source&quot;: &#123;</span><br><span class="line">      &quot;_source&quot;: [</span><br><span class="line">        &quot;title&quot;,&quot;overview&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;size&quot;: 20,</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;: &quot;&#123;&#123;q&#125;&#125;&quot;,</span><br><span class="line">          &quot;fields&quot;: [&quot;title&quot;,&quot;overview&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">DELETE _scripts&#x2F;tmdb</span><br><span class="line"></span><br><span class="line">GET _scripts&#x2F;tmdb</span><br><span class="line"></span><br><span class="line">POST tmdb&#x2F;_search&#x2F;template</span><br><span class="line">&#123;</span><br><span class="line">    &quot;id&quot;:&quot;tmdb&quot;,</span><br><span class="line">    &quot;params&quot;: &#123;</span><br><span class="line">        &quot;q&quot;: &quot;basketball with cartoon aliens&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT movies-2019&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;the matrix&quot;,</span><br><span class="line">  &quot;rating&quot;:5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT movies-2019&#x2F;_doc&#x2F;2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;Speed&quot;,</span><br><span class="line">  &quot;rating&quot;:3</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _aliases</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;add&quot;: &#123;</span><br><span class="line">        &quot;index&quot;: &quot;movies-2019&quot;,</span><br><span class="line">        &quot;alias&quot;: &quot;movies-latest&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies-latest&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST _aliases</span><br><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;add&quot;: &#123;</span><br><span class="line">        &quot;index&quot;: &quot;movies-2019&quot;,</span><br><span class="line">        &quot;alias&quot;: &quot;movies-lastest-highrate&quot;,</span><br><span class="line">        &quot;filter&quot;: &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;rating&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: 4</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST movies-lastest-highrate&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Function-Score-Query"><a href="#Function-Score-Query" class="headerlink" title="Function Score Query"></a>Function Score Query</h2><ul><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html</a></li></ul><p>Demo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">DELETE blogs</span><br><span class="line">PUT &#x2F;blogs&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:   &quot;About popularity&quot;,</span><br><span class="line">  &quot;content&quot;: &quot;In this post we will talk about...&quot;,</span><br><span class="line">  &quot;votes&quot;:   0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;blogs&#x2F;_doc&#x2F;2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:   &quot;About popularity&quot;,</span><br><span class="line">  &quot;content&quot;: &quot;In this post we will talk about...&quot;,</span><br><span class="line">  &quot;votes&quot;:   100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT &#x2F;blogs&#x2F;_doc&#x2F;3</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:   &quot;About popularity&quot;,</span><br><span class="line">  &quot;content&quot;: &quot;In this post we will talk about...&quot;,</span><br><span class="line">  &quot;votes&quot;:   1000000</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;,</span><br><span class="line">        &quot;modifier&quot;: &quot;log1p&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;,</span><br><span class="line">        &quot;modifier&quot;: &quot;log1p&quot; ,</span><br><span class="line">        &quot;factor&quot;: 0.1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &#123;</span><br><span class="line">        &quot;multi_match&quot;: &#123;</span><br><span class="line">          &quot;query&quot;:    &quot;popularity&quot;,</span><br><span class="line">          &quot;fields&quot;: [ &quot;title&quot;, &quot;content&quot; ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;field_value_factor&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;votes&quot;,</span><br><span class="line">        &quot;modifier&quot;: &quot;log1p&quot; ,</span><br><span class="line">        &quot;factor&quot;: 0.1</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;boost_mode&quot;: &quot;sum&quot;,</span><br><span class="line">      &quot;max_boost&quot;: 3</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;blogs&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;function_score&quot;: &#123;</span><br><span class="line">      &quot;random_score&quot;: &#123;</span><br><span class="line">        &quot;seed&quot;: 911119</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Term-amp-Phrase-Suggester"><a href="#Term-amp-Phrase-Suggester" class="headerlink" title="Term &amp; Phrase Suggester"></a>Term &amp; Phrase Suggester</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">DELETE articles</span><br><span class="line">PUT articles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title_completion&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST articles&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;lucene is very cool&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch builds on top of lucene&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;elastic is the company behind ELK stack&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elk stack rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123;&#125; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST articles&#x2F;_search?pretty</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 0,</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;article-suggester&quot;: &#123;</span><br><span class="line">      &quot;prefix&quot;: &quot;elk &quot;,</span><br><span class="line">      &quot;completion&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;title_completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE articles</span><br><span class="line"></span><br><span class="line">POST articles&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;lucene is very cool&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;Elasticsearch builds on top of lucene&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;Elasticsearch rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;elastic is the company behind ELK stack&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;body&quot;: &quot;Elk stack rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123;&#125; &#125;</span><br><span class="line">&#123;  &quot;body&quot;: &quot;elasticsearch is rock solid&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;Elk stack  rocks rock&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;articles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 1,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;body&quot;: &quot;lucen rock&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen rock&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;missing&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;articles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen rock&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;popular&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;articles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen rock&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;always&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;articles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;term-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucen hocks&quot;,</span><br><span class="line">      &quot;term&quot;: &#123;</span><br><span class="line">        &quot;suggest_mode&quot;: &quot;always&quot;,</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;,</span><br><span class="line">        &quot;prefix_length&quot;:0,</span><br><span class="line">        &quot;sort&quot;: &quot;frequency&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;articles&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;my-suggestion&quot;: &#123;</span><br><span class="line">      &quot;text&quot;: &quot;lucne and elasticsear rock hello world &quot;,</span><br><span class="line">      &quot;phrase&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;body&quot;,</span><br><span class="line">        &quot;max_errors&quot;:2,</span><br><span class="line">        &quot;confidence&quot;:0,</span><br><span class="line">        &quot;direct_generator&quot;:[&#123;</span><br><span class="line">          &quot;field&quot;:&quot;body&quot;,</span><br><span class="line">          &quot;suggest_mode&quot;:&quot;always&quot;</span><br><span class="line">        &#125;],</span><br><span class="line">        &quot;highlight&quot;: &#123;</span><br><span class="line">          &quot;pre_tag&quot;: &quot;&lt;em&gt;&quot;,</span><br><span class="line">          &quot;post_tag&quot;: &quot;&lt;&#x2F;em&gt;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Auto-Complete"><a href="#Auto-Complete" class="headerlink" title="Auto Complete"></a>Auto Complete</h2><p>Pratice in Dev Tools<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">DELETE articles</span><br><span class="line">PUT articles</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title_completion&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST articles&#x2F;_bulk</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;lucene is very cool&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch builds on top of lucene&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elasticsearch rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;elastic is the company behind ELK stack&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123; &#125; &#125;</span><br><span class="line">&#123; &quot;title_completion&quot;: &quot;Elk stack rocks&quot;&#125;</span><br><span class="line">&#123; &quot;index&quot; : &#123;&#125; &#125;</span><br><span class="line"></span><br><span class="line">POST articles&#x2F;_search?pretty</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 0,</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;article-suggester&quot;: &#123;</span><br><span class="line">      &quot;prefix&quot;: &quot;elk &quot;,</span><br><span class="line">      &quot;completion&quot;: &#123;</span><br><span class="line">        &quot;field&quot;: &quot;title_completion&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE comments</span><br><span class="line">PUT comments</span><br><span class="line">PUT comments&#x2F;_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;comment_autocomplete&quot;:&#123;</span><br><span class="line">      &quot;type&quot;: &quot;completion&quot;,</span><br><span class="line">      &quot;contexts&quot;:[&#123;</span><br><span class="line">        &quot;type&quot;:&quot;category&quot;,</span><br><span class="line">        &quot;name&quot;:&quot;comment_category&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST comments&#x2F;_doc</span><br><span class="line">&#123;</span><br><span class="line">  &quot;comment&quot;:&quot;I love the star war movies&quot;,</span><br><span class="line">  &quot;comment_autocomplete&quot;:&#123;</span><br><span class="line">    &quot;input&quot;:[&quot;star wars&quot;],</span><br><span class="line">    &quot;contexts&quot;:&#123;</span><br><span class="line">      &quot;comment_category&quot;:&quot;movies&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST comments&#x2F;_doc</span><br><span class="line">&#123;</span><br><span class="line">  &quot;comment&quot;:&quot;Where can I find a Starbucks&quot;,</span><br><span class="line">  &quot;comment_autocomplete&quot;:&#123;</span><br><span class="line">    &quot;input&quot;:[&quot;starbucks&quot;],</span><br><span class="line">    &quot;contexts&quot;:&#123;</span><br><span class="line">      &quot;comment_category&quot;:&quot;coffee&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST comments&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;suggest&quot;: &#123;</span><br><span class="line">    &quot;MY_SUGGESTION&quot;: &#123;</span><br><span class="line">      &quot;prefix&quot;: &quot;sta&quot;,</span><br><span class="line">      &quot;completion&quot;:&#123;</span><br><span class="line">        &quot;field&quot;:&quot;comment_autocomplete&quot;,</span><br><span class="line">        &quot;contexts&quot;:&#123;</span><br><span class="line">          &quot;comment_category&quot;:&quot;coffee&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Cross-Cluster-Search"><a href="#Cross-Cluster-Search" class="headerlink" title="Cross Cluster Search"></a>Cross Cluster Search</h2><ul><li>在Kibana中使用Cross data search <a href="https://kelonsoftware.com/cross-cluster-search-kibana/" target="_blank" rel="noopener">https://kelonsoftware.com/cross-cluster-search-kibana/</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"># 启动3个集群 start 3 cluster </span><br><span class="line"></span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;cluster0node -E cluster.name&#x3D;cluster0 -E path.data&#x3D;cluster0_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9200 -E transport.port&#x3D;9300</span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;cluster1node -E cluster.name&#x3D;cluster1 -E path.data&#x3D;cluster1_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9201 -E transport.port&#x3D;9301</span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;cluster2node -E cluster.name&#x3D;cluster2 -E path.data&#x3D;cluster2_data -E discovery.type&#x3D;single-node -E http.port&#x3D;9202 -E transport.port&#x3D;9302</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;在每个集群上设置动态的设置</span><br><span class="line">PUT _cluster&#x2F;settings</span><br><span class="line">&#123;</span><br><span class="line">  &quot;persistent&quot;: &#123;</span><br><span class="line">    &quot;cluster&quot;: &#123;</span><br><span class="line">      &quot;remote&quot;: &#123;</span><br><span class="line">        &quot;cluster0&quot;: &#123;</span><br><span class="line">          &quot;seeds&quot;: [</span><br><span class="line">            &quot;127.0.0.1:9300&quot;</span><br><span class="line">          ],</span><br><span class="line">          &quot;transport.ping_schedule&quot;: &quot;30s&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;cluster1&quot;: &#123;</span><br><span class="line">          &quot;seeds&quot;: [</span><br><span class="line">            &quot;127.0.0.1:9301&quot;</span><br><span class="line">          ],</span><br><span class="line">          &quot;transport.compress&quot;: true,</span><br><span class="line">          &quot;skip_unavailable&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;cluster2&quot;: &#123;</span><br><span class="line">          &quot;seeds&quot;: [</span><br><span class="line">            &quot;127.0.0.1:9302&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#cURL</span><br><span class="line">curl -XPUT &quot;http:&#x2F;&#x2F;localhost:9200&#x2F;_cluster&#x2F;settings&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;&quot;persistent&quot;:&#123;&quot;cluster&quot;:&#123;&quot;remote&quot;:&#123;&quot;cluster0&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9300&quot;],&quot;transport.ping_schedule&quot;:&quot;30s&quot;&#125;,&quot;cluster1&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9301&quot;],&quot;transport.compress&quot;:true,&quot;skip_unavailable&quot;:true&#125;,&quot;cluster2&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9302&quot;]&#125;&#125;&#125;&#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">curl -XPUT &quot;http:&#x2F;&#x2F;localhost:9201&#x2F;_cluster&#x2F;settings&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;&quot;persistent&quot;:&#123;&quot;cluster&quot;:&#123;&quot;remote&quot;:&#123;&quot;cluster0&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9300&quot;],&quot;transport.ping_schedule&quot;:&quot;30s&quot;&#125;,&quot;cluster1&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9301&quot;],&quot;transport.compress&quot;:true,&quot;skip_unavailable&quot;:true&#125;,&quot;cluster2&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9302&quot;]&#125;&#125;&#125;&#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">curl -XPUT &quot;http:&#x2F;&#x2F;localhost:9202&#x2F;_cluster&#x2F;settings&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;&quot;persistent&quot;:&#123;&quot;cluster&quot;:&#123;&quot;remote&quot;:&#123;&quot;cluster0&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9300&quot;],&quot;transport.ping_schedule&quot;:&quot;30s&quot;&#125;,&quot;cluster1&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9301&quot;],&quot;transport.compress&quot;:true,&quot;skip_unavailable&quot;:true&#125;,&quot;cluster2&quot;:&#123;&quot;seeds&quot;:[&quot;127.0.0.1:9302&quot;]&#125;&#125;&#125;&#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建测试数据</span><br><span class="line">curl -XPOST &quot;http:&#x2F;&#x2F;localhost:9200&#x2F;users&#x2F;_doc&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;&quot;name&quot;:&quot;user1&quot;,&quot;age&quot;:10&#125;&#39;</span><br><span class="line"></span><br><span class="line">curl -XPOST &quot;http:&#x2F;&#x2F;localhost:9201&#x2F;users&#x2F;_doc&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:20&#125;&#39;</span><br><span class="line"></span><br><span class="line">curl -XPOST &quot;http:&#x2F;&#x2F;localhost:9202&#x2F;users&#x2F;_doc&quot; -H &#39;Content-Type: application&#x2F;json&#39; -d&#39;</span><br><span class="line">&#123;&quot;name&quot;:&quot;user3&quot;,&quot;age&quot;:30&#125;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查询</span><br><span class="line">GET &#x2F;users,cluster1:users,cluster2:users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: 20,</span><br><span class="line">        &quot;lte&quot;: 40</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="split-brain"><a href="#split-brain" class="headerlink" title="split-brain"></a>split-brain</h2><ul><li><a href="https://www.elastic.co/cn/blog/a-new-era-for-cluster-coordination-in-elasticsearch" target="_blank" rel="noopener">https://www.elastic.co/cn/blog/a-new-era-for-cluster-coordination-in-elasticsearch</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># start 3 nodes in one host</span><br><span class="line"></span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;node1 -E cluster.name&#x3D;geektime -E path.data&#x3D;node1_data</span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;node2 -E cluster.name&#x3D;geektime -E path.data&#x3D;node2_data</span><br><span class="line">bin&#x2F;elasticsearch -E node.name&#x3D;node3 -E cluster.name&#x3D;geektime -E path.data&#x3D;node3_data</span><br><span class="line"></span><br><span class="line"># avoid split-brain</span><br><span class="line">quorum &#x3D; master nodes&#x2F;2+1</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">node type</th><th style="text-align:center">config</th><th style="text-align:center">default</th></tr></thead><tbody><tr><td style="text-align:center">master eligible</td><td style="text-align:center">node.master</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">data</td><td style="text-align:center">node.data</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">ingest</td><td style="text-align:center">node.ingest</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">coordinating only</td><td style="text-align:center">NA</td><td style="text-align:center">above 3 are false</td></tr><tr><td style="text-align:center">machine learning</td><td style="text-align:center">node.ml</td><td style="text-align:center">true(need x-pack)</td></tr></tbody></table><h2 id="query-fetch"><a href="#query-fetch" class="headerlink" title="query fetch"></a>query fetch</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">DELETE message</span><br><span class="line">PUT message</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_shards&quot;: 20</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET message</span><br><span class="line"></span><br><span class="line">POST message&#x2F;_doc?routing&#x3D;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;content&quot;:&quot;good&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST message&#x2F;_doc?routing&#x3D;2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;content&quot;:&quot;good morning&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST message&#x2F;_doc?routing&#x3D;3</span><br><span class="line">&#123;</span><br><span class="line">  &quot;content&quot;:&quot;good morning everyone&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST message&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST message&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;explain&quot;: true,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;good&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST message&#x2F;_search?search_type&#x3D;dfs_query_then_fetch</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;good&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Doc-Values-amp-Fielddata"><a href="#Doc-Values-amp-Fielddata" class="headerlink" title="Doc Values &amp; Fielddata"></a>Doc Values &amp; Fielddata</h2><p>Demo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">#单字段排序</span><br><span class="line">POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 5,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;&quot;order_date&quot;: &#123;&quot;order&quot;: &quot;desc&quot;&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#多字段排序</span><br><span class="line">POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 5,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;&quot;order_date&quot;: &#123;&quot;order&quot;: &quot;desc&quot;&#125;&#125;,</span><br><span class="line">    &#123;&quot;_doc&quot;:&#123;&quot;order&quot;: &quot;asc&quot;&#125;&#125;,</span><br><span class="line">    &#123;&quot;_score&quot;:&#123; &quot;order&quot;: &quot;desc&quot;&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET kibana_sample_data_ecommerce&#x2F;_mapping</span><br><span class="line"></span><br><span class="line">#对 text 字段进行排序。默认会报错，需打开fielddata</span><br><span class="line">POST &#x2F;kibana_sample_data_ecommerce&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;size&quot;: 5,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;&quot;customer_full_name&quot;: &#123;&quot;order&quot;: &quot;desc&quot;&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#打开 text的 fielddata</span><br><span class="line">PUT kibana_sample_data_ecommerce&#x2F;_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;customer_full_name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;text&quot;,</span><br><span class="line">          &quot;fielddata&quot;: true,</span><br><span class="line">          &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;keyword&quot; : &#123;</span><br><span class="line">              &quot;type&quot; : &quot;keyword&quot;,</span><br><span class="line">              &quot;ignore_above&quot; : 256</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#关闭 keyword的 doc values</span><br><span class="line">PUT test_keyword</span><br><span class="line">PUT test_keyword&#x2F;_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;user_name&quot;:&#123;</span><br><span class="line">      &quot;type&quot;: &quot;keyword&quot;,</span><br><span class="line">      &quot;doc_values&quot;:false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE test_keyword</span><br><span class="line"></span><br><span class="line">PUT test_text</span><br><span class="line">PUT test_text&#x2F;_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;intro&quot;:&#123;</span><br><span class="line">      &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">      &quot;doc_values&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DELETE test_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DELETE temp_users</span><br><span class="line">PUT temp_users</span><br><span class="line">PUT temp_users&#x2F;_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">    &quot;name&quot;:&#123;&quot;type&quot;: &quot;text&quot;,&quot;fielddata&quot;: true&#125;,</span><br><span class="line">    &quot;desc&quot;:&#123;&quot;type&quot;: &quot;text&quot;,&quot;fielddata&quot;: true&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Post temp_users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;Jack&quot;,&quot;desc&quot;:&quot;Jack is a good boy!&quot;,&quot;age&quot;:10&#125;</span><br><span class="line"></span><br><span class="line">#打开fielddata 后，查看 docvalue_fields数据</span><br><span class="line">POST  temp_users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docvalue_fields&quot;: [</span><br><span class="line">    &quot;name&quot;,&quot;desc&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#查看整型字段的docvalues</span><br><span class="line">POST  temp_users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docvalue_fields&quot;: [</span><br><span class="line">    &quot;age&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="From-Size-Search-after-amp-Scroll-API"><a href="#From-Size-Search-after-amp-Scroll-API" class="headerlink" title="From, Size, Search_after &amp; Scroll API"></a>From, Size, Search_after &amp; Scroll API</h2><ul><li>from: where to begin search</li><li>size: number of docs you need query</li></ul><table><thead><tr><th style="text-align:center">type</th><th style="text-align:center">function</th></tr></thead><tbody><tr><td style="text-align:center">Regular</td><td style="text-align:center">real-time query top docs</td></tr><tr><td style="text-align:center">Scroll</td><td style="text-align:center">Need all docs</td></tr><tr><td style="text-align:center">Pagination</td><td style="text-align:center">from and size, if need deep page, use Search After</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"># result windows is too large 10000</span><br><span class="line">POST tmdb&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;from&quot;: 10000,</span><br><span class="line">  &quot;size&quot;: 1,</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#Scroll API</span><br><span class="line">DELETE users</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user1&quot;,&quot;age&quot;:10&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:11&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:12&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:13&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_count</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 1,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;sort&quot;: [</span><br><span class="line">        &#123;&quot;age&quot;: &quot;desc&quot;&#125; ,</span><br><span class="line">        &#123;&quot;_id&quot;: &quot;asc&quot;&#125;    </span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 1,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;search_after&quot;:</span><br><span class="line">        [</span><br><span class="line">          10,</span><br><span class="line">          &quot;ZQ0vYGsBrR8X3IP75QqX&quot;],</span><br><span class="line">    &quot;sort&quot;: [</span><br><span class="line">        &#123;&quot;age&quot;: &quot;desc&quot;&#125; ,</span><br><span class="line">        &#123;&quot;_id&quot;: &quot;asc&quot;&#125;    </span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Scroll API</span><br><span class="line">DELETE users</span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user1&quot;,&quot;age&quot;:10&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user2&quot;,&quot;age&quot;:20&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user3&quot;,&quot;age&quot;:30&#125;</span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user4&quot;,&quot;age&quot;:40&#125;</span><br><span class="line"></span><br><span class="line">POST &#x2F;users&#x2F;_search?scroll&#x3D;5m</span><br><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 1,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;match_all&quot; : &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST users&#x2F;_doc</span><br><span class="line">&#123;&quot;name&quot;:&quot;user5&quot;,&quot;age&quot;:50&#125;</span><br><span class="line">POST &#x2F;_search&#x2F;scroll</span><br><span class="line">&#123;</span><br><span class="line">    &quot;scroll&quot; : &quot;1m&quot;,</span><br><span class="line">    &quot;scroll_id&quot; : &quot;DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAWAWbWdoQXR2d3ZUd2kzSThwVTh4bVE0QQ&#x3D;&#x3D;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Concurrent-Control"><a href="#Concurrent-Control" class="headerlink" title="Concurrent Control"></a>Concurrent Control</h2><ul><li>Optimistic lock </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">DELETE products</span><br><span class="line">PUT products</span><br><span class="line"></span><br><span class="line">PUT products&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;iphone&quot;,</span><br><span class="line">  &quot;count&quot;:100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET products&#x2F;_doc&#x2F;1</span><br><span class="line"></span><br><span class="line">PUT products&#x2F;_doc&#x2F;1?if_seq_no&#x3D;1&amp;if_primary_term&#x3D;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;iphone&quot;,</span><br><span class="line">  &quot;count&quot;:100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT products&#x2F;_doc&#x2F;1?version&#x3D;30000&amp;version_type&#x3D;external</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;iphone&quot;,</span><br><span class="line">  &quot;count&quot;:100</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Elasticsearch is a search engine based on the Lucene library. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents. Elasticsearch is developed in Java. This blog is record  what I learn from this &lt;a href=&quot;https://time.geekbang.org/course/intro/100030501&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;geek Course&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="elk" scheme="http://feiyang233.club/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>Operation Course Record</title>
    <link href="http://feiyang233.club/post/operation-course/"/>
    <id>http://feiyang233.club/post/operation-course/</id>
    <published>2020-02-13T10:56:35.000Z</published>
    <updated>2021-06-12T02:30:59.862Z</updated>
    
    <content type="html"><![CDATA[<p>This blog is for record what I learn from this <a href="https://kaiwu.lagou.com/course/courseInfo.htm?courseId=42#/detail/pc?id=1546" target="_blank" rel="noopener">Operation Course</a></p><a id="more"></a><h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><h2 id="SHORTCUTS"><a href="#SHORTCUTS" class="headerlink" title="SHORTCUTS"></a>SHORTCUTS</h2><p>Ctrl + r：find the histroy<br>Ctrl + l：clear the terminal<br>Ctrl + a \ Ctrl + e：move to head \ end in row<br>Ctrl + w \ Ctrl + k：delete before \ after cursor</p><p>ZZ : VIM save and quit</p><p>Ctrl+C: Interrupt (kill) the current foreground process running in in the terminal. This sends the SIGINT signal to the process, which is technically just a request—most processes will honor it, but some may ignore it.<br>Ctrl+Z: Suspend the current foreground process running in bash. This sends the SIGTSTP signal to the process. To return the process to the foreground later, use the fg process_name command.<br>Ctrl+D: Close the bash shell. This sends an EOF (End-of-file) marker to bash, and bash exits when it receives this marker. This is similar to running the exit command.</p><p>top SHORTCUTS  </p><p>Shift + p：Sort by CPU<br>Shift + m：Sort by Memory</p><h2 id="find-large-file"><a href="#find-large-file" class="headerlink" title="find large file"></a>find large file</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">du -x --max-depth=1 / |sort -k1 -nr</span><br><span class="line">du -x -d 1 -h / |sort -k1 -nr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> find <span class="built_in">which</span> folder has most inode</span></span><br><span class="line">find -type f | awk -F / -v OFS=/ '&#123;$NF="";dir[$0]++&#125;END&#123;for(i in dir)print dir[i]" "i&#125;'| sort -k1 -nr | head</span><br><span class="line"></span><br><span class="line">769 ./wrk/obj/openssl-1.1.1b/test/</span><br><span class="line">551 ./.cache/mozilla/firefox/hha91z74.default-release/cache2/entries/</span><br><span class="line">462 ./wrk/obj/openssl-1.1.1b/doc/man3/</span><br><span class="line">229 ./wrk/obj/LuaJIT-2.1.0-beta3/src/</span><br><span class="line">212 ./wrk/obj/openssl-1.1.1b/test/certs/</span><br><span class="line">207 ./wrk/obj/openssl-1.1.1b/apps/</span><br><span class="line">199 ./wrk/obj/openssl-1.1.1b/crypto/asn1/</span><br><span class="line">194 ./.cache/gnome-software/icons/</span><br><span class="line">185 ./wrk/obj/openssl-1.1.1b/crypto/evp/</span><br><span class="line">157 ./wrk/obj/openssl-1.1.1b/test/recipes/</span><br></pre></td></tr></table></figure><h2 id="rename"><a href="#rename" class="headerlink" title="rename"></a>rename</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> find consumer.xml file and replace all aaaaaa to bbbbbb</span></span><br><span class="line">find ./ -type f -name consumer.xml -exec sed -i "s/aaaaaa/bbbbbb/g" &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> find all .txt file and compress <span class="keyword">then</span> copy to /home/.</span></span><br><span class="line">(find . -name "*.txt"|xargs tar -cvf test.tar) &amp;&amp; cp -f test.tar /home/.</span><br></pre></td></tr></table></figure><h2 id="network"><a href="#network" class="headerlink" title="network"></a>network</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> network status</span></span><br><span class="line">netstat -n | awk '/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> get IP </span></span><br><span class="line">ip a|grep "global"|awk '&#123;print $2&#125;'| awk -F/ '&#123;print $1&#125;'</span><br></pre></td></tr></table></figure><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><ol><li><a href="https://mp.weixin.qq.com/s/IRQq3h4mur60rjVfcLsBzA" target="_blank" rel="noopener">Nginx是什么？能干什么？</a></li></ol><h2 id="cpu-affinity"><a href="#cpu-affinity" class="headerlink" title="cpu affinity"></a>cpu affinity</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_cpu_affinity</span> auto</span><br></pre></td></tr></table></figure><p><a href="http://nginx.org/en/docs/ngx_core_module.html#worker_cpu_affinity" target="_blank" rel="noopener">offical document</a></p><h2 id="epoll"><a href="#epoll" class="headerlink" title="epoll"></a>epoll</h2><p>Add in kernel 2.6</p><ol><li>epoll’s event flow model is thread-safe;</li><li>epoll follow the selection model and improve efficiency;</li><li>epoll is event-driven. You can select the relevant state of the entire file to be scanned according to your needs. epoll avoids replacing the scanned file according to the event. You can directly call the callback function, which is more efficient.</li><li>Removed the maximum limit on the number of file sizes that can be monitored by the temporary process inside the select model (1024). If you have used an earlier version of Apache, the selection model it uses will be delayed when the request exceeds 1000. The request is wrong, and the performance will be significantly improved by using Nginx.</li><li>In addition, an optimization place involved in the events {} configuration is worker_connections, which is also set in events. Through the above learning, we know the role of the worker thread, and the connections supported by each worker thread are Limited, it will be set to 1024 by default here, and when we are dealing with high concurrency scenarios, it is often too low to split worker threads to 1024. It is recommended that you increase the worker_connections, you can refer to the actual business needs Nginx processing Maximum to increase this setting.</li></ol><h2 id="sendfile"><a href="#sendfile" class="headerlink" title="sendfile"></a>sendfile</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200216173928.png" alt=""><br>refer <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile" target="_blank" rel="noopener">docs</a><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /video/ &#123;</span><br><span class="line">    <span class="attribute">sendfile</span>       <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nopush</span>     <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">aio</span>            <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h2><p><a href="http://nginx.org/en/docs/http/ngx_http_gzip_module.html" target="_blank" rel="noopener">docs</a></p><ol><li><code>gzip on</code> is responsible for turning on the compression function of the backend;</li><li><code>gzip_buffer 16 8k</code> means to set the memory space of Nginx when processing file compression;</li><li><code>gzip_comp_level 6</code> indicates the compression level of Nginx when processing compression. Generally, the higher the level, the larger the compression ratio. However, it does not mean that the larger the compression ratio, the better. It is still necessary to choose a suitable compression ratio according to the actual situation. The compression ratio is too large. Affects performance. Compression ratio is too small to achieve the desired effect. Generally, it is recommended that you set it to 6 to be more appropriate.</li><li><code>gzip_http_version 1.1</code> means only compress the HTTP 1.1 version of the protocol;</li><li><code>gzip_min_length 256</code> means that compression is performed only when the length is greater than the minimum 256 bytes, and if it is less than this length, no compression is performed;</li><li><code>gzip_proxied any</code> means that Nginx as a reverse proxy sets some gzip compression policies based on the information returned by the backend server;</li><li><code>gzip_vary on</code> indicates whether to send Vary: Accept_Encoding response header field, to realize that the receiver server is gzip compressed;</li><li><code>application / vnd.ms-fontobject image / x-icon</code>; gip compression type;</li><li>g<code>zip_disable &quot;msie6&quot;</code>; Turn off compression for IE6.</li></ol><h2 id="Timing-Variables"><a href="#Timing-Variables" class="headerlink" title="Timing Variables"></a>Timing Variables</h2><ul><li><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html?&amp;_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_request_time" target="_blank" rel="noopener">request_time</a> – Full request time, starting when NGINX reads the first byte from the client and ending when NGINX sends the last byte of the response body</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&amp;_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_upstream_connect_time" target="_blank" rel="noopener">upstream_connect_time</a> – Time spent establishing a connection with an upstream server</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&amp;_ga=2.57291882.1195201124.1581934594-512055108.1581845805#var_upstream_header_time" target="_blank" rel="noopener">upstream_header_time</a> – Time between establishing a connection to an upstream server and receiving the first byte of the response header</li><li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html?&amp;_ga=2.258153418.1195201124.1581934594-512055108.1581845805#var_upstream_response_time" target="_blank" rel="noopener">upstream_response_time</a> – Time between establishing a connection to an upstream server and receiving the last byte of the response body</li></ul><h2 id="nginx-cache"><a href="#nginx-cache" class="headerlink" title="nginx cache"></a>nginx cache</h2><ol><li>ssl_session_cache</li><li><p>open_file_cache</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">index</span> index.htm index.html;</span><br><span class="line">    <span class="attribute">expires</span> max;  </span><br><span class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">1000</span> inactive=<span class="number">20s</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_valid</span> <span class="number">30s</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_min_uses</span> <span class="number">2</span>; </span><br><span class="line">    <span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>proxy_cache_path</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_cache_path</span> /path/to/cache levels=<span class="number">1</span>:<span class="number">2</span> keys_zone=my_cache:<span class="number">10m</span> max_size=<span class="number">10g</span> inactive=<span class="number">60m</span> location / &#123;</span><br><span class="line">        <span class="attribute">proxy_cache</span> my_cache;</span><br><span class="line">        …</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="load-balance"><a href="#load-balance" class="headerlink" title="load balance"></a>load balance</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200229125517.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200229125522.png" alt=""><br>nginx LB general config like follow<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="attribute">upstream</span> app_servers &#123;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="attribute">location</span> / &#123;</span><br><span class="line">                      <span class="attribute">proxy_pass</span> http://app_servers; </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol><li><p>real ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br></pre></td></tr></table></figure></li><li><p>Host forward</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span> ;</span><br><span class="line"><span class="attribute">proxy</span> set_header Host www.vipumi.com;</span><br></pre></td></tr></table></figure></li><li><p>session miss</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip_hash</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="attribute">upstream</span> app_servers &#123;</span><br><span class="line">                 ip_hash;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="attribute">location</span> / &#123;</span><br><span class="line">                  <span class="attribute">proxy_pass</span> http://app_servers; </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL_hash</span></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">        …</span><br><span class="line">        <span class="attribute">upstream</span> app_servers &#123;</span><br><span class="line">            <span class="attribute">hash</span> <span class="variable">$request_uri</span>;</span><br><span class="line">                 <span class="attribute">server</span> ip1:port1;</span><br><span class="line">                 <span class="attribute">server</span> ip2:port2;</span><br><span class="line">                 <span class="attribute">server</span> ip3:port3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="section">server</span> &#123;</span><br><span class="line">         …</span><br><span class="line">              <span class="attribute">location</span> / &#123;</span><br><span class="line">                  <span class="attribute">proxy_pass</span> http://app_servers;   </span><br><span class="line">              &#125;</span><br><span class="line">        ….</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># session copy between upstream servers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># session share: store in zookeeper</span></span><br></pre></td></tr></table></figure></li><li>live ping<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use taobao Tengine module</span></span><br><span class="line"></span><br><span class="line">check interval=3000 rise=2 fall=5 timeout=1000 type=http;  //定义检查间隔、周期、时间</span><br><span class="line">check_keepalive_requests 100;  //一个连接发送的请求数</span><br><span class="line">check_http_send “HEAD / HTTP/1.1\r\nConnection: keep-alive\r\n\r\n”; //定义健康检查方式</span><br><span class="line">check_http_expect_alive http_2xx http_3xx;  //判断后端返回状态码</span><br></pre></td></tr></table></figure></li></ol><h1 id="dynamic-upstream"><a href="#dynamic-upstream" class="headerlink" title="dynamic upstream"></a>dynamic upstream</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200301123058.png" alt=""></p><h2 id="nginx-config"><a href="#nginx-config" class="headerlink" title="nginx config"></a>nginx config</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">error_log</span>  logs/error.log  <span class="literal">info</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">lua_shared_dict</span> upstreams <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">upstream</span> local &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:81</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:82</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:83</span>;</span><br><span class="line">        <span class="attribute">balancer_by_lua_file</span> <span class="string">"./ngx_lua/upstream.lua"</span>;</span><br><span class="line">        <span class="comment">#check interval=3000 rise=2 fall=5 timeout=1000;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">800</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://local;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> = /ups &#123;</span><br><span class="line">            <span class="attribute">default_type</span>  text/plain;</span><br><span class="line">            <span class="attribute">content_by_lua_file</span> <span class="string">"./ngx_lua/upsops.lua"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> = /ups/check &#123;</span><br><span class="line">            <span class="attribute">default_type</span>  text/plain;</span><br><span class="line">            <span class="attribute">content_by_lua_file</span> <span class="string">"./ngx_lua/srvcheck.lua"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>upstream.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"><span class="keyword">local</span> upstream = <span class="built_in">require</span> <span class="string">"ngx.upstream"</span></span><br><span class="line"><span class="keyword">local</span> get_servers = upstream.get_servers</span><br><span class="line"><span class="keyword">local</span> set_peer_down = upstream.set_peer_down</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> curr_ups = upstream.current_upstream_name()</span><br><span class="line"><span class="keyword">local</span> srvs = get_servers(curr_ups)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 摘除主节点的服务节点，传入的addr对应于主节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_primary_server_down</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_primary_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">false</span>,peer.id,<span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 摘除备份节点的服务节点，传入的addr对应于备份节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_backup_server_down</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_backup_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">true</span>,peer.id,<span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 恢复主节点的服务节点，传入的addr对应于主节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_primary_server_up</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_primary_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">false</span>,peer.id,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 恢复备份节点的服务节点，传入的addr对应于备份节点的name属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_backup_server_up</span><span class="params">(addr)</span></span></span><br><span class="line">    <span class="keyword">local</span> peers = upstream.get_backup_peers(curr_ups)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #peers <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = peers[i]</span><br><span class="line">        <span class="keyword">if</span> peer.name == addr <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> ok, err = set_peer_down(curr_ups,<span class="literal">true</span>,peer.id,<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" failed to set peer down: "</span>..err)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i,peer <span class="keyword">in</span> <span class="built_in">ipairs</span>(srvs) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">local</span> isdown = ups:get(peer[<span class="string">"name"</span>])</span><br><span class="line">    <span class="comment">-- 摘除服务节点</span></span><br><span class="line">    <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> peer.backup == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- peer.addr: socket 地址，可能是Lua字符串或lua字符串的数组.</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_primary_server_down(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_primary_server_down(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> peer.backup == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_backup_server_down(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_backup_server_down(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set down failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="comment">-- 恢复服务节点</span></span><br><span class="line">    <span class="keyword">elseif</span> isdown == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> peer.backup == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_primary_server_up(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_primary_server_up(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> peer.backup == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> addr = peer.addr</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span>(addr) == <span class="string">"table"</span> <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">ipairs</span>(addr) <span class="keyword">do</span></span><br><span class="line">                    <span class="keyword">if</span> set_backup_server_up(v) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                        ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> set_backup_server_up(addr) == <span class="literal">true</span> <span class="keyword">then</span></span><br><span class="line">                    ups:delete(peer[<span class="string">"name"</span>])</span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.INFO,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up success."</span>)</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ngx.<span class="built_in">log</span>(ngx.ERR,curr_ups..<span class="string">" "</span>..peer[<span class="string">"name"</span>]..<span class="string">" set up failed."</span>)</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>upsops.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> cjson = <span class="built_in">require</span> <span class="string">"cjson"</span>;</span><br><span class="line"><span class="keyword">local</span> upstream = <span class="built_in">require</span> <span class="string">"ngx.upstream"</span></span><br><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> get_upstreams = upstream.get_upstreams</span><br><span class="line"><span class="keyword">local</span> all_ups = upstream.get_upstreams()</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> op = ngx.req.get_uri_args()[<span class="string">"op"</span>];</span><br><span class="line"><span class="keyword">local</span> server = ngx.req.get_uri_args()[<span class="string">"server"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> op == <span class="literal">nil</span> <span class="keyword">or</span> server == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    ngx.say(<span class="string">"usage: /ups?op=add&amp;server=192.168.56.101:8080"</span>);</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">down_server</span><span class="params">(upstream_name,server)</span></span></span><br><span class="line">    <span class="keyword">local</span> ret = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">local</span> perrs = upstream.get_servers(upstream_name)</span><br><span class="line">    <span class="keyword">local</span> avail = #perrs</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span>, #perrs <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> peer = perrs[i]</span><br><span class="line">        <span class="keyword">local</span> isdown = ups:get(peer[<span class="string">"name"</span>])</span><br><span class="line">        <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            avail = avail - <span class="number">1</span></span><br><span class="line">            ngx.<span class="built_in">log</span>(ngx.ERR,<span class="string">"## peer.down: true  ups: "</span>..upstream_name..<span class="string">" peer.name: "</span>..peer.name..<span class="string">" server: "</span>..server..<span class="string">" avail: "</span>..avail)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> peer.name == server <span class="keyword">then</span></span><br><span class="line">            ret = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret <span class="keyword">then</span></span><br><span class="line">        avail = <span class="number">2</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> avail</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> op == <span class="string">"add"</span> <span class="keyword">then</span></span><br><span class="line">    ups:set(server,<span class="number">0</span>)</span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"add a server success."</span>,data=&#123;server&#125;&#125;))</span><br><span class="line"><span class="keyword">elseif</span> op == <span class="string">"del"</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> isdown = ups:get(server)</span><br><span class="line">    <span class="keyword">if</span> isdown == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"del a server success."</span>,data=&#123;server&#125;&#125;))</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> _,u <span class="keyword">in</span> <span class="built_in">ipairs</span>(all_ups) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">local</span> srvs = upstream.get_servers(u)</span><br><span class="line">        <span class="keyword">for</span> i,peer <span class="keyword">in</span> <span class="built_in">ipairs</span>(srvs) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">local</span> down_svc = down_server(u,server)</span><br><span class="line">            ngx.<span class="built_in">log</span>(ngx.ERR,<span class="string">"## down_svc: "</span>..down_svc..<span class="string">" upstream: "</span>..u..<span class="string">" server: "</span>..server)</span><br><span class="line">            <span class="keyword">if</span> down_svc &lt; <span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ERR,u..<span class="string">" You cat not set peer down: "</span>..peer[<span class="string">"name"</span>])</span><br><span class="line">                ngx.say(cjson.encode(&#123;code=<span class="string">"E00001"</span>, msg=<span class="string">"You cat not set peer down: "</span>..peer[<span class="string">"name"</span>],data=&#123;peer[<span class="string">"name"</span>]&#125;&#125;))</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    ups:set(server,<span class="number">1</span>)</span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"del a server success."</span>,data=&#123;server&#125;&#125;))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    ngx.say(cjson.encode(&#123;code=<span class="string">"E00001"</span>, msg=<span class="string">"do none."</span>,data=&#123;&#125;&#125;))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li><p>srvcheck.lua</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> cjson = <span class="built_in">require</span> <span class="string">"cjson"</span>;</span><br><span class="line"><span class="keyword">local</span> ups = ngx.shared.upstreams;</span><br><span class="line"><span class="keyword">local</span> servers = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _,v <span class="keyword">in</span> <span class="built_in">pairs</span>(ups:get_keys(<span class="number">0</span>)) <span class="keyword">do</span></span><br><span class="line">   servers[v] = ups:get(v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ngx.say(cjson.encode(&#123;code=<span class="string">"A00001"</span>, msg=<span class="string">"OK"</span>, data=servers&#125;))</span><br></pre></td></tr></table></figure></li></ol><h1 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h1><ul><li>21 curl exercises <a href="https://jvns.ca/blog/2019/08/27/curl-exercises/" target="_blank" rel="noopener">https://jvns.ca/blog/2019/08/27/curl-exercises/</a></li><li>answer <a href="http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/" target="_blank" rel="noopener">http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/</a></li><li><a href="https://wsgzao.github.io/post/curl/" target="_blank" rel="noopener">https://wsgzao.github.io/post/curl/</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法 </span></span><br><span class="line">curl [option] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的使用，获取服务器内容，默认将输出打印到标准输出中(STDOUT) 中。</span></span><br><span class="line">curl http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 - v 参数可以看到详细解析过程，通常用于 debug</span></span><br><span class="line">curl -v http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl 发送 Get 请求</span></span><br><span class="line">curl URL</span><br><span class="line">curl URL -O 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 发送 post 请求</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 cookies</span></span><br><span class="line">curl URL --cookie <span class="string">"cookie 内容"</span></span><br><span class="line">curl URL --cookie-jar cookie 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置代理字符串</span></span><br><span class="line">curl URL --user-agent <span class="string">"代理内容"</span></span><br><span class="line">curl URL -A <span class="string">"代理内容"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 限制带宽</span></span><br><span class="line">curl URL --<span class="built_in">limit</span>-rate 速度</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 认证</span></span><br><span class="line">curl -u user:<span class="built_in">pwd</span> URL</span><br><span class="line">curl -u user URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 只打印 http 头部信息</span></span><br><span class="line">curl -I URL</span><br><span class="line">curl -head URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 末尾参数</span></span><br><span class="line">--progress  显示进度条</span><br><span class="line">--silent    不现实进度条</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要修改 / etc/hosts，curl 直接解析 ip 请求域名</span></span><br><span class="line"><span class="comment"># 将 http://example.com 或 https://example.com 请求指定域名解析的 IP 为 127.0.0.1</span></span><br><span class="line">curl --resolve example.com:80:127.0.0.1 http://example.com/</span><br><span class="line">curl --resolve example.com:443:127.0.0.1 https://example.com/</span><br><span class="line"></span><br><span class="line">-X/--request [GET|POST|PUT|DELETE|…]  指定请求的 HTTP 方法</span><br><span class="line">-H/--header                           指定请求的 HTTP Header</span><br><span class="line">-d/--data                             指定请求的 HTTP 消息体（Body）</span><br><span class="line">-v/--verbose                          输出详细的返回信息</span><br><span class="line">-u/--user                             指定账号、密码</span><br><span class="line">-b/--cookie                           读取 cookie  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 典型的测试命令为：</span></span><br><span class="line">curl -v -X POST -H <span class="string">"Content-Type: application/json"</span> http://127.0.0.1:8080/user -d<span class="string">'&#123;"username":"admin","password":"admin1234"&#125;'</span>...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 get 请求</span></span><br><span class="line">curl http://www.linuxidc.com/login.cgi?user=test001&amp;password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 post 请求</span></span><br><span class="line">curl -d <span class="string">"user=nickwolfe&amp;password=12345"</span> http://www.linuxidc.com/login.cgi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时需要使用 - X 选项，除了使用 POST 外，还可以使用 http 规范定义的其它请求谓词，如 PUT,DELETE 等</span></span><br><span class="line">curl -XPOST url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时，通常需要指定请求体数据。可以使用 - d 或 --data 来指定发送的请求体。</span></span><br><span class="line">curl -XPOST -d <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要对请求数据进行 urlencode, 可以使用下面的方式：</span></span><br><span class="line">curl -XPOST --data-urlencode <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此外发送 post 请求还可以有如下几种子选项：</span></span><br><span class="line">–data-raw</span><br><span class="line">–data-ascii</span><br><span class="line">–data-binary</span><br><span class="line"></span><br><span class="line"><span class="comment"># To retrieve the job config.xml</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml'</span> -u username:API_TOKEN -o &lt;jobname&gt;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use this config to create a new job</span></span><br><span class="line">curl -s -XPOST <span class="string">'&lt;jenkinshost&gt;/createItem?name=&lt;jobname&gt;'</span> -u username:API_TOKEN --data-binary @&lt;jobname&gt;.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get all jenkins jobs</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/api/json?pretty=true'</span> -u username:API_TOKEN -o jobs.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># get jenkins view</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/view/&lt;viewname&gt;/api/json'</span> -u username:API_TOKEN -o view.json</span><br></pre></td></tr></table></figure></li></ul><h1 id="unixbench-amp-fio"><a href="#unixbench-amp-fio" class="headerlink" title="unixbench &amp; fio"></a>unixbench &amp; fio</h1><p>Install unixbench can refer this <a href="https://www.ostechnix.com/unixbench-benchmark-suite-unix-like-systems/" target="_blank" rel="noopener">https://www.ostechnix.com/unixbench-benchmark-suite-unix-like-systems/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for ubuntu</span></span><br><span class="line"></span><br><span class="line">sudo apt-get install libx11-dev libgl1-mesa-dev libxext-dev perl perl-modules make git</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/kdlucas/byte-unixbench.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> byte-unixbench/UnixBench/</span><br><span class="line"></span><br><span class="line">./Run</span><br><span class="line"></span><br><span class="line"><span class="comment"># output </span></span><br><span class="line">root@ubuntu:/tmp/byte-unixbench/UnixBench<span class="comment"># ./Run </span></span><br><span class="line">make all</span><br><span class="line">make[1]: Entering directory <span class="string">'/tmp/byte-unixbench/UnixBench'</span></span><br><span class="line">make distr</span><br><span class="line">make[2]: Entering directory <span class="string">'/tmp/byte-unixbench/UnixBench'</span></span><br><span class="line">Checking distribution of files</span><br><span class="line">./pgms  exists</span><br><span class="line">./src  exists</span><br><span class="line">./testdir  exists</span><br><span class="line">./tmp  exists</span><br><span class="line">./results  exists</span><br><span class="line">make[2]: Leaving directory <span class="string">'/tmp/byte-unixbench/UnixBench'</span></span><br><span class="line">make programs</span><br><span class="line">make[2]: Entering directory <span class="string">'/tmp/byte-unixbench/UnixBench'</span></span><br><span class="line">make[2]: Nothing to be <span class="keyword">done</span> <span class="keyword">for</span> <span class="string">'programs'</span>.</span><br><span class="line">make[2]: Leaving directory <span class="string">'/tmp/byte-unixbench/UnixBench'</span></span><br><span class="line">make[1]: Leaving directory <span class="string">'/tmp/byte-unixbench/UnixBench'</span></span><br><span class="line">sh: 1: 3dinfo: not found</span><br><span class="line"></span><br><span class="line">   <span class="comment">#    #  #    #  #  #    #          #####   ######  #    #   ####   #    #</span></span><br><span class="line">   <span class="comment">#    #  ##   #  #   #  #           #    #  #       ##   #  #    #  #    #</span></span><br><span class="line">   <span class="comment">#    #  # #  #  #    ##            #####   #####   # #  #  #       ######</span></span><br><span class="line">   <span class="comment">#    #  #  # #  #    ##            #    #  #       #  # #  #       #    #</span></span><br><span class="line">   <span class="comment">#    #  #   ##  #   #  #           #    #  #       #   ##  #    #  #    #</span></span><br><span class="line">    <span class="comment">####   #    #  #  #    #          #####   ######  #    #   ####   #    #</span></span><br><span class="line"></span><br><span class="line">   Version 5.1.3                      Based on the Byte Magazine Unix Benchmark</span><br><span class="line"></span><br><span class="line">   Multi-CPU version                  Version 5 revisions by Ian Smith,</span><br><span class="line">                                      Sunnyvale, CA, USA</span><br><span class="line">   January 13, 2011                   johantheghost at yahoo period com</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">   Use directories <span class="keyword">for</span>:</span><br><span class="line">      * File I/O tests (named fs***) = /tmp/byte-unixbench/UnixBench/tmp</span><br><span class="line">      * Results                      = /tmp/byte-unixbench/UnixBench/results</span><br><span class="line">------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>Install fio <a href="https://github.com/axboe/fio" target="_blank" rel="noopener">https://github.com/axboe/fio</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install fio</span><br><span class="line"></span><br><span class="line"><span class="comment"># run write test</span></span><br><span class="line">feiyang@ubuntu:~$  fio --name=randwrite --ioengine=libaio --iodepth=1 --rw=randwrite --bs=4k --direct=0 --size=512M --numjobs=2 --runtime=240 --group_reporting</span><br><span class="line"></span><br><span class="line">randwrite: (g=0): rw=randwrite, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=1</span><br><span class="line">...</span><br><span class="line">fio-3.1</span><br><span class="line">Starting 2 processes</span><br><span class="line">randwrite: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randwrite: Laying out IO file (1 file / 512MiB)</span><br><span class="line">Jobs: 2 (f=2)</span><br><span class="line">randwrite: (groupid=0, <span class="built_in">jobs</span>=2): err= 0: pid=1910: Sat Mar 14 12:48:59 2020</span><br><span class="line">  write: IOPS=204k, BW=799MiB/s (838MB/s)(1024MiB/1282msec)</span><br><span class="line">    slat (nsec): min=1929, max=909527, avg=7784.12, stdev=14736.01</span><br><span class="line">    clat (nsec): min=348, max=1920.9k, avg=613.38, stdev=5441.37</span><br><span class="line">     lat (usec): min=2, max=1925, avg= 8.50, stdev=15.99</span><br><span class="line">    clat percentiles (nsec):</span><br><span class="line">     |  1.00th=[   378],  5.00th=[   386], 10.00th=[   390], 20.00th=[   394],</span><br><span class="line">     | 30.00th=[   398], 40.00th=[   402], 50.00th=[   410], 60.00th=[   418],</span><br><span class="line">     | 70.00th=[   430], 80.00th=[   852], 90.00th=[   964], 95.00th=[   988],</span><br><span class="line">     | 99.00th=[  1336], 99.50th=[  1864], 99.90th=[ 22144], 99.95th=[ 31872],</span><br><span class="line">     | 99.99th=[209920]</span><br><span class="line">   bw (  KiB/s): min=432536, max=539248, per=57.01%, avg=466269.00, stdev=49219.22, samples=4</span><br><span class="line">   iops        : min=108134, max=134812, avg=116567.00, stdev=12304.94, samples=4</span><br><span class="line">  lat (nsec)   : 500=78.66%, 750=1.10%, 1000=16.26%</span><br><span class="line">  lat (usec)   : 2=3.64%, 4=0.11%, 10=0.10%, 20=0.03%, 50=0.08%</span><br><span class="line">  lat (usec)   : 100=0.01%, 250=0.01%, 500=0.01%, 750=0.01%</span><br><span class="line">  lat (msec)   : 2=0.01%</span><br><span class="line">  cpu          : usr=1.11%, sys=98.68%, ctx=24, majf=0, minf=18</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued rwt: total=0,262144,0, short=0,0,0, dropped=0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line"></span><br><span class="line">Run status group 0 (all <span class="built_in">jobs</span>):</span><br><span class="line">  WRITE: bw=799MiB/s (838MB/s), 799MiB/s-799MiB/s (838MB/s-838MB/s), io=1024MiB (1074MB), run=1282-1282msec</span><br><span class="line"></span><br><span class="line">Disk stats (<span class="built_in">read</span>/write):</span><br><span class="line">  sda: ios=0/3020, merge=0/2481, ticks=0/450, in_queue=4, util=30.57%</span><br><span class="line"></span><br><span class="line"><span class="comment"># run read test</span></span><br><span class="line">feiyang@ubuntu:~$  fio --name=randread --ioengine=libaio --iodepth=16 --rw=randread --bs=4k --direct=0 --size=512M --numjobs=4 --runtime=240 --group_reporting</span><br><span class="line">randread: (g=0): rw=randread, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=16</span><br><span class="line">...</span><br><span class="line">fio-3.1</span><br><span class="line">Starting 4 processes</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">randread: Laying out IO file (1 file / 512MiB)</span><br><span class="line">Jobs: 4 (f=4): [r(4)][100.0%][r=81.3MiB/s,w=0KiB/s][r=20.8k,w=0 IOPS][eta 00m:00s]</span><br><span class="line">randread: (groupid=0, <span class="built_in">jobs</span>=4): err= 0: pid=1919: Sat Mar 14 12:51:02 2020</span><br><span class="line">   <span class="built_in">read</span>: IOPS=20.4k, BW=79.7MiB/s (83.6MB/s)(2048MiB/25686msec)</span><br><span class="line">    slat (usec): min=65, max=33169, avg=192.80, stdev=110.46</span><br><span class="line">    clat (usec): min=2, max=48551, avg=2939.25, stdev=573.24</span><br><span class="line">     lat (usec): min=92, max=49600, avg=3132.50, stdev=601.03</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[ 2606],  5.00th=[ 2671], 10.00th=[ 2704], 20.00th=[ 2737],</span><br><span class="line">     | 30.00th=[ 2769], 40.00th=[ 2835], 50.00th=[ 2868], 60.00th=[ 2933],</span><br><span class="line">     | 70.00th=[ 2999], 80.00th=[ 3097], 90.00th=[ 3228], 95.00th=[ 3359],</span><br><span class="line">     | 99.00th=[ 3621], 99.50th=[ 3752], 99.90th=[ 5342], 99.95th=[ 9503],</span><br><span class="line">     | 99.99th=[36963]</span><br><span class="line">   bw (  KiB/s): min=17683, max=22104, per=25.00%, avg=20407.93, stdev=962.56, samples=204</span><br><span class="line">   iops        : min= 4420, max= 5526, avg=5101.91, stdev=240.65, samples=204</span><br><span class="line">  lat (usec)   : 4=0.01%, 100=0.01%, 250=0.01%, 500=0.01%, 750=0.01%</span><br><span class="line">  lat (usec)   : 1000=0.01%</span><br><span class="line">  lat (msec)   : 2=0.03%, 4=99.74%, 10=0.18%, 20=0.03%, 50=0.02%</span><br><span class="line">  cpu          : usr=0.04%, sys=63.18%, ctx=452451, majf=0, minf=92</span><br><span class="line">  IO depths    : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=100.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.1%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued rwt: total=524288,0,0, short=0,0,0, dropped=0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=16</span><br><span class="line"></span><br><span class="line">Run status group 0 (all <span class="built_in">jobs</span>):</span><br><span class="line">   READ: bw=79.7MiB/s (83.6MB/s), 79.7MiB/s-79.7MiB/s (83.6MB/s-83.6MB/s), io=2048MiB (2147MB), run=25686-25686msec</span><br><span class="line"></span><br><span class="line">Disk stats (<span class="built_in">read</span>/write):</span><br><span class="line">  sda: ios=523624/5, merge=0/5, ticks=84769/1, in_queue=88, util=99.53%</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This blog is for record what I learn from this &lt;a href=&quot;https://kaiwu.lagou.com/course/courseInfo.htm?courseId=42#/detail/pc?id=1546&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Operation Course&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://feiyang233.club/tags/shell/"/>
    
      <category term="nginx" scheme="http://feiyang233.club/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>2019 Reviews</title>
    <link href="http://feiyang233.club/post/reviews-2019/"/>
    <id>http://feiyang233.club/post/reviews-2019/</id>
    <published>2020-01-26T05:58:50.000Z</published>
    <updated>2020-09-22T03:32:46.128Z</updated>
    
    <content type="html"><![CDATA[<p>The pasted 2019 is so fast, this blog is to record my progress and regret of 2019.<br><a id="more"></a></p><ul><li>2019 I migrate from seagroup to shopee due to organize migration, I can learn more complex and advanced architecture.</li><li>Read 4 books, http, linux security, promethues, golang.</li><li>I begin to learn algorithm and golang.</li><li>I have more experience in ELK, Zabbix, Promethues and Network</li><li>I begin to learn front-end react to develop shopee CDN platform.</li></ul><p>I also make some difference in my work, Ocha project migrate to new cluster, add more monitors for shopee order team. But there are also some regret.</p><ul><li>Less chance to gym and exercise, so weight increase.</li><li>Never go out for travel in 2019.</li><li>Oral English still so bad, need more practice.</li><li>No some special area. I plan to deep into ELK </li></ul><p>What I will do in 2020 ?</p><ul><li>More exercise, keep weight around 70 kg</li><li>Learn elk and pass <a href="https://www.elastic.co/training/certification" target="_blank" rel="noopener">Elastic Certified Engineer</a></li><li>Read book 《Advanced Programming in the UNIX Environment》Third Edition</li><li>Continue to learn algorithm one question one week.</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The pasted 2019 is so fast, this blog is to record my progress and regret of 2019.&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://feiyang233.club/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="review" scheme="http://feiyang233.club/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>Linux performance optimization</title>
    <link href="http://feiyang233.club/post/linux/"/>
    <id>http://feiyang233.club/post/linux/</id>
    <published>2019-12-24T08:07:17.000Z</published>
    <updated>2020-09-22T03:32:13.992Z</updated>
    
    <content type="html"><![CDATA[<p>This blog record some useful tools for linux.<br><a id="more"></a></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/5_90fSpp-JeD-ffZixqc9g" target="_blank" rel="noopener">一文读懂Linux进程、进程组、会话、僵尸</a></li><li><a href="https://mp.weixin.qq.com/s/QBF2ozxqy03Cprh_ugi3NA" target="_blank" rel="noopener">Linux中父进程为何要苦苦地知道子进程的死亡原因？</a></li><li><a href="https://mp.weixin.qq.com/s/2Sx52ggm_D-oFVAhmNTbHw" target="_blank" rel="noopener">浅谈 Linux 高负载的系统化分析</a></li><li><a href="https://mp.weixin.qq.com/s/TQZ3anPiStzgI1B--uTGlQ" target="_blank" rel="noopener">CPU 使用率低高负载的原因</a></li><li><a href="https://mp.weixin.qq.com/s/Bv1j41dZJBXy-yfVwvtJPw" target="_blank" rel="noopener">Linux系统文件系统及文件基础篇</a></li><li><a href="https://mp.weixin.qq.com/s/Ilc2s4ReBiMVWQDi8aH4Tw" target="_blank" rel="noopener">如何在Linux中使用awk工具详解</a></li><li><a href="https://mp.weixin.qq.com/s/XWy_pgxOG0tspvHBDpYafg" target="_blank" rel="noopener">通过10个例子掌握Linux下lsof命令</a> </li><li><a href="https://mp.weixin.qq.com/s/oGc79uYz05wDfRSivMpJUA" target="_blank" rel="noopener">学习操作系统</a></li></ol><p>Linux performance tools<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225190537.png" alt=""></p><h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>What is the Linux system load ? Can refer this <a href="https://mp.weixin.qq.com/s/AhZw_k5U_Pf2k9AOvruFcQ" target="_blank" rel="noopener">article</a> or <a href="http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html" target="_blank" rel="noopener">this</a><br>Linux load averages are “system load averages” that show the running thread (task) demand on the system as an average number of running plus waiting threads. R + D state: Running + Uninterruptible Sleep</p><h2 id="stress-sysstat"><a href="#stress-sysstat" class="headerlink" title="stress sysstat"></a>stress sysstat</h2><p>We can do some test by command <code>stress</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apt install stress sysstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># stress i cpu</span></span><br><span class="line">stress --cpu 1 --timeout 600</span><br><span class="line"></span><br><span class="line"><span class="comment"># check uptime load</span></span><br><span class="line">watch -d uptime</span><br><span class="line"></span><br><span class="line"><span class="comment"># check ALL cpu status</span></span><br><span class="line">mpstat -P ALL 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># check every process or thread cpu usage </span></span><br><span class="line">pidstat -u 5 1</span><br></pre></td></tr></table></figure><br>A thread is the basic unit of scheduling, and the process is the basic unit of resource owners</p><ul><li>Thread</li></ul><ol><li>smallest sequence of programming instructions that can be managed independently by a scheduler</li><li>Has its own register e.g. PC (program counter), SP (stack pointer)</li></ol><ul><li>Process</li></ul><ol><li>instance of a computer porgram that is being executed</li><li>A process can have one or multiple thread</li><li>Most programs are single threaded</li></ol><ul><li>Parallel computing</li></ul><ol><li>Run program currently on one or more CPUs</li><li>Multi-threading (shared-memory)</li><li>Multi-processing (independent-memory)  <h2 id="context-switch"><a href="#context-switch" class="headerlink" title="context switch"></a>context switch</h2></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interval 5s output 1 row data</span></span><br><span class="line">$ vmstat 5</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy  id  wa st</span><br><span class="line"> 0  0     0 7005360  91564 818900    0    0     0     0   25   33  0  0  100  0  0</span><br><span class="line"></span><br><span class="line"><span class="comment"># cs（context switch）</span></span><br><span class="line"><span class="comment"># in（interrupt）</span></span><br><span class="line"><span class="comment"># r（Running or Runnable）</span></span><br><span class="line"><span class="comment"># b（Blocked）</span></span><br></pre></td></tr></table></figure><p><code>vmstat</code> only provide overall context switch of system, <code>pidstat -w</code> shows process context switch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># interval 5s output 1 row data</span></span><br><span class="line">$ pidstat -w 5</span><br><span class="line">Linux 4.15.0 (ubuntu)  09/23/18  _x86_64_  (2 CPU)</span><br><span class="line"> </span><br><span class="line">08:18:26      UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">08:18:31        0         1      0.20      0.00  systemd</span><br><span class="line">08:18:31        0         8      5.40      0.00  rcu_sched</span><br><span class="line"></span><br><span class="line"><span class="comment"># cswch: voluntary context switches</span></span><br><span class="line"><span class="comment"># nvcswch: non voluntary context switches</span></span><br></pre></td></tr></table></figure><p>we use <code>sysbench</code> to simulate a system multi-threaded scheduling switch.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">sysbench --threads=10 --max-time=300 threads run</span><br><span class="line"></span><br><span class="line"><span class="comment"># check all context switch</span></span><br><span class="line">vmstat 1</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs     us sy id wa st</span><br><span class="line"> 6  0      0 6487428 118240 1292772  0    0     0     0 9019  1398830 16 84  0  0  0</span><br><span class="line"> 8  0      0 6487428 118240 1292772  0    0     0     0 10191 1392312 16 84  0  0  0</span><br><span class="line"></span><br><span class="line"><span class="comment"># check which process cause high cs 1398830</span></span><br><span class="line"><span class="comment"># -w  Report  task switching activity  </span></span><br><span class="line"><span class="comment"># -u  Report CPU utilization.</span></span><br><span class="line">pidstat -w -u 1</span><br><span class="line">08:06:33      UID       PID    %usr %system  %guest   %<span class="built_in">wait</span>    %CPU   CPU  Command</span><br><span class="line">08:06:34        0     10488   30.00  100.00    0.00    0.00  100.00     0  sysbench</span><br><span class="line">08:06:34        0     26326    0.00    1.00    0.00    0.00    1.00     0  kworker/u4:2</span><br><span class="line"> </span><br><span class="line">08:06:33      UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">08:06:34        0         8     11.00      0.00  rcu_sched</span><br><span class="line">08:06:34        0        16      1.00      0.00  ksoftirqd/1</span><br><span class="line">08:06:34        0       471      1.00      0.00  hv_balloon</span><br><span class="line">08:06:34        0      1230      1.00      0.00  iscsid</span><br><span class="line">08:06:34        0      4089      1.00      0.00  kworker/1:5</span><br><span class="line">08:06:34        0      4333      1.00      0.00  kworker/0:3</span><br><span class="line">08:06:34        0     10499      1.00    224.00  pidstat</span><br><span class="line">08:06:34        0     26326    236.00      0.00  kworker/u4:2</span><br><span class="line">08:06:34     1000     26784    223.00      0.00  sshd</span><br><span class="line"></span><br><span class="line"><span class="comment"># -t display statistics for  threads  associated  with  selected tasks.</span></span><br><span class="line">pidstat -wt 1</span><br><span class="line"></span><br><span class="line">08:14:05      UID      TGID       TID   cswch/s nvcswch/s  Command</span><br><span class="line">...</span><br><span class="line">08:14:05        0     10551         -      6.00      0.00  sysbench</span><br><span class="line">08:14:05        0         -     10551      6.00      0.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10552  18911.00 103740.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10553  18915.00 100955.00  |__sysbench</span><br><span class="line">08:14:05        0         -     10554  18827.00 103954.00  |__sysbench</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check /proc/interrupts</span></span><br><span class="line"></span><br><span class="line">watch -d cat /proc/interrupts</span><br><span class="line"></span><br><span class="line">          CPU0       CPU1</span><br><span class="line">...</span><br><span class="line">RES:    2450431    5279697   Rescheduling interrupts</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="cpu-utilization"><a href="#cpu-utilization" class="headerlink" title="cpu utilization"></a>cpu utilization</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/<span class="built_in">stat</span> | grep ^cpu</span><br><span class="line">cpu  280580 7407 286084 172900810 83602 0 583 0 0 0</span><br><span class="line">cpu0 144745 4181 176701 86423902 52076 0 301 0 0 0</span><br><span class="line">cpu1 135834 3226 109383 86476907 31525 0 282 0 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf is a good tools</span></span><br><span class="line">perf top</span><br><span class="line"></span><br><span class="line">perf record <span class="comment"># Ctrl+C stop</span></span><br><span class="line"></span><br><span class="line">perf report <span class="comment"># show record</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Best practice how to perf container process</span></span><br><span class="line"><span class="comment"># perf record in host then perf report in container</span></span><br><span class="line"><span class="comment"># install perf in host </span></span><br><span class="line">apt-get install -y linux-tools-common linux-tools-generic linux-tools-$(uname -r)）</span><br><span class="line"></span><br><span class="line">perf record -g -p &lt; pid&gt;</span><br><span class="line"></span><br><span class="line">docker cp perf.data <span class="built_in">test</span>:/tmp </span><br><span class="line">docker <span class="built_in">exec</span> -i -t <span class="built_in">test</span> bash</span><br><span class="line"><span class="built_in">cd</span> /tmp/ </span><br><span class="line">apt-get update &amp;&amp; apt-get install -y linux-tools linux-perf procps</span><br><span class="line">perf_4.9 report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pstress display a tree of processes</span></span><br><span class="line">pstree | grep stress</span><br></pre></td></tr></table></figure><h2 id="many-Z-zombie-state"><a href="#many-Z-zombie-state" class="headerlink" title="many Z (zombie) state"></a>many Z (zombie) state</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line"></span><br><span class="line">top - 05:56:23 up 17 days, 16:45,  2 users,  load average: 2.00, 1.68, 1.39</span><br><span class="line">Tasks: 247 total,   1 running,  79 sleeping,   0 stopped, 115 zombie</span><br><span class="line">%Cpu0  :  0.0 us,  0.7 sy,  0.0 ni, 38.9 id, 60.5 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.7 sy,  0.0 ni,  4.7 id, 94.6 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 4340 root      20   0   44676   4048   3432 R   0.3  0.0   0:00.05 top</span><br><span class="line"> 4345 root      20   0   37280  33624    860 D   0.3  0.0   0:00.01 app</span><br><span class="line"> 4344 root      20   0   37280  33624    860 D   0.3  0.4   0:00.01 app</span><br><span class="line">    1 root      20   0  160072   9416   6752 S   0.0  0.1   0:38.59 systemd</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># dstat check cpu and IO</span></span><br><span class="line">dstat 1 10</span><br><span class="line"></span><br><span class="line">You did not select any stats, using -cdngy by default.</span><br><span class="line">--total-cpu-usage-- -dsk/total- -net/total- ---paging-- ---system--</span><br><span class="line">usr sys idl wai stl| <span class="built_in">read</span>  writ| recv  send|  <span class="keyword">in</span>   out | int   csw</span><br><span class="line">  0   0  96   4   0|1219k  408k|   0     0 |   0     0 |  42   885</span><br><span class="line">  0   0   2  98   0|  34M    0 | 198B  790B|   0     0 |  42   138</span><br><span class="line">  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  42   135</span><br><span class="line">  0   0  84  16   0|5633k    0 |  66B  342B|   0     0 |  52   177</span><br><span class="line">  0   3  39  58   0|  22M    0 |  66B  342B|   0     0 |  43   144</span><br><span class="line">  0   0   0 100   0|  34M    0 | 200B  450B|   0     0 |  46   147</span><br><span class="line">  0   0   2  98   0|  34M    0 |  66B  342B|   0     0 |  45   134</span><br><span class="line">  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  39   131</span><br><span class="line">  0   0  83  17   0|5633k    0 |  66B  342B|   0     0 |  46   168</span><br><span class="line">  0   3  39  59   0|  22M    0 |  66B  342B|   0     0 |  37   134</span><br><span class="line"></span><br><span class="line"><span class="comment"># find the D pid</span></span><br><span class="line">top</span><br><span class="line">...</span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 4340 root      20   0   44676   4048   3432 R   0.3  0.0   0:00.05 top</span><br><span class="line"> 4345 root      20   0   37280  33624    860 D   0.3  0.0   0:00.01 app</span><br><span class="line"> 4344 root      20   0   37280  33624    860 D   0.3  0.4   0:00.01 app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># for example pid = 4344</span></span><br><span class="line">pidstat -d -p 4344 1 3</span><br><span class="line">06:38:50      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:38:51        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line">06:38:52        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line">06:38:53        0      4344      0.00      0.00      0.00       0  app</span><br><span class="line"></span><br><span class="line"><span class="comment"># check all process, find 6082</span></span><br><span class="line">pidstat -d 1 20</span><br><span class="line">...</span><br><span class="line">06:48:46      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:47        0      4615      0.00      0.00      0.00       1  kworker/u4:1</span><br><span class="line">06:48:47        0      6080  32768.00      0.00      0.00     170  app</span><br><span class="line">06:48:47        0      6081  32768.00      0.00      0.00     184  app</span><br><span class="line"> </span><br><span class="line">06:48:47      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:48        0      6080      0.00      0.00      0.00     110  app</span><br><span class="line"> </span><br><span class="line">06:48:48      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:49        0      6081      0.00      0.00      0.00     191  app</span><br><span class="line"> </span><br><span class="line">06:48:49      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line"> </span><br><span class="line">06:48:50      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:51        0      6082  32768.00      0.00      0.00       0  app</span><br><span class="line">06:48:51        0      6083  32768.00      0.00      0.00       0  app</span><br><span class="line"> </span><br><span class="line">06:48:51      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:52        0      6082  32768.00      0.00      0.00     184  app</span><br><span class="line">06:48:52        0      6083  32768.00      0.00      0.00     175  app</span><br><span class="line"> </span><br><span class="line">06:48:52      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">06:48:53        0      6083      0.00      0.00      0.00     105  app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># use strace</span></span><br><span class="line">strace -p 6082</span><br><span class="line">strace: attach: ptrace(PTRACE_SEIZE, 6082): Operation not permitted</span><br><span class="line"></span><br><span class="line">ps aux | grep 6082</span><br><span class="line">root      6082  0.0  0.0      0     0 pts/0    Z+   13:43   0:00 [app] &lt;defunct&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># find blkdev_direct_IO </span></span><br><span class="line">perf record -g</span><br><span class="line">perf report</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225210140.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># find father of 3084</span></span><br><span class="line">pstree -aps 3084</span><br><span class="line">systemd,1</span><br><span class="line">  └─dockerd,15006 -H fd://</span><br><span class="line">      └─docker-containe,15024 --config /var/run/docker/containerd/containerd.toml</span><br><span class="line">          └─docker-containe,3991 -namespace moby -workdir...</span><br><span class="line">              └─app,4009</span><br><span class="line">                  └─(app,3084)</span><br></pre></td></tr></table></figure><h2 id="soft-interrupt"><a href="#soft-interrupt" class="headerlink" title="soft interrupt"></a>soft interrupt</h2><p>Linux divides the interrupt handling process into two phases, the upper half and the lower half: The first part is used to quickly handle interrupts. It runs in interrupt disable mode and mainly deals with hardware-related or time-sensitive tasks. The second part is used to delay processing of the unfinished work in the upper half, usually running as a kernel thread.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /proc/softirqs provides the operation of soft interrupts;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /proc/interrupts provides the operation of hard interrupts.</span></span><br><span class="line"></span><br><span class="line">cat /proc/softirqs</span><br><span class="line">                    CPU0       CPU1</span><br><span class="line">          HI:          0          0</span><br><span class="line">       TIMER:     811613    1972736</span><br><span class="line">      NET_TX:         49          7</span><br><span class="line">      NET_RX:    1136736    1506885</span><br><span class="line">       BLOCK:          0          0</span><br><span class="line">    IRQ_POLL:          0          0</span><br><span class="line">     TASKLET:     304787       3691</span><br><span class="line">       SCHED:     689718    1897539</span><br><span class="line">     HRTIMER:          0          0</span><br><span class="line">         RCU:    1330771    1354737</span><br><span class="line"></span><br><span class="line">ps aux | grep softirq</span><br><span class="line">root   7  0.0  0.0     0    0 ?    S    Oct10   0:01 [ksoftirqd/0]</span><br><span class="line">root  16  0.0  0.0     0    0 ?    S    Oct10   0:01 [ksoftirqd/1]</span><br><span class="line"></span><br><span class="line"><span class="comment"># sar - Collect, report, or save system activity information.</span></span><br><span class="line"></span><br><span class="line">sar -n DEV 1</span><br><span class="line">15:03:46        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">15:03:47         eth0  12607.00   6304.00    664.86    358.11      0.00      0.00      0.00      0.01</span><br><span class="line">15:03:47      docker0   6302.00  12604.00    270.79    664.66      0.00      0.00      0.00      0.00</span><br><span class="line">15:03:47           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">15:03:47    veth9f6bbcd 6302.00  12604.00    356.95    664.66      0.00      0.00      0.00      0.05</span><br><span class="line"></span><br><span class="line"><span class="comment"># check TCP package SYN ddos attack</span></span><br><span class="line">tcpdump -i eth0 -n tcp port 80</span><br><span class="line">15:11:32.678966 IP 192.168.0.2.18238 &gt; 192.168.0.30.80: Flags [S], seq 458303614, win 512, length 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215653.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215708.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215717.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215723.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191225215732.png" alt=""></p><h1 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165532.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165536.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165539.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227165542.png" alt=""></p><h2 id="buffer-amp-cache"><a href="#buffer-amp-cache" class="headerlink" title="buffer &amp; cache"></a>buffer &amp; cache</h2><p>Buffers are temporary storage of raw disk blocks, that is, used to cache data on the disk, usually not particularly large (about 20MB). In this way, the kernel can centralize scattered writes and optimize disk writes in a unified manner. For example, multiple small writes can be combined into a single large write.  </p><p>Cached is a page cache that reads files from disk, that is, it is used to cache data read from files. This way, the next time you access these file data, you can quickly get it directly from memory without having to access the slow disk again.  </p><p>SReclaimable is part of Slab. Slab consists of two parts, the recyclable part is recorded with SReclaimable; the non-recyclable part is recorded with SUnreclaim.  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Before using cachestat and cachetop, we must first install the bcc package</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://repo.iovisor.org/apt/xenial xenial main"</span> | sudo tee /etc/apt/sources.list.d/iovisor.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y bcc-tools libbcc-examples linux-headers-$(uname -r)</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/share/bcc/tools</span><br><span class="line"></span><br><span class="line"><span class="comment">#cachestat provides read and write hits for the entire system cache.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1s interval 3 row data</span></span><br><span class="line">cachestat 1 3</span><br><span class="line">   TOTAL   MISSES     HITS  DIRTIES   BUFFERS_MB  CACHED_MB</span><br><span class="line">    2        0        2        1           17        279</span><br><span class="line">    2        0        2        1           17        279</span><br><span class="line">    2        0        2        1           17        279 </span><br><span class="line"></span><br><span class="line"><span class="comment">#cachetop provides cache hits for each process.</span></span><br><span class="line"></span><br><span class="line">cachetop</span><br><span class="line">11:58:50 Buffers MB: 258 / Cached MB: 347 / Sort: HITS / Order: ascending</span><br><span class="line">PID      UID      CMD              HITS     MISSES   DIRTIES  READ_HIT%  WRITE_HIT%</span><br><span class="line">13029 root     python                 1        0        0     100.0%       0.0%</span><br></pre></td></tr></table></figure><p>Check the specify file cache, we can use <a href="https://github.com/tobert/pcstat" target="_blank" rel="noopener">pcstat</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPATH=~/go</span><br><span class="line"><span class="built_in">export</span> PATH=~/go/bin:<span class="variable">$PATH</span></span><br><span class="line">go get golang.org/x/sys/unix</span><br><span class="line">go get github.com/tobert/pcstat/pcstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># first try</span></span><br><span class="line">pcstat /bin/ls</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line">| Name    | Size (bytes)   | Pages      | Cached    | Percent |</span><br><span class="line">|---------+----------------+------------+-----------+---------|</span><br><span class="line">| /bin/ls | 133792         | 33         | 0         | 000.000 |</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># second try</span></span><br><span class="line">ls</span><br><span class="line">pcstat /bin/ls</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br><span class="line">| Name    | Size (bytes)   | Pages      | Cached    | Percent |</span><br><span class="line">|---------+----------------+------------+-----------+---------|</span><br><span class="line">| /bin/ls | 133792         | 33         | 33        | 100.000 |</span><br><span class="line">+---------+----------------+------------+-----------+---------+</span><br></pre></td></tr></table></figure></p><h2 id="memory-leak"><a href="#memory-leak" class="headerlink" title="memory leak"></a>memory leak</h2><ol><li><p>Check the whole memory by <code>vmstat</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vmstat 3</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line">0  0    0 6601824  97620 1098784    0    0     0     0   62  322  0  0 100  0  0</span><br><span class="line">0  0    0 6601700  97620 1098788    0    0     0     0   57  251  0  0 100  0  0</span><br><span class="line">0  0    0 6601320  97620 1098788    0    0     0     3   52  306  0  0 100  0  0</span><br><span class="line">0  0    0 6601452  97628 1098788    0    0     0    27   63  326  0  0 100  0  0</span><br><span class="line">2  0    0 6601328  97628 1098788    0    0     0    44   52  299  0  0 100  0  0</span><br><span class="line">0  0    0 6601080  97628 1098792    0    0     0     0   56  285  0  0 100  0  0</span><br></pre></td></tr></table></figure><p>The free column of memory is constantly changing and is in a downward trend; the buffer and cache remain basically unchanged.</p></li><li><p><code>memleak</code> is a tool in the bcc package</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/bcc/tools/memleak -a -p $(pidof app)</span><br><span class="line">WARNING: Couldn<span class="string">'t find .text section in /app</span></span><br><span class="line"><span class="string">WARNING: BCC can'</span>t handle sym look ups <span class="keyword">for</span> /app</span><br><span class="line">    addr = 7f8f704732b0 size = 8192</span><br><span class="line">    addr = 7f8f704772d0 size = 8192</span><br><span class="line">    addr = 7f8f704712a0 size = 8192</span><br><span class="line">    addr = 7f8f704752c0 size = 8192</span><br><span class="line">    32768 bytes <span class="keyword">in</span> 4 allocations from stack</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        start_thread+0xdb [libpthread-2.27.so] </span><br><span class="line"><span class="comment"># [unknown] is app is in docker</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy exec file from docker, then to check</span></span><br><span class="line">docker cp app:/app /app</span><br><span class="line">/usr/share/bcc/tools/memleak -p $(pidof app) -a</span><br><span class="line">Attaching to pid 12512, Ctrl+C to quit.</span><br><span class="line">[03:00:41] Top 10 stacks with outstanding allocations:</span><br><span class="line">    addr = 7f8f70863220 size = 8192</span><br><span class="line">    addr = 7f8f70861210 size = 8192</span><br><span class="line">    addr = 7f8f7085b1e0 size = 8192</span><br><span class="line">    addr = 7f8f7085f200 size = 8192</span><br><span class="line">    addr = 7f8f7085d1f0 size = 8192</span><br><span class="line">    40960 bytes <span class="keyword">in</span> 5 allocations from stack</span><br><span class="line">        fibonacci+0x1f [app]</span><br><span class="line">        child+0x4f [app]</span><br><span class="line">        start_thread+0xdb [libpthread-2.27.so]</span><br></pre></td></tr></table></figure></li></ol><h2 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h2><p>Data that has been modified by the application and has not yet been written to the disk (that is, dirty pages) must be written to the disk before memory can be released.These dirty pages can generally be written to disk in two ways.</p><ol><li>You can use the system call fsync in your application to synchronize dirty pages to disk;</li><li>It can also be left to the system, and the kernel thread pdflush is responsible for refreshing these dirty pages.<br>Swap writes these infrequently accessed memory to disk, then releases this memory for use by other more needed processes. When the memory is accessed again, it is sufficient to re-read it from disk.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227180106.png" alt=""><br>In the NUMA architecture, multiple processors are divided into different nodes, and each node has its own local memory space.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227180111.png" alt=""></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">numactl --hardware</span><br><span class="line">available: 2 nodes (0-1)</span><br><span class="line">node 0 cpus: 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30</span><br><span class="line">node 0 size: 32674 MB</span><br><span class="line">node 0 free: 418 MB</span><br><span class="line">node 1 cpus: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31</span><br><span class="line">node 1 size: 32768 MB</span><br><span class="line">node 1 free: 212 MB</span><br><span class="line">node distances:</span><br><span class="line">node   0   1 </span><br><span class="line">  0:  10  21 </span><br><span class="line">  1:  21  10 </span><br><span class="line"></span><br><span class="line">cat /proc/zoneinfo</span><br><span class="line">...</span><br><span class="line">Node 0, zone   Normal</span><br><span class="line"> pages free     227894</span><br><span class="line">       min      14896</span><br><span class="line">       low      18620</span><br><span class="line">       high     22344</span><br><span class="line">...</span><br><span class="line">     nr_free_pages 227894</span><br><span class="line">     nr_zone_inactive_anon 11082</span><br><span class="line">     nr_zone_active_anon 14024</span><br><span class="line">     nr_zone_inactive_file 539024</span><br><span class="line">     nr_zone_active_file 923986</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -r memory，-S  Swap </span></span><br><span class="line">$ sar -r -S 1</span><br><span class="line">04:39:56    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:39:57      6249676   6839824   1919632     23.50    740512     67316   1691736     10.22    815156    841868         4</span><br><span class="line"> </span><br><span class="line">04:39:56    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:39:57      8388604         0      0.00         0      0.00</span><br><span class="line"> </span><br><span class="line">04:39:57    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:39:58      6184472   6807064   1984836     24.30    772768     67380   1691736     10.22    847932    874224        20</span><br><span class="line"> </span><br><span class="line">04:39:57    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:39:58      8388604         0      0.00         0      0.00</span><br><span class="line"> </span><br><span class="line">…</span><br><span class="line"> </span><br><span class="line">04:44:06    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class="line">04:44:07       152780   6525716   8016528     98.13   6530440     51316   1691736     10.22    867124   6869332         0</span><br><span class="line"> </span><br><span class="line">04:44:06    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad</span><br><span class="line">04:44:07      8384508      4096      0.05        52      1.27</span><br><span class="line"></span><br><span class="line"><span class="comment"># check cachetop 50 hit rate</span></span><br><span class="line"></span><br><span class="line">cachetop 5</span><br><span class="line">12:28:28 Buffers MB: 6349 / Cached MB: 87 / Sort: HITS / Order: ascending</span><br><span class="line">PID      UID      CMD              HITS     MISSES   DIRTIES  READ_HIT%  WRITE_HIT%</span><br><span class="line">18280   root     python              22        0        0     100.0%       0.0%</span><br><span class="line">18279   root     dd              41088    41022        0      50.0%      50.0%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pages_free fluctuation</span></span><br><span class="line">watch -d grep -A 15 <span class="string">'Normal'</span> /proc/zoneinfo</span><br><span class="line">Node 0, zone   Normal</span><br><span class="line">  pages free     21328</span><br><span class="line">        min      14896</span><br><span class="line">        low      18620</span><br><span class="line">        high     22344</span><br><span class="line">        spanned  1835008</span><br><span class="line">        present  1835008</span><br><span class="line">        managed  1796710</span><br><span class="line">        protection: (0, 0, 0, 0, 0)</span><br><span class="line">      nr_free_pages 21328</span><br><span class="line">      nr_zone_inactive_anon 79776</span><br><span class="line">      nr_zone_active_anon 206854</span><br><span class="line">      nr_zone_inactive_file 918561</span><br><span class="line">      nr_zone_active_file 496695</span><br><span class="line">      nr_zone_unevictable 2251</span><br><span class="line">      nr_zone_write_pending 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sort by VmSwap</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /proc/*/status ; <span class="keyword">do</span> awk <span class="string">'/VmSwap|Name|^Pid/&#123;printf $2 " " $3&#125;END&#123; print ""&#125;'</span> <span class="variable">$file</span>; <span class="keyword">done</span> | sort -k 3 -n -r | head</span><br><span class="line">dockerd 2226 10728 kB</span><br><span class="line">docker-containe 2251 8516 kB</span><br><span class="line">snapd 936 4020 kB</span><br><span class="line">networkd-dispat 911 836 kB</span><br><span class="line">polkitd 1004 44 kB</span><br></pre></td></tr></table></figure><h2 id="summary-1"><a href="#summary-1" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232819.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232823.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232828.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227232831.png" alt=""></p><p>What’s the difference between system and disk ?<br>A disk is a storage device (to be exact, a block device) that can be divided into different disk partitions. On a disk or disk partition, you can also create a file system and mount it in a directory on the system. In this way, the system can read and write files through this mount directory.</p><p>In other words, a disk is a block device that stores data and is the carrier of a file system. Therefore, the file system still needs to ensure the persistent storage of data through disk.</p><p>You will see this sentence in many places, everything in Linux is a file. In other words, you can access disks and files through the same file interface (such as open, read, write, close, etc.).</p><p>What we usually mean by “documents” is actually ordinary documents.</p><p>The disk or partition refers to the block device file.</p><h1 id="I-O"><a href="#I-O" class="headerlink" title="I-O"></a>I-O</h1><p>The Linux file system allocates two data structures for each file, an <code>index node</code> and a <code>directory entry</code>. They are mainly used to record the meta information and directory structure of files.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228204621.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228204848.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slabtop - display kernel slab cache information in real time</span></span><br><span class="line"></span><br><span class="line">slabtop</span><br><span class="line"></span><br><span class="line">Active / Total Objects (% used)    : 503302 / 506242 (99.4%)</span><br><span class="line"> Active / Total Slabs (% used)      : 10730 / 10730 (100.0%)</span><br><span class="line"> Active / Total Caches (% used)     : 100 / 143 (69.9%)</span><br><span class="line"> Active / Total Size (% used)       : 153659.58K / 155417.98K (98.9%)</span><br><span class="line"> Minimum / Average / Maximum Object : 0.01K / 0.31K / 8.00K</span><br><span class="line"></span><br><span class="line">  OBJS ACTIVE  USE OBJ SIZE  SLABS OBJ/SLAB CACHE SIZE NAME                   </span><br><span class="line">103782 103782 100%    0.19K   2471       42     19768K dentry</span><br><span class="line"> 73749  73749 100%    0.10K   1891       39      7564K buffer_head</span><br><span class="line"> 45900  45900 100%    0.13K    765       60      6120K kernfs_node_cache</span><br><span class="line"> 39985  39985 100%    0.58K    727       55     23264K inode_cache</span><br><span class="line"> 34830  34830 100%    1.05K   1161       30     37152K ext4_inode_cache</span><br><span class="line"> 18462  18462 100%    0.04K    181      102       724K ext4_extent_status</span><br><span class="line"> 17784  17784 100%    0.20K    456       39      3648K vm_area_struct</span><br><span class="line"> 15456  15456 100%    0.69K    336       46     10752K squashfs_inode_cache</span><br><span class="line"> 14336  14144   0%    0.50K    224       64      7168K kmalloc-512</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228233800.png" alt=""></p><h2 id="check-io"><a href="#check-io" class="headerlink" title="check io"></a>check io</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iostat -d -x 1 </span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">loop1            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sdb              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191228234202.png" alt=""></p><ul><li>% util is the disk I / O usage </li><li>r/s + w/s is IOPS</li><li>rkB/s + wkB/s is the throughput</li><li>r_await + w_await is the response time</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check process</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line">13:39:51      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">13:39:52      102       916      0.00      4.00      0.00       0  rsyslogd</span><br><span class="line"></span><br><span class="line">iotop</span><br><span class="line">Total DISK READ :       0.00 B/s | Total DISK WRITE :       7.85 K/s </span><br><span class="line">Actual DISK READ:       0.00 B/s | Actual DISK WRITE:       0.00 B/s </span><br><span class="line">  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    COMMAND </span><br><span class="line">15055 be/3 root        0.00 B/s    7.85 K/s  0.00 %  0.00 % systemd-journald</span><br></pre></td></tr></table></figure><h2 id="write-issue"><a href="#write-issue" class="headerlink" title="write issue"></a>write issue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"> top </span><br><span class="line">top - 14:43:43 up 1 day,  1:39,  2 users,  load average: 2.48, 1.09, 0.63 </span><br><span class="line">Tasks: 130 total,   2 running,  74 sleeping,   0 stopped,   0 zombie </span><br><span class="line">%Cpu0  :  0.7 us,  6.0 sy,  0.0 ni,  0.7 id, 92.7 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">%Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 92.3 id,  7.3 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">KiB Mem :  8169308 total,   747684 free,   741336 used,  6680288 buff/cache </span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7113124 avail Mem </span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND </span><br><span class="line">18940 root      20   0  656108 355740   5236 R   6.3  4.4   0:12.56 python </span><br><span class="line">1312 root      20   0  236532  24116   9648 S   0.3  0.3   9:29.80 python3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 92.7 io_wait </span></span><br><span class="line"><span class="comment"># memroy most is used for buff/cache </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check which device</span></span><br><span class="line">iostat -x -d 1 </span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sdb              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00   64.00      0.00  32768.00     0.00     0.00   0.00   0.00    0.00 7270.44 1102.18     0.00   512.00  15.50  99.20</span><br><span class="line"></span><br><span class="line"><span class="comment"># check which process</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line"> </span><br><span class="line">15:08:35      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">15:08:36        0     18940      0.00  45816.00      0.00      96  python </span><br><span class="line"></span><br><span class="line">15:08:36      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">15:08:37        0       354      0.00      0.00      0.00     350  jbd2/sda1-8 </span><br><span class="line">15:08:37        0     18940      0.00  46000.00      0.00      96  python </span><br><span class="line">15:08:37        0     20065      0.00      0.00      0.00    1503  kworker/u4:2 </span><br><span class="line"></span><br><span class="line"><span class="comment"># check pid 18940</span></span><br><span class="line">strace -p 18940 </span><br><span class="line">strace: Process 18940 attached </span><br><span class="line">...</span><br><span class="line">mmap(NULL, 314576896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0f7aee9000 </span><br><span class="line">mmap(NULL, 314576896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0f682e8000 </span><br><span class="line">write(3, <span class="string">"2018-12-05 15:23:01,709 - __main"</span>..., 314572844 </span><br><span class="line">) = 314572844 </span><br><span class="line">munmap(0x7f0f682e8000, 314576896)       = 0 </span><br><span class="line">write(3, <span class="string">"\n"</span>, 1)                       = 1 </span><br><span class="line">munmap(0x7f0f7aee9000, 314576896)       = 0 </span><br><span class="line">close(3)                                = 0 </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">"/tmp/logtest.txt.1"</span>, &#123;st_mode=S_IFREG|0644, st_size=943718535, ...&#125;) = 0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check pid 18940 open files</span></span><br><span class="line">lsof -p 18940 </span><br><span class="line">COMMAND   PID USER   FD   TYPE DEVICE  SIZE/OFF    NODE NAME </span><br><span class="line">python  18940 root  cwd    DIR   0,50      4096 1549389 / </span><br><span class="line">python  18940 root  rtd    DIR   0,50      4096 1549389 / </span><br><span class="line">… </span><br><span class="line">python  18940 root    2u   CHR  136,0       0t0       3 /dev/pts/0 </span><br><span class="line">python  18940 root    3w   REG    8,1 117944320     303 /tmp/logtest.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># root cause is python wirte 300MB/s to /tmp/logtest.txt</span></span><br></pre></td></tr></table></figure><h2 id="io-wait-issue"><a href="#io-wait-issue" class="headerlink" title="io_wait issue"></a>io_wait issue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">top </span><br><span class="line">top - 14:27:02 up 10:30,  1 user,  load average: 1.82, 1.26, 0.76 </span><br><span class="line">Tasks: 129 total,   1 running,  74 sleeping,   0 stopped,   0 zombie </span><br><span class="line">%Cpu0  :  3.5 us,  2.1 sy,  0.0 ni,  0.0 id, 94.4 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">%Cpu1  :  2.4 us,  0.7 sy,  0.0 ni, 70.4 id, 26.5 wa,  0.0 hi,  0.0 si,  0.0 st </span><br><span class="line">KiB Mem :  8169300 total,  3323248 free,   436748 used,  4409304 buff/cache </span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7412556 avail Mem </span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND </span><br><span class="line">12280 root      20   0  103304  28824   7276 S  14.0  0.4   0:08.77 python </span><br><span class="line">   16 root      20   0       0      0      0 S   0.3  0.0   0:09.22 ksoftirqd/1 </span><br><span class="line">1549 root      20   0  236712  24480   9864 S   0.3  0.3   3:31.38 python3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># iowait is high, memory is ok.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># util = 98%</span></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util </span><br><span class="line">loop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 </span><br><span class="line">sda              0.00   71.00      0.00  32912.00     0.00     0.00   0.00   0.00    0.00 18118.31 241.89     0.00   463.55  13.86  98.40 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check which porcess</span></span><br><span class="line">pidstat -d 1 </span><br><span class="line">14:39:14      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command </span><br><span class="line">14:39:15        0     12280      0.00 335716.00      0.00       0  python </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strace -p 12280 </span><br><span class="line">strace: Process 12280 attached </span><br><span class="line">select(0, NULL, NULL, NULL, &#123;tv_sec=0, tv_usec=567708&#125;) = 0 (Timeout) </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">"/usr/local/lib/python3.7/importlib/_bootstrap.py"</span>, &#123;st_mode=S_IFREG|0644, st_size=39278, ...&#125;) = 0 </span><br><span class="line"><span class="built_in">stat</span>(<span class="string">"/usr/local/lib/python3.7/importlib/_bootstrap.py"</span>, &#123;st_mode=S_IFREG|0644, st_size=39278, ...&#125;) = 0 </span><br><span class="line"></span><br><span class="line"><span class="comment"># filter result</span></span><br><span class="line"> strace -p 12280 2&gt;&amp;1 | grep write </span><br><span class="line"></span><br><span class="line"><span class="comment"># introduce new tool bcc</span></span><br><span class="line"><span class="comment"># install bcc</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4052245BD4284CDD </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://repo.iovisor.org/apt/<span class="variable">$(lsb_release -cs)</span> <span class="variable">$(lsb_release -cs)</span> main"</span> | sudo tee /etc/apt/sources.list.d/iovisor.list </span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install bcc-tools libbcc-examples linux-headers-$(uname -r)</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/share/bcc/tools</span><br><span class="line">./filetop -C </span><br><span class="line"> </span><br><span class="line">TID    COMM             READS  WRITES R_Kb    W_Kb    T FILE </span><br><span class="line">514    python           0      1      0       2832    R 669.txt </span><br><span class="line">514    python           0      1      0       2490    R 667.txt </span><br><span class="line">514    python           0      1      0       2685    R 671.txt </span><br><span class="line">514    python           0      1      0       2392    R 670.txt </span><br><span class="line">514    python           0      1      0       2050    R 672.txt </span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">TID    COMM             READS  WRITES R_Kb    W_Kb    T FILE </span><br><span class="line">514    python           2      0      5957    0       R 651.txt </span><br><span class="line">514    python           2      0      5371    0       R 112.txt </span><br><span class="line">514    python           2      0      4785    0       R 861.txt </span><br><span class="line">514    python           2      0      4736    0       R 213.txt </span><br><span class="line">514    python           2      0      4443    0       R 45.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># -T thread check thread 514</span></span><br><span class="line">ps -efT | grep 514</span><br><span class="line">root     12280  514 14626 33 14:47 pts/0    00:00:05 /usr/<span class="built_in">local</span>/bin/python /app.py </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># new tool opensnoop</span></span><br><span class="line">opensnoop </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/650.txt </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/651.txt </span><br><span class="line">12280  python              6   0 /tmp/9046db9e-fe25-11e8-b13f-0242ac110002/652.txt</span><br></pre></td></tr></table></figure><h2 id="sql-slow"><a href="#sql-slow" class="headerlink" title="sql slow"></a>sql slow</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use top to check overview</span></span><br><span class="line">top</span><br><span class="line">top - 12:02:15 up 6 days,  8:05,  1 user,  load average: 0.66, 0.72, 0.59</span><br><span class="line">Tasks: 137 total,   1 running,  81 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  0.7 us,  1.3 sy,  0.0 ni, 35.9 id, 62.1 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.3 us,  0.7 sy,  0.0 ni, 84.7 id, 14.3 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  8169300 total,  7238472 free,   546132 used,   384696 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7316952 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">27458 999       20   0  833852  57968  13176 S   1.7  0.7   0:12.40 mysqld</span><br><span class="line">27617 root      20   0   24348   9216   4692 S   1.0  0.1   0:04.40 python</span><br><span class="line"> 1549 root      20   0  236716  24568   9864 S   0.3  0.3  51:46.57 python3</span><br><span class="line">22421 root      20   0       0      0      0 I   0.3  0.0   0:01.16 kworker/u</span><br><span class="line"></span><br><span class="line"><span class="comment"># io wait is high, so we check io</span></span><br><span class="line"></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">...</span><br><span class="line">sda            273.00    0.00  32568.00      0.00     0.00     0.00   0.00   0.00    7.90    0.00   1.16   119.30     0.00   3.56  97.20</span><br><span class="line"></span><br><span class="line"><span class="comment"># rkB/s is 32 MB, util is 97.2%</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find the pid of high IO</span></span><br><span class="line">pidstat -d 1</span><br><span class="line">12:04:11      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">12:04:12      999     27458  32640.00      0.00      0.00       0  mysqld</span><br><span class="line">12:04:12        0     27617      4.00      4.00      0.00       3  python</span><br><span class="line">12:04:12        0     27864      0.00      4.00      0.00       0  systemd-journal</span><br><span class="line"></span><br><span class="line"><span class="comment"># next use strace+ lsof </span></span><br><span class="line">strace -f -p 27458</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"934EiwT363aak7VtqF1mHGa4LL4Dhbks"</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"hSs7KBDepBqA6m4ce6i6iUfFTeG9Ot9z"</span>..., 20480) = 20480</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"NRhRjCSsLLBjTfdqiBRLvN9K6FRfqqLm"</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"AKgsik4BilLb7y6OkwQUjjqGeCTQTaRl"</span>..., 24576) = 24576</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"hFMHx7FzUSqfFI22fQxWCpSnDmRjamaW"</span>..., 131072) = 131072</span><br><span class="line">[pid 28014] <span class="built_in">read</span>(38, <span class="string">"ajUzLmKqivcDJSkiw7QWf2ETLgvQIpfC"</span>..., 20480) = 20480</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thread 28014 is reading a large amount of data, and the descriptor read is 38. </span></span><br><span class="line"><span class="comment"># We can execute the following lsof command and specify the thread number 28014, </span></span><br><span class="line"><span class="comment"># specifically view this suspicious thread and suspicious file:</span></span><br><span class="line">lsof -p 28014</span><br><span class="line"><span class="comment"># no output previous command </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check the previous command, failed</span></span><br><span class="line"><span class="built_in">echo</span> $?</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"><span class="comment">#-t thread  -a show command</span></span><br><span class="line">pstree -t -a -p 27458</span><br><span class="line">mysqld,27458 --log_bin=on --sync_binlog=1</span><br><span class="line">...</span><br><span class="line">  ├─&#123;mysqld&#125;,27922</span><br><span class="line">  ├─&#123;mysqld&#125;,27923</span><br><span class="line">  └─&#123;mysqld&#125;,28014</span><br><span class="line"></span><br><span class="line"><span class="comment"># use pid not thread id</span></span><br><span class="line">lsof -p 27458</span><br><span class="line">COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">...</span><br><span class="line">​mysqld  27458      999   38u   REG    8,1 512440000 2601895 /var/lib/mysql/<span class="built_in">test</span>/products.MYD</span><br></pre></td></tr></table></figure><h2 id="slow-redis"><a href="#slow-redis" class="headerlink" title="slow redis"></a>slow redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line">top - 12:46:18 up 11 days,  8:49,  1 user,  load average: 1.36, 1.36, 1.04</span><br><span class="line">Tasks: 137 total,   1 running,  79 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  6.0 us,  2.7 sy,  0.0 ni,  5.7 id, 84.7 wa,  0.0 hi,  1.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  1.0 us,  3.0 sy,  0.0 ni, 94.7 id,  0.0 wa,  0.0 hi,  1.3 si,  0.0 st</span><br><span class="line">KiB Mem :  8169300 total,  7342244 free,   432912 used,   394144 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7478748 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"> 9181 root      20   0  193004  27304   8716 S   8.6  0.3   0:07.15 python</span><br><span class="line"> 9085 systemd+  20   0   28352   9760   1860 D   5.0  0.1   0:04.34 redis-server</span><br><span class="line">  368 root      20   0       0      0      0 D   1.0  0.0   0:33.88 jbd2/sda1-8</span><br><span class="line">  149 root       0 -20       0      0      0 I   0.3  0.0   0:10.63 kworker/0:1H</span><br><span class="line"> 1549 root      20   0  236716  24576   9864 S   0.3  0.3  91:37.30 python3</span><br><span class="line"></span><br><span class="line"> <span class="comment"># high io wait 84.7%</span></span><br><span class="line"></span><br><span class="line">iostat -d -x 1</span><br><span class="line">Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util</span><br><span class="line">...</span><br><span class="line">sda              0.00  492.00      0.00   2672.00     0.00   176.00   0.00  26.35    0.00    1.76   0.00     0.00     5.43   0.00   0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># why has write operation ? redis is just read</span></span><br><span class="line">pidstat -d 1</span><br><span class="line">12:49:35      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command</span><br><span class="line">12:49:36        0       368      0.00     16.00      0.00      86  jbd2/sda1-8</span><br><span class="line">12:49:36      100      9085      0.00    636.00      0.00       1  redis-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># -f follow process and thread，-T system call time，-tt show time</span></span><br><span class="line">strace -f -T -tt -p 9085</span><br><span class="line">[pid  9085] 14:20:16.826131 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 65, NULL, 8) = 1 &lt;0.000055&gt;</span><br><span class="line">[pid  9085] 14:20:16.826301 <span class="built_in">read</span>(8, <span class="string">"*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:5b2e76cc-"</span>..., 16384) = 61 &lt;0.000071&gt;</span><br><span class="line">[pid  9085] 14:20:16.826477 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000063&gt;</span><br><span class="line">[pid  9085] 14:20:16.826645 write(8, <span class="string">"<span class="variable">$3</span>\r\nbad\r\n"</span>, 9) = 9 &lt;0.000173&gt;</span><br><span class="line">[pid  9085] 14:20:16.826907 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 65, NULL, 8) = 1 &lt;0.000032&gt;</span><br><span class="line">[pid  9085] 14:20:16.827030 <span class="built_in">read</span>(8, <span class="string">"*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:55862ada-"</span>..., 16384) = 61 &lt;0.000044&gt;</span><br><span class="line">[pid  9085] 14:20:16.827149 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000043&gt;</span><br><span class="line">[pid  9085] 14:20:16.827285 write(8, <span class="string">"<span class="variable">$3</span>\r\nbad\r\n"</span>, 9) = 9 &lt;0.000141&gt;</span><br><span class="line">[pid  9085] 14:20:16.827514 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 64, NULL, 8) = 1 &lt;0.000049&gt;</span><br><span class="line">[pid  9085] 14:20:16.827641 <span class="built_in">read</span>(8, <span class="string">"*2\r\n<span class="variable">$3</span>\r\nGET\r\n<span class="variable">$41</span>\r\nuuid:53522908-"</span>..., 16384) = 61 &lt;0.000043&gt;</span><br><span class="line">[pid  9085] 14:20:16.827784 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000034&gt;</span><br><span class="line">[pid  9085] 14:20:16.827945 write(8, <span class="string">"<span class="variable">$4</span>\r\ngood\r\n"</span>, 10) = 10 &lt;0.000288&gt;</span><br><span class="line">[pid  9085] 14:20:16.828339 epoll_pwait(5, [&#123;EPOLLIN, &#123;u32=8, u64=8&#125;&#125;], 10128, 63, NULL, 8) = 1 &lt;0.000057&gt;</span><br><span class="line">[pid  9085] 14:20:16.828486 <span class="built_in">read</span>(8, <span class="string">"*3\r\n<span class="variable">$4</span>\r\nSADD\r\n<span class="variable">$4</span>\r\ngood\r\n<span class="variable">$36</span>\r\n535"</span>..., 16384) = 67 &lt;0.000040&gt;</span><br><span class="line">[pid  9085] 14:20:16.828623 <span class="built_in">read</span>(3, 0x7fff366a5747, 1) = -1 EAGAIN (Resource temporarily unavailable) &lt;0.000052&gt;</span><br><span class="line">[pid  9085] 14:20:16.828760 write(7, <span class="string">"*3\r\n<span class="variable">$4</span>\r\nSADD\r\n<span class="variable">$4</span>\r\ngood\r\n<span class="variable">$36</span>\r\n535"</span>..., 67) = 67 &lt;0.000060&gt;</span><br><span class="line">[pid  9085] 14:20:16.828970 fdatasync(7) = 0 &lt;0.005415&gt;</span><br><span class="line">[pid  9085] 14:20:16.834493 write(8, <span class="string">":1\r\n"</span>, 4) = 4 &lt;0.000250&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lsof -p 9085</span><br><span class="line">redis-ser 9085 systemd-network    3r     FIFO   0,12      0t0 15447970 pipe</span><br><span class="line">redis-ser 9085 systemd-network    4w     FIFO   0,12      0t0 15447970 pipe</span><br><span class="line">redis-ser 9085 systemd-network    5u  a_inode   0,13        0    10179 [eventpoll]</span><br><span class="line">redis-ser 9085 systemd-network    6u     sock    0,9      0t0 15447972 protocol: TCP</span><br><span class="line">redis-ser 9085 systemd-network    7w      REG    8,1  8830146  2838532 /data/appendonly.aof</span><br><span class="line">redis-ser 9085 systemd-network    8u     sock    0,9      0t0 15448709 protocol: TCP</span><br><span class="line"></span><br><span class="line"><span class="comment"># Descriptor number 3 is a pipe, number 5 is an eventpoll</span></span><br><span class="line"><span class="comment"># number 7 is an ordinary file, and number 8 is a TCP socket.</span></span><br><span class="line"><span class="comment"># Only the 7th ordinary file will generate disk write, </span></span><br><span class="line"><span class="comment"># and the file path it operates on is /data/appendonly.aof. </span></span><br><span class="line"><span class="comment"># The corresponding system calls include write and fdatasync.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">strace -f -p 9085 -T -tt -e fdatasync</span><br><span class="line">strace: Process 9085 attached with 4 threads</span><br><span class="line">[pid  9085] 14:22:52.013547 fdatasync(7) = 0 &lt;0.007112&gt;</span><br><span class="line">[pid  9085] 14:22:52.022467 fdatasync(7) = 0 &lt;0.008572&gt;</span><br><span class="line">[pid  9085] 14:22:52.032223 fdatasync(7) = 0 &lt;0.006769&gt;</span><br><span class="line">...</span><br><span class="line">[pid  9085] 14:22:52.139629 fdatasync(7) = 0 &lt;0.008183&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># final check the process in docker</span></span><br><span class="line">PID=$(docker inspect --format &#123;&#123;.State.Pid&#125;&#125; app)</span><br><span class="line">nsenter --target <span class="variable">$PID</span> --net -- lsof -i</span><br><span class="line">COMMAND    PID            USER   FD   TYPE   DEVICE SIZE/OFF NODE NAME</span><br><span class="line">redis-ser 9085 systemd-network    6u  IPv4 15447972      0t0  TCP localhost:6379 (LISTEN)</span><br><span class="line">redis-ser 9085 systemd-network    8u  IPv4 15448709      0t0  TCP localhost:6379-&gt;localhost:32996 (ESTABLISHED)</span><br><span class="line">python    9181            root    3u  IPv4 15448677      0t0  TCP *:http (LISTEN)</span><br><span class="line">python    9181            root    5u  IPv4 15449632      0t0  TCP localhost:32996-&gt;localhost:6379 (ESTABLISHED)</span><br></pre></td></tr></table></figure><h2 id="summary-2"><a href="#summary-2" class="headerlink" title="summary"></a>summary</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183130.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183134.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183137.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229183323.png" alt=""></p><h1 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h1><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229202720.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229202724.png" alt=""></p><ul><li>Bandwidth, which indicates the maximum transmission rate of the link. The unit is usually b/s (bits per second).</li><li>Throughput, which indicates the amount of data successfully transmitted per unit of time. The unit is usually b/s (bits/second) or B/s (bytes/second). Throughput is limited by bandwidth, and throughput/bandwidth is the utilization of the network.</li><li>Delay means the delay from the time the network request is sent until the remote response is received.</li><li>PPS is the abbreviation of Packet Per Second (packet per second), which means the transmission rate in network packets.</li></ul><h2 id="basic-command"><a href="#basic-command" class="headerlink" title="basic command"></a>basic command</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ifconfig </span></span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.17.3  netmask 255.255.255.0  broadcast 192.168.17.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe35:6403  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:35:64:03  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 2193  bytes 150818 (150.8 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 203  bytes 24234 (24.2 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 17791  bytes 1264539 (1.2 MB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 17791  bytes 1264539 (1.2 MB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><ul><li>errors indicates the number of packets with errors, such as check errors, frame synchronization errors, etc.</li><li>dropped indicates the number of dropped packets, that is, the packet has received the Ring Buffer, but the packet was lost due to insufficient memory and other reasons;</li><li>overruns indicates the number of overrun packets, that is, the network I / O speed is too fast, causing the packets in the Ring Buffer to be too late to be processed (the queue is full) and the packet loss;</li><li>carrier indicates the number of packets with carrirer errors, such as mismatch in duplex mode, problems with physical cables, etc .;</li><li>collisions indicates the number of collision packets.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang<span class="comment"># netstat -nlp | head -n 3</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      549/systemd-resolve </span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ss -lntp | head -n 3</span></span><br><span class="line">State    Recv-Q    Send-Q        Local Address:Port        Peer Address:Port                                                                                    </span><br><span class="line">LISTEN   0         128           127.0.0.53%lo:53               0.0.0.0:*        users:((<span class="string">"systemd-resolve"</span>,pid=549,fd=13))                                      </span><br><span class="line">LISTEN   0         128                 0.0.0.0:22               0.0.0.0:*        users:((<span class="string">"sshd"</span>,pid=1040,fd=3))</span><br></pre></td></tr></table></figure><ul><li><p>When the socket is connected (Established),<br>Recv-Q indicates the number of bytes (that is, the length of the receive queue) that the socket buffer has not been taken away by the application.<br>Send-Q indicates the number of bytes (that is, the length of the send queue) that have not been acknowledged by the remote host.</p></li><li><p>When the socket is in the listening state (Listening),<br>Recv-Q represents the current value of the syn backlog.<br>Send-Q represents the largest syn backlog value.</p></li></ul><p>The syn backlog is the length of the semi-connected queue in the TCP protocol stack, and accordingly there is also a fully connected queue (accept queue)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># netstat -s</span></span><br><span class="line">Ip:</span><br><span class="line">    Forwarding: 2</span><br><span class="line">    19787 total packets received</span><br><span class="line">    0 forwarded</span><br><span class="line">    0 incoming packets discarded</span><br><span class="line">    19785 incoming packets delivered</span><br><span class="line">    19373 requests sent out</span><br><span class="line">Icmp:</span><br><span class="line">    0 ICMP messages received</span><br><span class="line">    0 input ICMP message failed</span><br><span class="line">    ICMP input histogram:</span><br><span class="line">    0 ICMP messages sent</span><br><span class="line">    0 ICMP messages failed</span><br><span class="line">    ICMP output histogram:</span><br><span class="line">Tcp:</span><br><span class="line">    4 active connection openings</span><br><span class="line">    1 passive connection openings</span><br><span class="line">    4 failed connection attempts</span><br><span class="line">    0 connection resets received</span><br><span class="line">    1 connections established</span><br><span class="line">    294 segments received</span><br><span class="line">    195 segments sent out</span><br><span class="line">    0 segments retransmitted</span><br><span class="line">    0 bad segments received</span><br><span class="line">    4 resets sent</span><br><span class="line">Udp:</span><br><span class="line">    19388 packets received</span><br><span class="line">    0 packets to unknown port received</span><br><span class="line">    0 packet receive errors</span><br><span class="line">    19180 packets sent</span><br><span class="line">    0 receive buffer errors</span><br><span class="line">    0 send buffer errors</span><br><span class="line">    IgnoredMulti: 107</span><br><span class="line">UdpLite:</span><br><span class="line">TcpExt:</span><br><span class="line">    3 delayed acks sent</span><br><span class="line">    47 packet headers predicted</span><br><span class="line">    2 acknowledgments not containing data payload received</span><br><span class="line">    170 predicted acknowledgments</span><br><span class="line">    TCPBacklogCoalesce: 9</span><br><span class="line">    TCPAutoCorking: 12</span><br><span class="line">    TCPOrigDataSent: 180</span><br><span class="line">    TCPDelivered: 180</span><br><span class="line">IpExt:</span><br><span class="line">    InMcastPkts: 279</span><br><span class="line">    OutMcastPkts: 66</span><br><span class="line">    InBcastPkts: 107</span><br><span class="line">    OutBcastPkts: 7</span><br><span class="line">    InOctets: 1405727</span><br><span class="line">    OutOctets: 1393405</span><br><span class="line">    InMcastOctets: 19672</span><br><span class="line">    OutMcastOctets: 6290</span><br><span class="line">    InBcastOctets: 9737</span><br><span class="line">    OutBcastOctets: 327</span><br><span class="line">    InNoECTPkts: 19788</span><br><span class="line"></span><br><span class="line"><span class="comment"># ss</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ss -s</span></span><br><span class="line">Total: 958 (kernel 2224)</span><br><span class="line">TCP:   6 (estab 1, closed 0, orphaned 0, synrecv 0, timewait 0/0), ports 0</span><br><span class="line"></span><br><span class="line">Transport  Total     IP        IPv6</span><br><span class="line">*         2224      -         -        </span><br><span class="line">RAW       0         0         0        </span><br><span class="line">UDP       6         4         2        </span><br><span class="line">TCP       6         4         2        </span><br><span class="line">INET     12        8         4        </span><br><span class="line">FRAG     0         0         0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># sar</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># sar -n DEV 1</span></span><br><span class="line">Linux 5.0.0-37-generic (ubuntu) 12/29/2019 _x86_64_(2 CPU)</span><br><span class="line"></span><br><span class="line">08:42:20 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:42:21 PM     ens33      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">08:42:21 PM        lo     80.00     80.00      5.55      5.55      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">08:42:21 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:42:22 PM     ens33     34.00     34.00      1.99      3.25      0.00      0.00      0.00      0.00</span><br><span class="line">08:42:22 PM        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># ping</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ping -c3 114.114.114.114</span></span><br><span class="line">PING 114.114.114.114 (114.114.114.114) 56(84) bytes of data.</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=1 ttl=128 time=222 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=2 ttl=128 time=221 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=3 ttl=128 time=222 ms</span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ethtool ens33 | grep Speed</span></span><br><span class="line">Speed: 1000Mb/s</span><br></pre></td></tr></table></figure><h2 id="C10K-and-C1000K"><a href="#C10K-and-C1000K" class="headerlink" title="C10K and C1000K"></a>C10K and C1000K</h2><ol><li>select or poll Apache</li><li>epoll Nginx </li><li>Asynchronous I/O</li></ol><ol><li>one master, multiple worker</li><li>multi-process listen same port, need enable SO_REUSEPORT</li><li>C1000K’s solution is essentially built on epoll’s non-blocking I / O model.</li><li>C10M: To solve this problem, the most important thing is to skip the lengthy path of the kernel protocol stack and send the network packets directly to the application to be processed. There are two common mechanisms here, DPDK and XDP.</li></ol><ul><li>DPDK is the standard for user mode networks. It skips the kernel protocol stack and directly processes the network reception by the user mode process through polling.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229210141.png" alt="">  </li><li>XDP (eXpress Data Path) is a high-performance network data path provided by the Linux kernel. It allows network packets to be processed before entering the kernel protocol stack, which can also bring higher performance. The bottom layer of XDP, like the bcc-tools we used before, is implemented based on the eBPF mechanism of the Linux kernel.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191229210414.png" alt=""></li></ul><h2 id="performance-test"><a href="#performance-test" class="headerlink" title="performance test"></a>performance test</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable pktgen</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># modprobe pktgen</span></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ps -ef | grep pktgen | grep -v grep</span></span><br><span class="line">root       2478      2  0 22:25 ?        00:00:00 [kpktgend_0]</span><br><span class="line">root       2480      2  0 22:25 ?        00:00:00 [kpktgend_1]</span><br><span class="line">root       2481      2  0 22:25 ?        00:00:00 [kpktgend_0]</span><br><span class="line">root       2482      2  0 22:25 ?        00:00:00 [kpktgend_1]</span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># ls /proc/net/pktgen/</span></span><br><span class="line">kpktgend_0  kpktgend_1  pgctrl</span><br></pre></td></tr></table></figure><p>do some test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># define function</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">pgset</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> result</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$1</span> &gt; <span class="variable">$PGDEV</span></span><br><span class="line"> </span><br><span class="line">    result=`cat <span class="variable">$PGDEV</span> | fgrep <span class="string">"Result: OK:"</span>`</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$result</span>"</span> = <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">         cat <span class="variable">$PGDEV</span> | fgrep Result:</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># bind 0 thread to eth0</span></span><br><span class="line">PGDEV=/proc/net/pktgen/kpktgend_0</span><br><span class="line">pgset <span class="string">"rem_device_all"</span>   <span class="comment"># clear bind</span></span><br><span class="line">pgset <span class="string">"add_device eth0"</span>  <span class="comment"># add eth0 </span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># config eth0 </span></span><br><span class="line">PGDEV=/proc/net/pktgen/eth0</span><br><span class="line">pgset <span class="string">"count 1000000"</span>    <span class="comment"># total send package</span></span><br><span class="line">pgset <span class="string">"delay 5000"</span>       <span class="comment"># interval </span></span><br><span class="line">pgset <span class="string">"clone_skb 0"</span>      <span class="comment"># SKB package duplicate</span></span><br><span class="line">pgset <span class="string">"pkt_size 64"</span>      <span class="comment"># package size</span></span><br><span class="line">pgset <span class="string">"dst 192.168.0.30"</span> <span class="comment"># dest IP</span></span><br><span class="line">pgset <span class="string">"dst_mac 11:11:11:11:11:11"</span>  <span class="comment"># dest MAC</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># start test</span></span><br><span class="line">PGDEV=/proc/net/pktgen/pgctrl</span><br><span class="line">pgset <span class="string">"start"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat /proc/net/pktgen/eth0</span><br><span class="line">Params: count 1000000  min_pkt_size: 64  max_pkt_size: 64</span><br><span class="line">     frags: 0  delay: 0  clone_skb: 0  ifname: eth0</span><br><span class="line">     flows: 0 flowlen: 0</span><br><span class="line">...</span><br><span class="line">Current:</span><br><span class="line">     pkts-sofar: 1000000  errors: 0</span><br><span class="line">     started: 1534853256071us  stopped: 1534861576098us idle: 70673us</span><br><span class="line">...</span><br><span class="line">Result: OK: 8320027(c8249354+d70673) usec, 1000000 (64byte,0frags)</span><br><span class="line">  120191pps 61Mb/sec (61537792bps) errors: 0</span><br></pre></td></tr></table></figure><p>TCP test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install iperf3</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install iperf3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang<span class="comment"># iperf3 -s -i 1 -p 10000</span></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">Server listening on 10000</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iperf3 -c 192.168.0.30 -b 1G -t 15 -P 2 -p 10000</span><br><span class="line"></span><br><span class="line">[ ID] Interval           Transfer     Bandwidth</span><br><span class="line">...</span><br><span class="line">[SUM]   0.00-15.04  sec  0.00 Bytes  0.00 bits/sec                  sender</span><br><span class="line">[SUM]   0.00-15.04  sec  1.51 GBytes   860 Mbits/sec                  receiver</span><br></pre></td></tr></table></figure><p>HTTP test</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu</span><br><span class="line">apt-get install -y apache2-utils</span><br><span class="line"># CentOS</span><br><span class="line">yum install -y httpd-tools</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ab -c 1000 -n 10000 http:&#x2F;&#x2F;192.168.0.30&#x2F;</span><br><span class="line">...</span><br><span class="line">Server Software:        nginx&#x2F;1.15.8</span><br><span class="line">Server Hostname:        192.168.0.30</span><br><span class="line">Server Port:            80</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">Requests per second:    1078.54 [#&#x2F;sec] (mean)</span><br><span class="line">Time per request:       927.183 [ms] (mean)</span><br><span class="line">Time per request:       0.927 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          890.00 [Kbytes&#x2F;sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+&#x2F;-sd] median   max</span><br><span class="line">Connect:        0   27 152.1      1    1038</span><br><span class="line">Processing:     9  207 843.0     22    9242</span><br><span class="line">Waiting:        8  207 843.0     22    9242</span><br><span class="line">Total:         15  233 857.7     23    9268</span><br><span class="line"> </span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%     23</span><br><span class="line">  66%     24</span><br><span class="line">  75%     24</span><br><span class="line">  80%     26</span><br><span class="line">  90%    274</span><br><span class="line">  95%   1195</span><br><span class="line">  98%   2335</span><br><span class="line">  99%   4663</span><br><span class="line"> 100%   9268 (longest request)</span><br></pre></td></tr></table></figure><p>App test<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/wg/wrk</span><br><span class="line"><span class="built_in">cd</span> wrk</span><br><span class="line">apt-get install build-essential -y</span><br><span class="line">make</span><br><span class="line">sudo cp wrk /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wrk -c 1000 -t 2 http://192.168.0.30/</span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30/</span><br><span class="line">  2 threads and 1000 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency    65.83ms  174.06ms   1.99s    95.85%</span><br><span class="line">    Req/Sec     4.87k   628.73     6.78k    69.00%</span><br><span class="line">  96954 requests <span class="keyword">in</span> 10.06s, 78.59MB <span class="built_in">read</span></span><br><span class="line">  Socket errors: connect 0, <span class="built_in">read</span> 0, write 0, timeout 179</span><br><span class="line">Requests/sec:   9641.31</span><br><span class="line">Transfer/sec:      7.82MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># setup add parameter</span></span><br><span class="line">-- example script that demonstrates response handling and</span><br><span class="line">-- retrieving an authentication token to <span class="built_in">set</span> on all future</span><br><span class="line">-- requests</span><br><span class="line"> </span><br><span class="line">token = nil</span><br><span class="line">path  = <span class="string">"/authenticate"</span></span><br><span class="line"> </span><br><span class="line">request = <span class="keyword">function</span>()</span><br><span class="line">   <span class="built_in">return</span> wrk.format(<span class="string">"GET"</span>, path)</span><br><span class="line">end</span><br><span class="line"> </span><br><span class="line">response = <span class="keyword">function</span>(status, headers, body)</span><br><span class="line">   <span class="keyword">if</span> not token and status == 200 <span class="keyword">then</span></span><br><span class="line">      token = headers[<span class="string">"X-Token"</span>]</span><br><span class="line">      path  = <span class="string">"/resource"</span></span><br><span class="line">      wrk.headers[<span class="string">"X-Token"</span>] = token</span><br><span class="line">   end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">wrk -c 1000 -t 2 -s auth.lua http://192.168.0.30/</span><br></pre></td></tr></table></figure></p><h2 id="DNS-slow"><a href="#DNS-slow" class="headerlink" title="DNS slow"></a>DNS slow</h2><ul><li>A record, used to translate the domain name into an IP address;</li><li>CNAME record for creating aliases;</li><li>The NS record indicates the name server address corresponding to the domain name.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># dig +trace +nodnssec feiyang233.club</span></span><br><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># nslookup feiyang233.club</span></span><br><span class="line">Server:1.1.1.1</span><br><span class="line">Address:1.1.1.1<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">feiyang233.clubcanonical name = fainyang.github.io.</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.109.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.110.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.111.153</span><br><span class="line">Name:fainyang.github.io</span><br><span class="line">Address: 185.199.108.153</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu:/home/feiyang/wrk<span class="comment"># dig +trace +nodnssec feiyang233.club</span></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.11-Ubuntu &lt;&lt;&gt;&gt; +trace +nodnssec feiyang233.club</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.7974INNSi.root-servers.net.</span><br><span class="line">.7974INNSj.root-servers.net.</span><br><span class="line">.7974INNSk.root-servers.net.</span><br><span class="line">.7974INNSl.root-servers.net.</span><br><span class="line">.7974INNSm.root-servers.net.</span><br><span class="line">.7974INNSa.root-servers.net.</span><br><span class="line">.7974INNSb.root-servers.net.</span><br><span class="line">.7974INNSc.root-servers.net.</span><br><span class="line">.7974INNSd.root-servers.net.</span><br><span class="line">.7974INNSe.root-servers.net.</span><br><span class="line">.7974INNSf.root-servers.net.</span><br><span class="line">.7974INNSg.root-servers.net.</span><br><span class="line">.7974INNSh.root-servers.net.</span><br><span class="line">;; Received 431 bytes from 1.1.1.1<span class="comment">#53(1.1.1.1) in 8 ms</span></span><br><span class="line"></span><br><span class="line">club.172800INNSns4.dns.nic.club.</span><br><span class="line">club.172800INNSns1.dns.nic.club.</span><br><span class="line">club.172800INNSns6.dns.nic.club.</span><br><span class="line">club.172800INNSns2.dns.nic.club.</span><br><span class="line">club.172800INNSns3.dns.nic.club.</span><br><span class="line">club.172800INNSns5.dns.nic.club.</span><br><span class="line">;; Received 456 bytes from 192.36.148.17<span class="comment">#53(i.root-servers.net) in 104 ms</span></span><br><span class="line"></span><br><span class="line">feiyang233.club.3600INNSf1g1ns1.dnspod.net.</span><br><span class="line">feiyang233.club.3600INNSf1g1ns2.dnspod.net.</span><br><span class="line">;; Received 98 bytes from 156.154.144.215<span class="comment">#53(ns1.dns.nic.club) in 189 ms</span></span><br><span class="line"></span><br><span class="line">;; Received 44 bytes from 182.140.167.166<span class="comment">#53(f1g1ns1.dnspod.net) in 404 ms</span></span><br></pre></td></tr></table></figure><ol><li>no /etc/resolv.conf <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nslookup feiyang233.club</span><br><span class="line">;; connection timed out; no servers could be reached</span><br><span class="line"></span><br><span class="line"><span class="comment"># add DNS</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"nameserver 1.1.1.1"</span> &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure></li><li>DNS unstable<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">time nslookup time.geekbang.org</span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8<span class="comment">#53</span></span><br><span class="line"> </span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:time.geekbang.org</span><br><span class="line">Address: 39.106.233.176</span><br><span class="line"> </span><br><span class="line">real0m10.349s</span><br><span class="line">user0m0.004s</span><br><span class="line">sys0m0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time nslookup time.geekbang.org</span><br><span class="line">;; connection timed out; no servers could be reached</span><br><span class="line"> </span><br><span class="line">real0m15.011s</span><br><span class="line">user0m0.006s</span><br><span class="line">sys0m0.006s</span><br></pre></td></tr></table></figure>The DNS server itself has problems, the response is slow and unstable;</li></ol><p>The network delay from the client to the DNS server is relatively large;</p><p>DNS request or response packets are lost by network devices on the link in some cases.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 8.8.8.8</span><br><span class="line">PING 8.8.8.8 (8.8.8.8): 56 data bytes</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=0 ttl=31 time=137.637 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=1 ttl=31 time=144.743 ms</span><br><span class="line">64 bytes from 8.8.8.8: icmp_seq=2 ttl=31 time=138.576 ms</span><br><span class="line">--- 8.8.8.8 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 137.637/140.319/144.743/3.152 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># try other DNS</span></span><br><span class="line"></span><br><span class="line">ping -c3 114.114.114.114</span><br><span class="line">PING 114.114.114.114 (114.114.114.114): 56 data bytes</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=0 ttl=67 time=31.130 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=1 ttl=56 time=31.302 ms</span><br><span class="line">64 bytes from 114.114.114.114: icmp_seq=2 ttl=56 time=31.250 ms</span><br><span class="line">--- 114.114.114.114 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 31.130/31.227/31.302/0.072 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> nameserver 114.114.114.114 &gt; /etc/resolv.conf</span><br><span class="line">time nslookup time.geekbang.org</span><br><span class="line">Server:114.114.114.114</span><br><span class="line">Address:114.114.114.114<span class="comment">#53</span></span><br><span class="line"> </span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:time.geekbang.org</span><br><span class="line">Address: 39.106.233.176</span><br><span class="line"> </span><br><span class="line">real    0m0.064s</span><br><span class="line">user    0m0.007s</span><br><span class="line">sys     0m0.006s</span><br></pre></td></tr></table></figure><h2 id="dump-traffic"><a href="#dump-traffic" class="headerlink" title="dump traffic"></a>dump traffic</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install tcpdump wireshark</span><br><span class="line"> </span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install -y tcpdump wireshark</span><br><span class="line"></span><br><span class="line">tcpdump -nn udp port 53 or host 35.190.27.188</span><br><span class="line"></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv <span class="keyword">for</span> full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">14:02:31.100564 IP 172.16.3.4.56669 &gt; 114.114.114.114.53: 36909+ A? geektime.org. (30)</span><br><span class="line">14:02:31.507699 IP 114.114.114.114.53 &gt; 172.16.3.4.56669: 36909 1/0/0 A 35.190.27.188 (46)</span><br><span class="line">14:02:31.508164 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, id 4356, seq 1, length 64</span><br><span class="line">14:02:31.539667 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, id 4356, seq 1, length 64</span><br><span class="line">14:02:31.539995 IP 172.16.3.4.60254 &gt; 114.114.114.114.53: 49932+ PTR? 188.27.190.35.in-addr.arpa. (44)</span><br><span class="line">14:02:36.545104 IP 172.16.3.4.60254 &gt; 114.114.114.114.53: 49932+ PTR? 188.27.190.35.in-addr.arpa. (44)</span><br><span class="line">14:02:41.551284 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, id 4356, seq 2, length 64</span><br><span class="line">14:02:41.582363 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, id 4356, seq 2, length 64</span><br><span class="line">14:02:42.552506 IP 172.16.3.4 &gt; 35.190.27.188: ICMP <span class="built_in">echo</span> request, id 4356, seq 3, length 64</span><br><span class="line">14:02:42.583646 IP 35.190.27.188 &gt; 172.16.3.4: ICMP <span class="built_in">echo</span> reply, id 4356, seq 3, length 64</span><br></pre></td></tr></table></figure><p>The purpose of PTR reverse address resolution is to find out the domain name from the IP address, but in fact, not all IP addresses will define PTR records, so PTR queries are likely to fail.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check PTR</span></span><br><span class="line"></span><br><span class="line">nslookup -<span class="built_in">type</span>=PTR 35.190.27.188 8.8.8.8</span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8<span class="comment">#53</span></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">188.27.190.35.in-addr.arpaname = 188.27.190.35.bc.googleusercontent.com.</span><br><span class="line">Authoritative answers can be found from:</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">dig +short example.com</span><br><span class="line">93.184.216.34</span><br><span class="line">tcpdump -nn host 93.184.216.34 -w web.pcap</span><br><span class="line"></span><br><span class="line"><span class="comment"># in another tty</span></span><br><span class="line">curl http://example.com</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091850.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091854.png" alt=""><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tcpdump output format</span></span><br><span class="line">Timestamp Protocol Source Address Source Port&gt; Destination Address Destination Port Network Packet Details</span><br><span class="line">时间戳 协议 源地址 源端口 &gt; 目的地址 目的端口 网络包详细信息</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091857.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231091900.png" alt=""></p><h2 id="anti-DDoS"><a href="#anti-DDoS" class="headerlink" title="anti-DDoS"></a>anti-DDoS</h2><p>DDoS（Distributed Denial of Service） </p><ul><li>Running out of bandwidth</li><li>Running out of operating system resources</li><li>Running out of application resources</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -S set TCP  SYN，-p port 80</span></span><br><span class="line"><span class="comment"># -i u10  10us interval</span></span><br><span class="line">hping3 -S -p 80 -i u10 192.168.0.30</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -w only output HTTP status total time -o redirect to /dev/null</span></span><br><span class="line">curl -s -w <span class="string">'Http code: %&#123;http_code&#125;\nTotal time:%&#123;time_total&#125;s\n'</span> -o /dev/null http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Http code: 200</span><br><span class="line">Total time:0.002s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sar -n DEV 1</span><br><span class="line">08:55:49        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line">08:55:50      docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">08:55:50         eth0  22274.00    629.00   1174.64     37.78      0.00      0.00      0.00      0.02</span><br><span class="line">08:55:50           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># small package 54B （1174*1024/22274=54）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -i eth0 nic，-n Don't convert addresses (i.e., host addresses, port numbers, etc.) to names.</span></span><br><span class="line"><span class="comment"># tcp port 80 </span></span><br><span class="line">$ tcpdump -i eth0 -n tcp port 80</span><br><span class="line">09:15:48.287047 IP 192.168.0.2.27095 &gt; 192.168.0.30: Flags [S], seq 1288268370, win 512, length 0</span><br><span class="line">09:15:48.287050 IP 192.168.0.2.27131 &gt; 192.168.0.30: Flags [S], seq 2084255254, win 512, length 0</span><br><span class="line">09:15:48.287052 IP 192.168.0.2.27116 &gt; 192.168.0.30: Flags [S], seq 677393791, win 512, length 0</span><br><span class="line">09:15:48.287055 IP 192.168.0.2.27141 &gt; 192.168.0.30: Flags [S], seq 1276451587, win 512, length 0</span><br><span class="line">09:15:48.287068 IP 192.168.0.2.27154 &gt; 192.168.0.30: Flags [S], seq 1851495339, win 512, length 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231164029.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191231164122.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check SYN_REC</span></span><br><span class="line">netstat -n -p | grep SYN_REC</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:12503      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:13502      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:15256      SYN_RECV    -</span><br><span class="line">tcp        0      0 192.168.0.30:80          192.168.0.2:18117      SYN_RECV    -</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">netstat -n -p | grep SYN_REC | wc -l</span><br><span class="line">193</span><br><span class="line"></span><br><span class="line"><span class="comment"># method for SYN DDoS</span></span><br><span class="line"><span class="comment"># limit SYN 1/s</span></span><br><span class="line">$ iptables -A INPUT -p tcp --syn -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 1/s -j ACCEPT</span><br><span class="line"> </span><br><span class="line"><span class="comment"># limit every IP only establish 10 connections during 60s</span></span><br><span class="line">$ iptables -I INPUT -p tcp --dport 80 --syn -m recent --name SYN_FLOOD --update --seconds 60 --hitcount 10 -j REJECT</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_max_syn_backlog</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 256</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase max</span></span><br><span class="line">sysctl -w net.ipv4.tcp_max_syn_backlog=1024</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># decrease retry time from default 5 to 1</span></span><br><span class="line">sysctl -w net.ipv4.tcp_synack_retries=1</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable TCP SYN Cookies</span></span><br><span class="line">sysctl -w net.ipv4.tcp_syncookies=1</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># above set is temporary, for persistent</span></span><br><span class="line">cat /etc/sysctl.conf</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br></pre></td></tr></table></figure><p>In a Linux server, you can increase the anti-attack capability of the server and reduce the impact of DDoS on normal services through various methods such as kernel tuning, DPDK, and XDP. In the application, you can use various levels of caching, WAF, CDN and other methods to mitigate the impact of DDoS on the application.</p><h2 id="network-slow"><a href="#network-slow" class="headerlink" title="network slow"></a>network slow</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">traceroute --tcp -p 80 -n baidu.com</span><br><span class="line">traceroute to baidu.com (123.125.115.110), 30 hops max, 60 byte packets</span><br><span class="line"> 1  * * *</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  * * *</span><br><span class="line"> 4  * * *</span><br><span class="line"> 5  * * *</span><br><span class="line"> 6  * * *</span><br><span class="line"> 7  * * *</span><br><span class="line"> 8  * * *</span><br><span class="line"> 9  * * *</span><br><span class="line">10  * * *</span><br><span class="line">11  * * *</span><br><span class="line">12  * * *</span><br><span class="line">13  * * *</span><br><span class="line">14  123.125.115.110  20.684 ms *  20.798 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># install wrk</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/wg/wrk</span><br><span class="line"><span class="built_in">cd</span> wrk</span><br><span class="line">apt-get install build-essential -y</span><br><span class="line">make</span><br><span class="line">sudo cp wrk /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># create 2 nginx</span></span><br><span class="line">docker run --network=host --name=good -itd nginx</span><br><span class="line"></span><br><span class="line">docker run --name nginx --network=host -itd feisky/nginx:latency</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl port 80 and 8080</span></span><br><span class="line"><span class="comment"># 80 ok</span></span><br><span class="line">curl http://192.168.0.30</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">...</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 8080 ok</span></span><br><span class="line">curl http://192.168.0.30:8080</span><br><span class="line">...</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 80 ok </span></span><br><span class="line">hping3 -c 3 -S -p 80 192.168.0.30</span><br><span class="line">HPING 192.168.0.30 (eth0 192.168.0.30): S <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=80 flags=SA seq=0 win=29200 rtt=7.8 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=80 flags=SA seq=1 win=29200 rtt=7.7 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=80 flags=SA seq=2 win=29200 rtt=7.6 ms</span><br><span class="line"> </span><br><span class="line">--- 192.168.0.30 hping statistic ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 7.6/7.7/7.8 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8080 ok</span></span><br><span class="line">hping3 -c 3 -S -p 8080 192.168.0.30</span><br><span class="line">HPING 192.168.0.30 (eth0 192.168.0.30): S <span class="built_in">set</span>, 40 headers + 0 data bytes</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=8080 flags=SA seq=0 win=29200 rtt=7.7 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=8080 flags=SA seq=1 win=29200 rtt=7.6 ms</span><br><span class="line">len=44 ip=192.168.0.30 ttl=64 DF id=0 sport=8080 flags=SA seq=2 win=29200 rtt=7.3 ms</span><br><span class="line"> </span><br><span class="line">--- 192.168.0.30 hping statistic ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 7.3/7.6/7.7 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 80 </span></span><br><span class="line">测试 80 端口性能</span><br><span class="line">$ <span class="comment"># wrk --latency -c 100 -t 2 --timeout 2 http://192.168.0.30/</span></span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30/</span><br><span class="line">  2 threads and 100 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency     9.19ms   12.32ms 319.61ms   97.80%</span><br><span class="line">    Req/Sec     6.20k   426.80     8.25k    85.50%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%    7.78ms</span><br><span class="line">     75%    8.22ms</span><br><span class="line">     90%    9.14ms</span><br><span class="line">     99%   50.53ms</span><br><span class="line">  123558 requests <span class="keyword">in</span> 10.01s, 100.15MB <span class="built_in">read</span></span><br><span class="line">Requests/sec:  12340.91</span><br><span class="line">Transfer/sec:     10.00MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># test 8080, this nginx is very slow</span></span><br><span class="line">wrk --latency -c 100 -t 2 --timeout 2 http://192.168.0.30:8080/</span><br><span class="line">Running 10s <span class="built_in">test</span> @ http://192.168.0.30:8080/</span><br><span class="line">  2 threads and 100 connections</span><br><span class="line">  Thread Stats   Avg      Stdev     Max   +/- Stdev</span><br><span class="line">    Latency    43.60ms    6.41ms  56.58ms   97.06%</span><br><span class="line">    Req/Sec     1.15k   120.29     1.92k    88.50%</span><br><span class="line">  Latency Distribution</span><br><span class="line">     50%   44.02ms</span><br><span class="line">     75%   44.33ms</span><br><span class="line">     90%   47.62ms</span><br><span class="line">     99%   48.88ms</span><br><span class="line">  22853 requests <span class="keyword">in</span> 10.01s, 18.55MB <span class="built_in">read</span></span><br><span class="line">Requests/sec:   2283.31</span><br><span class="line">Transfer/sec:      1.85MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># dump the traffic</span></span><br><span class="line"></span><br><span class="line">tcpdump -nn tcp port 8080 -w nginx.pcap</span><br><span class="line">wrk --latency -c 100 -t 2 --timeout 2 http://192.168.0.30:8080/</span><br></pre></td></tr></table></figure><p>Open this nginx.pcap in Wireshark, Statics -&gt; Flow Graph，select “Limit to display filter” and setup Flow type to “TCP Flows”：<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101110429.png" alt=""><br>Blue area is very slow costs 40ms, 40ms is minimum timeout for TCP delayed acknowledgement (Delayed ACK).<br>An optimization mechanism for TCP ACK, that is, instead of sending an ACK for each request, you wait for a while (such as 40ms). If there are other packets that need to be sent during this period, send them with the ACK. Of course, if you can’t wait for other packets, then send ACK separately after timeout.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TCP_QUICKACK (since Linux 2.4.4)</span></span><br><span class="line"><span class="comment"># Enable  quickack mode if set or disable quickack mode if cleared.  In quickack mode, </span></span><br><span class="line"><span class="comment"># acks are sent imme‐diately, rather than delayed if needed in accordance to normal TCP operation.</span></span><br><span class="line"><span class="comment"># This flag is  not  perma‐nent,  it only enables a switch to or from quickack mode.  </span></span><br><span class="line"><span class="comment"># Subsequent operation of the TCP protocol will once again enter/leave quickack mode</span></span><br><span class="line"><span class="comment"># depending on internal  protocol  processing  and  factors  such  as delayed ack timeouts occurring </span></span><br><span class="line"><span class="comment"># and data transfer.  This option should not be used in code intended to be portable.</span></span><br></pre></td></tr></table></figure><p><a href="https://en.wikipedia.org/wiki/Nagle%27s_algorithm" target="_blank" rel="noopener">The Nagle algorithm</a> is an optimization algorithm used in the TCP protocol to reduce the number of small packets sent, in order to improve the utilization of the actual bandwidth. The Nagle algorithm specifies that there can be at most one unconfirmed outstanding packet on a TCP connection; no other packets are sent until an ACK for this packet is received.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#TCP_NODELAY</span></span><br><span class="line"><span class="comment"># If set, disable the Nagle algorithm.  This means that segments are always sent as soon as possible,</span></span><br><span class="line"><span class="comment"># even if there is only a small amount of data.  When not set, data is buffered until there is a </span></span><br><span class="line"><span class="comment"># sufficient amount to send out, thereby avoiding the frequent sending of small packets, </span></span><br><span class="line"><span class="comment"># which results in poor uti‐lization of the network.  </span></span><br><span class="line"><span class="comment"># This option is overridden by TCP_CORK; however, setting this option forces an explicit flush of</span></span><br><span class="line"><span class="comment"># pending output, even if TCP_CORK is currently set.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check tcp_nodelay</span></span><br><span class="line">cat /etc/nginx/nginx.conf | grep tcp_nodelay</span><br><span class="line">    tcp_nodelay    off;</span><br></pre></td></tr></table></figure><h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>Network Address and Port Translation<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101112538.png" alt=""><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SNAT</span></span><br><span class="line"><span class="comment"># MASQUERADE, change out ip to Linux wan ip</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -j MASQUERADE</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100</span><br><span class="line"></span><br><span class="line"><span class="comment"># DNAT</span></span><br><span class="line">iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.2 -j SNAT --to-source 100.100.100.100</span><br><span class="line">iptables -t nat -A PREROUTING -d 100.100.100.100 -j DNAT --to-destination 192.168.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable forward function</span></span><br><span class="line"><span class="comment"># sysctl net.ipv4.ip_forward</span></span><br><span class="line"><span class="comment"># net.ipv4.ip_forward = 1</span></span><br><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># open files</span></span><br><span class="line"><span class="built_in">ulimit</span> -n</span><br><span class="line">1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase to 66535</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 65536</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30/</span><br><span class="line">...</span><br><span class="line">Requests per second:    6576.21 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       760.317 [ms] (mean)</span><br><span class="line">Time per request:       0.152 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          5390.19 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0  177 714.3      9    7338</span><br><span class="line">Processing:     0   27  39.8     19     961</span><br><span class="line">Waiting:        0   23  39.5     16     951</span><br><span class="line">Total:          1  204 716.3     28    7349</span><br><span class="line"></span><br><span class="line"><span class="comment"># run new test container</span></span><br><span class="line">docker run --name nginx --privileged -p 8080:8080 -itd feisky/nginx:nat</span><br><span class="line"></span><br><span class="line">iptables -nL -t nat</span><br><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">DOCKER     all  --  0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line">Chain DOCKER (2 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">RETURN     all  --  0.0.0.0/0            0.0.0.0/0</span><br><span class="line">DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:172.17.0.2:8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># test again</span></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">apr_pollset_poll: The timeout specified has expired (70007)</span><br><span class="line">Total of 5602 requests completed</span><br><span class="line"></span><br><span class="line"><span class="comment"># set timeout is 30s</span></span><br><span class="line">ab -c 5000 -n 10000 -r -s 30 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">Requests per second:    76.47 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       65380.868 [ms] (mean)</span><br><span class="line">Time per request:       13.076 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          44.79 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0 1300 5578.0      1   65184</span><br><span class="line">Processing:     0 37916 59283.2      1  130682</span><br><span class="line">Waiting:        0    2   8.7      1     414</span><br><span class="line">Total:          1 39216 58711.6   1021  130682</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>we create a script to follow this iptable path<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env stap</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># Dropwatch.stp</span></span><br><span class="line"><span class="comment"># Author: Neil Horman &lt;nhorman@redhat.com&gt;</span></span><br><span class="line"><span class="comment"># An example script to mimic the behavior of the dropwatch utility</span></span><br><span class="line"><span class="comment"># http://fedorahosted.org/dropwatch</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Array to hold the list of drop points we find</span></span><br><span class="line">global locations</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Note when we turn the monitor on and off</span></span><br><span class="line">probe begin &#123; <span class="built_in">printf</span>(<span class="string">"Monitoring for dropped packets\n"</span>) &#125;</span><br><span class="line">probe end &#123; <span class="built_in">printf</span>(<span class="string">"Stopping dropped packet monitor\n"</span>) &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># increment a drop counter for every location we drop at</span></span><br><span class="line">probe kernel.trace(<span class="string">"kfree_skb"</span>) &#123; locations[<span class="variable">$location</span>] &lt;&lt;&lt; 1 &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Every 5 seconds report our drop locations</span></span><br><span class="line">probe timer.sec(5)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>)</span><br><span class="line">  foreach (l <span class="keyword">in</span> locations-) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d packets dropped at %s\n"</span>,</span><br><span class="line">           @count(locations[l]), symname(l))</span><br><span class="line">  &#125;</span><br><span class="line">  delete locations</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>run this script<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">stap --all-modules dropwatch.stp</span><br><span class="line">Monitoring <span class="keyword">for</span> dropped packets</span><br><span class="line"></span><br><span class="line">10031 packets dropped at nf_hook_slow</span><br><span class="line">676 packets dropped at tcp_v4_rcv</span><br><span class="line"> </span><br><span class="line">7284 packets dropped at nf_hook_slow</span><br><span class="line">268 packets dropped at tcp_v4_rcv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># use perf to check </span></span><br><span class="line"><span class="comment"># record 30s crtl + c</span></span><br><span class="line">$ perf record -a -g -- sleep 30</span><br><span class="line"> </span><br><span class="line"><span class="comment"># print report</span></span><br><span class="line">$ perf report -g graph,0</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101140853.png" alt=""></p><p>Slow in 3 point</p><ol><li>ipv4_conntrack_in</li><li>br_nf_pre_routing</li><li>iptable_nat_ipv4_in</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check conntrack</span></span><br><span class="line">sysctl -a | grep conntrack</span><br><span class="line">net.netfilter.nf_conntrack_count = 180</span><br><span class="line">net.netfilter.nf_conntrack_max = 1000</span><br><span class="line">net.netfilter.nf_conntrack_buckets = 65536</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 60</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># net.netfilter.nf_conntrack_max = 1000 is to small</span></span><br><span class="line">dmesg | tail</span><br><span class="line">[104235.156774] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line">[104243.800401] net_ratelimit: 3939 callbacks suppressed</span><br><span class="line">[104243.800401] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line">[104262.962157] nf_conntrack: nf_conntrack: table full, dropping packet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The connection tracking object size is 376, and the list item size is 16</span><br><span class="line">nf_conntrack_max * connection tracking object size + nf_conntrack_buckets * list item size</span><br><span class="line">= 1000 * 376 + 65536 * 16 B</span><br><span class="line">= 1.4 MB</span><br><span class="line"></span><br><span class="line"><span class="comment"># increase conntrack</span></span><br><span class="line">sysctl -w net.netfilter.nf_conntrack_max=131072</span><br><span class="line">sysctl -w net.netfilter.nf_conntrack_buckets=65536</span><br><span class="line"></span><br><span class="line"><span class="comment"># test again, now delay is ok</span></span><br><span class="line">ab -c 5000 -n 100000 -r -s 2 http://192.168.0.30:8080/</span><br><span class="line">...</span><br><span class="line">Requests per second:    6315.99 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       791.641 [ms] (mean)</span><br><span class="line">Time per request:       0.158 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          4985.15 [Kbytes/sec] received</span><br><span class="line"> </span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0  355 793.7     29    7352</span><br><span class="line">Processing:     8  311 855.9     51   14481</span><br><span class="line">Waiting:        0  292 851.5     36   14481</span><br><span class="line">Total:         15  666 1216.3    148   14645</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conntrack -L -o extended | head</span><br><span class="line">ipv4     2 tcp      6 7 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51744 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51744 [ASSURED] mark=0 use=1</span><br><span class="line">ipv4     2 tcp      6 6 TIME_WAIT src=192.168.0.2 dst=192.168.0.96 sport=51524 dport=8080 src=172.17.0.2 dst=192.168.0.2 sport=8080 dport=51524 [ASSURED] mark=0 use=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conntrack -L -o extended | wc -l</span><br><span class="line">14289</span><br><span class="line"></span><br><span class="line"><span class="comment"># collecte all states</span></span><br><span class="line">conntrack -L -o extended | awk <span class="string">'/^.*tcp.*$/ &#123;sum[$6]++&#125; END &#123;for(i in sum) print i, sum[i]&#125;'</span></span><br><span class="line">SYN_RECV 4</span><br><span class="line">CLOSE_WAIT 9</span><br><span class="line">ESTABLISHED 2877</span><br><span class="line">FIN_WAIT 3</span><br><span class="line">SYN_SENT 2113</span><br><span class="line">TIME_WAIT 9283</span><br><span class="line"></span><br><span class="line"><span class="comment"># collect each source IP</span></span><br><span class="line">conntrack -L -o extended | awk <span class="string">'&#123;print $7&#125;'</span> | cut -d <span class="string">"="</span> -f 2 | sort | uniq -c | sort -nr | head -n 10</span><br><span class="line">  14116 192.168.0.2</span><br><span class="line">    172 192.168.0.96</span><br></pre></td></tr></table></figure><h2 id="important"><a href="#important" class="headerlink" title="important"></a>important</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tcp time_wait settings check </span></span><br><span class="line">sysctl net.netfilter.nf_conntrack_tcp_timeout_time_wait</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br></pre></td></tr></table></figure><h2 id="summary-3"><a href="#summary-3" class="headerlink" title="summary"></a>summary</h2><p>After setting TCP_NODELAY for the TCP connection, you can disable the Nagle algorithm;</p><p>After TCP_CORK is enabled for a TCP connection, small packets can be aggregated into large packets before being sent (note that it will block the sending of small packets);</p><p>With SO_SNDBUF and SO_RCVBUF, you can adjust the size of the socket send buffer and receive buffer, respectively.<br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141930.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141933.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101141936.png" alt=""><br>The three values of tcp_rmem and tcp_wmem are min, default, and max respectively. The system will automatically adjust the size of the TCP receive / send buffer according to these settings.</p><p>The three values of udp_mem are min, pressure, max. The system will automatically adjust the size of the UDP send buffer according to these settings.</p><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101215350.png" alt=""></p><h1 id="Best-Practice"><a href="#Best-Practice" class="headerlink" title="Best Practice"></a>Best Practice</h1><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check running  docker</span></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># check logs</span></span><br><span class="line">docker logs -f [container_id]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check container config in json format</span></span><br><span class="line">docker inspect [container_id] -f <span class="string">'&#123;&#123;json .State&#125;&#125;'</span> | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"Status"</span>: <span class="string">"exited"</span>,</span><br><span class="line">  <span class="string">"Running"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"Paused"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"Restarting"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"OOMKilled"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"Dead"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"Pid"</span>: 0,</span><br><span class="line">  <span class="string">"ExitCode"</span>: 137,</span><br><span class="line">  <span class="string">"Error"</span>: <span class="string">""</span>,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># OMM Kill, we can check in host</span></span><br><span class="line">dmesg</span><br><span class="line">[193038.106393] java invoked oom-killer: gfp_mask=0x14000c0(GFP_KERNEL), nodemask=(null), order=0, oom_score_adj=0</span><br><span class="line">[193038.106396] java cpuset=0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53 mems_allowed=0</span><br><span class="line">[193038.106402] CPU: 0 PID: 27424 Comm: java Tainted: G  OE    4.15.0-1037 <span class="comment">#39-Ubuntu</span></span><br><span class="line">[193038.106404] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS 090007  06/02/2017</span><br><span class="line">[193038.106405] Call Trace:</span><br><span class="line">[193038.106414]  dump_stack+0x63/0x89</span><br><span class="line">[193038.106419]  dump_header+0x71/0x285</span><br><span class="line">[193038.106422]  oom_kill_process+0x220/0x440</span><br><span class="line">[193038.106424]  out_of_memory+0x2d1/0x4f0</span><br><span class="line">[193038.106429]  mem_cgroup_out_of_memory+0x4b/0x80</span><br><span class="line">[193038.106432]  mem_cgroup_oom_synchronize+0x2e8/0x320</span><br><span class="line">[193038.106435]  ? mem_cgroup_css_online+0x40/0x40</span><br><span class="line">[193038.106437]  pagefault_out_of_memory+0x36/0x7b</span><br><span class="line">[193038.106443]  mm_fault_error+0x90/0x180</span><br><span class="line">[193038.106445]  __do_page_fault+0x4a5/0x4d0</span><br><span class="line">[193038.106448]  do_page_fault+0x2e/0xe0</span><br><span class="line">[193038.106454]  ? page_fault+0x2f/0x50</span><br><span class="line">[193038.106456]  page_fault+0x45/0x50</span><br><span class="line">[193038.106459] RIP: 0033:0x7fa053e5a20d</span><br><span class="line">[193038.106460] RSP: 002b:00007fa0060159e8 EFLAGS: 00010206</span><br><span class="line">[193038.106462] RAX: 0000000000000000 RBX: 00007fa04c4b3000 RCX: 0000000009187440</span><br><span class="line">[193038.106463] RDX: 00000000943aa440 RSI: 0000000000000000 RDI: 000000009b223000</span><br><span class="line">[193038.106464] RBP: 00007fa006015a60 R08: 0000000002000002 R09: 00007fa053d0a8a1</span><br><span class="line">[193038.106465] R10: 00007fa04c018b80 R11: 0000000000000206 R12: 0000000100000768</span><br><span class="line">[193038.106466] R13: 00007fa04c4b3000 R14: 0000000100000768 R15: 0000000010000000</span><br><span class="line">[193038.106468] Task <span class="keyword">in</span> /docker/0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53</span><br><span class="line">killed as a result of <span class="built_in">limit</span> of /docker/</span><br><span class="line">0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53</span><br><span class="line">[193038.106478] memory: usage 524288kB, <span class="built_in">limit</span> 524288kB, failcnt 77</span><br><span class="line">[193038.106480] memory+swap: usage 0kB, <span class="built_in">limit</span> 9007199254740988kB, failcnt 0</span><br><span class="line">[193038.106481] kmem: usage 3708kB, <span class="built_in">limit</span> 9007199254740988kB, failcnt 0</span><br><span class="line">[193038.106481] Memory cgroup stats <span class="keyword">for</span> /docker/0f2b3fcdd2578165ea77266cdc7b1ad43e75877b0ac1889ecda30a78cb78bd53: cache:0KB rss:520580KB rss_huge:450560KB shmem:0KB mapped_file:0KB dirty:0KB writeback:0KB inactive_anon:0KB active_anon:520580KB inactive_file:0KB active_file:0KB unevictable:0KB</span><br><span class="line">[193038.106494] [ pid ]   uid  tgid total_vm      rss pgtables_bytes swapents oom_score_adj name</span><br><span class="line">[193038.106571] [27281]     0 27281  1153302   134371  1466368        0             0 java</span><br><span class="line">[193038.106574] Memory cgroup out of memory: Kill process 27281 (java) score 1027 or sacrifice child</span><br><span class="line">[193038.148334] Killed process 27281 (java) total-vm:4613208kB, anon-rss:517316kB, file-rss:20168kB, shmem-rss:0kB</span><br><span class="line">[193039.607503] oom_reaper: reaped process 27281 (java), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># add memory limit</span></span><br><span class="line">docker run --name tomcat --cpus 0.1 -m 512M -p 8080:8080 -itd feisky/tomcat:8</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> tomcat java -XX:+PrintFlagsFinal -version | grep HeapSize</span><br><span class="line">uintx ErgoHeapSizeLimit                         = 0                                   &#123;product&#125;</span><br><span class="line">uintx HeapSizePerGCThread                       = 87241520                            &#123;product&#125;</span><br><span class="line">uintx InitialHeapSize                          := 132120576                           &#123;product&#125;</span><br><span class="line">uintx LargePageHeapSizeThreshold                = 134217728                           &#123;product&#125;</span><br><span class="line">uintx MaxHeapSize                              := 2092957696   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># set env to limit memory</span></span><br><span class="line">docker run --name tomcat --cpus 0.1 -m 512M -e JAVA_OPTS=<span class="string">'-Xmx512m -Xms512m'</span> -p 8080:8080 -itd feisky/tomcat:8</span><br><span class="line"></span><br><span class="line"><span class="comment"># check thread </span></span><br><span class="line">PID=$(docker inspect [container_id] -f <span class="string">'&#123;&#123;.State.Pid&#125;&#125;'</span>)</span><br><span class="line"><span class="comment"># run pidstat</span></span><br><span class="line">$ pidstat -t -p <span class="variable">$PID</span> 1</span><br><span class="line">12:59:28      UID      TGID       TID    %usr %system  %guest   %<span class="built_in">wait</span>    %CPU   CPU  Command</span><br><span class="line">12:59:29        0     29850         -   10.00    0.00    0.00    0.00   10.00     0  java</span><br><span class="line">12:59:29        0         -     29850    0.00    0.00    0.00    0.00    0.00     0  |__java</span><br><span class="line">12:59:29        0         -     29897    5.00    1.00    0.00   86.00    6.00     1  |__java</span><br><span class="line">...</span><br><span class="line">12:59:29        0         -     29905    3.00    0.00    0.00   97.00    3.00     0  |__java</span><br><span class="line">12:59:29        0         -     29906    2.00    0.00    0.00   49.00    2.00     1  |__java</span><br><span class="line">12:59:29        0         -     29908    0.00    0.00    0.00   45.00    0.00     0  |__java</span><br><span class="line"></span><br><span class="line"><span class="comment"># io_wait is high</span></span><br></pre></td></tr></table></figure><h2 id="packet-loss"><a href="#packet-loss" class="headerlink" title="packet loss"></a>packet loss</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check max connection</span></span><br><span class="line">sysctl net.netfilter.nf_conntrack_max</span><br><span class="line">net.netfilter.nf_conntrack_max = 262144</span><br><span class="line"></span><br><span class="line">sysctl net.netfilter.nf_conntrack_count</span><br><span class="line">net.netfilter.nf_conntrack_count = 182</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute in container</span></span><br><span class="line">root@nginx:/ iptables -t filter -nvL</span><br><span class="line">Chain INPUT (policy ACCEPT 25 packets, 1000 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line">    6   240 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981</span><br><span class="line"> </span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line"> </span><br><span class="line">Chain OUTPUT (policy ACCEPT 15 packets, 660 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line">    6   264 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            statistic mode random probability 0.29999999981</span><br><span class="line"></span><br><span class="line"><span class="comment"># check MTU</span></span><br><span class="line">netstat -i</span><br><span class="line">Kernel Interface table</span><br><span class="line">Iface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg</span><br><span class="line">eth0       100      157      0    344 0            94      0      0      0 BMRU</span><br><span class="line">lo       65536        0      0      0 0             0      0      0      0 LRU</span><br></pre></td></tr></table></figure><p>During Linux startup, there are three special processes, that is, the three processes with the smallest PID numbers.</p><p>Process 0 is an idle process. This is also the first process created by the system. After initializing processes 1 and 2, it becomes an idle task. It runs when no other tasks are executing on the CPU.</p><p>Process 1 is the init process, which is usually the systemd process. It runs in user mode and is used to manage other user mode processes.</p><p>Process 2 is a kthreadd process, which runs in kernel mode and is used to manage kernel threads.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ps -f --ppid 2 -p 2</span><br><span class="line">UID         PID   PPID  C STIME TTY          TIME CMD</span><br><span class="line">root          2      0  0 12:02 ?        00:00:01 [kthreadd]</span><br><span class="line">root          9      2  0 12:02 ?        00:00:21 [ksoftirqd/0]</span><br><span class="line">root         10      2  0 12:02 ?        00:11:47 [rcu_sched]</span><br><span class="line">root         11      2  0 12:02 ?        00:00:18 [migration/0]</span><br><span class="line">...</span><br><span class="line">root      11094      2  0 14:20 ?        00:00:00 [kworker/1:0-eve]</span><br><span class="line">root      11647      2  0 14:27 ?        00:00:00 [kworker/0:2-cgr]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kernel thread names (CMD) are in square brackets []</span></span><br><span class="line">ps -ef | grep <span class="string">"\[.*\]"</span></span><br><span class="line">root         2     0  0 08:14 ?        00:00:00 [kthreadd]</span><br><span class="line">root         3     2  0 08:14 ?        00:00:00 [rcu_gp]</span><br><span class="line">root         4     2  0 08:14 ?        00:00:00 [rcu_par_gp]</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># test -S: SYN  -p port, -i interval 10us</span></span><br><span class="line">hping3 -S -p 80 -i u10 192.168.0.30</span><br><span class="line"></span><br><span class="line"><span class="comment"># top</span></span><br><span class="line">top</span><br><span class="line">top - 08:31:43 up 17 min,  1 user,  load average: 0.00, 0.00, 0.02</span><br><span class="line">Tasks: 128 total,   1 running,  69 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu0  :  0.3 us,  0.3 sy,  0.0 ni, 66.8 id,  0.3 wa,  0.0 hi, 32.4 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 65.2 id,  0.0 wa,  0.0 hi, 34.5 si,  0.0 st</span><br><span class="line">KiB Mem :  8167040 total,  7234236 free,   358976 used,   573828 buff/cache</span><br><span class="line">KiB Swap:        0 total,        0 free,        0 used.  7560460 avail Mem</span><br><span class="line"> </span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">    9 root      20   0       0      0      0 S   7.0  0.0   0:00.48 ksoftirqd/0</span><br><span class="line">   18 root      20   0       0      0      0 S   6.9  0.0   0:00.56 ksoftirqd/1</span><br><span class="line"> 2489 root      20   0  876896  38408  21520 S   0.3  0.5   0:01.50 docker-containe</span><br><span class="line"> 3008 root      20   0   44536   3936   3304 R   0.3  0.0   0:00.09 top</span><br><span class="line">    1 root      20   0   78116   9000   6432 S   0.0  0.1   0:11.77 systemd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># check ksoftirqd pid is 9</span></span><br><span class="line">pstack 9</span><br><span class="line">Could not attach to target 9: Operation not permitted.</span><br><span class="line">detach: No such process</span><br><span class="line"></span><br><span class="line">cat /proc/9/stack</span><br><span class="line">[&lt;0&gt;] smpboot_thread_fn+0x166/0x170</span><br><span class="line">[&lt;0&gt;] kthread+0x121/0x140</span><br><span class="line">[&lt;0&gt;] ret_from_fork+0x35/0x40</span><br><span class="line">[&lt;0&gt;] 0xffffffffffffffff</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf </span></span><br><span class="line">perf record -a -g -p 9 -- sleep 30</span><br><span class="line">perf report</span><br><span class="line"></span><br><span class="line"><span class="comment"># install flamegraph</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/brendangregg/FlameGraph</span><br><span class="line"><span class="built_in">cd</span> FlameGraph</span><br><span class="line"></span><br><span class="line">perf script -i /root/perf.data | ./stackcollapse-perf.pl --all |  ./flamegraph.pl &gt; ksoftirqd.svg</span><br></pre></td></tr></table></figure><h2 id="Dynamic-Tracing"><a href="#Dynamic-Tracing" class="headerlink" title="Dynamic Tracing"></a>Dynamic Tracing</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /sys/kernel/debug/tracing</span><br><span class="line"></span><br><span class="line"><span class="comment"># if not exist this directory</span></span><br><span class="line">mount -t debugfs nodev /sys/kernel/debug</span><br><span class="line"></span><br><span class="line">cat available_tracers</span><br><span class="line">hwlat blk mmiotrace function_graph wakeup_dl wakeup_rt wakeup <span class="keyword">function</span> nop</span><br><span class="line"></span><br><span class="line">cat available_filter_functions</span><br><span class="line">cat available_events</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="built_in">echo</span> do_sys_open &gt; set_graph_function</span><br><span class="line"><span class="built_in">echo</span> function_graph &gt; current_tracer</span><br><span class="line"><span class="built_in">echo</span> funcgraph-proc &gt; trace_options</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable trace</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; tracing_on</span><br><span class="line">ls</span><br><span class="line"><span class="comment"># disable trace</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; tracing_on</span><br><span class="line"></span><br><span class="line">cat trace</span><br><span class="line"><span class="comment"># tracer: function_graph</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># CPU  TASK/PID         DURATION                  FUNCTION CALLS</span></span><br><span class="line"><span class="comment"># |     |    |           |   |                     |   |   |   |</span></span><br><span class="line"> 0)    ls-12276    |               |  <span class="function"><span class="title">do_sys_open</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |    <span class="function"><span class="title">getname</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |      <span class="function"><span class="title">getname_flags</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |        <span class="function"><span class="title">kmem_cache_alloc</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |               |          <span class="function"><span class="title">_cond_resched</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |   0.049 us    |            rcu_all_qs();</span><br><span class="line"> 0)    ls-12276    |   0.791 us    |          &#125;</span><br><span class="line"> 0)    ls-12276    |   0.041 us    |          should_failslab();</span><br><span class="line"> 0)    ls-12276    |   0.040 us    |          prefetch_freepointer();</span><br><span class="line"> 0)    ls-12276    |   0.039 us    |          memcg_kmem_put_cache();</span><br><span class="line"> 0)    ls-12276    |   2.895 us    |        &#125;</span><br><span class="line"> 0)    ls-12276    |               |        <span class="function"><span class="title">__check_object_size</span></span>() &#123;</span><br><span class="line"> 0)    ls-12276    |   0.067 us    |          __virt_addr_valid();</span><br><span class="line"> 0)    ls-12276    |   0.044 us    |          __check_heap_object();</span><br><span class="line"> 0)    ls-12276    |   0.039 us    |          check_stack_object();</span><br><span class="line"> 0)    ls-12276    |   1.570 us    |        &#125;</span><br><span class="line"> 0)    ls-12276    |   5.790 us    |      &#125;</span><br><span class="line"> 0)    ls-12276    |   6.325 us    |    &#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install trace-cmd</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install trace-cmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># above 5 step simplify to follow 1 step</span></span><br><span class="line">trace-cmd record -p function_graph -g do_sys_open -O funcgraph-proc ls</span><br><span class="line">$ trace-cmd report</span><br><span class="line">...</span><br><span class="line">  ls-12418 [000] 85558.075341: funcgraph_entry:                   |  <span class="function"><span class="title">do_sys_open</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075363: funcgraph_entry:                   |    <span class="function"><span class="title">getname</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075364: funcgraph_entry:                   |      <span class="function"><span class="title">getname_flags</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075364: funcgraph_entry:                   |        <span class="function"><span class="title">kmem_cache_alloc</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075365: funcgraph_entry:                   |          <span class="function"><span class="title">_cond_resched</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075365: funcgraph_entry:        0.074 us   |            rcu_all_qs();</span><br><span class="line">  ls-12418 [000] 85558.075366: funcgraph_exit:         1.143 us   |          &#125;</span><br><span class="line">  ls-12418 [000] 85558.075366: funcgraph_entry:        0.064 us   |          should_failslab();</span><br><span class="line">  ls-12418 [000] 85558.075367: funcgraph_entry:        0.075 us   |          prefetch_freepointer();</span><br><span class="line">  ls-12418 [000] 85558.075368: funcgraph_entry:        0.085 us   |          memcg_kmem_put_cache();</span><br><span class="line">  ls-12418 [000] 85558.075369: funcgraph_exit:         4.447 us   |        &#125;</span><br><span class="line">  ls-12418 [000] 85558.075369: funcgraph_entry:                   |        <span class="function"><span class="title">__check_object_size</span></span>() &#123;</span><br><span class="line">  ls-12418 [000] 85558.075370: funcgraph_entry:        0.132 us   |          __virt_addr_valid();</span><br><span class="line">  ls-12418 [000] 85558.075370: funcgraph_entry:        0.093 us   |          __check_heap_object();</span><br><span class="line">  ls-12418 [000] 85558.075371: funcgraph_entry:        0.059 us   |          check_stack_object();</span><br><span class="line">  ls-12418 [000] 85558.075372: funcgraph_exit:         2.323 us   |        &#125;</span><br><span class="line">  ls-12418 [000] 85558.075372: funcgraph_exit:         8.411 us   |      &#125;</span><br><span class="line">  ls-12418 [000] 85558.075373: funcgraph_exit:         9.195 us   |    &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">perf probe --add do_sys_open</span><br><span class="line">Added new event:</span><br><span class="line">  probe:do_sys_open    (on do_sys_open)</span><br><span class="line">You can now use it <span class="keyword">in</span> all perf tools, such as:</span><br><span class="line">    perf record -e probe:do_sys_open -aR sleep 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perf probe -V do_sys_open</span><br><span class="line">Available variables at do_sys_open</span><br><span class="line">        @&lt;do_sys_open+0&gt;</span><br><span class="line">                char*   filename</span><br><span class="line">                int     dfd</span><br><span class="line">                int     flags</span><br><span class="line">                struct open_flags     op</span><br><span class="line">                umode_t mode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete probe</span></span><br><span class="line">perf probe --del probe:do_sys_open</span><br><span class="line"></span><br><span class="line">perf probe --add <span class="string">'do_sys_open filename:string'</span></span><br><span class="line">Added new event:</span><br><span class="line">  probe:do_sys_open    (on do_sys_open with filename:string)</span><br><span class="line">You can now use it <span class="keyword">in</span> all perf tools, such as:</span><br><span class="line">    perf record -e probe:do_sys_open -aR sleep 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># run</span></span><br><span class="line">perf record -e probe:do_sys_open -aR ls</span><br><span class="line"><span class="comment"># result</span></span><br><span class="line">perf script</span><br><span class="line">   perf 13593 [000] 91846.053622: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/proc/13596/status"</span></span><br><span class="line">   ls 13596 [000] 91846.053995: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/etc/ld.so.cache"</span></span><br><span class="line">   ls 13596 [000] 91846.054011: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/lib/x86_64-linux-gnu/libselinux.so.1"</span></span><br><span class="line">   ls 13596 [000] 91846.054066: probe:do_sys_open: (ffffffffa807b290) filename_string=<span class="string">"/lib/x86_64-linux-gnu/libc.so.6”</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># delete probe before leave</span></span><br><span class="line">perf probe --del probe:do_sys_open</span><br><span class="line"></span><br><span class="line"><span class="comment"># starce is based on ptrace</span></span><br><span class="line">strace ls</span><br><span class="line">...</span><br><span class="line">access(<span class="string">"/etc/ld.so.nohwcap"</span>, F_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">access(<span class="string">"/etc/ld.so.preload"</span>, R_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">"/etc/ld.so.cache"</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">...</span><br><span class="line">access(<span class="string">"/etc/ld.so.nohwcap"</span>, F_OK)      = -1 ENOENT (No such file or directory)</span><br><span class="line">openat(AT_FDCWD, <span class="string">"/lib/x86_64-linux-gnu/libselinux.so.1"</span>, O_RDONLY|O_CLOEXEC) = 3</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># perf trace is light</span></span><br><span class="line">perf trace ls</span><br><span class="line">         ? (         ): ls/14234  ... [continued]: execve()) = 0</span><br><span class="line">     0.177 ( 0.013 ms): ls/14234 brk(                                                                  ) = 0x555d96be7000</span><br><span class="line">     0.224 ( 0.014 ms): ls/14234 access(filename: 0xad98082                                            ) = -1 ENOENT No such file or directory</span><br><span class="line">     0.248 ( 0.009 ms): ls/14234 access(filename: 0xad9add0, mode: R                                   ) = -1 ENOENT No such file or directory</span><br><span class="line">     0.267 ( 0.012 ms): ls/14234 openat(dfd: CWD, filename: 0xad98428, flags: CLOEXEC                  ) = 3</span><br><span class="line">     0.288 ( 0.009 ms): ls/14234 fstat(fd: 3&lt;/usr/lib/locale/C.UTF-8/LC_NAME&gt;, statbuf: 0x7ffd2015f230 ) = 0</span><br><span class="line">     0.305 ( 0.011 ms): ls/14234 mmap(len: 45560, prot: READ, flags: PRIVATE, fd: 3                    ) = 0x7efe0af92000</span><br><span class="line">     0.324 Dockerfile  test.sh</span><br><span class="line">( 0.008 ms): ls/14234 close(fd: 3&lt;/usr/lib/locale/C.UTF-8/LC_NAME&gt;                          ) = 0</span><br><span class="line">     ...</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101221820.png" alt=""></p><h2 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">netstat -s | grep socket</span><br><span class="line">    73 resets received <span class="keyword">for</span> embryonic SYN_RECV sockets</span><br><span class="line">    308582 TCP sockets finished time <span class="built_in">wait</span> <span class="keyword">in</span> fast timer</span><br><span class="line">    8 delayed acks further delayed because of locked socket</span><br><span class="line">    290566 <span class="built_in">times</span> the listen queue of a socket overflowed</span><br><span class="line">    290566 SYNs to LISTEN sockets dropped</span><br><span class="line"></span><br><span class="line">ss -ltnp</span><br><span class="line">State     Recv-Q     Send-Q            Local Address:Port            Peer Address:Port</span><br><span class="line">LISTEN    10         10                      0.0.0.0:80                   0.0.0.0:*         users:((<span class="string">"nginx"</span>,pid=10491,fd=6),(<span class="string">"nginx"</span>,pid=10490,fd=6),(<span class="string">"nginx"</span>,pid=10487,fd=6))</span><br><span class="line">LISTEN    7          10                            *:9000                       *:*         users:((<span class="string">"php-fpm"</span>,pid=11084,fd=9),...,(<span class="string">"php-fpm"</span>,pid=10529,fd=7))</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.ip_local_port_range</span><br><span class="line">net.ipv4.ip_local_port_range=20000 20050</span><br><span class="line"></span><br><span class="line">sysctl -w net.ipv4.ip_local_port_range=<span class="string">"10000 65535"</span></span><br><span class="line">net.ipv4.ip_local_port_range = 10000 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># timewait is still use port, can decrase timewait time or port reuse</span></span><br><span class="line">ss -s</span><br><span class="line">TCP:   32775 (estab 1, closed 32768, orphaned 0, synrecv 0, timewait 32768/0), ports 0</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_tw_reuse</span><br><span class="line">net.ipv4.tcp_tw_reuse = 0</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="monitor"><a href="#monitor" class="headerlink" title="monitor"></a>monitor</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222832.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222835.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101222947.png" alt=""></p><h2 id="learn-kernel"><a href="#learn-kernel" class="headerlink" title="learn kernel"></a>learn kernel</h2><ol><li><a href="https://elixir.bootlin.com/linux/latest/source" target="_blank" rel="noopener">kernel</a></li><li><a href="https://github.com/iovisor/bcc" target="_blank" rel="noopener">eBPF</a><h1 id="Additions"><a href="#Additions" class="headerlink" title="Additions"></a>Additions</h1><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224237.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224240.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224243.png" alt=""><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200101224245.png" alt=""></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This blog record some useful tools for linux.&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="tools" scheme="http://feiyang233.club/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>大数据学习笔记</title>
    <link href="http://feiyang233.club/post/bigdata/"/>
    <id>http://feiyang233.club/post/bigdata/</id>
    <published>2019-12-12T15:37:11.000Z</published>
    <updated>2020-09-22T03:32:45.940Z</updated>
    
    <content type="html"><![CDATA[<p>大数据技术主要是要解决大规模数据的计算处理问题，但是我们要想对数据进行计算，首先要解决的其实是大规模数据的存储问题。</p><a id="more"></a><h1 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h1><p>大规模数据存储都需要解决 3 个核心问题: 1.数据存储容量的问题 2.数据读写速度的问题 3.数据可靠性的问题  </p><p>RAID（独立磁盘冗余阵列）技术是将多块普通磁盘组成一个阵列，共同对外提供服务。主要是为了改善磁盘的存储容量、读写速度，增强磁盘的可用性和容错能力。目前服务器级别的计算机都支持插入多块磁盘（8 块或者更多），通过使用 RAID 技术，实现数据在多块磁盘上的并发读写和数据备份。<br>首先，我们先假设服务器有 N 块磁盘，RAID 0是数据在从内存缓冲区写入磁盘时，根据磁盘数量将数据分成 N 份，这些数据同时并发写入 N 块磁盘，使得数据整体写入速度是一块磁盘的 N 倍；读取的时候也一样，因此 RAID 0 具有极快的数据读写速度。但是 RAID 0 不做数据备份，N 块磁盘中只要有一块损坏，数据完整性就被破坏，其他磁盘的数据也都无法使用了。</p><p>RAID 1是数据在写入磁盘时，将一份数据同时写入两块磁盘，这样任何一块磁盘损坏都不会导致数据丢失，插入一块新磁盘就可以通过复制数据的方式自动修复，具有极高的可靠性。</p><p>结合 RAID 0 和 RAID 1 两种方案构成了RAID 10，它是将所有磁盘 N 平均分成两份，数据同时在两份磁盘写入，相当于 RAID 1；但是平分成两份，在每一份磁盘（也就是 N/2 块磁盘）里面，利用 RAID 0 技术并发读写，这样既提高可靠性又改善性能。不过 RAID 10 的磁盘利用率较低，有一半的磁盘用来写备份数据。</p><p>一般情况下，一台服务器上很少出现同时损坏两块磁盘的情况，在只损坏一块磁盘的情况下，如果能利用其他磁盘的数据恢复损坏磁盘的数据，这样在保证可靠性和性能的同时，磁盘利用率也得到大幅提升。</p><p>顺着这个思路，RAID 3可以在数据写入磁盘的时候，将数据分成 N-1 份，并发写入 N-1 块磁盘，并在第 N 块磁盘记录校验数据，这样任何一块磁盘损坏（包括校验数据磁盘），都可以利用其他 N-1 块磁盘的数据修复。</p><p>但是在数据修改较多的场景中，任何磁盘数据的修改，都会导致第 N 块磁盘重写校验数据。频繁写入的后果是第 N 块磁盘比其他磁盘更容易损坏，需要频繁更换，所以 RAID 3 很少在实践中使用，因此在上面图中也就没有单独列出。</p><p>相比 RAID 3，RAID 5是使用更多的方案。RAID 5 和 RAID 3 很相似，但是校验数据不是写入第 N 块磁盘，而是螺旋式地写入所有磁盘中。这样校验数据的修改也被平均到所有磁盘上，避免 RAID 3 频繁写坏一块磁盘的情况。</p><p>如果数据需要很高的可靠性，在出现同时损坏两块磁盘的情况下（或者运维管理水平比较落后，坏了一块磁盘但是迟迟没有更换，导致又坏了一块磁盘），仍然需要修复数据，这时候可以使用RAID 6。</p><p>RAID 6 和 RAID 5 类似，但是数据只写入 N-2 块磁盘，并螺旋式地在两块磁盘中写入校验信息（使用不同算法生成）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大数据技术主要是要解决大规模数据的计算处理问题，但是我们要想对数据进行计算，首先要解决的其实是大规模数据的存储问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://feiyang233.club/categories/Linux/"/>
    
    
      <category term="bigdata" scheme="http://feiyang233.club/tags/bigdata/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm</title>
    <link href="http://feiyang233.club/post/algo/"/>
    <id>http://feiyang233.club/post/algo/</id>
    <published>2019-12-01T15:07:37.000Z</published>
    <updated>2021-06-27T01:13:04.231Z</updated>
    
    <content type="html"><![CDATA[<p>Record the learning algorithm experience.<br><a id="more"></a><br><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20191227141136.jpeg" alt=""></p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol><li><a href="https://mp.weixin.qq.com/s/FQ0LCROtEQu3iBZiJb0VBw" target="_blank" rel="noopener">背包问题</a></li></ol><h1 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h1><h2 id="Reverse-Integer"><a href="#Reverse-Integer" class="headerlink" title="Reverse Integer"></a>Reverse Integer</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">//math.MinInt32 = -2147483648</span></span><br><span class="line">    <span class="comment">//math.MaxInt32 = 2147483647</span></span><br><span class="line">    <span class="keyword">var</span> result <span class="keyword">int</span></span><br><span class="line">    <span class="keyword">for</span> x!=<span class="number">0</span>&#123;</span><br><span class="line">        result=result*<span class="number">10</span>+x%<span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> result &gt; <span class="number">2147483647</span>  || result &lt; <span class="number">-2147483648</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        x/=<span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Evolving-Diﬃculty"><a href="#Evolving-Diﬃculty" class="headerlink" title="Evolving Diﬃculty"></a>Evolving Diﬃculty</h2><p><img src="https://raw.githubusercontent.com/fainyang/pictures/master/img/20200830103637.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brute force O(n2)</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">test = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(test):</span><br><span class="line">    n = int(input())</span><br><span class="line">    a = [int(i) <span class="keyword">for</span> i <span class="keyword">in</span> input().split()]</span><br><span class="line">    begin = time.time()</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-2</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, n<span class="number">-1</span>):</span><br><span class="line">            result += (a[i]*a[j]*sum(a[j+<span class="number">1</span>:]))</span><br><span class="line"></span><br><span class="line">    end = time.time()</span><br><span class="line">    print(result)</span><br><span class="line">    print(<span class="string">"time is &#123;&#125;"</span>.format(end - begin))</span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="number">4536</span></span><br><span class="line">time <span class="keyword">is</span> <span class="number">3.0994415283203125e-05</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arithmetic O(n)</span></span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"></span><br><span class="line">test = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(test):</span><br><span class="line">    n = int(input())</span><br><span class="line">    a = [int(i) <span class="keyword">for</span> i <span class="keyword">in</span> input().split()]</span><br><span class="line">    begin = time.time()</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    sumai = a[<span class="number">0</span>] + a[<span class="number">1</span>]</span><br><span class="line">    sumai2 = a[<span class="number">0</span>]**<span class="number">2</span> + a[<span class="number">1</span>]**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">2</span>,n):</span><br><span class="line">        aiaj = (sumai**<span class="number">2</span> - sumai2) // <span class="number">2</span></span><br><span class="line">        result += aiaj*a[k]</span><br><span class="line">        sumai += a[k]</span><br><span class="line">        sumai2 += a[k]**<span class="number">2</span></span><br><span class="line">    end = time.time()</span><br><span class="line">    print(result)</span><br><span class="line">    print(<span class="string">"time is &#123;&#125;"</span>.format(end - begin))</span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="number">4536</span></span><br><span class="line">time <span class="keyword">is</span> <span class="number">2.1219253540039062e-05</span></span><br></pre></td></tr></table></figure><h1 id="quickSort"><a href="#quickSort" class="headerlink" title="quickSort"></a>quickSort</h1><h2 id="Based-on-recursive"><a href="#Based-on-recursive" class="headerlink" title="Based on recursive"></a>Based on recursive</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span></span>  &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> startIndex &gt;= endIndex &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">pivotIndex:= partition(arr,startIndex,endIndex)</span><br><span class="line">quickSort(arr,startIndex,pivotIndex<span class="number">-1</span>)</span><br><span class="line">quickSort(arr,pivotIndex+<span class="number">1</span>,endIndex)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span>  <span class="title">int</span></span> &#123;</span><br><span class="line"></span><br><span class="line">pivot:=arr[startIndex]</span><br><span class="line">mark:=startIndex</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=startIndex+<span class="number">1</span>; i&lt;= endIndex; i++&#123;</span><br><span class="line"><span class="keyword">if</span> arr[i]&lt;pivot &#123;</span><br><span class="line">mark++    <span class="comment">//  numbers that smaller pivot ++</span></span><br><span class="line">arr[i],arr[mark] = arr[mark], arr[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[startIndex] = arr [mark]</span><br><span class="line">arr[mark] = pivot</span><br><span class="line"><span class="keyword">return</span> mark</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = []<span class="keyword">int</span>&#123;<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">1</span>&#125;</span><br><span class="line">quickSort(arr,<span class="number">0</span>, <span class="built_in">len</span>(arr)<span class="number">-1</span>)</span><br><span class="line">fmt.Print(arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Use-stack"><a href="#Use-stack" class="headerlink" title="Use stack"></a>Use stack</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"github.com/golang-collections/collections/stack"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span></span>  &#123;</span><br><span class="line"></span><br><span class="line">quickSortStack := stack.New()</span><br><span class="line">rootParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">rootParam[<span class="string">"startIndex"</span>] = startIndex</span><br><span class="line">rootParam[<span class="string">"endIndex"</span>] = endIndex</span><br><span class="line">quickSortStack.Push(rootParam)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> quickSortStack.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line"></span><br><span class="line">param := quickSortStack.Pop().(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">pivotIndex := partition(arr, param[<span class="string">"startIndex"</span>], param[<span class="string">"endIndex"</span>] )</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> param[<span class="string">"startIndex"</span>] &lt; pivotIndex<span class="number">-1</span> &#123;</span><br><span class="line">leftParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">leftParam[<span class="string">"startIndex"</span>] = param[<span class="string">"startIndex"</span>]</span><br><span class="line">leftParam[<span class="string">"endIndex"</span>] = pivotIndex<span class="number">-1</span></span><br><span class="line">quickSortStack.Push(leftParam)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> pivotIndex+<span class="number">1</span> &lt; param[<span class="string">"endIndex"</span>] &#123;</span><br><span class="line"></span><br><span class="line">rightParam := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">rightParam[<span class="string">"startIndex"</span>] = pivotIndex+<span class="number">1</span></span><br><span class="line">rightParam[<span class="string">"endIndex"</span>] = param[<span class="string">"endIndex"</span>]</span><br><span class="line">quickSortStack.Push(rightParam)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(arr []<span class="keyword">int</span>, startIndex, endIndex <span class="keyword">int</span> )</span>  <span class="title">int</span></span> &#123;</span><br><span class="line"></span><br><span class="line">pivot:=arr[startIndex]</span><br><span class="line">mark:=startIndex</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=startIndex+<span class="number">1</span>; i&lt;= endIndex; i++&#123;</span><br><span class="line"><span class="keyword">if</span> arr[i]&lt;pivot &#123;</span><br><span class="line">mark++    <span class="comment">//  smaller pivot numbers ++</span></span><br><span class="line">arr[i],arr[mark] = arr[mark], arr[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[startIndex] = arr [mark]</span><br><span class="line">arr[mark] = pivot</span><br><span class="line"><span class="keyword">return</span> mark</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = []<span class="keyword">int</span>&#123;<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">1</span>&#125;</span><br><span class="line">quickSort(arr,<span class="number">0</span>, <span class="built_in">len</span>(arr)<span class="number">-1</span>)</span><br><span class="line">fmt.Print(arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Hash-Table"><a href="#Hash-Table" class="headerlink" title="Hash Table"></a>Hash Table</h1><h2 id="Two-Sum"><a href="#Two-Sum" class="headerlink" title="Two Sum"></a>Two Sum</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(nums []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    </span><br><span class="line">    dic := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">int</span>)</span><br><span class="line">    <span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">        </span><br><span class="line">        k,ok := dic[target-v]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ok &#123;</span><br><span class="line">            <span class="keyword">return</span> []<span class="keyword">int</span>&#123;k, i&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dic[v]=i     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="least-recently-used"><a href="#least-recently-used" class="headerlink" title="least recently used"></a>least recently used</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Your LRUCache object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"># obj = LRUCache(capacity)</span></span><br><span class="line"><span class="comment"># param_1 = obj.get(key)</span></span><br><span class="line"><span class="comment"># obj.put(key,value)</span></span><br><span class="line"><span class="comment"># leetcode 146</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubleNode</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key, val, pre=None, next=None)</span>:</span></span><br><span class="line">        self.key = key</span><br><span class="line">        self.val = val</span><br><span class="line">        self.pre = pre</span><br><span class="line">        self.next = next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, capacity: int)</span>:</span></span><br><span class="line">        self._capacity = capacity</span><br><span class="line">        self._index = &#123;&#125;</span><br><span class="line">        self._head = DoubleNode(<span class="number">-1</span>, <span class="number">-1</span>, <span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">        </span><br><span class="line">        cur = self._head</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, capacity):</span><br><span class="line">            cur.next = DoubleNode(<span class="number">-1</span>, <span class="number">-1</span>, cur)</span><br><span class="line">            cur = cur.next</span><br><span class="line">        cur.next = self._head</span><br><span class="line">        self._head.pre = cur</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to_head</span><span class="params">(self, cur)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> cur == self._head:</span><br><span class="line">            self._head = self._head.pre</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        cur.pre.next = cur.next</span><br><span class="line">        cur.next.pre = cur.pre</span><br><span class="line">        <span class="comment"># attach to head pointer</span></span><br><span class="line">        cur.next = self._head.next</span><br><span class="line">        cur.next.pre = cur</span><br><span class="line">        self._head.next = cur</span><br><span class="line">        cur.pre = self._head</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, key: int)</span> -&gt; int:</span></span><br><span class="line">        cur = self._index.get(key, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cur:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.move_to_head(cur)</span><br><span class="line">            <span class="keyword">return</span> cur.val</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, key: int, value: int)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self._index.get(key, <span class="literal">None</span>):</span><br><span class="line">            cur = self._index[key]</span><br><span class="line">            cur.val = value</span><br><span class="line">            self.move_to_head(cur)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> self._head.val != <span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">del</span>(self._index[self._head.key])</span><br><span class="line">            </span><br><span class="line">            self. _head.key = key</span><br><span class="line">            self._head.val = value</span><br><span class="line">            self._index[key] = self._head</span><br><span class="line">            self._head = self._head.pre</span><br></pre></td></tr></table></figure><h1 id="Leetcode"><a href="#Leetcode" class="headerlink" title="Leetcode"></a>Leetcode</h1><h2 id="Longest-Palindromic-Substring"><a href="#Longest-Palindromic-Substring" class="headerlink" title="Longest Palindromic Substring"></a>Longest Palindromic Substring</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># leetcode 5  Longest Palindromic Substring</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_expand</span><span class="params">(self, s: str, left: int, right: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">while</span> left &gt;= <span class="number">0</span> <span class="keyword">and</span> right &lt; len(s) <span class="keyword">and</span> s[left] == s[right] :</span><br><span class="line">            left -= <span class="number">1</span></span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> right - left - <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        <span class="keyword">if</span>  s <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> len(s) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        </span><br><span class="line">        start = <span class="number">0</span></span><br><span class="line">        maxLen = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            len1 = self._expand(s, i, i)</span><br><span class="line">            len2 = self._expand(s, i, i+<span class="number">1</span>)</span><br><span class="line">            length = max(len1, len2)</span><br><span class="line">            <span class="keyword">if</span> length &gt; maxLen:</span><br><span class="line">                start = i - (length<span class="number">-1</span>)//<span class="number">2</span></span><br><span class="line">                maxLen = length</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> s[start:start+maxLen]</span><br></pre></td></tr></table></figure><h2 id="Palindrome-Linked-List"><a href="#Palindrome-Linked-List" class="headerlink" title="Palindrome Linked List"></a>Palindrome Linked List</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, next=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.next = next</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, head: ListNode)</span> -&gt; bool:</span></span><br><span class="line">        length = <span class="number">0</span></span><br><span class="line">        p = head</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">None</span>:</span><br><span class="line">            length += <span class="number">1</span></span><br><span class="line">            p = p.next</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># get length of link</span></span><br><span class="line">        </span><br><span class="line">        cur = head</span><br><span class="line">        pre = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length//<span class="number">2</span>):</span><br><span class="line">            nex = cur.next</span><br><span class="line">            cur.next = pre</span><br><span class="line">            pre = cur</span><br><span class="line">            cur = nex</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># even need goback 1 seat</span></span><br><span class="line">        <span class="keyword">if</span> length % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            cur = cur.next</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> pre != <span class="literal">None</span> <span class="keyword">and</span> cur != <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> pre.val != cur.val:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            </span><br><span class="line">            pre = pre.next</span><br><span class="line">            cur = cur.next</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="Median-of-Two-Sorted-Arrays"><a href="#Median-of-Two-Sorted-Arrays" class="headerlink" title="Median of Two Sorted Arrays"></a>Median of Two Sorted Arrays</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># 分奇 偶情况来找到第 K 小的数字</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(self, nums1: List[int], nums2: List[int])</span> -&gt; float:</span></span><br><span class="line">        total = len(nums1) + len(nums2)</span><br><span class="line">        <span class="keyword">if</span> total &amp; <span class="number">1</span> == <span class="number">1</span>: <span class="comment"># 按位与来判断奇偶性</span></span><br><span class="line">            <span class="keyword">return</span> self.find(nums1, nums2, total//<span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = self.find(nums1, nums2, total//<span class="number">2</span>)</span><br><span class="line">            b = self.find(nums1, nums2, total//<span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> (a+b) / <span class="number">2</span></span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find</span><span class="params">(self, nums1: List[int], nums2: List[int], k: int)</span> -&gt; float:</span></span><br><span class="line">        len1 = len(nums1)</span><br><span class="line">        len2 = len(nums2)</span><br><span class="line">        base1 = <span class="number">0</span> <span class="comment"># 用 base 来增加偏移量，避免重复创建新的数组，节约空间</span></span><br><span class="line">        base2 = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> len1 == <span class="number">0</span>: <span class="keyword">return</span> nums2[base2 + k - <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> len2 == <span class="number">0</span>: <span class="keyword">return</span> nums1[base1 + k - <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> k == <span class="number">1</span>: <span class="keyword">return</span> min(nums1[base1], nums2[base2])</span><br><span class="line">            </span><br><span class="line">            i = min(k//<span class="number">2</span>, len1)</span><br><span class="line">            j = min(k-i, len2)</span><br><span class="line">            a = nums1[base1 + i - <span class="number">1</span>]</span><br><span class="line">            b = nums2[base2 + j - <span class="number">1</span>]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> i+j == k <span class="keyword">and</span> a == b: <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里 a == b 判断了两次，是因为 i+j&lt;k, 第 k 小的数不在这两个部分，都可以排除</span></span><br><span class="line">            <span class="keyword">if</span> a &lt;=b:</span><br><span class="line">                base1 += i</span><br><span class="line">                len1 -= i</span><br><span class="line">                k -= i</span><br><span class="line">            <span class="keyword">if</span> a &gt;= b:</span><br><span class="line">                base2 += j</span><br><span class="line">                len2 -= j</span><br><span class="line">                k -= j</span><br></pre></td></tr></table></figure><h2 id="Longest-Substring-Without-Repeating-Characters"><a href="#Longest-Substring-Without-Repeating-Characters" class="headerlink" title="Longest Substring Without Repeating Characters"></a>Longest Substring Without Repeating Characters</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int abcabcbb</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        seen = &#123;&#125;</span><br><span class="line">        left, right = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        longest = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> right &lt; len(s):</span><br><span class="line">            <span class="keyword">if</span> s[right] <span class="keyword">in</span> seen:</span><br><span class="line">                left = max(left,seen[s[right]]+<span class="number">1</span>)</span><br><span class="line">            longest = max(longest, right - left + <span class="number">1</span>)</span><br><span class="line">            seen[s[right]] = right</span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> longest</span><br></pre></td></tr></table></figure><h2 id="Regular-Expression-Matching"><a href="#Regular-Expression-Matching" class="headerlink" title="Regular Expression Matching"></a>Regular Expression Matching</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Record the learning algorithm experience.&lt;br&gt;
    
    </summary>
    
      <category term="develop" scheme="http://feiyang233.club/categories/develop/"/>
    
    
      <category term="go" scheme="http://feiyang233.club/tags/go/"/>
    
  </entry>
  
</feed>
